#Область ПрограмныйИнтерфейс

#Область СерииНоменклатуры

// Добавляет зависящие от владельца формы проверки и подбора значения в параметры указания серий номенклатуры.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма с товарами, для которой необходимо определить параметры указания серий.
//	ПараметрыУказанияСерий - Структура - дополняемые параметры указания серий.
//
Процедура ДополнитьПараметрыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	ВладелецФормы = Форма.ВладелецФормы;
	
	Если ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(ВладелецФормы, "ЧекККМ") Тогда
		ПроверяемыйДокумент = "ЧекККМ";
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаВРозницу"));
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(ВладелецФормы, "ЧекККМВозврат") Тогда
		ПроверяемыйДокумент = "ЧекККМВозврат";
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента"));
	ИначеЕсли Форма.РежимПодбораСуществующихУпаковок Тогда
		ПроверяемыйДокумент = "";
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКлиенту"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаНаВнутренниеНужды"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки"));
	Иначе
		ПроверяемыйДокумент = "";
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаОтПоставщика"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаПоПеремещению"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки"));
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(ПредопределенноеЗначение("Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов"));
	КонецЕсли;
	
	ПараметрыУказанияСерий.Вставить("ПроверяемыйДокумент", ПроверяемыйДокумент);
	
КонецПроцедуры

#КонецОбласти

#Область ЗакрытиеФормыПроверкиИПодбора

Процедура ПриЗакрытииФормыПроверкиИПодбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЭтоАдресВременногоХранилища(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	ИндексВидаПродукции = ИнтеграцияИСКлиентСервер.ИндексВидаПродукцииИС(ДополнительныеПараметры.ВидПродукции);
	Событие = СтрШаблон("ЗакрытиеФормыПроверкиИПодбораГосИС%1", ИндексВидаПродукции);
	
	Оповестить(Событие, Результат, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытиеФормПрикладныхОбъектов

Процедура ОткрытьФормуАктаОРасхождениях(ДокументСсылка, ВладелецФормы) Экспорт
	
	ПараметрыФормы = Новый Структура("Ключ", ДокументСсылка);
	ОткрытьФорму("Документ.АктОРасхожденияхПослеПриемки.ФормаОбъекта", ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

