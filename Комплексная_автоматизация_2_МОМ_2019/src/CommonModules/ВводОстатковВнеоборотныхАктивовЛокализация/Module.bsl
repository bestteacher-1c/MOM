////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет в текст запроса реквизиты документа ВводОстатковВнеоборотныхАктивов2_4
//
// Параметры:
//  ТекстЗапроса - Строка	 - Исходный текст запроса, в котором должно быть поле "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки".
//  ИмяТаблицы	 - Строка	 - Имя таблицы документа.
//
Процедура ДобавитьВТекстЗапросаРеквизитыШапки(ТекстЗапроса, ИмяТаблицы) Экспорт

	ПоляЛокализация = "NULL";
	
	//++ Локализация
	
	ПоляЛокализация =
	"	ДанныеДокумента.Партнер                              КАК Партнер,
	|	ДанныеДокумента.Контрагент                           КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС                   КАК НалогообложениеНДС,
	|	ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор   КАК РасчетыМеждуОрганизациямиАрендатор";
	
	ПоляЛокализация = СтрЗаменить(ПоляЛокализация, "ДанныеДокумента", ИмяТаблицы);
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВводОстатковВнеоборотныхАктивов_РеквизитыШапки", ПоляЛокализация);
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	
	//++ Локализация
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Объект, ДополнительныеСвойства, Движения, Отказ);
	
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
			
		МассивНепроверяемыхРеквизитов.Добавить("НМА");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетыПоДоговорамЛизинга");
		МассивНепроверяемыхРеквизитов.Добавить("ПрочиеРасходы");
		МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС");
		
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
		МассивНепроверяемыхРеквизитов.Добавить("ГруппаФинансовогоУчета");
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктивов");
		
		Объект.ПроверитьЗаполнениеТЧ("ОС", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("НМА");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетыПоДоговорамЛизинга");
		МассивНепроверяемыхРеквизитов.Добавить("ПрочиеРасходы");
		МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС");
		
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		МассивНепроверяемыхРеквизитов.Добавить("ГруппаФинансовогоУчета");
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктивов");
		МассивНепроверяемыхРеквизитов.Добавить("Местонахождение");
		
		Если ЗначениеЗаполнено(Объект.Организация) 
			И ЗначениеЗаполнено(Объект.Контрагент) 
			И (Объект.Организация = Объект.Контрагент) Тогда
			Текст = НСтр("ru='Поля ""Организация"" и ""Арендатор"" должны различаться.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Объект, "Контрагент",, Отказ);
		КонецЕсли;
		
		Объект.ПроверитьЗаполнениеТЧ("ОС", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ОС");
		МассивНепроверяемыхРеквизитов.Добавить("НМА");
		МассивНепроверяемыхРеквизитов.Добавить("ПрочиеРасходы");
		МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС");
		МассивНепроверяемыхРеквизитов.Добавить("ГруппаФинансовогоУчета");
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктивов");
		МассивНепроверяемыхРеквизитов.Добавить("Местонахождение");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетыПоДоговорамЛизинга.СуммаРегл");
		
		Объект.ПроверитьЗаполнениеТЧ("РасчетыПоДоговорамЛизинга", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ОС");
		МассивНепроверяемыхРеквизитов.Добавить("НМА");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетыПоДоговорамЛизинга");
		МассивНепроверяемыхРеквизитов.Добавить("ПрочиеРасходы");
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктивов");
		
		Если НЕ Объект.ОтражатьВОперативномУчете Тогда
			МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС.ДатаПринятияКУчету");
		КонецЕсли; 
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ОС");
		МассивНепроверяемыхРеквизитов.Добавить("НМА");
		МассивНепроверяемыхРеквизитов.Добавить("РасчетыПоДоговорамЛизинга");
		МассивНепроверяемыхРеквизитов.Добавить("ПрочиеРасходы");
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктивов");
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		
		МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС.ДоговорЛизинга");
		
		Если НЕ Объект.ОтражатьВОперативномУчете Тогда
			МассивНепроверяемыхРеквизитов.Добавить("АрендованныеОС.ДатаПринятияКУчету");
		КонецЕсли; 
		
		Объект.ПроверитьЗаполнениеТЧ("АрендованныеОС", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	Если Не Отказ И Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
				ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
				ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе
				ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС
				ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
					
			Если Объект.ОтражатьВОперативномУчете Тогда
				ВнеоборотныеАктивыСлужебный.ПроверитьВозможностьПринятияКУчетуОС(Объект, Отказ);
			Иначе
				ВнеоборотныеАктивыСлужебный.ПроверитьЧтоОСПринятыКУчету(Объект, Отказ);
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработатьРасчетыПоДоговорамЛизингаПередЗаписью(Объект);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		СоздатьУдалитьДокументыАвансовПриЗаписи(Объект);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область СтоимостьОС_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьОСЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияОС_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Накопленная амортизация ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	(Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)
	|	И НЕ Строки.НачислятьИзнос";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияОСЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ИзносОС_Дт_СчетИзноса__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленный износ ОС (Дт СчетИзноса:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Накопленный износ ОС"" КАК Содержание
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|ГДЕ
	|	Строки.АмортизацияРегл <> 0
	|	И Строки.НачислятьИзнос";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетАрендованныхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет арендуемых ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.КорКонтрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗабалансовыйУчетПереданныхАрендуБалансовыхОС_Дт_СчетЗабалансовогоУчета
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет переданных в аренду ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Арендатор КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Организация КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет арендуемых ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И Строки.Арендатор ССЫЛКА Справочник.Организации
	|	И Строки.Арендатор <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Строки.ОтражатьВРеглУчете
	|	И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область РасчетыПоДоговорамЛизинга
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Зачет обеспечительного платежа
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Строки.ДоговорЛизинга.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.ДоговорЛизинга.Подразделение КАК ПодразделениеДт,
	|	Строки.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.ДоговорЛизинга КАК СубконтоДт1,
	|	Операция.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Расчеты по договорам лизинга"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Строки
	|		ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга)
	|	И Строки.СальдоДебетовое
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Строки.ДоговорЛизинга.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.ДоговорЛизинга.Подразделение КАК ПодразделениеКт,
	|	Строки.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	Строки.СчетУчета КАК СчетКт,
	|	Строки.ДоговорЛизинга КАК СубконтоКт1,
	|	Операция.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Расчеты по договорам лизинга"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга)
	|	И НЕ Строки.СальдоДебетовое
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизационнаяПремияДтКВ
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт КВ :: Кт <ПустаяСсылка>)
	|//
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Регистратор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиПрочихРасходов_Дт_Расходы__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки прочих расходов (Дт <25, 26, 44, 20, 23> :: Кт 000)
	|
	|ВЫБРАТЬ 
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.Сумма КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ВнеоборотныйАктив КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА НЕ ОбъектыСтроительства.Ссылка ЕСТЬ NULL
	|		ТОГДА ОбъектыСтроительства.СпособСтроительства
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки вложений во внеоборотные активы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов2_4.ПрочиеРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.ВнеоборотныйАктив
	|ГДЕ 
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы)
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМА_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета НМА"" КАК Содержание
	|ИЗ
	|	втСтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СтоимостьНМАЦФ_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки целевых средств на счете учета НМА (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки целевых средств в восстановительной стоимости НМА"" КАК Содержание
	|ИЗ
	|	втСтоимостьНМА КАК Строки
	|ГДЕ
	|	Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область АмортизацияНМА_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Накопленная амортизация НМА"" КАК Содержание
	|ИЗ
	|	втАмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияНМАЦФ_Дт_000__Кт_СчетАмортизации
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Целевые средства в накопленной амортизации НМА (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Остатки целевых средств в накопленной амортизации НМА"" КАК Содержание
	|ИЗ
	|	втАмортизацияНМА КАК Строки
	|ГДЕ
	|	Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область КорректировкаСтоимостиАрендованногоИмуществаНУ // Дт <01.К> Кт <000>
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Корректировка стоимости арендованного имущества по НУ (Дт <01.К> Кт <000>)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Местонахождение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Корректировка стоимости арендованного имущества по НУ"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК Строки
	|	ПО Строки.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе)
	|	И Строки.КорректировкаСтоимостиАрендованногоИмуществаНУ <> 0
	|	И (Операция.ОтражатьВБУиНУ ИЛИ Операция.ОтражатьВУУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область втСтоимостьОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                        КАК Регистратор,
	|	ДанныеДокумента.Дата                          КАК Период,
	|	ДанныеДокумента.Организация                   КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ ДанныеДокумента.Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                        КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК КорПодразделение,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУ 
	|					- ТаблицаОС.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизационнаяПремия,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимостиРегл,
	|
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость
	|ПОМЕСТИТЬ втСтоимостьОС
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ 
	|			И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиСтоимости <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ 
	|			И (ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьНУ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьБУЦФ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьНУЦФ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьПРЦФ <> 0
	|				ИЛИ ТаблицаОС.ЗалоговаяСтоимость <> 0
	|				ИЛИ ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиСтоимостиРегл <> 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	ДанныеДокумента.Контрагент                   КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	ДанныеДокумента.ОтражатьВБУиНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втАмортизацияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                        КАК Регистратор,
	|	ДанныеДокумента.Дата                          КАК Период,
	|	ДанныеДокумента.Организация                   КАК Организация,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ ДанныеДокумента.Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ИЛИ НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ИЛИ НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУЦФ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУЦФ <> 0
	|				ИЛИ ТаблицаОС.НакопленнаяАмортизацияПРЦФ <> 0
	|				ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втСтоимостьНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаНМА.НематериальныйАктив               КАК НематериальныйАктив,
	|	ТаблицаНМА.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаНМА.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУ 
	|					- ТаблицаНМА.ТекущаяСтоимостьНУ 
	|					- ТаблицаНМА.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.ТекущаяСтоимостьБУЦФ 
	|					- ТаблицаНМА.ТекущаяСтоимостьНУЦФ 
	|					- ТаблицаНМА.ТекущаяСтоимостьПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиСтоимости
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимости,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиСтоимостиРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиСтоимостиРегл
	|ПОМЕСТИТЬ втСтоимостьНМА
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаНМА.ТекущаяСтоимостьУУ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиСтоимости <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаНМА.ТекущаяСтоимостьБУ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьНУ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьПР <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьБУЦФ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьНУЦФ <> 0
	|				ИЛИ ТаблицаНМА.ТекущаяСтоимостьПРЦФ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиСтоимостиРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втАмортизацияНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаНМА.НематериальныйАктив               КАК НематериальныйАктив,
	|	ТаблицаНМА.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ТаблицаНМА.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияНУ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ                                         КАК АмортизацияПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУ
	|					- ТаблицаНМА.НакопленнаяАмортизацияНУ
	|					- ТаблицаНМА.НакопленнаяАмортизацияПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияНУЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияНУЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияПРЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|						И УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.ПустаяСсылка), ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.НакопленнаяАмортизацияБУЦФ
	|					- ТаблицаНМА.НакопленнаяАмортизацияНУЦФ
	|					- ТаблицаНМА.НакопленнаяАмортизацияПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиАмортизации
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаНМА.РезервПереоценкиАмортизацииРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК РезервПереоценкиАмортизацииРегл
	|ПОМЕСТИТЬ втАмортизацияНМА
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|		ПО ТаблицаНМА.Ссылка = ДокументыКОтражению.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И (ТаблицаНМА.НакопленнаяАмортизацияУУ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиАмортизации <> 0)
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаНМА.НакопленнаяАмортизацияБУ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияНУ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияПР <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияБУЦФ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияНУЦФ <> 0
	|				ИЛИ ТаблицаНМА.НакопленнаяАмортизацияПРЦФ <> 0
	|				ИЛИ ТаблицаНМА.РезервПереоценкиАмортизацииРегл <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	СписокЗапросов.Добавить(Символы.ПС);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	//-- Локализация
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры);
	
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияПараметровПроведения(Реквизиты, ЗначенияПараметровПроведения) Экспорт

	//++ Локализация
	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("ПоддержкаПБУ18", УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период));
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры
 
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаПервоначальныеСведенияОС(ТекстыЗапроса, "Документ.ВводОстатковВнеоборотныхАктивов2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|   НЕОПРЕДЕЛЕНО                    КАК Арендодатель,
	|	ТаблицаОС.СпособПоступления     КАК СпособПоступления,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюБУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатациюУУ 
	|		КОГДА &ОтражатьВУпрУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете И ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ) 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный) 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаУУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете ИЛИ НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК ВариантПримененияЦелевогоФинансирования,
	|	ТаблицаОС.ДоговорЛизинга        КАК ДоговорЛизинга,
	|	0                               КАК СтоимостьДо2002,
	|	0                               КАК АмортизацияДо2002,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.АмортизацияДо2009, 0)
	|	КОНЕЦ                           КАК АмортизацияДо2009,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.СрокИспользованияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009, 0)
	|	КОНЕЦ                           КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|   &Контрагент                     КАК Арендодатель,
	|	НЕОПРЕДЕЛЕНО                    КАК СпособПоступления,
	|
	|	ТаблицаОС.ДатаПринятияКУчету    КАК ДатаВводаВЭксплуатациюБУ,
	|	ДАТАВРЕМЯ(1, 1, 1)              КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаОС.ДокументВводаВЭксплуатацию 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК МетодНачисленияАмортизацииНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаБУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаНУ,
	|	НЕОПРЕДЕЛЕНО                    КАК ПорядокУчетаУУ,
	|	0                               КАК ПервоначальнаяСтоимостьБУ,
	|	0                               КАК ПервоначальнаяСтоимостьНУ,
	|	0                               КАК ПервоначальнаяСтоимостьУУ,
	|
	|	НЕОПРЕДЕЛЕНО                    КАК ВариантПримененияЦелевогоФинансирования,
	|	ТаблицаОС.ДоговорЛизинга        КАК ДоговорЛизинга,
	|	0                               КАК СтоимостьДо2002,
	|	0                               КАК АмортизацияДо2002,
	|	0                               КАК АмортизацияДо2009,
	|	0                               КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаПервоначальныеСведенияНМА(ТекстыЗапроса, "Документ.ВводОстатковВнеоборотныхАктивов2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	&Период                                КАК Период,
	|	ТаблицаДокумента.НематериальныйАктив   КАК НематериальныйАктив,
	|	&Организация                           КАК Организация,
	|	ТаблицаДокумента.СпособПоступления     КАК СпособПоступления,
	|
	|	ТаблицаДокумента.ДатаПриобретения      КАК ДатаПриобретения,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаПринятияКУчетуУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуБУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДокументПринятияКУчетуБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуБУ,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете И &Период < &ДатаНачалаУчета
	|			ТОГДА ТаблицаДокумента.ДокументПринятияКУчетуУУ 
	|		КОГДА &ОтражатьВРеглУчете И &Период >= &ДатаНачалаУчета
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ДокументПринятияКУчетуУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументПринятияКУчетуУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.МетодНачисленияАмортизацииНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.МетодНачисленияАмортизацииНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете ИЛИ НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьНУ,
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете И &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА ТаблицаДокумента.ПервоначальнаяСтоимостьБУ - ТаблицаДокумента.ПервоначальнаяСтоимостьНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьВР,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.ПорядокУчетаНУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаНУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.АмортизацияДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.АмортизацияДо2009, 0)
	|	КОНЕЦ                           КАК АмортизацияДо2009,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаДокумента.СрокИспользованияНУДо2009 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияНМА.ФактическийСрокИспользованияДо2009, 0)
	|	КОНЕЦ                           КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияНМА КАК втПервоначальныеСведенияНМА
	|		ПО втПервоначальныеСведенияНМА.НематериальныйАктив = ТаблицаДокумента.НематериальныйАктив
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтоимостьОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                        КАК Арендатор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорКонтрагент,
	|	ТаблицаОС.ПодразделениеАрендатора            КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ТекущаяСтоимостьУУ                 КАК Стоимость,
	|	ТаблицаОС.ТекущаяСтоимостьБУ                 КАК СтоимостьРегл,
	|	ТаблицаОС.ТекущаяСтоимостьНУ                 КАК СтоимостьНУ,
	|	ТаблицаОС.ТекущаяСтоимостьПР                 КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА &ПоддержкаПБУ18
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУ 
	|					- ТаблицаОС.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУЦФ               КАК СтоимостьЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьНУЦФ               КАК СтоимостьНУЦФ,
	|	ТаблицаОС.ТекущаяСтоимостьПРЦФ               КАК СтоимостьПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА &ПоддержкаПБУ18
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьНУЦФ 
	|					- ТаблицаОС.ТекущаяСтоимостьПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК СтоимостьВРЦФ,
	|
	|	ТаблицаОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ КАК АмортизационнаяПремия,
	|	ТаблицаОС.РезервПереоценкиСтоимости          КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.РезервПереоценкиСтоимостиРегл      КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПРЦФ <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК Арендатор,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорОрганизация,
	|	&Контрагент                                  КАК КорКонтрагент,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорПодразделение,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	0                                            КАК СтоимостьНУ,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК СтоимостьВР,
	|	0                                            КАК СтоимостьЦФ,
	|	0                                            КАК СтоимостьНУЦФ,
	|	0                                            КАК СтоимостьПРЦФ,
	|	0                                            КАК СтоимостьВРЦФ,
	|	0                                            КАК АмортизационнаяПремия,
	|	0                                            КАК РезервПереоценкиСтоимости,
	|	0                                            КАК РезервПереоценкиСтоимостиРегл,
	|	ТаблицаОС.ЗалоговаяСтоимость                 КАК ЗалоговаяСтоимость,
	|
	|	&НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|	ТаблицаОС.НакопленнаяАмортизацияУУ           КАК Амортизация,
	|	ТаблицаОС.НакопленнаяАмортизацияБУ           КАК АмортизацияРегл,
	|	ТаблицаОС.НакопленнаяАмортизацияНУ           КАК АмортизацияНУ,
	|	ТаблицаОС.НакопленнаяАмортизацияПР           КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ПоддержкаПБУ18
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	ТаблицаОС.НакопленнаяАмортизацияБУЦФ         КАК АмортизацияЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияНУЦФ         КАК АмортизацияНУЦФ,
	|	ТаблицаОС.НакопленнаяАмортизацияПРЦФ         КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &ПоддержкаПБУ18
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияНУЦФ
	|				- ТаблицаОС.НакопленнаяАмортизацияПРЦФ
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|	ТаблицаОС.РезервПереоценкиАмортизации        КАК РезервПереоценкиАмортизации,
	|	ТаблицаОС.РезервПереоценкиАмортизацииРегл    КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизации <> 0
	|		ИЛИ ТаблицаОС.РезервПереоценкиАмортизацииРегл <> 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСтоимостьНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиНМАиРасходовНаНИОКР) КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	Таблица.ТекущаяСтоимостьУУ                   КАК Стоимость,
	|	Таблица.ТекущаяСтоимостьБУ                   КАК СтоимостьРегл,
	|	Таблица.ТекущаяСтоимостьНУ                   КАК СтоимостьНУ,
	|	Таблица.ТекущаяСтоимостьПР                   КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА &ПоддержкаПБУ18
	|			ТОГДА Таблица.ТекущаяСтоимостьБУ 
	|					- Таблица.ТекущаяСтоимостьНУ 
	|					- Таблица.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                       КАК СтоимостьВР,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ                 КАК СтоимостьЦФ,
	|	Таблица.ТекущаяСтоимостьНУЦФ                 КАК СтоимостьНУЦФ,
	|	Таблица.ТекущаяСтоимостьПРЦФ                 КАК СтоимостьПРЦФ,
	|
	|	Таблица.ТекущаяСтоимостьБУЦФ 
	|		- Таблица.ТекущаяСтоимостьНУЦФ 
	|		- Таблица.ТекущаяСтоимостьПРЦФ           КАК СтоимостьВРЦФ,
	|
	|	Таблица.РезервПереоценкиСтоимости            КАК РезервПереоценкиСтоимости,
	|	Таблица.РезервПереоценкиСтоимостиРегл        КАК РезервПереоценкиСтоимостиРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (Таблица.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПР <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьБУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьНУЦФ <> 0
	|		ИЛИ Таблица.ТекущаяСтоимостьПРЦФ <> 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	Таблица.НематериальныйАктив                  КАК НематериальныйАктив,
	|	Таблица.ГруппаФинансовогоУчета               КАК ГруппаФинансовогоУчета,
	|	Таблица.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииНМАиРасходовНаНИОКР)  КАК ХозяйственнаяОперация,
	|	Таблица.НакопленнаяАмортизацияУУ             КАК Амортизация,
	|	Таблица.НакопленнаяАмортизацияБУ             КАК АмортизацияРегл,
	|	Таблица.НакопленнаяАмортизацияНУ             КАК АмортизацияНУ,
	|	Таблица.НакопленнаяАмортизацияПР             КАК АмортизацияПР,
	|
	|	ВЫБОР
	|		КОГДА &ПоддержкаПБУ18
	|			ТОГДА Таблица.НакопленнаяАмортизацияБУ
	|					- Таблица.НакопленнаяАмортизацияНУ
	|					- Таблица.НакопленнаяАмортизацияПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВР,
	|
	|	Таблица.НакопленнаяАмортизацияБУЦФ           КАК АмортизацияЦФ,
	|	Таблица.НакопленнаяАмортизацияНУЦФ           КАК АмортизацияНУЦФ,
	|	Таблица.НакопленнаяАмортизацияПРЦФ           КАК АмортизацияПРЦФ,
	|
	|	ВЫБОР
	|		КОГДА &ПоддержкаПБУ18
	|			ТОГДА Таблица.НакопленнаяАмортизацияБУЦФ
	|					- Таблица.НакопленнаяАмортизацияНУЦФ
	|					- Таблица.НакопленнаяАмортизацияПРЦФ           
	|		ИНАЧЕ 0
	|	КОНЕЦ                                        КАК АмортизацияВРЦФ,
	|
	|	Таблица.РезервПереоценкиАмортизации          КАК РезервПереоценкиАмортизации,
	|	Таблица.РезервПереоценкиАмортизацииРегл      КАК РезервПереоценкиАмортизацииРегл
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (Таблица.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПР <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияБУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияНУЦФ <> 0
	|		ИЛИ Таблица.НакопленнаяАмортизацияПРЦФ <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизации <> 0
	|		ИЛИ Таблица.РезервПереоценкиАмортизацииРегл <> 0)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМестонахождениеОС() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                       КАК Регистратор,
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	ТаблицаОС.ОсновноеСредство    КАК ОсновноеСредство,
	|	ТаблицаОС.МОЛ                 КАК МОЛ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение              
	|	КОНЕЦ                         КАК Местонахождение,
	|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения,
	|	ТаблицаОС.АдресМестонахожденияЗначение КАК АдресМестонахожденияЗначение,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА &Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК Арендатор,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.ПодразделениеАрендатора
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК ПодразделениеАрендатора,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|			ТОГДА ТаблицаОС.МОЛАрендатора
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО              
	|	КОНЕЦ                         КАК МОЛАрендатора,
	|	&ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО                              КАК МОЛ,
	|	&Местонахождение                          КАК Местонахождение,
	|	""""                                      КАК АдресМестонахождения,
	|	""""                                      КАК АдресМестонахожденияЗначение,
	|	НЕОПРЕДЕЛЕНО                              КАК Арендатор,
	|	НЕОПРЕДЕЛЕНО                              КАК ПодразделениеАрендатора,
	|	НЕОПРЕДЕЛЕНО                              КАК МОЛАрендатора,
	|	&ОтражатьВРеглУчете                       КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                        КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокУчетаОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета        КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.ПоказательНаработки           КАК ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки                КАК ОбъемНаработки,
	|	&ОтражатьВРеглУчете                     КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                      КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                            КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК ПоказательНаработки,
	|	0                                       КАК ОбъемНаработки,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                    КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра, ПереопределениеРасчетаПараметров, СинонимТаблицыДокумента) Экспорт

	ТекстЗапроса = Неопределено;
	ТекстыЗапроса = Новый СписокЗначений;
	
	//++ Локализация
	
	Если ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	ИначеЕсли ИмяРегистра = "НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаНМА";
		
	ИначеЕсли ИмяРегистра = "СчетаБухгалтерскогоУчетаОС" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	ИначеЕсли ИмяРегистра = "СостоянияОСОрганизаций" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаОС";
		
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработатьОСПередЗаписью(Объект) Экспорт

	//++ Локализация
	
	Если Объект.ОС.Количество() = 0
	 ИЛИ РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Объект.Организация, Объект.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ВариантРаздельногоУчетаНДС", Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента);
	ЗначенияЗаполнения.Вставить("НалогообложениеНДС", Справочники.Организации.ЗакупкаПодДеятельность(Объект.Организация,, Объект.Дата));
	
	Для Каждого Строка Из Объект.ОС Цикл
		ЗаполнитьЗначенияСвойств(Строка, ЗначенияЗаполнения);
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаОсновныеСредства

Процедура ФормаОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаНематериальныеАктивы

Процедура ФормаНематериальныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаПереданныеВАрендуОсновныеСредства

Процедура ФормаПереданныеВАрендуОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаАрендованныеОсновныеСредства

Процедура ФормаАрендованныеОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаПредметыЛизингаЗаБалансом

Процедура ФормаПредметыЛизингаЗаБалансом_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = ДатаНачалаУчета > ДатаДокумента;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = ДатаНачалаУчета > ДатаДокумента;
		Элементы.АрендованныеОСДокументВводаВЭксплуатацию.Видимость = ДатаНачалаУчета > ДатаДокумента;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаВложенияВоВнеоборотныеАктивы

Процедура ФормаВложенияВоВнеоборотныеАктивы_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
		ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
		
		СозданДляПереходаНа24 = ДатаНачалаУчета > ДатаДокумента;
		Элементы.КартинкаДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ДекорацияДокументПереходаНа2_4.Видимость = СозданДляПереходаНа24;
		Элементы.ОтражатьВБУиНУ.ТолькоПросмотр = СозданДляПереходаНа24;
		Элементы.ОтражатьВУУ.ТолькоПросмотр = СозданДляПереходаНа24;
		
		Если НЕ ОбновитьВсе И СозданДляПереходаНа24 Тогда
			Объект.ОтражатьВБУиНУ = Ложь;
			Объект.ОтражатьВУУ = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ПриИзмененииРеквизитов(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(Объект.Организация, Объект.Дата);
		Форма.ПрименяетсяПБУ18 = Истина;
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц = Истина;
		Если ПараметрыУчетнойПолитики <> Неопределено Тогда
			Форма.ПрименяетсяПБУ18 = ПараметрыУчетнойПолитики.ПрименяетсяПБУ18;
			Форма.ВедетсяУчетПостоянныхИВременныхРазниц = ПараметрыУчетнойПолитики.ВедетсяУчетПостоянныхИВременныхРазниц;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(Объект.Организация,, Объект.Дата);
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаВложенияВоВнеоборотныеАктивы_ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяПБУ18", Форма.ПрименяетсяПБУ18);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.ВедетсяУчетПостоянныхИВременныхРазниц);
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область РасчетыПоДоговорамЛизинга

Процедура ФормаРасчетыПоДоговорамЛизинга_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		
		Форма.РезервПереоценкиСтоимостиРеглСумма = 
			?(Форма.РезервПереоценкиСтоимостиРегл < 0, 
				-Форма.РезервПереоценкиСтоимостиРегл, 
				Форма.РезервПереоценкиСтоимостиРегл);
				
		Форма.РезервПереоценкиАмортизацииРеглСумма = 
			?(Форма.РезервПереоценкиАмортизацииРегл < 0, 
				-Форма.РезервПереоценкиАмортизацииРегл, 
				Форма.РезервПереоценкиАмортизацииРегл);
				
		Форма.РезервПереоценкиРеглЗнак = (Форма.РезервПереоценкиСтоимостиРегл > 0);
		
	КонецЕсли;
	
	ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(
		Форма, Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
	Форма.ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.РасчетыМеждуОрганизациямиАрендатор = Параметры.РасчетыМеждуОрганизациямиАрендатор;
	
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Форма.Организация);
	
	КорректировкаСтоимостиАрендованногоИмуществаВР = -Форма.КорректировкаСтоимостиАрендованногоИмуществаНУ;
	
	Форма.ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):'"), Строка(Форма.ВалютаРегл));
	
	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");
	
	Форма.АналитикаРасходовБУОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяРасходовБУ)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяРасходовБУ, "КонтролироватьЗаполнениеАналитики");
	
	Форма.АналитикаРасходовАмортизационнойПремииОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяРасходовАмортизационнойПремии)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяРасходовАмортизационнойПремии, "КонтролироватьЗаполнениеАналитики");
	
	Форма.АналитикаДоходовОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяДоходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяДоходов, "КонтролироватьЗаполнениеАналитики");
		
	Если Форма.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Форма.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		Элементы.ГруппаМестоНахождение.Заголовок = НСтр("ru = 'Учет у арендодателя'");
		Элементы.МОЛ.Подсказка = НСтр("ru = 'Материально ответственное лицо за основное средство на время аренды.'")
	Иначе
		Элементы.ГруппаМестоНахождение.Заголовок = НСтр("ru = 'Местонахождение'");
		Элементы.МОЛ.Подсказка = НСтр("ru = 'Материально ответственное лицо за основное средство.'")
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_УстановитьУсловноеОформление(Форма) Экспорт
	
	//++ Локализация
	
	УсловноеОформление = Форма.УсловноеОформление;
	
	ПланыВидовХарактеристик.СтатьиДоходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление);
	
	ПланыВидовХарактеристик.СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(
		УсловноеОформление,
		"СтатьяРасходовБУ, АналитикаРасходовБУ,
		|СтатьяРасходовАмортизационнойПремии, АналитикаРасходовАмортизационнойПремии,
		|СтатьяРасходовНалог, АналитикаРасходовНалог");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		Элементы.ГруппаАмортизацияУУ.ОтображатьЗаголовок = 
			Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВРеглУчете 
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = Форма.ПлательщикНалогаНаПрибыль И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
		Элементы.ДекорацияЗаголовокВР.Видимость = Форма.ПлательщикНалогаНаПрибыль И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
		
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ГруппаФинансовогоУчета, "СчетУчета,СчетУчетаЦФ,СчетУчетаАмортизации,СчетУчетаАмортизацииЦФ");
				ТекстСтоимость     = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчета);
				ТекстСтоимостьЦФ   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаЦФ);
				ТекстАмортизация   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаАмортизации);
				ТекстАмортизацияЦФ = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаАмортизацииЦФ);
			Иначе
				ТекстСтоимость     = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета.'");
				ТекстСтоимостьЦФ   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирования.'");
				ТекстАмортизация   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.'");
				ТекстАмортизацияЦФ = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирование в накопленной амортизации.'");
			КонецЕсли; 
			
			Если Форма.ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
				СчетИзноса = ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств;
				ТекстАмортизация = СтрШаблон(НСтр("ru = 'Для бухгалтерского учета определяется как остаток на счете %1'"), СчетИзноса);
			КонецЕсли;
			
		Иначе	
			
			ТекстСтоимость = "";
			ТекстСтоимостьЦФ = "";
			ТекстАмортизация = "";
			ТекстАмортизацияЦФ = "";
			
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Подсказка = ТекстСтоимостьЦФ;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Подсказка = ТекстАмортизацияЦФ;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПроверитьЗаполнениеАналитик(Форма, ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов, Отказ) Экспорт

	//++ Локализация
	
	ПроверяемыеРеквизитыСтатейРасходов = Новый Массив;
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовБУ", "Видимость", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовБУ, АналитикаРасходовБУ");
	КонецЕсли; 
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовАмортизационнойПремии", "Видимость", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовАмортизационнойПремии, АналитикаРасходовАмортизационнойПремии");
	КонецЕсли; 
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовНалог", "АвтоОтметкаНезаполненного", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовНалог, АналитикаРасходовНалог");
	КонецЕсли; 
	
	Если ПроверяемыеРеквизитыСтатейРасходов.Количество() <> 0 Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			Форма, СтрСоединить(ПроверяемыеРеквизитыСтатейРасходов, ","), МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 
	
	//
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяДоходов", "Видимость", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПланыВидовХарактеристик.СтатьиДоходов.ПроверитьЗаполнениеАналитик(Форма,, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.ПорядокУчетаБУ.Имя Тогда
		
		ФормаРедактированияСтрокиОС_ПорядокУчетаБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.МетодНачисленияАмортизацииБУ.Имя Тогда
		
		ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.ОсновноеСредство.Имя Тогда
		
		ФормаРедактированияСтрокиОС_ОсновноеСредствоПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяРасходовБУ.Имя Тогда
		
		ФормаРедактированияСтрокиОС_СтатьяРасходовБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяРасходовАмортизационнойПремии.Имя Тогда
		
		ФормаРедактированияСтрокиОС_СтатьяРасходовАмортизационнойПремииПриИзменении(Форма);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяРасходовНалог.Имя Тогда
		
		ФормаРедактированияСтрокиОС_СтатьяРасходовНалогПриИзменении(Форма);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяДоходовЦФ.Имя Тогда
		
		СтатьяДоходовПриИзменении(Форма);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ЗаполнитьСведенияОС(Форма) Экспорт

	//++ Локализация
	
	Если НЕ ЗначениеЗаполнено(Форма.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли; 
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаОССтрокой.Видимость = Истина;
	Элементы.КодПоОКОФ.Видимость = Истина;
	Элементы.ШифрПоЕНАОФ.Видимость = Истина;
	Элементы.АмортизационнаяГруппа.Видимость = Истина;
	
	ПолучаемыеРеквизиты = Новый Структура;
	ПолучаемыеРеквизиты.Вставить("АмортизационнаяГруппа");
	ПолучаемыеРеквизиты.Вставить("ГруппаОС");
	ПолучаемыеРеквизиты.Вставить("КодПоОКОФ");
	ПолучаемыеРеквизиты.Вставить("КодПоОКОФПредставление", "КодПоОКОФ.Наименование");
	ПолучаемыеРеквизиты.Вставить("ШифрПоЕНАОФ");
	ПолучаемыеРеквизиты.Вставить("ШифрПоЕНАОФПредставление", "ШифрПоЕНАОФ.Наименование");
	РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ОсновноеСредство, ПолучаемыеРеквизиты);
	
	Форма.ГруппаОС = РеквизитыОС.ГруппаОС;
	Если ЗначениеЗаполнено(РеквизитыОС.ГруппаОС) Тогда
		Форма.ГруппаОССтрокой = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.ГруппаОС));
	Иначе
		Форма.ГруппаОССтрокой = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнена'"),, ЦветаСтиля.ЦветНедоступногоТекста);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РеквизитыОС.КодПоОКОФ) Тогда
		Форма.КодПоОКОФ = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.КодПоОКОФ));
		Элементы.КодПоОКОФ.Подсказка = РеквизитыОС.КодПоОКОФПредставление;
		Элементы.КодПоОКОФ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Иначе
		Форма.КодПоОКОФ = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнен'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		Элементы.КодПоОКОФ.Подсказка = "";
		Элементы.КодПоОКОФ.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РеквизитыОС.ШифрПоЕНАОФ) Тогда
		Форма.ШифрПоЕНАОФ = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.ШифрПоЕНАОФ));
		Элементы.ШифрПоЕНАОФ.Подсказка = РеквизитыОС.ШифрПоЕНАОФПредставление;
		Элементы.ШифрПоЕНАОФ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Иначе
		Форма.ШифрПоЕНАОФ = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнен'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		Элементы.ШифрПоЕНАОФ.Подсказка = "";
		Элементы.ШифрПоЕНАОФ.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РеквизитыОС.АмортизационнаяГруппа) Тогда
		Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(Строка(РеквизитыОС.АмортизационнаяГруппа));
	Иначе
		Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнена'"),, ЦветаСтиля.ЦветНедоступногоТекста);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.СтатьяРасходовБУ.Имя Тогда
		
		ФормаРедактированияСтрокиНМА_СтатьяРасходовБУПриИзменении(Форма);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяДоходов.Имя Тогда
		
		СтатьяДоходовПриИзменении(Форма);
		
	ИначеЕсли ИмяЭлемента = Элементы.НематериальныйАктив.Имя Тогда
		
		ФормаРедактированияСтрокиНМА_НематериальныйАктивПриИзменении(Форма, ДополнительныеПараметры);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц =
			УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
		
		Элементы.ГруппаАмортизацияУУ.ОтображатьЗаголовок = 
			Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
		Элементы.ДекорацияЗаголовокВР.Видимость = Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
		Элементы.ДекорацияПервоначальнаяСтоимостьПР.Видимость = Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
		Элементы.ДекорацияПервоначальнаяСтоимостьВР.Видимость = Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц И Форма.ОтражатьВРеглУчете;
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ГруппаФинансовогоУчета, "СчетУчета,СчетУчетаЦФ,СчетУчетаАмортизации,СчетУчетаАмортизацииЦФ");
				ТекстСтоимость     = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчета);
				ТекстСтоимостьЦФ   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаЦФ);
				ТекстАмортизация   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаАмортизации);
				ТекстАмортизацияЦФ = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчетаАмортизацииЦФ);
			Иначе
				ТекстСтоимость     = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета.'");
				ТекстСтоимостьЦФ   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирования.'");
				ТекстАмортизация   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.'");
				ТекстАмортизацияЦФ = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета средств целевого финансирование в накопленной амортизации.'");
			КонецЕсли; 
			
		Иначе
			ТекстСтоимость = "";
			ТекстСтоимостьЦФ = "";
			ТекстАмортизация = "";
			ТекстАмортизацияЦФ = "";
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Подсказка = ТекстСтоимостьЦФ;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Подсказка = ТекстАмортизацияЦФ;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	
	Если Параметры.Свойство("ЗначенияРеквизитов") Тогда
		
		Форма.РезервПереоценкиСтоимостиРеглСумма = 
			?(Форма.РезервПереоценкиСтоимостиРегл < 0, 
				-Форма.РезервПереоценкиСтоимостиРегл, 
				Форма.РезервПереоценкиСтоимостиРегл);
				
		Форма.РезервПереоценкиАмортизацииРеглСумма = 
			?(Форма.РезервПереоценкиАмортизацииРегл < 0, 
				-Форма.РезервПереоценкиАмортизацииРегл, 
				Форма.РезервПереоценкиАмортизацииРегл);
				
		Форма.РезервПереоценкиРеглЗнак = (Форма.РезервПереоценкиСтоимостиРегл > 0);
		
	КонецЕсли;
	
	Форма.ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");
	
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):'"), Строка(Форма.ВалютаРегл));
	
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Форма.Организация);
	
	Форма.АналитикаРасходовБУОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяРасходовБУ)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяРасходовБУ, "КонтролироватьЗаполнениеАналитики");
	
	Форма.АналитикаДоходовОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяДоходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяДоходов, "КонтролироватьЗаполнениеАналитики");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьСведенияНМА(Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если НЕ ЗначениеЗаполнено(Форма.НематериальныйАктив) Тогда
		Элементы.АмортизационнаяГруппа.Видимость = Ложь;
		Возврат;
	КонецЕсли; 
	
	РеквизитыНМА = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.НематериальныйАктив, "АмортизационнаяГруппа");
	
	Если Форма.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
		
		Элементы.АмортизационнаяГруппа.Видимость = Ложь;
		
	Иначе
		
		Элементы.АмортизационнаяГруппа.Видимость = Истина;

		Если ЗначениеЗаполнено(РеквизитыНМА.АмортизационнаяГруппа) Тогда
			Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(Строка(РеквизитыНМА.АмортизационнаяГруппа));
		Иначе
			Форма.АмортизационнаяГруппа = Новый ФорматированнаяСтрока(НСтр("ru = 'не заполнена'"),, ЦветаСтиля.ЦветНедоступногоТекста);
		КонецЕсли; 
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПроверитьЗаполнениеАналитик(Форма, ПараметрыРеквизитовОбъекта, МассивНепроверяемыхРеквизитов, Отказ) Экспорт

	//++ Локализация
	
	ПроверяемыеРеквизитыСтатейРасходов = Новый Массив;
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяРасходовБУ", "Видимость", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПроверяемыеРеквизитыСтатейРасходов.Добавить("СтатьяРасходовБУ, АналитикаРасходовБУ");
	КонецЕсли; 
	
	Если ПроверяемыеРеквизитыСтатейРасходов.Количество() <> 0 Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			Форма, СтрСоединить(ПроверяемыеРеквизитыСтатейРасходов, ","), МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 
	
	//
	Если ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта("СтатьяДоходов", "Видимость", ПараметрыРеквизитовОбъекта) = Истина Тогда
		ПланыВидовХарактеристик.СтатьиДоходов.ПроверитьЗаполнениеАналитик(Форма,, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ЗаполнитьЗначенияПоУмолчанию(Форма) Экспорт

	//++ Локализация
	
	Форма.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ИнициализироватьДокументПередЗаполнением(Объект) Экспорт

	//++ Локализация
	
	Объект.ОтражатьВРеглУчете = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Объект.ОтражатьВБУиНУ = Истина;
	КонецЕсли; 
	
	Если ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный")
		И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС
		И Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		Объект.ОтражатьВУУ = Истина;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		Объект.ОтражатьВУпрУчете = Истина;
	КонецЕсли;
	
	Объект.НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(Объект.Организация,, ТекущаяДатаСеанса());
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТиповОперацийДокумента(СписокТиповОпераций) Экспорт
	
	//++ Локализация
	
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС);
	СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг") Тогда
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга);
		СписокТиповОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ХозяйственнаяОперация, ВыбраннаяФорма, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ОсновныеСредства";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "АрендованныеОсновныеСредства";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ПредметыЛизингаЗаБалансом";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "РасчетыПоДоговорамЛизинга";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ПереданныеВАрендуОсновныеСредства";
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Функция ПредставлениеВводаОстатков(ХозяйственнаяОперация) Экспорт
	
	Представление = НСтр("ru='Ввод начальных остатков внеоборотных активов %1'");
	
	//++ Локализация
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		Представление = НСтр("ru='Ввод начальных остатков переданных в аренду основных средств %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС Тогда
		Представление = НСтр("ru='Ввод начальных остатков полученных в аренду основных средств %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		Представление = НСтр("ru='Ввод начальных остатков взаиморасчетов по договорам лизинга %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
		Представление = НСтр("ru='Ввод начальных остатков предметов лизинга на балансе %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		Представление = НСтр("ru='Ввод начальных остатков предметов лизинга за балансом %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		Представление = НСтр("ru='Ввод начальных остатков переданных в аренду предметов лизинга на балансе %1'");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		Представление = НСтр("ru='Ввод начальных остатков предметов лизинга за балансом %1'");
	КонецЕсли;
	
	//-- Локализация
	
	Возврат Представление;
	
КонецФункции

Процедура ДополнитьХозяйственныеОперацииИДокументы(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	
	ИспользоватьЛизинг = ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду основных средств'");
	Строка.Порядок                      = 2;
	Строка.ГруппаКнопок                 = "ОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков полученных в аренду основных средств'");
	Строка.Порядок                      = 3;
	Строка.ГруппаКнопок                 = "ОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ИспользоватьЛизинг Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков взаиморасчетов по договорам лизинга'");
		Строка.Порядок                      = 5;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга на балансе'");
		Строка.Порядок                      = 6;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду предметов лизинга на балансе'");
		Строка.Порядок                      = 7;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом'");
		Строка.Порядок                      = 8;
		Строка.ГруппаКнопок                 = "Лизинг";
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВзависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	ЭтоНМА = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР);
	
	Если Действие = "Очистить"
		И (ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПРЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияБУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьБУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьПР"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПРЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУЦФ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьБУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СуммаКапитальныхВложенийВключаемыхВРасходыНУ" 
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУДо2009"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУДо2009") 
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ЗалоговаяСтоимость" Тогда
		
		ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
		Если Действие = "Очистить" Тогда
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Ложь;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "АналитикаРасходовАмортизационнойПремии"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "МОЛАрендатора"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПодразделениеАрендатора"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ДоговорЛизинга" Тогда
		Если Действие = "Очистить" Тогда
			ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ" Тогда
		
		ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию, 
										Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации);
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита, 
			Неопределено,
			ИзмененныеРеквизиты);
		
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ" Тогда
		
		ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию, 
										Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации);
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ" 
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьИзносБУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			Истина,
			Ложь,
			ИзмененныеРеквизиты);
			
	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ" Тогда
		
		ЗначениеРеквизита = ?(ЭтоНМА, Перечисления.СпособыНачисленияАмортизацииНМА.Линейный, 
										Перечисления.СпособыНачисленияАмортизацииОС.Линейный);
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);

	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииНУ" Тогда
		
		ЗначениеРеквизита = Перечисления.МетодыНачисленияАмортизации.Линейный;
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ЗначениеРеквизита,
			Неопределено,
			ИзмененныеРеквизиты);

	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияБУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СрокИспользованияНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			ОбъектИлиДанныеСтроки.СрокИспользованияУУ,
			0,
			ИзмененныеРеквизиты);

	ИначеЕсли ПараметрыРеквизита.ИмяРеквизита = "КоэффициентУскоренияУУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "СпециальныйКоэффициентНУ" Тогда
		
		ВнеоборотныеАктивыСлужебный.ЗаполнитьОчиститьРеквизит(
			ОбъектИлиДанныеСтроки,
			ПараметрыРеквизита.ИмяРеквизита, 
			Действие, 
			1,
			0,
			ИзмененныеРеквизиты);

	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", ДатаНачалаУчета);
	
	Если Объект.Дата < ДатаНачалаУчета И ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаУчетнойПолитики = КонецМесяца(Объект.Дата) + 1;
	Иначе
		ДатаУчетнойПолитики = Объект.Дата;
	КонецЕсли;
	
	ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", ЕстьСвязанныеОрганизации);
	
	ВспомогательныеРеквизиты.Вставить("РасчетыМеждуОрганизациямиАрендатор", Объект.РасчетыМеждуОрганизациямиАрендатор);
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", ПлательщикНалогаНаПрибыль);
	
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ПрименяетсяУСНДоходыМинусРасходы);
	
	ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(
		Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПараметрыУчетнойПолитики", ПараметрыУчетнойПолитики);
	
	ВспомогательныеРеквизиты.Вставить("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности", 
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизитыПоДаннымСтроки(Объект, ДанныеСтроки, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
		
		РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеСтроки.ОсновноеСредство, "ГруппаОС,АмортизационнаяГруппа");
		
		Если ВспомогательныеРеквизиты.ИспользоватьРеглУчет Тогда
			
			ТребуетсяНастройкаОтраженияРасходовПоНалогам = 
				ВнеоборотныеАктивыЛокализация.ТребуетсяНастройкаОтраженияРасходовПоНалогам(
						ВспомогательныеРеквизиты.Организация, 
						ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1), 
						ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеСтроки.ОсновноеСредство),
						РеквизитыОС.ГруппаОС,
						РеквизитыОС.АмортизационнаяГруппа);
		Иначе
			ТребуетсяНастройкаОтраженияРасходовПоНалогам = Ложь;
		КонецЕсли;
		
		ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", ТребуетсяНастройкаОтраженияРасходовПоНалогам);
		ВспомогательныеРеквизиты.Вставить("ГруппаОС", РеквизитыОС.ГруппаОС);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияПоУмолчанию(ДанныеСтроки, Объект) Экспорт
	
	//++ Локализация
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе
		ИЛИ Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.ГруппаФинансовогоУчета) Тогда
			ДанныеСтроки.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗначениеПоУмолчанию(
													Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособПоступления) Тогда
			Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС
				Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПоДоговоруЛизинга;
				
			Иначе
				
				ДанныеСтроки.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПриобретениеЗаПлату;
				
			КонецЕсли;
		КонецЕсли; 
		
		ДанныеСтроки.ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
		Если Не ЗначениеЗаполнено(ДанныеСтроки.НалогообложениеНДС) Тогда
			ДанныеСтроки.НалогообложениеНДС = Справочники.Организации.ЗакупкаПодДеятельность(Объект.Организация,, Объект.Дата);
		КонецЕсли;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация


Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)  КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Контрагент                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоФинансовымИнструментам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоФинансовымИнструментам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                                      КАК Период,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СальдоДебетовое ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)                   КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.ДоговорЛизинга                                               КАК Договор,
	|	ДанныеДокумента.ТипЗадолженности                                             КАК ТипСуммы,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж) ТОГДА
	|			ДанныеДокумента.ДокументАванса
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                        КАК РасчетныйДокумент,
	|	ДанныеДокумента.ДоговорЛизинга.ВалютаВзаиморасчетов                          КАК Валюта,
	
	|	ДанныеДокумента.Сумма                                                        КАК Сумма,
	|	ДанныеДокумента.СуммаУпр                                                     КАК СуммаУпр,
	|	ДанныеДокумента.СуммаРегл                                                    КАК СуммаРегл
	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК ДанныеДокумента
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО
	|			АналитикаПоПартнерам.Организация = &Организация
	|			И АналитикаПоПартнерам.Партнер = &Партнер
	|			И АналитикаПоПартнерам.Контрагент = &Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ДанныеДокумента.ДоговорЛизинга.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	ТаблицаОС.НачислятьАмортизациюБУ ИЛИ ТаблицаОС.НачислятьИзносБУ  КАК НачислятьАмортизациюБУ,
	|	ТаблицаОС.НачислятьАмортизациюНУ                 КАК НачислятьАмортизациюНУ,
	|	ТаблицаОС.СтатьяРасходовБУ                       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовБУ                    КАК АналитикаРасходов,
	|	ТаблицаОС.СтатьяРасходовАмортизационнойПремии    КАК СтатьяРасходовАмортизационнойПремии,
	|	ТаблицаОС.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ТаблицаОС.НалогообложениеНДС 
	|	КОНЕЦ КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюБУ,
	|	ЛОЖЬ                                             КАК НачислятьАмортизациюНУ,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовАмортизационнойПремии,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходовАмортизационнойПремии,
	|	ЛОЖЬ                                             КАК ПередаватьРасходыВДругуюОрганизацию,
	|	НЕОПРЕДЕЛЕНО                                     КАК ОрганизацияПолучательРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаНМАБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаНМАБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                          КАК Регистратор,
	|	&Период                                          КАК Период,
	|	&Организация                                     КАК Организация,
	|	Таблица.НематериальныйАктив                      КАК НематериальныйАктив,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету) КАК Состояние,
	|	Таблица.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) КАК НачислятьАмортизациюБУ,
	|	ВЫБОР 
	|		КОГДА Таблица.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА Таблица.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию) 
	|		ИНАЧЕ Таблица.НачислятьАмортизациюНУ         
	|	КОНЕЦ                                            КАК НачислятьАмортизациюНУ,
	|	Таблица.СтатьяРасходовБУ                         КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходовБУ                      КАК АналитикаРасходов,
	|	Таблица.ПередаватьРасходыВДругуюОрганизацию      КАК ПередаватьРасходыВДругуюОрганизацию,
	|	Таблица.ОрганизацияПолучательРасходов            КАК ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	&Ссылка                                            КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ                     КАК Период,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	ТаблицаОС.ОсновноеСредство.ИнвентарныйНомер        КАК ИнвентарныйНомер,
	|	ТаблицаОС.ДоговорЛизинга                           КАК ДоговорЛизинга,
	|	ТаблицаОС.СпособПоступления                        КАК СпособПоступления,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ                КАК ПервоначальнаяСтоимость,
	|	ТаблицаОС.МетодНачисленияАмортизацииБУ             КАК СпособНачисленияАмортизации,
	|	ТаблицаОС.ПоказательНаработки                      КАК ПоказательНаработки,
	|	ТаблицаОС.ПорядокУчетаБУ                           КАК ПорядокПогашенияСтоимости,
	|	ТаблицаОС.ОсновноеСредство.ГруппаОС                КАК ГруппаОС,
	|	ТаблицаОС.ОсновноеСредство.КодПоОКОФ               КАК КодПоОКОФ,
	|	ТаблицаОС.ОсновноеСредство.ШифрПоЕНАОФ             КАК ШифрПоЕНАОФ,
	|	ТаблицаОС.ОсновноеСредство.АмортизационнаяГруппа   КАК АмортизационнаяГруппа,
	|	ТаблицаОС.РезервПереоценкиСтоимостиРегл            КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.РезервПереоценкиАмортизацииРегл          КАК РезервПереоценкиАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                                            КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету                       КАК Период,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	ТаблицаОС.ОсновноеСредство.ИнвентарныйНомер        КАК ИнвентарныйНомер,
	|	ТаблицаОС.ДоговорЛизинга                           КАК ДоговорЛизинга,
	|	НЕОПРЕДЕЛЕНО                                       КАК СпособПоступления,
	|	ТаблицаОС.ЗалоговаяСтоимость                       КАК ПервоначальнаяСтоимость,
	|	НЕОПРЕДЕЛЕНО                                       КАК СпособНачисленияАмортизации,
	|	НЕОПРЕДЕЛЕНО                                       КАК ПоказательНаработки,
	|	НЕОПРЕДЕЛЕНО                                       КАК ПорядокПогашенияСтоимости,
	|	НЕОПРЕДЕЛЕНО                                       КАК ГруппаОС,
	|	НЕОПРЕДЕЛЕНО                                       КАК КодПоОКОФ,
	|	НЕОПРЕДЕЛЕНО                                       КАК ШифрПоЕНАОФ,
	|	НЕОПРЕДЕЛЕНО                                       КАК АмортизационнаяГруппа,
	|	НЕОПРЕДЕЛЕНО                                       КАК РезервПереоценкиСтоимости,
	|	НЕОПРЕДЕЛЕНО                                       КАК РезервПереоценкиАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                                      КАК Регистратор,
	|	&Период                                                      КАК Период,
	|	ТаблицаОС.ОсновноеСредство                                   КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный)  КАК МетодНачисленияАмортизации,
	|	&Организация                                                 КАК Организация,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ                          КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаОС.ПорядокУчетаНУ                                     КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ТаблицаОС.НакопленнаяАмортизацияНУДо2009                     КАК АмортизацияДо2009,
	|	ТаблицаОС.СрокИспользованияНУДо2009                          КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	ТаблицаОС.ОсновноеСредство            КАК ОсновноеСредство,
	|
	|	ТаблицаОС.СрокИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаОС.СрокИспользованияНУ         КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаОС.КоэффициентАмортизацииБУ    КАК КоэффициентАмортизацииБУ,
	|	ТаблицаОС.КоэффициентУскоренияБУ      КАК КоэффициентУскорения,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ОбъемНаработкиОстаточныйБУ 
	|		ИНАЧЕ ТаблицаОС.ОбъемНаработки 
	|	КОНЕЦ                                 КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СрокИспользованияБУОстаточный
	|		ИНАЧЕ ТаблицаОС.СрокИспользованияБУ 
	|	КОНЕЦ                                 КАК СрокИспользованияДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ПРДляВычисленияАмортизации
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьПР + ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|	КОНЕЦ                                 КАК ПРДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУ + ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.СтоимостьДляВычисленияАмортизацииЦФ
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьБУЦФ 
	|	КОНЕЦ                                 КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ДатаИзмененияПараметровБУ
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчетуБУ
	|	КОНЕЦ                                 КАК ДатаПоследнегоИзменения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииНМАБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииНМАБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	Таблица.НематериальныйАктив           КАК НематериальныйАктив,
	|	Таблица.СрокИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	Таблица.СрокИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	Таблица.КоэффициентБУ                 КАК КоэффициентБУ
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И НЕ ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаИзмененияПараметровБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУОстаточный КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|		И ТаблицаОС.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)
	|	)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаИзмененияПараметровБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ТаблицаОС.КоэффициентУскоренияБУ КАК КоэффициентУскорения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|		ИЛИ ТаблицаОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|			ТОГДА ТаблицаОС.СрокИспользованияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ЕстьИзменениеПараметровАмортизацииБУ
	|			ТОГДА ТаблицаОС.ПРДляВычисленияАмортизации
	|		ИНАЧЕ ТаблицаОС.ТекущаяСтоимостьПР + ТаблицаОС.ТекущаяСтоимостьПРЦФ
	|	КОНЕЦ КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НачислятьАмортизациюБУ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|			ТОГДА ТаблицаОС.НачислятьАмортизациюНУ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.МОЛ КАК МОЛ,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС) 
	|			ТОГДА ТаблицаОС.Подразделение
	|		ИНАЧЕ &Местонахождение              
	|	КОНЕЦ КАК Местонахождение,
	|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	НЕОПРЕДЕЛЕНО КАК МОЛ,
	|	&Местонахождение КАК Местонахождение,
	|	НЕОПРЕДЕЛЕНО КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Контрагент КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	НЕОПРЕДЕЛЕНО КАК МОЛ,
	|	ТаблицаОС.ПодразделениеАрендатора КАК Местонахождение,
	|	НЕОПРЕДЕЛЕНО КАК АдресМестонахождения
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &РасчетыМеждуОрганизациямиАрендатор
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                             КАК Регистратор,
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СпециальныйКоэффициентНУ  КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ПорядокУчетаНУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), 
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|	ТаблицаОС.ГрафикАмортизации  КАК ГрафикАмортизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ГрафикАмортизации <> ЗНАЧЕНИЕ(Справочник.ГодовыеГрафикиАмортизацииОС.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету   КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу) КАК СчетПередачиРасходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|			ИЛИ ТаблицаОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииНМАСпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                              КАК Период,
	|	&Организация                         КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив       КАК НематериальныйАктив,
	|	ТаблицаНМА.СпециальныйКоэффициентНУ  КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаНМА.СпециальныйКоэффициентНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И НЕ ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС В (
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства),
	|			ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.СтатьяРасходовНалог       КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовНалог    КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог) КАК ВидНалога
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.СтатьяРасходовНалог <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И ТаблицаОС.ОсновноеСредство.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                    КАК Регистратор,
	|	&Период                    КАК Период,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ИСТИНА                     КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаОС.СтатьяДоходов    КАК СтатьяДоходов,
	|	ТаблицаОС.АналитикаДоходов КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыЦелевогоФинансированияНМА";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        Регистратор,
	|	&Период                        КАК Период,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ИСТИНА                         КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаНМА.СтатьяДоходов       КАК СтатьяДоходов,
	|	ТаблицаНМА.АналитикаДоходов    КАК АналитикаДоходов
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.НМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.Ссылка = &Ссылка
	|	И ТаблицаНМА.ПрименениеЦелевогоФинансирования
	|	И &Период >= &ДатаНачалаУчета
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                          КАК Период,
	|	&Организация                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                          КАК Период,
	|	&Организация                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС)
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковОсновныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	
	|	&Контрагент КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе))
	|	И &РасчетыМеждуОрганизациямиАрендатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчету КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.АрендованныеОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|	И &ОтражатьВОперативномУчете
	|	И &Период >= &ДатаНачалаУчета
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                           КАК Организация,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности                 КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Расчеты
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыЛизинга КАК ДанныеДоговора
	|		ПО Расчеты.ДоговорЛизинга = ДанныеДоговора.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Аналитика.Организация = &Организация
	|			И Аналитика.Контрагент = &Контрагент
	|			И Аналитика.Партнер = &Партнер
	|			И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И Аналитика.НаправлениеДеятельности = ДанныеДоговора.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Партнер",     Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Контрагент",  Запрос.Параметры.Контрагент);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

//-- Локализация

//++ НЕ УТ
#Область ПроводкиРеглУчета

//++ Локализация
//-- Локализация
#КонецОбласти
//-- НЕ УТ

#КонецОбласти

#Область ПроверкаЗаполнения

Процедура ПроверитьЗаполнениеТЧ(Объект, ИмяТЧ, Отказ) Экспорт

	Если ИмяТЧ = "АрендованныеОС" Тогда
		
		ВнеоборотныеАктивы.ПроверитьОтсутствиеДублейВТабличнойЧасти(Объект, ИмяТЧ, "ОсновноеСредство", Отказ);
			
		ВнеоборотныеАктивыСлужебный.ПроверитьРеквизитыОСПриПринятииКУчету(Объект, ИмяТЧ, Отказ);
			
	ИначеЕсли ИмяТЧ = "РасчетыПоДоговорамЛизинга" Тогда
			
		ПроверкаТабличнойЧастиРасчетовПоДоговорамЛизинга(Объект, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыУниверсальнойПроверкиТЧ(ИмяТЧ) Экспорт

	ПараметрыУниверсальнойПроверкиТЧ = Неопределено;
	
	//++ Локализация
	
	Если ИмяТЧ = "АрендованныеОС" Тогда
		
		ПараметрыУниверсальнойПроверкиТЧ = Новый Структура;
		ПараметрыУниверсальнойПроверкиТЧ.Вставить("ИмяОбъектаУчета", "ОсновноеСредство");
		ПараметрыУниверсальнойПроверкиТЧ.Вставить("ШаблонСообщения", НСтр("ru = 'Не заполнена колонка ""%2"" в строке %1 списка ""Основные средства""'"));
		ПараметрыУниверсальнойПроверкиТЧ.Вставить("РедактированиеВОтдельномОкне", Ложь);
		
	КонецЕсли;

	//-- Локализация
	
	Возврат ПараметрыУниверсальнойПроверкиТЧ;
	
КонецФункции

Процедура ПроверкаТабличнойЧастиРасчетовПоДоговорамЛизинга(Объект, Отказ)
	
	РеквизитыДоговоров = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Объект.РасчетыПоДоговорамЛизинга.ВыгрузитьКолонку("ДоговорЛизинга"), "ВалютаВзаиморасчетов");
	
	ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Для Каждого Строка Из Объект.РасчетыПоДоговорамЛизинга Цикл
		
		Если РеквизитыДоговоров.Получить(Строка.ДоговорЛизинга).ВалютаВзаиморасчетов <> ВалютаРегУчета
			И Не ЗначениеЗаполнено(Строка.СуммаРегл) Тогда
			
			ТекстОшибки = НСтр("ru='Не заполнено поле ""Сумма (регл.)"" в строке %НомерСтроки% списка ""Расчеты по договорам лизинга""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", Строка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасчетыПоДоговорамЛизинга", Строка.НомерСтроки, "СуммаРегл"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

//++ Локализация

Процедура ФормаРедактированияСтрокиОС_ПорядокУчетаБУПриИзменении(Форма, ДополнительныеПараметры)

	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ДополнительныеПараметры.ИзмененныеРеквизиты);
	ДополнительныеПараметры.Вставить("Выполнить_ПересчитатьЗависимыеСуммы");

КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_МетодНачисленияАмортизацииБУПриИзменении(Форма, ДополнительныеПараметры)
	
	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	
	ИзмененныеРеквизиты = "МетодНачисленияАмортизацииБУ,КоэффициентАмортизацииБУ";
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ОсновноеСредствоПриИзменении(Форма, ДополнительныеПараметры)

	ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма);
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_СтатьяРасходовБУПриИзменении(Форма, ДополнительныеПараметры)
	
	СтатьяРасходовПриИзменении(
	    Форма,
		Форма.СтатьяРасходовБУ, 
		Форма.АналитикаРасходовБУ, 
		Форма.АналитикаРасходовБУОбязательна);
		
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СтатьяРасходовБУ");
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_СтатьяРасходовАмортизационнойПремииПриИзменении(Форма)
	
	СтатьяРасходовПриИзменении(
		Форма,
		Форма.СтатьяРасходовАмортизационнойПремии, 
		Форма.АналитикаРасходовАмортизационнойПремии, 
		Форма.АналитикаРасходовАмортизационнойПремииОбязательна);
		
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_СтатьяРасходовНалогПриИзменении(Форма)

	ДанныеДляЗаполнения = Новый Структура("Организация,Подразделение", Форма.Организация, Форма.Местонахождение);
	ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(ДанныеДляЗаполнения, Форма.СтатьяРасходовНалог, Форма.АналитикаРасходовНалог);

КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ЗаполнитьГодовуюНормуАмортизацииБУ(Форма)

	Если НЕ ЗначениеЗаполнено(Форма.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли;
	
	Если Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФ
		ИЛИ Форма.ПорядокУчетаБУ = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОбъектыЭксплуатации.ШифрПоЕНАОФ.НормаАмортизационныхОтчислений, 0) КАК Коэффициент
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	ИначеЕсли Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОбъектыЭксплуатации.ШифрПоЕНАОФ.ПроцентОтСтоимостиМашины, 0) КАК Коэффициент
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", Форма.ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Форма.КоэффициентАмортизацииБУ = Выборка.Коэффициент;
	
КонецПроцедуры

Процедура СтатьяДоходовПриИзменении(Форма)
	
	Форма.АналитикаДоходовОбязательна =
		ЗначениеЗаполнено(Форма.СтатьяДоходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.СтатьяДоходов, "КонтролироватьЗаполнениеАналитики");
		
	ДанныеДляЗаполнения = Новый Структура("Организация,Подразделение", Форма.Организация, Форма.Местонахождение);
	ДоходыИРасходыСервер.СтатьяДоходовПриИзменении(ДанныеДляЗаполнения, Форма.СтатьяДоходов, Форма.Местонахождение, Форма.АналитикаДоходов);
		
КонецПроцедуры

Процедура СтатьяРасходовПриИзменении(Форма, СтатьяРасходов, АналитикаРасходов, АналитикаРасходовОбязательна)

	Если НЕ ЗначениеЗаполнено(СтатьяРасходов) Тогда
		АналитикаРасходов = Неопределено;
	КонецЕсли;
	
	АналитикаРасходовОбязательна = 
		ЗначениеЗаполнено(СтатьяРасходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтатьяРасходов, "КонтролироватьЗаполнениеАналитики");
		
	ДанныеДляЗаполнения = Новый Структура("Организация,Подразделение", Форма.Организация, Форма.Местонахождение);
	ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(ДанныеДляЗаполнения, СтатьяРасходов, АналитикаРасходов);

КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

//++ Локализация

Процедура ФормаРедактированияСтрокиНМА_СтатьяРасходовБУПриИзменении(Форма)
	
	СтатьяРасходовПриИзменении(
	    Форма,
		Форма.СтатьяРасходовБУ, 
		Форма.АналитикаРасходовБУ, 
		Форма.АналитикаРасходовБУОбязательна);
		
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_НематериальныйАктивПриИзменении(Форма, ДополнительныеПараметры)

	ИзмененныеРеквизиты = "";
	
	Если Форма.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
		Если Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда
			Форма.МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный;
			Форма.КоэффициентБУ = 0;
			ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",МетодНачисленияАмортизацииБУ,КоэффициентБУ";
		КонецЕсли;
	ИначеЕсли Форма.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.НематериальныйАктив
		И Форма.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету Тогда
		Форма.ПорядокУчетаНУ = Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",ПорядокУчетаНУ";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИзмененныеРеквизиты) Тогда
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Прочее
	
//++ Локализация

#Область Локализация

Процедура ОбработатьРасчетыПоДоговорамЛизингаПередЗаписью(Объект)

	Если Объект.РасчетыПоДоговорамЛизинга.Количество() = 0 
		ИЛИ Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		Возврат;
	КонецЕсли; 
	
	СоздатьУдалитьДокументыАвансовПередЗаписью(Объект);
	
	ВалютыДоговоров = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
							Объект.РасчетыПоДоговорамЛизинга.ВыгрузитьКолонку("ДоговорЛизинга"), 
							"ВалютаВзаиморасчетов");
	
	ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Для Каждого Строка Из Объект.РасчетыПоДоговорамЛизинга Цикл
		
		Если ВалютыДоговоров.Получить(Строка.ДоговорЛизинга) = ВалютаРегУчета Тогда
			
			Строка.СуммаРегл = Строка.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьУдалитьДокументыАвансовПередЗаписью(Объект)
	
	Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Организация", Объект.Организация);
	ЗначенияРеквизитов.Вставить("Дата", Объект.Дата);
	ЗначенияРеквизитов.Вставить("ДатаПроведенияБанком", Объект.Дата);
	ЗначенияРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	ЗначенияРеквизитов.Вставить("ТипПлатежаПоЛизингу", Перечисления.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж);
	ЗначенияРеквизитов.Вставить("ПроведеноБанком", Истина);
	
	Запрос = Новый Запрос;
	Для Каждого КлючИЗначение Из ЗначенияРеквизитов Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("ВалютаРегл", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("УдалитьСозданные", (Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения));
	
	ТаблицаДокумента = Объект.РасчетыПоДоговорамЛизинга.Выгрузить();
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Т.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(&Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(Т.ДоговорЛизинга КАК Справочник.ДоговорыЛизинга) КАК Договор,
	|	ВЫРАЗИТЬ(Т.ТипЗадолженности КАК Перечисление.ТипыПлатежейПоЛизингу) КАК ТипЗадолженности,
	|	ВЫРАЗИТЬ(Т.Сумма КАК ЧИСЛО) КАК Сумма,
	|	ВЫРАЗИТЬ(Т.СуммаРегл КАК ЧИСЛО) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(Т.ДокументАванса КАК Документ.СписаниеБезналичныхДенежныхСредств) КАК ДокументАванса
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	втТаблицаДокумента КАК втТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|		ПО втТаблицаДокумента.ДокументАванса = СписаниеБезналичныхДенежныхСредств.Ссылка
	|ГДЕ
	|	НЕ СписаниеБезналичныхДенежныхСредств.ПометкаУдаления
	|	И (&УдалитьСозданные
	|			ИЛИ втТаблицаДокумента.ТипЗадолженности <> ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.РасчетыПоДоговорамЛизинга КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|		ПО Т.ДокументАванса = СписаниеБезналичныхДенежныхСредств.Ссылка
	|ГДЕ
	|	Т.Ссылка = &Ссылка
	|	И НЕ Т.ДокументАванса В
	|				(ВЫБРАТЬ
	|					втТаблицаДокумента.ДокументАванса
	|				ИЗ
	|					втТаблицаДокумента КАК втТаблицаДокумента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДокумента.ИндексСтроки,
	|	втТаблицаДокумента.Контрагент,
	|	втТаблицаДокумента.Договор,
	|	втТаблицаДокумента.Сумма,
	|	втТаблицаДокумента.СуммаРегл,
	|	втТаблицаДокумента.ДокументАванса,
	|	ВЫБОР
	|		КОГДА втТаблицаДокумента.Договор.ВалютаВзаиморасчетов = &ВалютаРегл
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоговорВВалютеРегл,
	|	втТаблицаДокумента.Договор.ВалютаВзаиморасчетов КАК Валюта
	|ПОМЕСТИТЬ втЗначимыеСтроки
	|ИЗ
	|	втТаблицаДокумента КАК втТаблицаДокумента
	|ГДЕ
	|	втТаблицаДокумента.ТипЗадолженности = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Дата,
	|	Операция.Контрагент КАК Контрагент,
	|	Операция.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Операция.Организация КАК Организация,
	|	Операция.СуммаДокумента КАК СуммаДокумента,
	|	Операция.Валюта КАК Валюта,
	|	ТабличнаяЧасть.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТабличнаяЧасть.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТабличнаяЧасть.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СуммыДокументовВВалютеРегл.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	Операция.Проведен КАК Проведен,
	|	Операция.ПроведеноБанком КАК ПроведеноБанком,
	|	Операция.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ втДанныеДокументов
	|ИЗ
	|	втЗначимыеСтроки КАК втЗначимыеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|		ПО втЗначимыеСтроки.ДокументАванса = Операция.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТабличнаяЧасть
	|		ПО втЗначимыеСтроки.ДокументАванса = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО (НЕ втЗначимыеСтроки.ДоговорВВалютеРегл)
	|			И (ТабличнаяЧасть.Ссылка = СуммыДокументовВВалютеРегл.Регистратор)
	|			И (ТабличнаяЧасть.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втДанныеДокументов.Ссылка ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СоздатьДокумент,
	|	втЗначимыеСтроки.ДокументАванса КАК ДокументАванса,
	|	втЗначимыеСтроки.Контрагент КАК Контрагент,
	|	втЗначимыеСтроки.Договор КАК ДоговорЛизинга,
	|	втЗначимыеСтроки.ДоговорВВалютеРегл КАК ДоговорВВалютеРегл,
	|	втЗначимыеСтроки.Валюта КАК Валюта,
	|	втЗначимыеСтроки.Сумма КАК СуммаДокумента,
	|	втЗначимыеСтроки.Сумма КАК Сумма,
	|	втЗначимыеСтроки.Сумма КАК СуммаВзаиморасчетов,
	|	втЗначимыеСтроки.Валюта КАК ВалютаВзаиморасчетов,
	|	ИСТИНА КАК ПроведеноБанком,
	|	&Дата КАК Период,
	|	втЗначимыеСтроки.Сумма КАК СуммаБезНДС,
	|	втЗначимыеСтроки.СуммаРегл КАК СуммаБезНДСРегл,
	|	втЗначимыеСтроки.ИндексСтроки
	|ИЗ
	|	втЗначимыеСтроки КАК втЗначимыеСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеДокументов КАК втДанныеДокументов
	|		ПО втЗначимыеСтроки.ДокументАванса = втДанныеДокументов.Ссылка
	|ГДЕ
	|	(втДанныеДокументов.Ссылка ЕСТЬ NULL 
	|			ИЛИ НЕ втДанныеДокументов.Проведен
	|			ИЛИ втДанныеДокументов.ПометкаУдаления
	|			ИЛИ втДанныеДокументов.Дата <> &Дата
	|			ИЛИ втДанныеДокументов.ХозяйственнаяОперация <> &ХозяйственнаяОперация
	|			ИЛИ втДанныеДокументов.Организация <> &Организация
	|			ИЛИ втДанныеДокументов.ПроведеноБанком <> &ПроведеноБанком
	|			ИЛИ втДанныеДокументов.Контрагент <> втЗначимыеСтроки.Контрагент
	|			ИЛИ втДанныеДокументов.ДоговорЛизинга <> втЗначимыеСтроки.Договор
	|			ИЛИ втДанныеДокументов.Валюта <> втЗначимыеСтроки.Валюта
	|			ИЛИ втДанныеДокументов.СуммаДокумента <> втЗначимыеСтроки.Сумма
	|			ИЛИ втДанныеДокументов.СуммаБезНДСРегл <> втЗначимыеСтроки.СуммаРегл
	|			ИЛИ втДанныеДокументов.ТипПлатежаПоЛизингу <> &ТипПлатежаПоЛизингу)";
	#КонецОбласти
	
	ПоляДокументаАванса = "СоздатьДокумент, ДокументАванса,
	|Организация, Дата, ДатаПроведенияБанком, Период, ХозяйственнаяОперация, ТипПлатежаПоЛизингу, ПроведеноБанком,
	|Контрагент, ДоговорЛизинга, ДоговорВВалютеРегл, Валюта, ВалютаВзаиморасчетов,
	|СуммаДокумента, Сумма, СуммаБезНДС, СуммаБезНДСРегл, СуммаВзаиморасчетов,
	|Комментарий";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	// Удаление не используемых документов аванса
	Выборка = Пакет[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Пометить на удаление документ аванса
		ОбъектДокумента = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектДокумента.ПометкаУдаления = Истина;
		ОбъектДокумента.Проведен = Ложь;
		ОбъектДокумента.Записать(РежимЗаписиДокумента.Запись);
		
		// Стереть записи в регистре сумм в валюте регл. учета
		НаборЗаписей = РегистрыСведений.СуммыДокументовВВалютеРегл.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	МассивОбновляемыхДокументов = Новый Массив;
	Выборка = Пакет[4].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		РеквизитыДокументаАванса = Новый Структура(ПоляДокументаАванса);
		ЗаполнитьЗначенияСвойств(РеквизитыДокументаАванса, ЗначенияРеквизитов);
		ЗаполнитьЗначенияСвойств(РеквизитыДокументаАванса, Выборка);
		
		Если Выборка.СоздатьДокумент Тогда
			РеквизитыДокументаАванса.ДокументАванса = Документы.СписаниеБезналичныхДенежныхСредств.ПолучитьСсылку();
			Объект.РасчетыПоДоговорамЛизинга[Выборка.ИндексСтроки].ДокументАванса = РеквизитыДокументаАванса.ДокументАванса;
		КонецЕсли;
		
		МассивОбновляемыхДокументов.Добавить(РеквизитыДокументаАванса);
		
	КонецЦикла;
	
	Объект.ДополнительныеСвойства.Вставить("МассивОбновляемыхДокументов", МассивОбновляемыхДокументов);
	
КонецПроцедуры

Процедура СоздатьУдалитьДокументыАвансовПриЗаписи(Объект)
	
	Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись
		Или Не Объект.ДополнительныеСвойства.Свойство("МассивОбновляемыхДокументов") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	КомментарийДокументаАванса = НСтр("ru = 'Создан автоматически при вводе начальных остатков взаиморасчетов по договору лизинга документом ""%1"".
                                       |Используется для формирования счетов-фактур на аванс по обеспечительному платежу.'");
	КомментарийДокументаАванса = СтрШаблон(КомментарийДокументаАванса, Объект.Ссылка);
	
	Для Каждого ОписаниеДокумента Из Объект.ДополнительныеСвойства.МассивОбновляемыхДокументов Цикл
		
		ОбъектДокумента = Неопределено;
		Если ОписаниеДокумента.СоздатьДокумент Тогда
			ОбъектДокумента = Документы.СписаниеБезналичныхДенежныхСредств.СоздатьДокумент();
			ОбъектДокумента.УстановитьСсылкуНового(ОписаниеДокумента.ДокументАванса);
		Иначе
			ОбъектДокумента = ОписаниеДокумента.ДокументАванса.ПолучитьОбъект();
		КонецЕсли;
		
		ОбъектДокумента.Проведен = Истина;
		ОбъектДокумента.ПометкаУдаления = Ложь;
		ЗаполнитьЗначенияСвойств(ОбъектДокумента, ОписаниеДокумента);
		
		ОбъектДокумента.РасшифровкаПлатежа.Очистить();
		СтрокаРасшифровки = ОбъектДокумента.РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, ОписаниеДокумента);
		СтрокаРасшифровки.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		ОбъектДокумента.Комментарий = КомментарийДокументаАванса;
		
		ОбъектДокумента.Записать(РежимЗаписиДокумента.Запись);
		
		НаборЗаписей = РегистрыСведений.СуммыДокументовВВалютеРегл.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ОбъектДокумента.Ссылка);
		Если Не ОписаниеДокумента.ДоговорВВалютеРегл Тогда
			СтрокаНабора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабора, ОписаниеДокумента);
			СтрокаНабора.Регистратор = ОбъектДокумента.Ссылка;
		КонецЕсли;
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов2_4.ОС КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.Регистратор = ДанныеДокумента.Ссылка)
	|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ДанныеДокумента.ОсновноеСредство)
	|ГДЕ
	|	(ДанныеДокумента.ЕстьИзменениеПараметровАмортизацииБУ
	|				И ДанныеДокумента.СрокИспользованияБУОстаточный <> ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации
	|			ИЛИ ДанныеДокумента.СрокИспользованияБУ <> ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(ДанныеОбъекта) Экспорт
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|ГДЕ
	|	ПараметрыАмортизацииОСБУ.Регистратор = &Регистратор";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", ДанныеОбъекта.Ссылка);
	ПараметрыАмортизацииОСБУ = Запрос.Выполнить().Выгрузить();
	ПараметрыАмортизацииОСБУ.Индексы.Добавить("ОсновноеСредство");
	
	Для каждого ДанныеСтроки Из ДанныеОбъекта.ОС Цикл
		
		ЗаписьРегистра = ПараметрыАмортизацииОСБУ.Найти(ДанныеСтроки.ОсновноеСредство, "ОсновноеСредство");
		
		Если ЗаписьРегистра <> Неопределено
			И ДанныеСтроки.ПРДляВычисленияАмортизации = 0 
			И ДанныеСтроки.ЕстьИзменениеПараметровАмортизацииБУ Тогда
			
			ДанныеСтроки.ПРДляВычисленияАмортизации = ЗаписьРегистра.ПРДляВычисленияАмортизации;
		КонецЕсли; 
		
		Если ЗаписьРегистра <> Неопределено
			И ДанныеСтроки.СрокИспользованияБУ <> ЗаписьРегистра.СрокПолезногоИспользованияБУ Тогда
			
			ДанныеСтроки.СрокИспользованияБУ = ЗаписьРегистра.СрокПолезногоИспользованияБУ;
		КонецЕсли;
		
		Если ЗаписьРегистра <> Неопределено
			И ДанныеСтроки.ЕстьИзменениеПараметровАмортизацииБУ
			И ДанныеСтроки.СрокИспользованияБУОстаточный <> ЗаписьРегистра.СрокИспользованияДляВычисленияАмортизации Тогда
			
			ДанныеСтроки.СрокИспользованияБУОстаточный = ЗаписьРегистра.СрокИспользованияДляВычисленияАмортизации;
		КонецЕсли;
		
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
