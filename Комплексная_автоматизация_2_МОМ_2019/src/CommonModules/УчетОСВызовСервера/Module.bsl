////////////////////////////////////////////////////////////////////////////////
// Модуль работы с объектами основных средств
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РасчетАмортизации

// Возвращает пустую таблицу значений начисленной амортизации
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Пустая таблица начисленной амортизации.
//
Функция ПустаяТаблицаЗначенийНачисленнойАмортизации() Экспорт
	
	ТаблицаАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ТаблицаАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	ТаблицаАмортизации.Колонки.Добавить("СчетНачисленияАмортизации", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаАмортизации.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("ПодразделениеЗатрат", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходов", Новый ОписаниеТипов("ДокументСсылка.ИзменениеПараметровОС"));
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходовЗаданДокументом", Новый ОписаниеТипов("Булево"));
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	ТаблицаАмортизации.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаАмортизации.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	
	ТаблицаАмортизации.Колонки.Добавить("ЭтоАмортизационнаяПремия", Новый ОписаниеТипов("Булево"));
	ТаблицаАмортизации.Колонки.Добавить("ДокументАмортизационнойПремии", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии.ТипЗначения);
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходы", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
	
	ТаблицаАмортизации.Колонки.Добавить("ПередаватьРасходыВДругуюОрганизацию", Новый ОписаниеТипов("Булево"));
	ТаблицаАмортизации.Колонки.Добавить("ОрганизацияПолучательРасходов", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаАмортизации.Колонки.Добавить("СчетПередачиРасходов", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаАмортизации.Колонки.Добавить("НачислятьИзнос", Новый ОписаниеТипов("Булево"));
	ТаблицаАмортизации.Колонки.Добавить("ЭтоЦелевыеСредства", Новый ОписаниеТипов("Булево"));
	
	ТаблицаАмортизации.Колонки.Добавить("Контрагент",         Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаАмортизации.Колонки.Добавить("ДоговорКонтрагента", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры.ТипЗначения);
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПустаяТаблицаПараметровРасчетаАмортизации() Экспорт

	ПараметрыАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ПараметрыАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	// БУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияБУ", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыНачисленияАмортизацииОС,ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНаНачалоГодаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("ОбъемПродукцииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ПараметрыАмортизации.Колонки.Добавить("ВыработкаЗаМесяцБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентАмортизацииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентУскоренияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентПериода", ОбщегоНазначения.ОписаниеТипаЧисло(15,6));
	ПараметрыАмортизации.Колонки.Добавить("ФактическийСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	ПараметрыАмортизации.Колонки.Добавить("ОставшийсяСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	
	// НУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияНУ", Новый ОписаниеТипов("ПеречислениеСсылка.МетодыНачисленияАмортизации"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияНУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("НормаАмортизацииНУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентНУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("ПРДляВычисленияАмортизации", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
		
	Возврат ПараметрыАмортизации;

КонецФункции
 
// Возвращает таблицу начисленной амортизации
//
// Параметры:
//  ТаблицаОбъектовУчета	 - ТаблицаЗначений	 - Таблица объектов для начисления амортизации
//  ТаблицаРеквизитов		 - ТаблицаЗначений	 - Таблица реквизитов документа
//  ДобавитьПараметрыРасчета - Булево			 - Истина, если требуется добавить параметры расчета в таблицу начисленной амортизации
//  Отказ					 - Булево			 - Признак удачного завершения функции начисления амортизации.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица начисленных расходов по амортизации (формат представлен в функции ПустаяТаблицаЗначенийНачисленнойАмортизации).
//
Функция НачисленнаяАмортизация(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, Отказ) Экспорт
	
	Возврат ПодготовитьТаблицуАмортизацияОС(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, , Отказ);
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете

// Возвращает текст запроса временных таблиц для отражения амортизации в регламентированном учете.
//
// Параметры:
// 		ИмяДокумента - Строка - Строка имени метаданных.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизации(ИмяДокумента) Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТОбъектыДокумента(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТСчетаОтражения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТМестонахожденияОС(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизацияЦелевогоФинансирования());
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизационнаяПремия());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков по счетам учета
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаБУ, 0)) КАК СуммаБУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаНУ, 0)) КАК СуммаНУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаПР, 0)) КАК СуммаПР,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаВР, 0)) КАК СуммаВР
	|ПОМЕСТИТЬ втАмортизацияСгруппированная
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	ЭтоЦелевыеСредства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаОтражения.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчета
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетУчетаЦФ
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|ГДЕ
	|	втСчетаОтражения.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизации
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизацииЦФ
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|ГДЕ
	|	втСчетаОтражения.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.Организация КАК Организация,
	|	Местонахождение.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
	|		ТОГДА ОбъектыУчета.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыСгруппированные
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК Местонахождение
	|		ПО втОбъектыДокумента.ОбъектУчета = Местонахождение.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыУчета
	|		ПО втОбъектыДокумента.ОбъектУчета = ОбъектыУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НаправлениеДеятельности,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеДт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеКт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	втОстаткиИДвиженияДокумента КАК втОстаткиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыСгруппированные.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаПР, 0) КАК ВосстановительнаяСтоимостьПР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаВР, 0) КАК ВосстановительнаяСтоимостьВР,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаПР, 0) + ЕСТЬNULL(втАмортизация.СуммаПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаВР, 0) + ЕСТЬNULL(втАмортизация.СуммаВР, 0) КАК НакопленнаяАмортизацияВР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаПР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаПР, 0) + ЕСТЬNULL(втАмортизация.СуммаПР, 0)) КАК ОстаточнаяСтоимостьПР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаВР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаВР, 0) + ЕСТЬNULL(втАмортизация.СуммаВР, 0)) КАК ОстаточнаяСтоимостьВР,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаПР, 0) КАК ВосстановительнаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаВР, 0) КАК ВосстановительнаяСтоимостьВРЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаБУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаНУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаПР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаПР, 0) КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаВР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаВР, 0) КАК НакопленнаяАмортизацияВРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаБУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаНУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаПР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаПР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаПР, 0)) КАК ОстаточнаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаВР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаВР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаВР, 0)) КАК ОстаточнаяСтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) / (ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0))
	|	КОНЕЦ КАК ДоляЦФБУ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) / (ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0))
	|	КОНЕЦ КАК ДоляЦФНУ,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаНУ, 0) КАК КорректировкаСтоимостиНУ,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаПР, 0) КАК КорректировкаСтоимостиПР,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаВР, 0) КАК КорректировкаСтоимостиВР
	|ПОМЕСТИТЬ втОстаткиПоСчетам
	|ИЗ
	|	втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаОтражения КАК втСчетаОтражения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втСчетаОтражения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизация
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизация.ОбъектУчета
	|			И (НЕ втАмортизация.ЭтоЦелевыеСредства)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизацияЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизацияЦФ.ОбъектУчета
	|			И (втАмортизацияЦФ.ЭтоЦелевыеСредства)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчета
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчета.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчета = втОстаткиСчетУчета.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизации
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизации.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизации = втОстаткиСчетАмортизации.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчетаЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчетаЦФ.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчетаЦФ = втОстаткиСчетУчетаЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизацииЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизацииЦФ.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизацииЦФ = втОстаткиСчетАмортизацииЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетКорректировкаСтоимости
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетКорректировкаСтоимости.ОбъектУчета
	|			И (втОстаткиСчетКорректировкаСтоимости.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества))
	|ГДЕ
	|	НЕ (
	|		втОстаткиСчетУчета.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетУчетаЦФ.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизации.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизацииЦФ.ОбъектУчета ЕСТЬ NULL
	|	)";
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков резерва переоценки
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиРезерваПереоценки() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДооценки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокКт КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокКт КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиДооценкиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаДооценки КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУДт,
	|	Хозрасчетный.СуммаПРДт,
	|	Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУКт,
	|	-Хозрасчетный.СуммаПРКт,
	|	-Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиРезерваДооценки
	|ИЗ
	|	втОстаткиДооценкиИДвиженияДокумента КАК втОстаткиДооценкиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет";
	
КонецФункции

// Возвращает текст запроса для отражения амортизации по документу в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизации() Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияКВ());
	ТекстыОтражения.Добавить(ТекстОтраженияИзнос());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизация());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУ());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремия());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУ());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУОтправитель());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУПолучатель());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУНаПрочиеОперации());
	
	ТекстыОтражения.Добавить(ТекстОтраженияДоходыОтЦелевогоФинансирования());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете

// Выполняет проверку ошибок в заполнении способов отражения расходов по амортизации.
//
// Параметры:
// 		ЭтотОбъект - ДокументОбъект.АмортизацияОС - Объект документа амортизации
// 		Отказ - Булево - Возврат, признак ошибки при выполнения проверки.
//
Процедура ПроверитьСпособыОтраженияРасходовНаПрочиеАктивы(ЭтотОбъект, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СостоянияОСОрганизацийСрезПоследних.Организация КАК Организация,
	|	СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втАктуальныеОбъекты
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(&Дата, Организация В (&Организация)) КАК СостоянияОСОрганизацийСрезПоследних
	|ГДЕ
	|	СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.Организация КАК Организация,
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыКНачислению
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втАктуальныеОбъекты КАК Т)) КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
	|ГДЕ
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.Организация,
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втАктуальныеОбъекты КАК Т)) КАК НачислениеАмортизацииОСНалоговыйУчетСрезПоследних
	|ГДЕ
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.НачислятьАмортизацию
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОбъектУчета,
	|	ЕСТЬNULL(ИзменениеПараметровОСОтражениеАмортизационныхРасходов.СтатьяРасходов, СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетБухгалтерскийУчетСрезПоследних.СтатьяРасходов) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиАмортизации
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыКНачислению КАК Т)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетБухгалтерскийУчетСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ИзменениеПараметровОСОтражениеАмортизационныхРасходов
	|		ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетБухгалтерскийУчетСрезПоследних.СпособОтраженияРасходов = ИзменениеПараметровОСОтражениеАмортизационныхРасходов.Ссылка
	|			И (СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетБухгалтерскийУчетСрезПоследних.СпособОтраженияРасходовЗаданДокументом)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК СтатьяРасходов,
	|	втСтатьиАмортизации.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтатьиАмортизации КАК втСтатьиАмортизации
	|		ПО (втСтатьиАмортизации.СтатьяРасходов = СтатьиРасходов.Ссылка)
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)";
	#КонецОбласти
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке =
		НСтр("ru='В способе отражения расходов по амортизации для ""%1"" использована статья ""%2"" с не поддерживаемым вариантом распределения расходов ""На прочие активы""
		|Измените способ отражения расходов для данного актива с помощью документа ""Изменение параметров ОС""'");
		
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеОбОшибке,
			Выборка.ОбъектУчета,
			Выборка.СтатьяРасходов);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СообщениеОбОшибке,,,,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует параметры запроса данных проведения при отражении начисленной амортизации.
//
// Параметры:
// 		Запрос - Запрос - Объект запроса к данным
// 		ДополнительныеСвойства - Структура - Структура дополнительных свойств объекта документа.
//
Процедура ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДополнительныеСвойства) Экспорт
	
	Если НЕ ДополнительныеСвойства.Свойство("НачисленнаяАмортизация") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаАмортизации", ДополнительныеСвойства.НачисленнаяАмортизация);
	Запрос.УстановитьПараметр("Граница", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("КонецМесяца", Дата(1, 1, 1, 0, 0, 0));
	
	Запрос.УстановитьПараметр("СписаниеОстаточнойСтоимости", Ложь);
	Запрос.УстановитьПараметр("ЧастичнаяЛиквидация", Ложь);
	Запрос.УстановитьПараметр("ТекущееСостояниеОбъектов", Ложь);
	Запрос.УстановитьПараметр("ДатаСписанияОстаточнойСтоимости", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатьяРасходов", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаРасходов", Неопределено);
	
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихДоходовРасходов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихАктивовПассивов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Запрос.УстановитьПараметр(
		"ПогашениеУпрЗатрат",
		ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете"));
		
	Запрос.УстановитьПараметр("НачалоУчета2_4", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("ИспользоватьВнеоборотныеАктивы2_4", Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить());
		
КонецПроцедуры

// Помещает в тексты запроса временную таблицу
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса в который должны быть помещены временные таблицы
// 		ИменаТаблиц - Строка - Строка перечисленных через запятую временных таблиц, которые требуется поместить в ТекстыЗапроса.
//
Процедура ДобавитьВременныеТаблицы(ТекстыЗапроса, ИменаТаблиц) Экспорт
	
	СтруктураИменаТаблиц = Новый Структура(ИменаТаблиц);
	
	Если СтруктураИменаТаблиц.Свойство("НачисленнаяАмортизация") Тогда
		
		ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ТекущееСостояниеОбъектов") Тогда
		
		ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ПараметрыОбъектовУчета") Тогда
		
		ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("втЦелевыеСредстваРеглСгруппированныеПоНаправлениям") Тогда
		
		ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("втЦелевыеСредстваУпр") Тогда
		
		ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы()
	+ Разделитель + ПрочиеРасходы_АмортизацияРеглСтоимости()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в прочих расходах при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеРасходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
		
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в партиях прочих расходов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПартииПрочихРасходов(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы движений прочих доходов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеДоходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеДоходы
	|" + ПрочиеДоходы_ПустаяТаблица()
	+ Разделитель + ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	+ Разделитель + ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы движений прочих активов/пассивов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеАктивыПассивы
	|" + ПрочиеАктивыПассивы_ПустаяТаблица()
	+ Разделитель + ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	+ Разделитель + ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "")
	+ Разделитель + РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы порядка отражения прочих операций по начисленной амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
//
Процедура ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПорядокОтраженияПрочихОпераций
	|" +
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	
	|ГДЕ
	|	СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	И(
	|		СтатьиПрочихОпераций.Ссылка = &СтатьяРасходов
	|		ИЛИ СтатьиПрочихОпераций.Ссылка В (ВЫБРАТЬ Т.СтатьяРасходов ИЗ втНачисленнаяАмортизация КАК Т)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы отражения документа в регл. учете
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" + ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), ДополнительныйТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС, "") +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	
	|	НачисленнаяАмортизация.Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|ГДЕ
	|	НачисленнаяАмортизация.Организация <> &Организация
	|"
	+ Разделитель + ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

// Заполняет входящие данные расчета и отражения амортизации, необходимые для проверки выполненных обновлений ИБ.
//
// Параметры:
// 		ВходящиеДанные - Соответствие - Данные расчета и отражения амортизации
// 			* Ключ - Строка, ОбъектМетаданныхКонфигурации - входящие данные, используемые  операцией
// 			* Значение - см. ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки, параметр Отбор.
//
Процедура ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные) Экспорт
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СостоянияОСОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НачислениеАмортизацииОСНалоговыйУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НаработкиОбъектовЭксплуатации);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ГрафикиАмортизацииОСБухгалтерскийУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СчетаБухгалтерскогоУчетаОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.МестонахождениеОСБухгалтерскийУчет);
	
	ВходящиеДанные.Вставить(Метаданные.Справочники.ГодовыеГрафикиАмортизацииОС);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Создает временную таблицу накопленных стоимостей для указанного менеджера в разрезе основных средств и документов
// 		Переданный менеджер временных таблиц должен содержать таблицу "втОбъектыДокументов",
// 		содержащую поля "Ссылка", "ОсновноеСредство", "Дата", "Организация".
//
// Параметры:
// 		МенеджерВТ - МенеджерВременныхТаблиц - Менеджер временных таблиц исходного запроса.
//
Процедура СоздатьВременнуюТаблицуСостоянияОС(МенеджерВТ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(СчетаУчета.Период) КАК Период,
	|	МАКСИМУМ(СчетаУчетаЦФ.Период) КАК ПериодЦФ,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втСчетаУчетаПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаУчета
	|		ПО втОбъектыДокументов.ОсновноеСредство = СчетаУчета.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = СчетаУчета.Организация
	|			И втОбъектыДокументов.Ссылка <> СчетаУчета.Регистратор
	|			И втОбъектыДокументов.Дата > СчетаУчета.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втОбъектыДокументов.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втОбъектыДокументов.Ссылка <> СчетаУчетаЦФ.Регистратор
	|			И втОбъектыДокументов.Дата > СчетаУчетаЦФ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСчетаУчетаПериод.Ссылка,
	|	втСчетаУчетаПериод.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СчетаУчета.ГруппаФинансовогоУчета <> ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ПустаяСсылка)
	|			ТОГДА СчетаУчета.ГруппаФинансовогоУчета.СчетУчета
	|		ИНАЧЕ ЕСТЬNULL(СчетаУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА СчетаУчета.ГруппаФинансовогоУчета <> ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ПустаяСсылка)
	|			ТОГДА СчетаУчета.ГруппаФинансовогоУчета.СчетУчетаАмортизации
	|		ИНАЧЕ ЕСТЬNULL(СчетаУчета.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетАмортизации,
	|	ВЫБОР
	|		КОГДА СчетаУчета.ГруппаФинансовогоУчета <> ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ПустаяСсылка)
	|			ТОГДА СчетаУчета.ГруппаФинансовогоУчета.СчетУчетаЦФ
	|		ИНАЧЕ ЕСТЬNULL(СчетаУчетаЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетУчетаЦФ,
	|	ВЫБОР
	|		КОГДА СчетаУчета.ГруппаФинансовогоУчета <> ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ПустаяСсылка)
	|			ТОГДА СчетаУчета.ГруппаФинансовогоУчета.СчетУчетаАмортизацииЦФ
	|		ИНАЧЕ ЕСТЬNULL(СчетаУчетаЦФ.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетАмортизацииЦФ
	|ПОМЕСТИТЬ втСчетаУчета
	|ИЗ
	|	втСчетаУчетаПериод КАК втСчетаУчетаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаУчета
	|		ПО втСчетаУчетаПериод.ОсновноеСредство = СчетаУчета.ОсновноеСредство
	|			И втСчетаУчетаПериод.Организация = СчетаУчета.Организация
	|			И втСчетаУчетаПериод.Период = СчетаУчета.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втСчетаУчетаПериод.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втСчетаУчетаПериод.Период = СчетаУчетаЦФ.Период
	|			И (СчетаУчетаЦФ.ПрименениеЦелевогоФинансирования)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиОборотыСчетУчета.Период КАК Период,
	|	ОстаткиОборотыСчетУчета.Регистратор КАК Регистратор,
	|	ОстаткиОборотыСчетУчета.Организация КАК Организация,
	|	ОстаткиОборотыСчетУчета.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиОборотыСчетУчета.Счет КАК Счет,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			Движения,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втСчетаУчета КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизации
	|				ИЗ
	|					втСчетаУчета КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетУчетаЦФ
	|				ИЗ
	|					втСчетаУчета КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизацииЦФ
	|				ИЗ
	|					втСчетаУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ОстаткиОборотыСчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = втСтоимостиЗаписи.Организация
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втСтоимостиЗаписи.Счет,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокДт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокДт
	|	КОНЕЦ КАК СуммаОстатокДт,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокКт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокКт
	|	КОНЕЦ КАК СуммаОстатокКт
	|ПОМЕСТИТЬ втСтоимости
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Организация = втСтоимостиЗаписи.Организация
	|			И втСтоимостиПериод.Счет = втСтоимостиЗаписи.Счет
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПервоначальныеСведения.Организация
	|			И втОбъектыДокументов.Ссылка <> ПервоначальныеСведения.Регистратор
	|			И втОбъектыДокументов.Дата > ПервоначальныеСведения.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведения.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведения.Период КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведения.ГруппаОС,
	|	ПервоначальныеСведения.КодПоОКОФ,
	|	ПервоначальныеСведения.ШифрПоЕНАОФ,
	|	ПервоначальныеСведения.АмортизационнаяГруппа
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Организация = ПервоначальныеСведения.Организация
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втМестонахождениеБУПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = МестонахождениеБУ.Организация
	|			И втОбъектыДокументов.Ссылка <> МестонахождениеБУ.Регистратор
	|			И втОбъектыДокументов.Дата > МестонахождениеБУ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеБУПериод.Ссылка КАК Ссылка,
	|	МестонахождениеБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеБУ.МОЛ КАК МОЛ,
	|	МестонахождениеБУ.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеБУ
	|ИЗ
	|	втМестонахождениеБУПериод КАК втМестонахождениеБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втМестонахождениеБУПериод.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втМестонахождениеБУПериод.Организация = МестонахождениеБУ.Организация
	|			И втМестонахождениеБУПериод.Период = МестонахождениеБУ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК ПараметрыАмортизации
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПараметрыАмортизации.Организация
	|			И втОбъектыДокументов.Ссылка <> ПараметрыАмортизации.Регистратор
	|			И втОбъектыДокументов.Дата > ПараметрыАмортизации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизации.КоэффициентАмортизации КАК КоэффициентАмортизации
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Организация = ПараметрыАмортизации.Организация
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизации.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(втПервоначальныеСведения.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(втПервоначальныеСведения.СпособНачисленияАмортизации, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втПервоначальныеСведения.ГруппаОС, ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)) КАК ГруппаОС,
	|	ЕСТЬNULL(втПервоначальныеСведения.КодПоОКОФ, ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка)) КАК КодПоОКОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ШифрПоЕНАОФ, ЗНАЧЕНИЕ(Справочник.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов.ПустаяСсылка)) КАК ШифрПоЕНАОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|	ЕСТЬNULL(втМестонахождениеБУ.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождениеБУ.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|	ЕСТЬNULL(втСчетаУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(втСчетаУчета.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втПараметрыАмортизации.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) + ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) - ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) - ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеБУ КАК втМестонахождениеБУ
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождениеБУ.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождениеБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаУчета КАК втСчетаУчета
	|		ПО втОбъектыДокументов.Ссылка = втСчетаУчета.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втСчетаУчета.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимость
	|		ПО (втСчетаУчета.Ссылка = втНакопленнаяСтоимость.Ссылка)
	|			И (втСчетаУчета.ОсновноеСредство = втНакопленнаяСтоимость.ОсновноеСредство)
	|			И (втСчетаУчета.СчетУчета = втНакопленнаяСтоимость.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимостьЦФ
	|		ПО (втСчетаУчета.Ссылка = втНакопленнаяСтоимостьЦФ.Ссылка)
	|			И (втСчетаУчета.ОсновноеСредство = втНакопленнаяСтоимостьЦФ.ОсновноеСредство)
	|			И (втСчетаУчета.СчетУчетаЦФ = втНакопленнаяСтоимостьЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизация
	|		ПО (втСчетаУчета.Ссылка = втНакопленнаяАмортизация.Ссылка)
	|			И (втСчетаУчета.ОсновноеСредство = втНакопленнаяАмортизация.ОсновноеСредство)
	|			И (втСчетаУчета.СчетАмортизации = втНакопленнаяАмортизация.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизацияЦФ
	|		ПО (втСчетаУчета.Ссылка = втНакопленнаяАмортизацияЦФ.Ссылка)
	|			И (втСчетаУчета.ОсновноеСредство = втНакопленнаяАмортизацияЦФ.ОсновноеСредство)
	|			И (втСчетаУчета.СчетАмортизацииЦФ = втНакопленнаяАмортизацияЦФ.Счет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ГруппаОС) КАК КоличествоРазличныхГруппаОС,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КодПоОКОФ) КАК КоличествоРазличныхКодПоОКОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК КоличествоРазличныхШифрПоЕНАОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК КоличествоРазличныхАмортизационнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоличествоРазличныхКоэффициентАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ГруппаОС) КАК ГруппаОС,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КодПоОКОФ) КАК КодПоОКОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК ШифрПоЕНАОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоэффициентАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСтоимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСтоимостиЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСтоимостиПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСчетаУчетаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСчетаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПервоначальныеСведения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПервоначальныеСведенияПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втМестонахождениеБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втМестонахождениеБУПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПараметрыАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втПараметрыАмортизацииПериод";
	#КонецОбласти
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Определяет в какой организации ОС принято к учету.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации - ОС, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой данное ОС принято к учету.
//
Функция ОрганизацияВКоторойОСПринятоКУчету(ОсновноеСредство) Экспорт

	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СостоянияОСОрганизаций) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СостоянияОС.Организация
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету),
	|							ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОтражениеАмортизацииВРеглУчете_ВременныеТаблицы

Функция ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "АмортизацияОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ЕСТЬNULL(СправочникОбъектыУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР КАК СуммаВР,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втТаблицаАмортизации КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка";
		
	ИначеЕсли ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация                         КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета                         КАК ОбъектУчета,
		|	ТаблицаАмортизации.Подразделение                       КАК Подразделение,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов                   КАК АналитикаРасходов,
		|
		|	ТаблицаАмортизации.СуммаБУ                             КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ                             КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР                             КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР                             КАК СуммаВР,
		|
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия            КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии       КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства                  КАК ЭтоЦелевыеСредства,
		|
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов       КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов                КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втНачисленнаяАмортизацияДокумента КАК ТаблицаАмортизации";
		
	Иначе	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Ссылка.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ЕСТЬNULL(СправочникОбъектыУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР КАК СуммаВР,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	Документ.СписаниеОС.НачисленнаяАмортизация КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка
		|ГДЕ
		|	ТаблицаАмортизации.Ссылка = &Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ." + ИмяДокумента);
		
	КонецЕсли;
	
	ПрефиксЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|";
	
	Возврат ПрефиксЗапроса + ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОбъектыДокумента(ИмяДокумента)
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втВсеОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Организация КАК Организация,
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втВсеОбъектыДокумента
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Если ИмяДокумента <> "АмортизацияОС" Тогда
		
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОбъектУчета
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ."+ИмяДокумента);
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеОбъектыДокумента.Организация КАК Организация,
	|	втВсеОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	втВсеОбъектыДокумента КАК втВсеОбъектыДокумента";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовПакета("Временная таблица втОбъектыДокумента"));
	
КонецФункции

Функция ТекстЗапросаВТСчетаОтражения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.СчетУчета КАК СчетУчета,
		|	втДанныеДокумента.СчетАмортизации КАК СчетНачисленияАмортизации,
		|	втДанныеДокумента.ВариантПримененияЦелевогоФинансирования В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)) КАК ПрименениеЦелевогоФинансирования,
		|	втДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
		|	втДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
		|	втДанныеДокумента.СчетУчетаЦФ КАК СчетУчетаЦФ,
		|	втДанныеДокумента.СчетАмортизацииЦФ КАК СчетНачисленияАмортизацииЦФ
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(СчетаОтражения.ГруппаФинансовогоУчета.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
		|	ЕСТЬNULL(СчетаОтражения.ГруппаФинансовогоУчета.СчетУчетаАмортизации, ЕСТЬNULL(СчетаОтражения.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетНачисленияАмортизации,
		|	НЕ ПараметрыЦелевогоФинансирования.ОсновноеСредство ЕСТЬ NULL КАК ПрименениеЦелевогоФинансирования,
		|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов,
		|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.АналитикаДоходов, НЕОПРЕДЕЛЕНО) КАК АналитикаДоходов,
		|	ЕСТЬNULL(СчетаОтражения.ГруппаФинансовогоУчета.СчетУчетаЦФ, ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
		|	ЕСТЬNULL(СчетаОтражения.ГруппаФинансовогоУчета.СчетУчетаАмортизацииЦФ, ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетНачисленияАмортизацииЦФ
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
		|					И (Организация, ОсновноеСредство) В
		|						(ВЫБРАТЬ
		|							Т.Организация,
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК СчетаОтражения
		|		ПО втОбъектыДокумента.ОбъектУчета = СчетаОтражения.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПараметрыЦелевогоФинансирования
		|		ПО втОбъектыДокумента.ОбъектУчета = ПараметрыЦелевогоФинансирования.ОсновноеСредство
		|			И (ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования)";
		
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТСчетаОтражения
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	ВЫБОР
		|		КОГДА втДанныеДокумента.ПорядокУчетаБУ В (
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
		|				ИЛИ втДанныеДокумента.ПорядокУчетаНУ В (
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьСчетАмортизации,
		|	ЛОЖЬ КАК НачислятьИзнос,
		|	1 КАК МножительПримененияИзноса
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияБУ.ПорядокПогашенияСтоимости, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации), ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
		|				ИЛИ ЕСТЬNULL(ПервоначальныеСведенияНУ.ПорядокВключенияСтоимостиВСоставРасходов, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьСчетАмортизации,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияБУ.ПорядокПогашенияСтоимости, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НачислятьИзнос,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияБУ.ПорядокПогашенияСтоимости, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК МножительПримененияИзноса
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И (Организация, ОсновноеСредство) В
		|						(ВЫБРАТЬ
		|							Т.Организация,
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПервоначальныеСведенияБУ
		|		ПО втОбъектыДокумента.ОбъектУчета = ПервоначальныеСведенияБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И (Организация, ОсновноеСредство) В
		|						(ВЫБРАТЬ
		|							Т.Организация,
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПервоначальныеСведенияНУ
		|		ПО втОбъектыДокумента.ОбъектУчета = ПервоначальныеСведенияНУ.ОсновноеСредство";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТПервоначальныеСведения
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТМестонахожденияОС(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.Местонахождение КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|			&Дата,
		|			Регистратор <> &Ссылка
		|			И (Организация, ОсновноеСредство) В
		|				(ВЫБРАТЬ
		|					Т.Организация, Т.ОбъектУчета
		|				ИЗ
		|					втОбъектыДокумента КАК Т)) КАК Местонахождения
		|	ПО втОбъектыДокумента.ОбъектУчета = Местонахождения.ОсновноеСредство";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТМестонахожденияОС
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТНачисленнаяАмортизацияЦелевогоФинансирования()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТНачисленнаяАмортизацияЦелевыхСредств
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиАмортизации,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаПР) КАК СуммаПР,
	|	СУММА(втНачисленнаяАмортизация.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияЦелевыхСредств
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.НаправлениеДеятельностиАмортизации";
	
КонецФункции

Функция ТекстЗапросаВТНачисленнаяАмортизационнаяПремия()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица втНачисленнаяАмортизационнаяПремия
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаПР) КАК СуммаПР,
	|	СУММА(втНачисленнаяАмортизация.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втНачисленнаяАмортизационнаяПремия
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	втНачисленнаяАмортизация.ЭтоАмортизационнаяПремия
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.ДокументАмортизационнойПремии";
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете_Движения

Функция ТекстОтраженияАмортизационнаяПремияКВ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Снятие амортизационной премии с КВ (Дт <ПустаяСсылка> :: Кт КВ)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	Строки.ДокументАмортизационнойПремии КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизационнаяПремия КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|";
	
КонецФункции

Функция ТекстОтраженияИзнос()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаИзноса :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетДт,
	|	Строки.ОбъектУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление износа"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияДоходыОтЦелевогоФинансирования()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОбъектУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ + Строки.СуммаПР + Строки.СуммаВР КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СчетаОтражения.СтатьяДоходов КАК АналитикаУчетаКт,
	|	МестонахождениеОС.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	СчетаОтражения.СтатьяДоходов КАК СубконтоКт1,
	|	СчетаОтражения.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ + Строки.СуммаПР + Строки.СуммаВР КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Признание доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизацияЦелевыхСредств КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ втПервоначальныеСведения.НачислятьИзнос
	|	И СчетаОтражения.ПрименениеЦелевогоФинансирования
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизация()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремия()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_ВременныеТаблицы

Процедура ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втНачисленнаяАмортизацияДокумента";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизацияДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК БУЛЕВО) КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.НачислятьИзнос КАК БУЛЕВО) КАК НачислятьИзнос,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.ЭтоЦелевыеСредства КАК БУЛЕВО) КАК ЭтоЦелевыеСредства,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК БУЛЕВО)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК Справочник.Организации)
	|		ИНАЧЕ ВЫРАЗИТЬ(&Организация КАК Справочник.Организации)
	|	КОНЕЦ КАК Организация,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Подразделение КАК Справочник.СтруктураПредприятия) КАК Подразделение,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.НаправлениеДеятельности КАК Справочник.НаправленияДеятельности) КАК НаправлениеДеятельности,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаБУ КАК ЧИСЛО) КАК СуммаБУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаНУ КАК ЧИСЛО) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаПР КАК ЧИСЛО) КАК СуммаПР,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаВР КАК ЧИСЛО) КАК СуммаВР,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Коэффициент КАК ЧИСЛО) КАК Коэффициент,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияДокумента
	|ИЗ
	|	&ТаблицаАмортизации КАК ТаблицаАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втНачисленнаяАмортизация";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизацияДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизацияДокумента.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	втНачисленнаяАмортизацияДокумента.НачислятьИзнос КАК НачислятьИзнос,
	|	втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
	|	втНачисленнаяАмортизацияДокумента.Организация КАК Организация,
	|	втНачисленнаяАмортизацияДокумента.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ КАК СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ КАК СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР КАК СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втСтоимостиРегл.Сумма, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втНачисленнаяАмортизацияДокумента.СуммаБУ / втСтоимостиРегл.Сумма
	|	КОНЕЦ КАК Коэффициент,
	|	втНачисленнаяАмортизацияДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизацияДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРегл КАК втСтоимостиРегл
	|		ПО втНачисленнаяАмортизацияДокумента.ОбъектУчета = втСтоимостиРегл.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыДокумента";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета,
	|	ТабличнаяЧасть.СуммаСписанияБУ КАК СуммаЧастичнойЛиквидации
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.НематериальныйАктив,
	|	Операция.СуммаСписанияБУ
	|ИЗ
	|	Документ.СписаниеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство,
	|	0
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.НематериальныйАктив,
	|	0
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыУчета";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыУчета
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.ОбъектУчета В
	|				(ВЫБРАТЬ
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыДокумента КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.ОбъектУчета
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втПараметрыОбъектовУчета";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втПараметрыОбъектовУчета
	|"+
	"ВЫБРАТЬ
	|	втОбъектыУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ОбъектыЭксплуатации.НаправлениеДеятельности, ЕСТЬNULL(НематериальныеАктивы.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.СчетУчета, ЕСТЬNULL(СчетаБухгалтерскогоУчетаНМА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации, ЕСТЬNULL(СчетаБухгалтерскогоУчетаНМА.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизации,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования, ЛОЖЬ)) КАК ПрименениеЦелевогоФинансирования,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СчетУчета, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СчетАмортизации, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизацииЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СтатьяДоходов, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))) КАК СтатьяДоходовЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.АналитикаДоходов, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.АналитикаДоходов, НЕОПРЕДЕЛЕНО)) КАК АналитикаДоходовЦФ
	|ПОМЕСТИТЬ втПараметрыОбъектовУчета
	|ИЗ
	|	втОбъектыУчета КАК втОбъектыУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО втОбъектыУчета.ОбъектУчета = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО втОбъектыУчета.ОбъектУчета = НематериальныеАктивы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК СчетаБухгалтерскогоУчетаОС
	|		ПО втОбъектыУчета.ОбъектУчета = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК СчетаБухгалтерскогоУчетаНМА
	|		ПО втОбъектыУчета.ОбъектУчета = СчетаБухгалтерскогоУчетаНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПараметрыЦелевогоФинансированияОС
	|		ПО втОбъектыУчета.ОбъектУчета = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|			И (ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПараметрыЦелевогоФинансированияНМА
	|		ПО втОбъектыУчета.ОбъектУчета = ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив
	|			И (ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаМестонахожденияОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втМестонахожденияОбъектовУчета";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втМестонахожденияОбъектовУчета
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЕСТЬNULL(ПринятиеКУчетуНМА.Подразделение, ЕСТЬNULL(ВводОстатковНМА.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))) КАК Подразделение
	|ПОМЕСТИТЬ втМестонахожденияОбъектовУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК МестонахождениеОС
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Граница,
	|				Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|					ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|						И Организация = &Организация
	|						И НематериальныйАктив В
	|							(ВЫБРАТЬ
	|								Т.ОбъектУчета
	|							ИЗ
	|								втОбъектыУчета КАК Т)) КАК ПервоначальныеСведенияНМА
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = ПервоначальныеСведенияНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
	|		ПО (ПервоначальныеСведенияНМА.Регистратор = ПринятиеКУчетуНМА.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковНМА
	|		ПО (ПервоначальныеСведенияНМА.Регистратор = ВводОстатковНМА.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втСчетаРеглУчета";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСчетаРеглУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втСчетаРеглУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетАмортизации
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетУчетаЦФ
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|ГДЕ
	|	втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетАмортизацииЦФ
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|ГДЕ
	|	втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОстаткиРеглУчета";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОстаткиРеглУчета
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиРеглУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаНУОстаток,
	|	ХозрасчетныйОстатки.СуммаПРОстаток,
	|	ХозрасчетныйОстатки.СуммаВРОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРеглДанныеДляГруппировки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРеглДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма КАК Сумма,
	|	втОстаткиРеглУчета.СуммаНУ КАК СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР КАК СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР КАК СуммаВР
	|ПОМЕСТИТЬ втСтоимостиРеглДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчетаЦФ = втОстаткиРеглУчета.Счет
	|			И втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизацииЦФ = втОстаткиРеглУчета.Счет
	|			И втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРегл";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРегл
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаПР) КАК СуммаПР,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втСтоимостиРегл
	|ИЗ
	|	втСтоимостиРеглДанныеДляГруппировки КАК втСтоимостиРеглДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивыДанные";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Организация КАК Организация,
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеАктивыПассивыОстатки.Статья КАК Статья,
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК Аналитика,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&КонецМесяца,
	|			Организация = &Организация
	|				И Статья В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|				И (Аналитика, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатков
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика КАК Аналитика,
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивы
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
	|	ПрочиеРасходыОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&КонецМесяца,
	|			СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И Организация = &Организация
	|				И (АналитикаРасходов, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеРасходыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|			И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Регистратор = &Ссылка
	|	И ПрочиеРасходы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Организация = &Организация
	|	И ПрочиеРасходы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеРасходы.Период МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ) И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаУпр) КАК СуммаУпр,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаБезНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходы
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеАктивы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеАктивы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеАктивы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеРасходы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеРасходы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеРасходы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса)
	
	ИмяТаблицы = "втПризнаниеДоходовОтЦФ";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаМестонахожденияОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втПризнаниеДоходовОтЦФ
	|"+
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.Подразделение КАК ПодразделениеАмортизации,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
	|	ЕСТЬNULL(втМестонахожденияОбъектовУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.СтатьяДоходовЦФ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.АналитикаДоходовЦФ, НЕОПРЕДЕЛЕНО) КАК АналитикаДоходов,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаРегл
	|ПОМЕСТИТЬ втПризнаниеДоходовОтЦФ
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втПараметрыОбъектовУчета.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОбъектовУчета КАК втМестонахожденияОбъектовУчета
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втМестонахожденияОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|	И ЕСТЬNULL(втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования, ЛОЖЬ) = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	ЕСТЬNULL(втМестонахожденияОбъектовУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.СтатьяДоходовЦФ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.АналитикаДоходовЦФ, НЕОПРЕДЕЛЕНО)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРеглДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРеглДанныеДляГруппировки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРеглДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРеглДанныеДляГруппировки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЦелевоеФинансирование)),
	|			,
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.ОбъектУчета
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.ПодразделениеДт,
	|	Хозрасчетный.НаправлениеДеятельностиДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО Хозрасчетный.ПодразделениеДт = втПризнаниеДоходовОтЦФ.Подразделение
	|			И (ХозрасчетныйСубконто.Значение = втПризнаниеДоходовОтЦФ.ОбъектУчета)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Граница,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.ОбъектУчета
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.ПодразделениеДт,
	|	Хозрасчетный.НаправлениеДеятельностиДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО Хозрасчетный.ПодразделениеДт = втПризнаниеДоходовОтЦФ.Подразделение
	|			И (ХозрасчетныйСубконто.Значение = втПризнаниеДоходовОтЦФ.ОбъектУчета)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРегл";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваРеглДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРегл
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втЦелевыеСредстваРеглДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРегл
	|ИЗ
	|	втЦелевыеСредстваРеглДанныеДляГруппировки КАК втЦелевыеСредстваРеглДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.Подразделение,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.НаправлениеДеятельности,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРеглСгруппированныеПоНаправлениям";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваРегл.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваРегл.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втЦелевыеСредстваРегл.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|ИЗ
	|	втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваРегл.Подразделение,
	|	втЦелевыеСредстваРегл.НаправлениеДеятельности";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваУпрДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваУпрДанныеДляГруппировки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваУпрДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	-ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваУпрДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&КонецМесяца,
	|			Организация = &Организация
	|				И Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|				И (Подразделение, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивыОстатки.СуммаОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ -ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО ПрочиеАктивыПассивы.Подразделение = втПризнаниеДоходовОтЦФ.Подразделение
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПризнаниеДоходовОтЦФ.НаправлениеДеятельности
	|			И (ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование))
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И ПрочиеАктивыПассивы.Организация = &Организация";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваУпр";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваУпрДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваУпр
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втЦелевыеСредстваУпрДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваУпр
	|ИЗ
	|	втЦелевыеСредстваУпрДанныеДляГруппировки КАК втЦелевыеСредстваУпрДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.Подразделение,
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.НаправлениеДеятельности";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектовДанныеДляГруппировки";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектовДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма КАК ВосстановительнаяСтоимостьБУ,
	|	втОстаткиРеглУчета.СуммаНУ КАК ВосстановительнаяСтоимостьНУ,
	|	втОстаткиРеглУчета.СуммаПР КАК ВосстановительнаяСтоимостьПР,
	|	втОстаткиРеглУчета.СуммаВР КАК ВосстановительнаяСтоимостьВР,
	|	0 КАК НакопленнаяАмортизацияБУ,
	|	0 КАК НакопленнаяАмортизацияНУ,
	|	0 КАК НакопленнаяАмортизацияПР,
	|	0 КАК НакопленнаяАмортизацияВР,
	|	0 КАК ВосстановительнаяСтоимостьБУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьНУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьПРЦФ,
	|	0 КАК ВосстановительнаяСтоимостьВРЦФ,
	|	0 КАК НакопленнаяАмортизацияБУЦФ,
	|	0 КАК НакопленнаяАмортизацияНУЦФ,
	|	0 КАК НакопленнаяАмортизацияПРЦФ,
	|	0 КАК НакопленнаяАмортизацияВРЦФ,
	|	0 КАК КорректировкаСтоимостиНУ,
	|	0 КАК КорректировкаСтоимостиПР,
	|	0 КАК КорректировкаСтоимостиВР
	|	
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектовДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	-втОстаткиРеглУчета.Сумма,
	|	-втОстаткиРеглУчета.СуммаНУ,
	|	-втОстаткиРеглУчета.СуммаПР,
	|	-втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчетаЦФ = втОстаткиРеглУчета.Счет
	|			И (втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	-втОстаткиРеглУчета.Сумма,
	|	-втОстаткиРеглУчета.СуммаНУ,
	|	-втОстаткиРеглУчета.СуммаПР,
	|	-втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизацииЦФ = втОстаткиРеглУчета.Счет
	|			И (втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.НачислятьИзнос
	|	И НЕ втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства
	|	И (&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.НачислятьИзнос
	|	И втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства
	|	И (&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втОстаткиРеглУчета.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектов";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектов
	|"+
	"ВЫБРАТЬ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) КАК ВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) КАК ВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) КАК ВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) КАК ВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК НакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК НакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК НакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК НакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК ОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК ОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК ОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК ОстаточнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ВосстановительнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ВосстановительнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ВосстановительнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ВосстановительнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК НакопленнаяАмортизацияБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК НакопленнаяАмортизацияНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК НакопленнаяАмортизацияПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК НакопленнаяАмортизацияВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ОстаточнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ОстаточнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ОстаточнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ОстаточнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ПолнаяВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ПолнаяВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ПолнаяВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ПолнаяВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяНакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяНакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяНакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяНакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяОстаточнаяСтоимостьВР,
	|
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиНУ) КАК КорректировкаСтоимостиНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиПР) КАК КорректировкаСтоимостиПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиВР) КАК КорректировкаСтоимостиВР,
	|
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ))
	|	КОНЕЦ КАК ДоляБУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ))
	|	КОНЕЦ КАК ДоляНУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ))
	|	КОНЕЦ КАК ДоляПРЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ))
	|	КОНЕЦ КАК ДоляВРЦФ
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектов
	|ИЗ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки КАК втТекущееСостояниеОбъектовДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_Движения

Функция РазделительЗапросовВОбъединении()
	
	Возврат Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияРеглСтоимости() Экспорт
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаСНДСРегл,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаБезНДСРегл,
	|	втНачисленнаяАмортизация.СуммаПР КАК ПостояннаяРазница,
	|	втНачисленнаяАмортизация.СуммаВР КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	НЕ втНачисленнаяАмортизация.НачислятьИзнос
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втАмортизацияУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаСНДС,
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаБезНДС,
	|	втАмортизацияУпрПрочиеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	втАмортизацияУпрПрочиеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	втАмортизацияУпрПрочиеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДС,
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|";
	
КонецФункции

Функция ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))КАК СуммаБезНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|";
	
КонецФункции


Функция ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	втНачисленнаяАмортизация.СуммаПР КАК ПостояннаяРазница,
	|	втНачисленнаяАмортизация.СуммаВР КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	НЕ втНачисленнаяАмортизация.НачислятьИзнос
	|";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА((втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК Сумма,
	|	СУММА((втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА((втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК Сумма,
	|	СУММА((втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции


Функция ПрочиеДоходы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеДоходы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	
	|	0 КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	0 КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|	
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.ПодразделениеАмортизации КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втЦелевыеСредстваРегл.Сумма - втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихДоходовРасходов";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеАктивыПассивы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	0 КАК Сумма
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втАмортизацияУпрПрочиеАктивы.Статья КАК Статья,
	|	втАмортизацияУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Сумма КАК Сумма
	|ИЗ
	|	втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|	* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0) / ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка) КАК Аналитика,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	ЗНАЧЕНИЕ(Перечисление.СтатьиБезАналитики.ПустаяСсылка) КАК Аналитика,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихАктивовПассивов";
	
КонецФункции

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

Функция СледующийПериодПризнанияВНУЛизинговыхПлатежей(Организация, НачалоПериода) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(НачалоПериода) Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И (ДоговорЛизинга.ДатаОкончанияДействия >= &Период
		|					ИЛИ ДоговорЛизинга.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК СведенияОС
		|ГДЕ
		|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
		|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	Иначе	
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И (ДоговорЛизинга.ДатаОкончанияДействия >= &Период
		|					ИЛИ ДоговорЛизинга.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК СведенияОС
		|ГДЕ
		|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
		|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если НЕ Результат.Пустой() Тогда
		Возврат НачалоПериода;
	КонецЕсли; 

	// Проверим более поздние периоды
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(СведенияОС.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК СведенияОС
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СведенияОС.Организация = &Организация
	|	И СведенияОС.Период >= &Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(СведенияОС.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК СведенияОС
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СведенияОС.Организация = &Организация
	|	И СведенияОС.Период >= &Период";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Период;
	
КонецФункции

// Определяет необходимость расчета амортизации ОС в указанном периоде
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации, Массив - Организация для которой требуется определить необходимость расчета амортизации
//  Период		 - Дата - Период в котором нужно проверить необходимость расчета.
// 
// Возвращаемое значение:
//  Булево - Истина, если требуется расчет амортизации ОС.
//
Функция ТребуетсяАмортизацияОС(Организация, Период) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям) КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.НачислятьАмортизацию";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой()

КонецФункции

// Определяет следующий периода в котором необходимо расчет амортизации ОС
//
// Параметры:
//  Организация		- СправочникСсылка.Организации, Массив - Организация для которой требуется определить необходимость расчета амортизации
//  НачалоПериода	- Дата - Начиная с которого периода нужно проверить необходимость расчета.
// 
// Возвращаемое значение:
//  Дата - Начало периода
//
Функция ЗаданияКРасчетуАмортизацииОСНаСледующийПериод(Организации, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.НачислениеАмортизацииОС) КАК Операция,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация КАК Организация,
	|		&Период КАК Период
	|	ИЗ
	|		РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация В (&Организация)
	|					ИЛИ &ПоВсемОрганизациям) КАК НачислениеАмортизации
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация,
	|		&Период
	|	ИЗ
	|		РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Организация В (&Организация)
	|					ИЛИ &ПоВсемОрганизациям) КАК НачислениеАмортизации
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|		И (НачислениеАмортизации.Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям)
	|		И НачислениеАмортизации.Период >= &Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация,
	|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
	|	ИЗ
	|		РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|		И (НачислениеАмортизации.Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям)
	|		И НачислениеАмортизации.Период >= &Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачислениеАмортизации.Организация) КАК НачислениеАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организации));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции

// Определяет необходимость расчета амортизации НМА в указанном периоде
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации, Массив - Организация для которой требуется определить необходимость расчета амортизации
//  Период		 - Дата - Период в котором нужно проверить необходимость расчета.
// 
// Возвращаемое значение:
//  Булево - Истина, если требуется расчет амортизации НМА.
//
Функция ТребуетсяАмортизацияНМА(Организация, Период) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям) КАК СведенияНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних КАК СостоянияНМА
	|		ПО СведенияНМА.НематериальныйАктив = СостоянияНМА.НематериальныйАктив
	|			И (СведенияНМА.НачислятьАмортизацию)
	|			И (СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|ГДЕ
	|	СведенияНМА.НачислятьАмортизацию
	|	И СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ Результат.Пустой()

КонецФункции

// Определяет следующий периода в котором необходимо расчет амортизации НМА
//
// Параметры:
//  Организация		- СправочникСсылка.Организации, Массив - Организация для которой требуется определить необходимость расчета амортизации
//  НачалоПериода	- Дата - Начиная с которого периода нужно проверить необходимость расчета.
// 
// Возвращаемое значение:
//  Дата - Начало периода
//
Функция ЗаданияКРасчетуАмортизацииНМАНаСледующийПериод(Организации, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.НачислениеАмортизацииНМА) КАК Операция,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация КАК Организация,
	|		&Период КАК Период
	|	ИЗ
	|		РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация В (&Организация)
	|					ИЛИ &ПоВсемОрганизациям) КАК НачислениеАмортизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|					&Период,
	|					Организация В (&Организация)
	|						ИЛИ &ПоВсемОрганизациям) КАК СостоянияНМА
	|			ПО НачислениеАмортизации.НематериальныйАктив = СостоянияНМА.НематериальныйАктив
	|				И НачислениеАмортизации.Организация = СостоянияНМА.Организация
	|				И (НачислениеАмортизации.НачислятьАмортизацию)
	|				И (СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|		И СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НачислениеАмортизации.Организация,
	|		ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)
	|	ИЗ
	|		РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК НачислениеАмортизации
	|	ГДЕ
	|		НачислениеАмортизации.НачислятьАмортизацию
	|		И (НачислениеАмортизации.Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям)
	|		И НачислениеАмортизации.Период >= &Период) КАК НачислениеАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организации));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

Процедура ПолучитьНачислениеАмортизацииДляФормированияЗаданийКЗакрытиюМесяца(ДанныеТаблиц, Регистратор) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация КАК Организация,
	|	НачислениеАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизации.НачислятьАмортизацию
	|ПОМЕСТИТЬ НачислениеАмортизацииОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.Регистратор = &Регистратор
	|	И НачислениеАмортизации.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизации.Организация КАК Организация,
	|	НачислениеАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизации.НачислятьАмортизацию
	|ПОМЕСТИТЬ НачислениеАмортизацииОСНалоговыйУчет
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
	|ГДЕ
	|	НачислениеАмортизации.Регистратор = &Регистратор
	|	И НачислениеАмортизации.Активность";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗафиксироватьРасчетАмортизации(ВыполненныеЗадания, ЗаданияНаСледующийПериод) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задания.Месяц,
	|	Задания.Операция,
	|	Задания.Организация,
	|	Задания.НомерЗадания,
	|	Задания.Документ
	|ИЗ
	|	КэшГраниц КАК Задания";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ВыполненныеЗадания.ВременныеТаблицы;
	Результат = Запрос.Выполнить();
	
	// Очистка записей по которым был выполнен расчет.
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Операция.Установить(Выборка.Операция);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Записать(); 
	КонецЦикла;
	
	// Добавление записей на следующий период
	ТекущийНомерЗадания = ЗакрытиеМесяцаСервер.ТекущийНомерЗадания();
	Для каждого Выборка Из ЗаданияНаСледующийПериод Цикл
		Если ЗначениеЗаполнено(Выборка.Месяц) Тогда
			НоваяЗапись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.НомерЗадания = ТекущийНомерЗадания;
			НоваяЗапись.Записать(Истина);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

//ПОСТУПЛЕНИЕ ОБОРУДОВАНИЯ

Процедура СформироватьДвиженияПоступлениеОборудования(ТаблицаТовары, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПоступлениеОборудования(ТаблицаТовары, ТаблицаРеквизиты);

	Если Параметры.ТаблицаТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	СпособОценкиМПЗ         = Перечисления.СпособыОценки.ПоСредней;
	ВедетсяУчетПоПартиям    = СпособОценкиМПЗ <> Перечисления.СпособыОценки.ПоСредней;
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаТовары Цикл

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = СтрокаТаблицы.Содержание;

		Проводка.СчетДт = СтрокаТаблицы.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Склады", Реквизиты.Склад);
		Если ВедетсяУчетПоПартиям Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Партии", Реквизиты.Регистратор);
		КонецЕсли;

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
		КонецЕсли;

		Проводка.СчетКт = Реквизиты.СчетУчетаРасчетовСКонтрагентом;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаКт.Валютный Тогда
			Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаПРДт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаВРДт = 0;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаПРКт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаВРКт = 0;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыПоступлениеОборудования(ТаблицаТовары, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаТовары

	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"        // <СправочникСсылка.Номенклатура> - поступающий оборудование
	+ "СуммаВзаиморасчетов," // <Число,15,2> - сумма в валюте взаиморасчетов с поставщиком
	+ "СуммаБУ,"             // <Число,15,2> - сумма в рублях
	+ "СуммаНУ,"             // <Число,15,2> - сумма в рублях (НУ)
	+ "Количество,"          // <Число,15,3> - количество поступающего оборудования
	+ "СчетУчета,"           // <ПланСчетовСсылка.Хозрасчетный> - счет учета, на который приходуется оборудование
	+ "Содержание";          // <Строка,150> - содержание проводки

	Параметры.Вставить("ТаблицаТовары", ТаблицаТовары.Скопировать(, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                    // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организация> - организация, в которую поступает оборудование
	+ "Подразделение,"                  // Подразделение, в которое поступает оборудование
	+ "Склад,"                          // <СправочникСсылка.Склады> - склад, на который поступает оборудование
	+ "Контрагент,"                     // <СправочникСсылка.Контрагенты> - поставщик оборудования
	+ "ДоговорКонтрагента,"             // <СправочникСсылка.ДоговорыКонтрагентов> - договор, по которому поступает оборудование
	+ "СчетУчетаРасчетовСКонтрагентом," // <ПланСчетовСсылка.Хозрасчетный> - счет учета расчетов с поставщиком, обычно 60.01
	+ "ВалютаВзаиморасчетов";           // <СправочникСсылка.Валюты> - валюта взаиморасчетов с поставщиком

	Параметры.Вставить("Реквизиты", ТаблицаРеквизиты.Скопировать(, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПОСТУПЛЕНИЕ ОБЪЕКТОВ СТРОИТЕЛЬСТВА

Процедура СформироватьДвиженияПоступлениеОбъектовСтроительства(ТаблицаОбъектыСтроительства, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПоступлениеОбъектовСтроительства(ТаблицаОбъектыСтроительства, ТаблицаРеквизиты);

	Если Параметры.ОбъектыСтроительства.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из Параметры.ОбъектыСтроительства Цикл

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = СтрокаТаблицы.Содержание;

		Проводка.СчетДт = СтрокаТаблицы.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОбъектыСтроительства", СтрокаТаблицы.ОбъектСтроительства);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиЗатрат",         СтрокаТаблицы.СтатьяЗатрат);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СпособыСтроительства", Перечисления.СпособыСтроительства.Подрядный);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;

		Проводка.СчетКт = Реквизиты.СчетУчетаРасчетовСКонтрагентом;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты", Реквизиты.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры", Реквизиты.ДоговорКонтрагента);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаКт.Валютный Тогда
			Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаКт = СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаПРДт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаВРДт = 0;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаПРКт = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНУ;
				Проводка.СуммаВРКт = 0;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыПоступлениеОбъектовСтроительства(ТаблицаОбъектыСтроительства, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ОбъектыСтроительства

	СписокОбязательныхКолонок = ""
	+ "ОбъектСтроительства," // <СправочникСсылка.ОбъектыСтроительства> - объект строительства, на который относятся затраты
	+ "СтатьяЗатрат,"        // <СправочникСсылка.СтатьиЗатрат>
	+ "СуммаВзаиморасчетов," // <Число,15,2> - сумма в валюте взаиморасчетов с поставщиком
	+ "СуммаБУ,"             // <Число,15,2> - сумма в рублях
	+ "СуммаНУ,"             // <Число,15,2> - сумма в рублях (НУ)
	+ "СчетУчета,"           // <ПланСчетовСсылка.Хозрасчетный> - счет учета, на который относятся затраты
	+ "Содержание";          // <Строка,150> - содержание проводки

	Параметры.Вставить("ОбъектыСтроительства", ТаблицаОбъектыСтроительства.Скопировать(, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                    // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организация> - организация, в которую поступает товар
	+ "Подразделение,"                  // Подразделение, в которое поступает товар
	+ "Склад,"                          // <СправочникСсылка.Склады> - склад, на который поступает товар
	+ "Контрагент,"                     // <СправочникСсылка.Контрагенты> - поставщик товара
	+ "ДоговорКонтрагента,"             // <СправочникСсылка.ДоговорыКонтрагентов> - договор, по которому поступает товар
	+ "СчетУчетаРасчетовСКонтрагентом," // <ПланСчетовСсылка.Хозрасчетный> - счет учета расчетов с поставщиком, обычно 60.01
	+ "ВалютаВзаиморасчетов";           // <СправочникСсылка.Валюты> - валюта взаиморасчетов с поставщиком

	Параметры.Вставить("Реквизиты", ТаблицаРеквизиты.Скопировать(, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПРИНЯТИЕ К УЧЕТУ ОС - ОБЪЕКТЫ СТРОИТЕЛЬСТВА

Процедура СформироватьДвиженияПринятиеКУчетуОСОбъектыСтроительства(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПринятиеКУчетуОСОбъектыСтроительства(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18          = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из ТаблицаОС Цикл

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание = НСтр("ru = 'Принят к учету объект ОС'");

		Проводка.СчетДт = Реквизиты.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.ПодразделениеДт;
		КонецЕсли;

		Проводка.СчетКт = Реквизиты.СчетУчетаВнеоборотногоАктива;

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбъектыСтроительства", Реквизиты.ОбъектСтроительства);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.ПодразделениеКт;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРКт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыПринятиеКУчетуОСОбъектыСтроительства(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаБУ,"          // <Число, 15, 2> - стоимость ОС по данным бухгалтерского учета
	+ "СуммаНУ,"          // <Число, 15, 2> - стоимость ОС по данным налогового учета
	+ "СуммаПР,"          // <Число, 15, 2> - постоянные разницы в стоимости ОС (ПБУ 18/02)
	+ "СуммаВР";          // <Число, 15, 2> - временные разницы в стоимости ОС (ПБУ 18/02)

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                       // <Дата>
	+ "ОбъектСтроительства,"          // <СправочникСсылка.ОбъектыСтроительства> - объект строительства с которого
	                                  // списывается стоимость ОС
	+ "Организация,"                  // <СправочникСсылка.Организации>
	+ "ПодразделениеДт,"              // 
	+ "ПодразделениеКт,"              // 
	+ "Регистратор,"                  // <ДокументСсылка.*>
	+ "СчетУчета,"                    // <ПланСчетовСсылка.Хозрасчетный> - счет на который принимается к учету ОС
	+ "СчетУчетаВнеоборотногоАктива"; // <ПланСчетовСсылка.Хозрасчетный> - счет учета объекта строительства

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПРИНЯТИЕ К УЧЕТУ ОС - ПО РЕЗУЛЬТАТАМ ИНВЕНТАРИЗАЦИИ

Процедура СформироватьДвиженияПринятиеКУчетуОСПоРезультатамИнвентаризации(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПринятиеКУчетуОСПоРезультатамИнвентаризации(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из ТаблицаОС Цикл

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание = НСтр("ru = 'Принят к учету объект ОС'");

		Проводка.СчетДт = Реквизиты.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.ПодразделениеДт;
		КонецЕсли;

		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", Реквизиты.СтатьяДоходов);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = Реквизиты.ПодразделениеКт;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаБУ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыПринятиеКУчетуОСПоРезультатамИнвентаризации(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаБУ,"          // <Число, 15, 2> - стоимость ОС по данным бухгалтерского учета
	+ "СуммаНУ";          // <Число, 15, 2> - стоимость ОС по данным налогового учета

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"              // <Дата>
	+ "Организация,"         // <СправочникСсылка.Организации>
	+ "ПодразделениеДт,"       // 
	+ "ПодразделениеКт,"       // 
	+ "Регистратор,"         // <ДокументСсылка.*>
	+ "СтатьяДоходов,"       // <СправочникСсылка.ПрочиеДоходыИРасходы> - статья, по которой будет отражена выручка по
	                         // оприходованию объекта ОС
	+ "СчетУчета";           // <ПланСчетовСсылка.Хозрасчетный> - счет учета ОС

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// СПИСАНИЕ ОС НА РАСХОДЫ (НУ) ПРИ ПРИНЯТИИ К УЧЕТУ

Функция ПодготовитьТаблицуСписаниеНаРасходыНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыСписаниеНаРасходыНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете
			ИЛИ Реквизиты.ПорядокВключенияСтоимостиВСоставРасходов <> Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету Тогда
		ТаблицаДляСписания = Параметры.ТаблицаПервоначальныеСведенияОС.СкопироватьКолонки();
	Иначе
		ТаблицаДляСписания = Параметры.ТаблицаПервоначальныеСведенияОС;
	КонецЕсли;

	ТаблицаДляСписания.Колонки.ОсновноеСредство.Имя = "ОбъектУчета";
	ТаблицаДляСписания.Колонки.Добавить("СчетНачисленияАмортизации", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаДляСписания.ЗаполнитьЗначения(Реквизиты.СчетУчета, "СчетНачисленияАмортизации");
	ТаблицаДляСписания.Колонки.Добавить("СуммаАмортизацииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаДляСписания.Колонки.Добавить("СуммаАмортизацииПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаДляСписания.Колонки.Добавить("СуммаАмортизацииВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаДляСписания.Колонки.СуммаНУ.Имя = "СуммаАмортизацииНУ";
	ТаблицаДЛяСписания.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаДляСписания.ЗаполнитьЗначения(Реквизиты.Подразделение, "Подразделение");
	ТаблицаДляСписания.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(5, 0));
	ТаблицаДляСписания.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаДляСписания.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);

	// Распределение стоимости по направлениям.
	ТаблицаЗатратПоАмортизации = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл(
									ТаблицаДляСписания,, Отказ);

	// Определение ПР и ВР.
	Для каждого СтрокаОС Из ТаблицаЗатратПоАмортизации Цикл
		Если Реквизиты.ПорядокПогашенияСтоимостиБУ <> Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации 
				ИЛИ НЕ НалоговыйУчет.ЭтоРасходНаАмортизацию(СтрокаОС.Субконто1, СтрокаОС.Субконто2, СтрокаОС.Субконто3) Тогда
			СтрокаОС.СуммаПР = СтрокаОС.СуммаПР - СтрокаОС.СуммаНУ;
		Иначе
			СтрокаОС.СуммаВР = СтрокаОС.СуммаВР - СтрокаОС.СуммаНУ;
		КонецЕсли;
	КонецЦикла;

	Возврат ТаблицаЗатратПоАмортизации;

КонецФункции

Функция ПодготовитьПараметрыСписаниеНаРасходыНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаНУ";          // <Число, 15, 2> - сумма, относимая на расходы (НУ)

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                   // <Дата>
	+ "Организация,"                              // <СправочникСсылка.Организации>
	+ "Подразделение,"                            // 
	+ "ПорядокВключенияСтоимостиВСоставРасходов," // <ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ> -
		// порядок включения стоимости ОС в состав расходов (НУ)
	+ "ПорядокПогашенияСтоимостиБУ,"              // <ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС> - порядок погашения
		// стоимости ОС
	+ "Регистратор,"                              // <ДокументСсылка.*>
	+ "СчетУчета,"                                // <ПланСчетовСсылка.Хозрасчетный> - счет на котором формируется
		// стоимость ОС
	+ "Содержание,"                              // <Строка, 150>
	+ "ИмяСписка";                               // <Строка>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПРОВЕРКИ ДАННЫХ ОС НА КОРРЕКТНОСТЬ

Процедура ПроверитьСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК ПервоначальныеСведенияОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСБУ.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражалосьВБухгалтерскомУчете,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ КАК ПервоначальныеСведенияОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
	|ГДЕ
	|	ПервоначальныеСведенияОСБУ.ОсновноеСредство ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияБУ = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в бухгалтерском учете по организации <%3>'");

		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ОтражалосьВБухгалтерскомУчете Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияБУ,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.Организация);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;
				
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.ДатаСостояния,
	|	СостоянияОСОрганизаций.Регистратор,
	|	СостоянияОСОрганизаций.Состояние,
	|	СостоянияОСОрганизаций.Организация
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО СостоянияОСОрганизаций.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И (СостоянияОСОрганизаций.ДатаСостояния < &Дата)
	|			И (СостоянияОСОрганизаций.Организация = &Организация)
	|			И (СостоянияОСОрганизаций.Активность = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.ДатаСостояния,
	|	СостоянияОС.Регистратор,
	|	СостоянияОС.Организация,
	|	СостоянияОС.Состояние
	|ПОМЕСТИТЬ ПоследниеСостоянияОС
	|ИЗ
	|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостоянийОС.ДатаСостояния = СостоянияОС.ДатаСостояния
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ПоследниеСостоянияОС.ДатаСостояния,
	|	ПоследниеСостоянияОС.Регистратор,
	|	ПоследниеСостоянияОС.Организация,
	|	ПоследниеСостоянияОС.Состояние
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСостоянияОС КАК ПоследниеСостоянияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПоследниеСостоянияОС.ОсновноеСредство
	|ГДЕ
	|	(ПоследниеСостоянияОС.Состояние ЕСТЬ NULL
	|			ИЛИ ПоследниеСостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл
			Если Выборка.Состояние = Null Тогда
				ШаблонСообщения = НСтр("ru = 'По состоянию на %4.
					|Основное средство <%1 (%2)> не принято к учету в организации <%3>.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
					Выборка.КодОС, Реквизиты.Организация, Формат(Реквизиты.Период, "ДЛФ=D"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			Иначе
				ШаблонСообщения = НСтр("ru = 'Основное средство <%1 (%2)> снято с учета в организации <%3>
					|документом <%4>. Дата состояния: %5'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
					Выборка.КодОС, Реквизиты.Организация, Выборка.Регистратор, Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;

		Возврат;
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <ДокументСсылка.*>
	+ "Регистратор"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("МОЛ", Реквизиты.МОЛ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Подразделение
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|ГДЕ
	|	(МестонахождениеОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ МестонахождениеОСБУ.Подразделение <> &Подразделение
	|			ИЛИ &МОЛ <> НЕОПРЕДЕЛЕНО
	|				И МестонахождениеОСБУ.МОЛ <> &МОЛ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияПодразделение = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в учете в местонахождении <%3>'");
		ШаблонСообщенияМОЛ = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в учете за МОЛ <%3>'");

		Пока Выборка.Следующий() Цикл
			Если Выборка.Подразделение <> Реквизиты.Подразделение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияПодразделение,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.Подразделение);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;

			Если Реквизиты.МОЛ <> Неопределено И Выборка.МОЛ <> Реквизиты.МОЛ Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияМОЛ,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.МОЛ);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "ИмяСписка,"     // <Строка, 0>
	+ "МОЛ,"           // <СправочникСсылка.ФизическиеЛица> - МОЛ, за которым закреплено ОС
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // Подразделение в котором находится ОС
	+ "Регистратор";   // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	СчетаУчетаОС.СчетУчета
	|ИЗ
	|	ТаблицаОС
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	СчетаУчетаОС
	|	ПО
	|		ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|ГДЕ
	|	(СчетаУчетаОС.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ СчетаУчетаОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru = 'Для основного средства <%1 (%2)> не указан счет учета.'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Выборка.ОсновноеСредство, Выборка.КодОС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// РЕГИСТРАЦИЯ СОБЫТИЙ ОС

Процедура СформироватьДвиженияРегистрацияСобытияОС(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРегистрацияСобытияОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	НазваниеДокумента = Реквизиты.Регистратор.Метаданные().Представление();

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.СобытияОСОрганизаций.Добавить();
		Движение.Период            = Реквизиты.Период;
		Движение.ОсновноеСредство  = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация       = Реквизиты.Организация;
		Движение.Событие           = Реквизиты.СобытиеОС;
		Движение.НазваниеДокумента = НазваниеДокумента;
		Движение.НомерДокумента    = Реквизиты.Номер;
		Движение.СуммаЗатратБУ     = СтрокаТаблицы.СуммаЗатратБУ;
		Движение.СуммаЗатратНУ     = СтрокаТаблицы.СуммаЗатратНУ;
		Движение.СуммаЗатратУСН    = СтрокаТаблицы.СуммаЗатратУСН;
	КонецЦикла;

	Движения.СобытияОСОрганизаций.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияСобытияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаЗатратБУ,"    // <Число, 15, 2> - сумма затрат по бухгалтерскому учету при модернизации ОС
	+ "СуммаЗатратНУ,"    // <Число, 15, 2> - сумма затрат по налоговому учету при модернизации ОС
	+ "СуммаЗатратУСН";   // <Число, 15, 2> - сумма затрат по налоговому учету (УСН) при модернизации ОС

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"             // <Дата>
	+ "Номер,"              // <Строка, 0> - номер документа, отразившего событие
	+ "Организация,"        // <СправочникСсылка.Организации>
	+ "СобытиеОС,"          // <СправочникСсылка.СобытияОС> - событие с ОС
	+ "Регистратор";        // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// РЕГИСТРАЦИЯ СОСТОЯНИЯ ОС

Процедура ПроверитьВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация );
	Запрос.УстановитьПараметр("Состояние", Реквизиты.СостояниеОС);
	Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	Запрос.Выполнить();
	
	Если Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКУчету
		Или Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету Тогда
		Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
		Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
		|	СостоянияОСОрганизаций.ДатаСостояния,
		|	ТаблицаОС.НомерСтроки,
		|	СостоянияОСОрганизаций.Регистратор,
		|	СостоянияОСОрганизаций.Состояние,
		|	СостоянияОСОрганизаций.Организация
		|ПОМЕСТИТЬ СостоянияОС
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО СостоянияОСОрганизаций.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|			И (СостоянияОСОрганизаций.ДатаСостояния < &Дата)
		|			И (СостоянияОСОрганизаций.Регистратор <> &Документ)
		|			И (СостоянияОСОрганизаций.Активность = ИСТИНА)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
		|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
		|ИЗ
		|	СостоянияОС КАК СостоянияОС
		|
		|СГРУППИРОВАТЬ ПО
		|	СостоянияОС.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство,
		|	СостоянияОС.ОсновноеСредство.Код КАК КодОС,
		|	СостоянияОС.ДатаСостояния,
		|	СостоянияОС.НомерСтроки КАК НомерСтроки,
		|	СостоянияОС.Регистратор,
		|	СостоянияОС.Организация
		|ИЗ
		|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.ДатаСостояния = СостоянияОС.ДатаСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.ДатаСостояния = ПервоначальныеСведения.Период
		|ГДЕ
		|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|	ИЛИ (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
		|		И ЕСТЬNULL(ПервоначальныеСведения.ДоговорЛизинга, ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			
			ШаблонСообщения = НСтр("ru = 'Основное средство <%1 (%2)> принято к учету в организации <%3>
				|документом <%4>. Дата состояния: %5'");
			
			Пока Выборка.Следующий() Цикл
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
					Выборка.КодОС, Выборка.Организация, Выборка.Регистратор, Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
	ИначеЕсли Реквизиты.СостояниеОС = Перечисления.СостоянияОС.СнятоСУчета Тогда
		ПроверитьСостояниеОСПринятоКУчету(Параметры.ТаблицаОС, Параметры.Реквизиты, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "СостояниеОС," // <ПеречислениеСсылка.СостоянияОС> - состояние ОС, которое требуется установить
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияИзменениеСостоянияОС(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеСостоянияОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.СостоянияОСОрганизаций.Добавить();
		Движение.Период           = Реквизиты.Период;
		Движение.ДатаСостояния    = Реквизиты.Период;
		Движение.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация      = Реквизиты.Организация;
		Движение.Состояние        = Реквизиты.СостояниеОС;
	КонецЦикла;

	Движения.СостоянияОСОрганизаций.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеСостоянияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "Организация,"      // <СправочникСсылка.Организации>
	+ "СостояниеОС";      // <ПеречислениеСсылка.СостоянияОС> - состояние ОС, которое требуется установить

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПЕРВОНАЧАЛЬНЫЕ СВЕДЕНИЯ ОС

Функция ПодготовитьТаблицуПервоначальныеСведенияОС(ТаблицаОС, ТаблицаСписанныеТовары, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПервоначальныеСведенияОС(ТаблицаОС, ТаблицаСписанныеТовары, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ПервоначальныеСведенияОС = Новый ТаблицаЗначений;
	ПервоначальныеСведенияОС.Колонки.Добавить("НомерСтроки");
	ПервоначальныеСведенияОС.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	ПервоначальныеСведенияОС.Колонки.Добавить("ИнвентарныйНомер", ОбщегоНазначения.ОписаниеТипаСтрока(9));
	ПервоначальныеСведенияОС.Колонки.Добавить("СуммаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПервоначальныеСведенияОС.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПервоначальныеСведенияОС.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПервоначальныеСведенияОС.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПервоначальныеСведенияОС.Колонки.Добавить("СуммаУСН", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));

	Если Реквизиты.ИспользоватьСуммыСписания Тогда
		Для каждого СтрокаСписания Из Параметры.ТаблицаСписанныеТовары Цикл
			СтрокаПервоначальнойСтоимости = ПервоначальныеСведенияОС.Добавить();
			СтрокаПервоначальнойСтоимости.СуммаБУ  = СтрокаСписания.СуммаСписания;
			СтрокаПервоначальнойСтоимости.СуммаНУ  = СтрокаСписания.СуммаСписанияНУ;
			СтрокаПервоначальнойСтоимости.СуммаПР  = СтрокаСписания.СуммаСписанияПР;
			СтрокаПервоначальнойСтоимости.СуммаВР  = СтрокаСписания.СуммаСписанияВР;
			СтрокаПервоначальнойСтоимости.СуммаУСН = Реквизиты.СуммаУСН;//для УСН первоначальная стоимость всегда задается в документе

			ЗаполнитьЗначенияСвойств(СтрокаПервоначальнойСтоимости, ТаблицаОС[СтрокаСписания.НомерСтроки - 1]);
		КонецЦикла;
	Иначе
		Для каждого СтрокаОС Из Параметры.ТаблицаОС Цикл
			СтрокаПервоначальнойСтоимости = ПервоначальныеСведенияОС.Добавить();
			СтрокаПервоначальнойСтоимости.СуммаБУ  = Реквизиты.СуммаБУ;
			СтрокаПервоначальнойСтоимости.СуммаНУ  = Реквизиты.СуммаНУ;
			СтрокаПервоначальнойСтоимости.СуммаПР  = Реквизиты.СуммаПР;
			СтрокаПервоначальнойСтоимости.СуммаВР  = Реквизиты.СуммаВР;
			СтрокаПервоначальнойСтоимости.СуммаУСН = Реквизиты.СуммаУСН;

			ЗаполнитьЗначенияСвойств(СтрокаПервоначальнойСтоимости, СтрокаОС);
		КонецЦикла;
	КонецЕсли;

	Возврат ПервоначальныеСведенияОС;

КонецФункции

Функция ПодготовитьПараметрыПервоначальныеСведенияОС(ТаблицаОС, ТаблицаСписанныеТовары, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ИнвентарныйНомер," // <Строка, 9> - инвентарный номер, под которым ОС принимается к учету
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаСписанныеТовары

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0> - номер строки табличной части документа
	+ "СуммаСписания,"    // <Число, 15, 2> - стоимость списанной партии по данным бухгалтерского учета
	+ "СуммаСписанияНУ,"  // <Число, 15, 2> - стоимость списанной партии по данным налогового учета
	+ "СуммаСписанияПР,"  // <Число, 15, 2> - постоянные разницы в стоимости списанной партии (ПБУ 18/02)
	+ "СуммаСписанияВР";  // <Число, 15, 2> - временные разницы в стоимости списанной партии (ПБУ 18/02)

	Параметры.Вставить("ТаблицаСписанныеТовары",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаСписанныеТовары, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "ИспользоватьСуммыСписания,"    // <Булево> - использовать стоимость списанных партий для определения стоимости ОС
	+ "СуммаБУ,"                      // <Число, 15, 2> - стоимость ОС по данным бухгалтерского учета
	+ "СуммаНУ,"                      // <Число, 15, 2> - стоимость ОС по данным налогового учета
	+ "СуммаПР,"                      // <Число, 15, 2> - постоянные разницы в стоимости ОС (ПБУ 18/02)
	+ "СуммаВР,"                      // <Число, 15, 2> - временные разницы в стоимости ОС (ПБУ 18/02)
	+ "СуммаУСН";                     // <Число, 15, 2> - стоимость ОС по данным УСН

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияРегистрацияПервоначальныхСведенийОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаПервоначальныеСведенияОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаПервоначальныеСведенияОС Цикл
		Движение = Движения.ПервоначальныеСведенияОСБухгалтерскийУчет.Добавить();
		Движение.Период                      = Реквизиты.Период;
		Движение.ОсновноеСредство            = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация                 = Реквизиты.Организация;
		Движение.ПервоначальнаяСтоимость     = СтрокаТаблицы.СуммаБУ;
		Движение.ПорядокПогашенияСтоимости   = Реквизиты.ПорядокПогашенияСтоимости;
		Движение.СпособНачисленияАмортизации = Реквизиты.СпособНачисленияАмортизации;
		Движение.СпособПоступления           = Реквизиты.СпособПоступления;
		Движение.ИнвентарныйНомер            = СтрокаТаблицы.ИнвентарныйНомер;
		Движение.ПоказательНаработки         = Реквизиты.ПоказательНаработки;
	КонецЦикла;

	Движения.ПервоначальныеСведенияОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОС

	СписокОбязательныхКолонок = ""
	+ "ИнвентарныйНомер," // <Строка, 9> - инвентарный номер, под которым ОС принимается к учету
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаБУ";          // <Число, 15, 2> - стоимость ОС по данным бухгалтерского учета

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                      // <Дата>
	+ "Организация,"                 // <СправочникСсылка.Организации>
	+ "ПоказательНаработки,"           // <СправочникСсылка.ПоказателиНаработки> - параметр для определения выработки ОС
		// за месяц
	+ "ПорядокПогашенияСтоимости,"   // <ПеречислениеСсылка.ПорядокПогашенияСтоимостиОС> - порядок погашения стоимости ОС
		// по бухгалтерскому учету
	+ "СпособНачисленияАмортизации," // <ПеречислениеСсылка.СпособыНачисленияАмортизацииОС> - способ начисления
		// амортизации ОС по бухгалтерскому учету
	+ "СпособПоступления";           // <ПеречислениеСсылка.СпособыПоступленияАктивов> - способ поступления ОС

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуПервоначальныеСведенияОСНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПервоначальныеСведенияОСНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если ОтражатьВНалоговомУчете
			И Реквизиты.ПорядокВключенияСтоимостиВСоставРасходов <> Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы Тогда
		ТаблицаПервоначальныеСведенияОСНУ = Параметры.ТаблицаПервоначальныеСведенияОС.Скопировать();
	Иначе
		ТаблицаПервоначальныеСведенияОСНУ = Параметры.ТаблицаПервоначальныеСведенияОС.СкопироватьКолонки();
	КонецЕсли;

	Возврат ТаблицаПервоначальныеСведенияОСНУ;

КонецФункции

Функция ПодготовитьПараметрыПервоначальныеСведенияОСНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаНУ,"          // <Число, 0, 0> - стоимость ОС по данным налогового учета
	+ "СуммаПР";          // <Число, 0, 0> - стоимость ОС по данным налогового учета

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                   // <Дата>
	+ "Организация,"                              // <СправочникСсылка.Организации>
	+ "ПорядокВключенияСтоимостиВСоставРасходов," // <ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ> -
	                                              // порядок включения стоимости ОС в состав расходов по налоговому учету
	+ "СрокПолезногоИспользования";               // <Число, 4, 0> - срок полезного использования для целей
	                                              // начисления амортизации по налоговому учету

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияРегистрацияПервоначальныхСведенийОСНУ(ТаблицаПервоначальныеСведенияОСНУ, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСНУ(ТаблицаПервоначальныеСведенияОСНУ, ТаблицаРеквизиты);

	Если Параметры.ТаблицаПервоначальныеСведенияОСНУ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаПервоначальныеСведенияОСНУ Цикл
		Движение = Движения.ПервоначальныеСведенияОСНалоговыйУчет.Добавить();
		Движение.Период                                   = Реквизиты.Период;
		Движение.ОсновноеСредство                         = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация                              = Реквизиты.Организация;
		Движение.ПорядокВключенияСтоимостиВСоставРасходов = Реквизиты.ПорядокВключенияСтоимостиВСоставРасходов;
		Движение.ПервоначальнаяСтоимостьНУ                = СтрокаТаблицы.СуммаНУ;
	КонецЦикла;

	Движения.ПервоначальныеСведенияОСНалоговыйУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСНУ(ТаблицаПервоначальныеСведенияОСНУ, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОСНУ

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаНУ";          // <Число, 15, 2> - первоначальная стоимость ОС по данным налогового учета

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОСНУ",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОСНУ, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                   // <Дата>
	+ "Организация,"                              // <СправочникСсылка.Организации>
	+ "ПорядокВключенияСтоимостиВСоставРасходов," // <ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ> -
		// порядок включения стоимости ОС в состав расходов по налоговому учету
	+ "СрокПолезногоИспользования";               // <Число, 4, 0> - срок полезного использования ОС для целей начисления
		// амортизации по налоговому учету

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуПервоначальныеСведенияОСУСН(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПервоначальныеСведенияОСУСН(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчетеУСН = УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период);
	
	Если ОтражатьВНалоговомУчетеУСН Тогда
		ТаблицаПервоначальныеСведенияОСУСН = Параметры.ТаблицаПервоначальныеСведенияОСУСН.Скопировать();
	Иначе
		ТаблицаПервоначальныеСведенияОСУСН = Параметры.ТаблицаПервоначальныеСведенияОСУСН.СкопироватьКолонки();
	КонецЕсли;

	Возврат ТаблицаПервоначальныеСведенияОСУСН;

КонецФункции

Функция ПодготовитьПараметрыПервоначальныеСведенияОСУСН(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОСУСН

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаУСН";         // <Число, 0, 0> - стоимость ОС по данным УСН

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОСУСН",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                      // <Дата>
	+ "Организация,"                                 // <СправочникСсылка.Организации>
	+ "ПорядокВключенияСтоимостиВСоставРасходовУСН," // <ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН> -
	                                                 // порядок включения стоимости ОС в состав расходов по УСН
	+ "ДатаПриобретения,"							 // <Дата> Дата приобретения ОС					 
	+ "СрокПолезногоИспользованияУСН";               // <Число, 4, 0> - срок полезного использования для целей
	                                                 // начисления амортизации по УСН

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияРегистрацияПервоначальныхСведенийОСУСН(ТаблицаПервоначальныеСведенияОСУСН, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСУСН(ТаблицаПервоначальныеСведенияОСУСН, ТаблицаРеквизиты);

	Если Параметры.ТаблицаПервоначальныеСведенияОСУСН.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчетеУСН = Ложь;

	Если НЕ ОтражатьВНалоговомУчетеУСН Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаПервоначальныеСведенияОСУСН Цикл
		Движение = Движения.ПервоначальныеСведенияОСНалоговыйУчетУСН.Добавить();
		Движение.Период                     = Реквизиты.Период;
		Движение.ОсновноеСредство           = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация                = Реквизиты.Организация;
		Движение.ПервоначальнаяСтоимостьУСН = СтрокаТаблицы.СуммаУСН;
		Движение.СрокПолезногоИспользования = Реквизиты.СрокПолезногоИспользованияУСН;
		Движение.ДатаПриобретения           = Реквизиты.ДатаПриобретения;
		Движение.ПорядокВключенияСтоимостиВСоставРасходовУСН = Реквизиты.ПорядокВключенияСтоимостиВСоставРасходовУСН;
	КонецЦикла;

	Движения.ПервоначальныеСведенияОСНалоговыйУчетУСН.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияПервоначальныхСведенийОСУСН(ТаблицаПервоначальныеСведенияОСУСН, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОСУСН

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаУСН";         // <Число, 0, 0> - стоимость ОС по данным УСН

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОСУСН",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОСУСН, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                      // <Дата>
	+ "Организация,"                                 // <СправочникСсылка.Организации>
	+ "ПорядокВключенияСтоимостиВСоставРасходовУСН," // <ПеречислениеСсылка.ПорядокВключенияСтоимостиОСиНМАВСоставРасходовУСН> -
	                                                 // порядок включения стоимости ОС в состав расходов по УСН
	+ "ДатаПриобретения,"							 // <Дата> Дата приобретения ОС					 
	+ "СрокПолезногоИспользованияУСН";               // <Число, 4, 0> - срок полезного использования для целей
	                                                 // начисления амортизации по УСН

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

//РЕГИСТРАЦИЯ ОПЛАТЫ ОС УСН

Процедура СформироватьДвиженияРегистрацияОплатОсновныхСредствДляУСН(ТаблицаОплатыОсновныхСредствДляУСН, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	Параметры = ПодготовитьПараметрыРегистрацияОплатОсновныхСредствДляУСН(ТаблицаОплатыОсновныхСредствДляУСН, ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчетеУСН = Ложь;
	
	Если ОтражатьВНалоговомУчетеУСН Тогда
		Для каждого СтрокаТаблицы Из Параметры.ТаблицаРегистрацияОплатыОсновныхСредствДляУСН Цикл
			Движение  = Движения.ОплатыОСДляУСН.Добавить();
			Движение.Период           = СтрокаТаблицы.ДатаОплаты;
			Движение.Организация      = Реквизиты.Организация;
			Движение.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
			Движение.ДатаОплаты       = СтрокаТаблицы.ДатаОплаты;
			Движение.СуммаОплаты      = СтрокаТаблицы.СуммаОплаты;
		КонецЦикла;
		
		Движения.ОплатыОСДляУСН.Записывать = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияОплатОсновныхСредствДляУСН(ТаблицаОплатыОсновныхСредствДляУСН, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаРегистрацииОплатыОсновныхСредствДляУСН

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "ДатаОплаты,"		  // <Дата> - дата оплаты ОС по данным УСН
	+ "СуммаОплаты";      //<Число, 0, 0> - сумма оплаты ОС по данным УСН

	Параметры.Вставить("ТаблицаРегистрацияОплатыОсновныхСредствДляУСН",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОплатыОсновныхСредствДляУСН, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                      // <Дата>
	+ "Организация";                                 // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// МЕСТОНАХОЖДЕНИЕ ОС

Процедура СформироватьДвиженияИзменениеМестонахожденияОСБУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеМестонахожденияОСБУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.МестонахождениеОСБухгалтерскийУчет.Добавить();
		Движение.Период           = Реквизиты.Период;
		Движение.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация      = Реквизиты.Организация;
		Движение.Местонахождение  = Реквизиты.Местонахождение;
		Движение.МОЛ              = Реквизиты.МОЛ;
	КонецЦикла;

	Движения.МестонахождениеОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеМестонахожденияОСБУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"          // <Дата>
	+ "Местонахождение," // 
	+ "МОЛ,"             // <СправочникСсылка.ФизическиеЛица> - МОЛ, за которым закреплено ОС
	+ "Организация";     // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// НАЧИСЛЕНИЕ АМОРТИЗАЦИИ ОС (БУ) (признак)

Процедура СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеПризнакаНачисленияАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.НачислениеАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период               = Реквизиты.Период;
		Движение.ОсновноеСредство     = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация          = Реквизиты.Организация;
		Движение.НачислятьАмортизацию = Реквизиты.НачислятьАмортизацию;
	КонецЦикла;

	Движения.НачислениеАмортизацииОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеПризнакаНачисленияАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"               // <Дата>
	+ "НачислятьАмортизацию," // <Булево> - признак необходимости начисления амортизации по бухгалтерскому учету
	+ "Организация";          // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// НАЧИСЛЕНИЕ АМОРТИЗАЦИИ ОС (НУ) (признак)

Процедура СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСНУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеПризнакаНачисленияАмортизацииОСНУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.НачислениеАмортизацииОСНалоговыйУчет.Добавить();
		Движение.Период               = Реквизиты.Период;
		Движение.ОсновноеСредство     = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация          = Реквизиты.Организация;
		Движение.НачислятьАмортизацию = Реквизиты.НачислятьАмортизацию;
	КонецЦикла;

	Движения.НачислениеАмортизацииОСНалоговыйУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеПризнакаНачисленияАмортизацииОСНУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата>
	+ "НачислятьАмортизацию,"      // <Булево> - признак необходимости начисления амортизации по налоговому учету
	+ "Организация";               // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ОТРАЖЕНИЕ ОС В УЧЕТЕ

Процедура СформироватьДвиженияРегистрацияСчетовБухгалтерскогоУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРегистрацияСчетовБухгалтерскогоУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.СчетаБухгалтерскогоУчетаОС.Добавить();
		Движение.Период                    = Реквизиты.Период;
		Движение.ОсновноеСредство          = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация               = Реквизиты.Организация;
		Движение.СчетУчета                 = Реквизиты.СчетУчета;
		Движение.СчетНачисленияАмортизации = Реквизиты.СчетНачисленияАмортизации;
	КонецЦикла;

	Движения.СчетаБухгалтерскогоУчетаОС.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыРегистрацияСчетовБухгалтерскогоУчетаОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата>
	+ "Организация,"               // <СправочникСсылка.Организации>
	+ "СчетНачисленияАмортизации," // <ПланСчетовСсылка.Хозрасчетный> - счет начисления амортизации ОС
	+ "СчетУчета";                 // <ПланСчетовСсылка.Хозрасчетный> - счет учета ОС

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции


Процедура СформироватьДвиженияИзменениеСпособовОтраженияРасходовПоАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеСпособовОтраженияРасходовПоАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Реквизиты);
		Движение.ОсновноеСредство = СтрокаТаблицы.ОсновноеСредство;
	КонецЦикла;

	Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеСпособовОтраженияРасходовПоАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                // <Дата>
	+ "Организация,"                           // <СправочникСсылка.Организации>
	+ "СтатьяРасходов, АналитикаРасходов";
		// отражения расходов по амортизации ОС

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПАРАМЕТРЫ АМОРТИЗАЦИИ ОС (БУ)

Функция ПодготовитьТаблицуПараметрыАмортизацииОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПараметрыАмортизацииОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаПараметров = Параметры.ТаблицаПервоначальныеСведенияОС.Скопировать();

	ТаблицаПараметров.Колонки.Добавить("КоэффициентАмортизации");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.ГодоваяНормаАмортизации, "КоэффициентАмортизации");
	ТаблицаПараметров.Колонки.Добавить("КоэффициентУскорения");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.КоэффициентУскорения, "КоэффициентУскорения");
	ТаблицаПараметров.Колонки.Добавить("ОбъемПродукцииРабот");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.ПредполагаемыйОбъемПродукции, "ОбъемПродукцииРабот");
	ТаблицаПараметров.Колонки.Добавить("СрокПолезногоИспользования");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.СрокПолезногоИспользования, "СрокПолезногоИспользования");
	ТаблицаПараметров.Колонки.Добавить("СрокИспользованияДляВычисленияАмортизации");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.СрокПолезногоИспользования, "СрокИспользованияДляВычисленияАмортизации");
	ТаблицаПараметров.Колонки.Добавить("ОбъемПродукцииРаботДляВычисленияАмортизации");
	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.ПредполагаемыйОбъемПродукции, "ОбъемПродукцииРаботДляВычисленияАмортизации");
	ТаблицаПараметров.Колонки.СуммаБУ.Имя = "СтоимостьДляВычисленияАмортизации";

	Возврат ТаблицаПараметров;

КонецФункции

Функция ПодготовитьПараметрыПараметрыАмортизацииОСБУ(ТаблицаПервоначальныеСведенияОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаБУ";          // <Число, 15, 2> - стоимость ОС для целей начисления амортизации (БУ)

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "ГодоваяНормаАмортизации,"      // <Число, 4, 2> - годовая норма амортизации для способов начисления амортизации
		// "по ЕНАОФ" и "по ЕНАОФ на 1000 км пробега"
	+ "Период,"                       // <Дата>
	+ "КоэффициентУскорения,"         // <Число, 5, 2> - коэффициент ускорения для способа начисления амортизации
		// "уменьшаемого остатка"
	+ "Организация,"                  // <СправочникСсылка.Организации>
	+ "ПредполагаемыйОбъемПродукции," // <Число, 10, 0> - предполагаемый объем продукции для начисления амортизации
		// способами "по ЕНАОФ на 1000 км пробега" и "пропорционально объему продукции"
	+ "СрокПолезногоИспользования";   // <Число, 4, 0> - срок полезного использования для начисления амортизации способами
		// "линейный", " по сумме чисел лет использования" и "уменьшаемого остатка". Используется  справочно и для других
		// способов

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияИзмененияПараметровАмортизацииОСБУ(ТаблицаПараметров, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзмененияПараметровАмортизацииОСБУ(ТаблицаПараметров, ТаблицаРеквизиты);

	Если Параметры.ТаблицаПараметров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаПараметров Цикл
		Движение = Движения.ПараметрыАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период                                      = Реквизиты.Период;
		Движение.ОсновноеСредство                            = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация                                 = Реквизиты.Организация;
		Движение.КоэффициентАмортизации                      = СтрокаТаблицы.КоэффициентАмортизации;
		Движение.КоэффициентУскорения                        = СтрокаТаблицы.КоэффициентУскорения;
		Движение.ОбъемПродукцииРабот                         = СтрокаТаблицы.ОбъемПродукцииРабот;
		Движение.СрокПолезногоИспользования                  = СтрокаТаблицы.СрокПолезногоИспользования;
		Движение.СрокИспользованияДляВычисленияАмортизации   = СтрокаТаблицы.СрокИспользованияДляВычисленияАмортизации;
		Движение.СтоимостьДляВычисленияАмортизации           = СтрокаТаблицы.СтоимостьДляВычисленияАмортизации;
		Движение.ОбъемПродукцииРаботДляВычисленияАмортизации = СтрокаТаблицы.ОбъемПродукцииРаботДляВычисленияАмортизации;
	КонецЦикла;

	Движения.ПараметрыАмортизацииОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзмененияПараметровАмортизацииОСБУ(ТаблицаПараметров, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПараметров

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"                            // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "КоэффициентАмортизации,"                      // <Число, 4, 2> - годовая норма амортизации для способов начисления
		// амортизации "по ЕНАОФ" и "по ЕНАОФ на 1000 км пробега"
	+ "КоэффициентУскорения,"                        // <Число, 5, 2> - коэффициент ускорения для способа начисления
		// амортизации "уменьшаемого остатка"
	+ "ОбъемПродукцииРабот,"                         // <Число, 10, 0> - предполагаемый объем продукции для начисления
		// амортизации  способами "по ЕНАОФ на 1000 км пробега" и "пропорционально объему продукции".
	+ "ОбъемПродукцииРаботДляВычисленияАмортизации," // <Число, 10, 0> - предполагаемый объем продукции для начисления
		// амортизации  способами "по ЕНАОФ на 1000 км пробега" и "пропорционально объему продукции".
	+ "СрокИспользованияДляВычисленияАмортизации,"   // <Число, 4, 2> - срок полезного использования для начисления
		// амортизации способами "линейный", " по сумме чисел лет использования" и "уменьшаемого остатка". Используется
		// справочно и для других способов.
	+ "СрокПолезногоИспользования,"                  // <Число, 4, 2> - срок полезного использования для начисления
		// амортизации способами "линейный", " по сумме чисел лет использования" и "уменьшаемого остатка". Используется
		// справочно и для других способов.
	+ "СтоимостьДляВычисленияАмортизации";           // <Число, 15, 2> - стоимость ОС для целей начисления амортизации (БУ)

	Параметры.Вставить("ТаблицаПараметров",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПараметров, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                       // <Дата>
	+ "Организация";                  // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции


Процедура СформироватьДвиженияИзменениеГрафиковДляАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеГрафиковДляАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Если НЕ ЗначениеЗаполнено(Реквизиты.ГрафикАмортизации) Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.ГрафикиАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период            = Реквизиты.Период;
		Движение.ОсновноеСредство  = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация       = Реквизиты.Организация;
		Движение.ГрафикАмортизации = Реквизиты.ГрафикАмортизации;
	КонецЦикла;

	Движения.ГрафикиАмортизацииОСБухгалтерскийУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеГрафиковДляАмортизацииОСБУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "ГрафикАмортизации," // <СправочникСсылка.ГодовыеГрафикиАмортизацииОС> - график распределения амортизации по году.
	+ "Период,"            // <Дата>
	+ "Организация";       // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПАРАМЕТРЫ АМОРТИЗАЦИИ ОС (НУ)

Функция ПодготовитьТаблицуПараметрыАмортизацииОСНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаВключенияСтоимостиВРасходы, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПараметрыАмортизацииОСНУ(
		ТаблицаПервоначальныеСведенияОС,
		ТаблицаВключенияСтоимостиВРасходы, 
		ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаПараметров = Параметры.ТаблицаПервоначальныеСведенияОС.Скопировать();

	ТаблицаПараметров.Колонки.Добавить("СрокПолезногоИспользования");
	ТаблицаПараметров.Колонки.СуммаПР.Имя = "ПРДляВычисленияАмортизации";

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат ТаблицаПараметров.СкопироватьКолонки();
	КонецЕсли;

	ТаблицаПараметров.ЗаполнитьЗначения(Реквизиты.СрокПолезногоИспользования, "СрокПолезногоИспользования");

	ТаблицаПР = Параметры.ТаблицаВключенияСтоимостиВРасходы;
	ТаблицаПР.Свернуть("ОбъектУчета", "СуммаПР");

	Для каждого СтрокаОС Из ТаблицаПараметров Цикл
		СтрокаТаблицыПР = ТаблицаПР.Найти(СтрокаОС.ОсновноеСредство, "ОбъектУчета");
		Если СтрокаТаблицыПР <> Неопределено Тогда
			СтрокаОС.ПРДляВычисленияАмортизации = СтрокаОС.ПРДляВычисленияАмортизации - СтрокаТаблицыПР.СуммаПР;
		КонецЕсли
	КонецЦикла;
	
	Возврат ТаблицаПараметров;

КонецФункции

Функция ПодготовитьПараметрыПараметрыАмортизацииОСНУ(ТаблицаПервоначальныеСведенияОС, ТаблицаВключенияСтоимостиВРасходы, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПервоначальныеСведенияОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаПР";          // <Число, 15, 2> - постоянные разницы (ПБУ 18/02) в стоимости ОС для целей начисления
		// амортизации

	Параметры.Вставить("ТаблицаПервоначальныеСведенияОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПервоначальныеСведенияОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаВключенияСтоимостиВРасходы

	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаПР";     // <Число, 15, 2> - постоянные разницы (ПБУ 18/02) в стоимости ОС для целей начисления
		// амортизации

	Параметры.Вставить("ТаблицаВключенияСтоимостиВРасходы",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаВключенияСтоимостиВРасходы, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                     // <Дата>
	+ "Организация,"                // <СправочникСсылка.Организации>
	+ "СрокПолезногоИспользования"; // <Число, 4, 0> - срок полезного использования ОС для целей начисления амортизации по налоговому учету

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияИзменениеПараметровАмортизацииОСНУ(ТаблицаПараметров, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыИзменениеПараметровАмортизацииОСНУ(ТаблицаПараметров, ТаблицаРеквизиты);

	Если Параметры.ТаблицаПараметров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаПараметров Цикл
		Движение = Движения.ПараметрыАмортизацииОСНалоговыйУчет.Добавить();
		Движение.Период                     = Реквизиты.Период;
		Движение.ОсновноеСредство           = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация                = Реквизиты.Организация;
		Движение.СрокПолезногоИспользования = СтрокаТаблицы.СрокПолезногоИспользования;
		Движение.ПРДляВычисленияАмортизации = СтрокаТаблицы.ПРДляВычисленияАмортизации;
	КонецЦикла;

	Движения.ПараметрыАмортизацииОСНалоговыйУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыИзменениеПараметровАмортизацииОСНУ(ТаблицаПараметров, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаПараметров

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"           // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "ПРДляВычисленияАмортизации," // <Число, 0, 0> -  постоянные разницы (ПБУ 18/02) в стоимости ОС для целей начисления
		// амортизации
	+ "СрокПолезногоИспользования"; // <Число, 4, 0> - срок полезного использования ОС для целей начисления амортизации
		// по налоговому учету

	Параметры.Вставить("ТаблицаПараметров",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаПараметров, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияНачислениеАмортизацииОССпециальныйКоэффициентНУ(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыНачислениеАмортизацииОССпециальныйКоэффициентНУ(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Добавить();
		Движение.Период                 = Реквизиты.Период;
		Движение.ОсновноеСредство       = СтрокаТаблицы.ОсновноеСредство;
		Движение.Организация            = Реквизиты.Организация;
		Движение.СпециальныйКоэффициент = СтрокаТаблицы.СпециальныйКоэффициент;
	КонецЦикла;

	Движения.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыНачислениеАмортизацииОССпециальныйКоэффициентНУ(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СпециальныйКоэффициент"; // <Число, 5, 2> - специальный коэффициент для начисления амортизации ОС (НУ)

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ОТРАЖЕНИЕ АМОРТИЗАЦИОННОЙ ПРЕМИИ (проводка на вспомогательный счет)

Функция ПодготовитьТаблицуАмортизационнаяПремия(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыАмортизационнаяПремия(ТаблицаОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаАмортизационнойПремии = Новый ТаблицаЗначений;
	ТаблицаАмортизационнойПремии.Колонки.Добавить("НомерСтроки");
	ТаблицаАмортизационнойПремии.Колонки.Добавить("ОсновноеСредство");
	ТаблицаАмортизационнойПремии.Колонки.Добавить("Сумма",ОбщегоНазначения.ОписаниеТипаЧисло(15,2));

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если Реквизиты.ПроцентАмортизационнойПремии = 0 ИЛИ НЕ ОтражатьВНалоговомУчете Тогда
		Возврат ТаблицаАмортизационнойПремии;
	КонецЕсли;

	Для каждого СтрокаСведений Из Параметры.ТаблицаОС Цикл
		СтрокаПремии = ТаблицаАмортизационнойПремии.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПремии, СтрокаСведений);
		СтрокаПремии.Сумма = СтрокаСведений.СуммаНУ * (Реквизиты.ПроцентАмортизационнойПремии / 100);
	КонецЦикла;

	Возврат ТаблицаАмортизационнойПремии;

КонецФункции

Функция ПодготовитьПараметрыАмортизационнаяПремия(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаНУ";          // <Число, 15, 2> - стоимость ОС по данным налогового учета

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                       // <Дата>
	+ "Организация,"                  // <СправочникСсылка.Организации>
	+ "Подразделение,"                // 
	+ "ПроцентАмортизационнойПремии"; // <Число, 4, 2> - процент от стоимости ОС (НУ) для включения в расходы

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияОтражениеАмортизационнойПремии(ТаблицаАмортизационнойПремии, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыОтражениеАмортизационнойПремии(ТаблицаАмортизационнойПремии, ТаблицаРеквизиты);

	Если Параметры.ТаблицаАмортизационнойПремии.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаАмортизационнойПремии Цикл

		Если СтрокаТаблицы.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание = НСтр("ru = 'Амортизационная премия'");

		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаКапитальныеВложения;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства",
			СтрокаТаблицы.ОсновноеСредство);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыАмортизационнойПремии",
			Реквизиты.Регистратор);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.Подразделение;
		КонецЕсли;

		Проводка.СуммаНУДт = СтрокаТаблицы.Сумма;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыОтражениеАмортизационнойПремии(ТаблицаАмортизационнойПремии, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаАмортизационнойПремии

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "Сумма";            // <Число, 15, 2> - сумма амортизационной премии

	Параметры.Вставить("ТаблицаАмортизационнойПремии",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаАмортизационнойПремии, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // 
	+ "Регистратор";   // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// НАЧИСЛЕНИЕ АМОРТИЗАЦИОННОЙ ПРЕМИИ

Функция ПодготовитьТаблицуСуммАмортизационнойПремии(ТаблицаАмортизации, ТаблицаРеквизиты, Отказ) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСуммАмортизационнойПремии(ТаблицаАмортизации, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ИДКонфигурации = РегламентированнаяОтчетностьПереопределяемый.ИДКонфигурации();

	// Включение амортизационной премии в состав расходов.
	Если Параметры.ТаблицаАмортизации.Итог("СуммаКапитальныхВложенийВключаемыхВРасходы") = 0 Тогда

		ОписаниеТиповСубконто = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип;
		ОписаниеТипаЧисло     = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);

		ТаблицаНачисленияАмортизационнойПремии = Новый ТаблицаЗначений;
		Колонки = ТаблицаНачисленияАмортизационнойПремии.Колонки;
		Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
		Колонки.Добавить("ДокументАмортизационнойПремии", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии.ТипЗначения);
		Колонки.Добавить("СчетУчетаЗатратПоАмортизационнойПремии", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
		Колонки.Добавить("ПодразделениеПоАмортизационнойПремии", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
		Колонки.Добавить("СубконтоПоАмортизационнойПремии1", ОписаниеТиповСубконто);
		Колонки.Добавить("СубконтоПоАмортизационнойПремии2", ОписаниеТиповСубконто);
		Колонки.Добавить("СубконтоПоАмортизационнойПремии3", ОписаниеТиповСубконто);
		Колонки.Добавить("СуммаНУ", ОписаниеТипаЧисло);
		Колонки.Добавить("СуммаПР", ОписаниеТипаЧисло);
		Колонки.Добавить("СуммаВР", ОписаниеТипаЧисло);
		Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());

		Возврат ТаблицаНачисленияАмортизационнойПремии;

	КонецЕсли;

	ТаблицаОС = Новый ТаблицаЗначений;
	ТаблицаОС.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	Для каждого СтрокаТабАмортизации Из Параметры.ТаблицаАмортизации Цикл
		Если СтрокаТабАмортизации.СуммаКапитальныхВложенийВключаемыхВРасходы > 0 Тогда
			СтрокаОС = ТаблицаОС.Добавить();
			СтрокаОС.ОсновноеСредство = СтрокаТабАмортизации.ОбъектУчета;
		КонецЕсли;
	КонецЦикла;

	СубконтоКВ = Новый Массив();
	СубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	СубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаРегистратора", Реквизиты.Период);
	Запрос.УстановитьПараметр("Период",           НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецМесяца",      КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("Организация",      Реквизиты.Организация);
	Запрос.УстановитьПараметр("Регистратор",      Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("СубконтоКВ",       СубконтоКВ);
	Запрос.УстановитьПараметр("ТаблицаОС",        ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ЭтоБАУилиБАУКОРП", (ИДКонфигурации = "БАУ" ИЛИ ИДКонфигурации = "БАУКОРП"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ОбъектыЭксплуатации).Код КАК ОсновноеСредствоКод,
	|	ХозрасчетныйОстатки.Субконто2 КАК ДокументАмортизационнойПремии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияОсновныхСредств) КАК СчетУчетаЗатратПоАмортизационнойПремии,
	|	ХозрасчетныйОстатки.Субконто2.Подразделение КАК ПодразделениеОрганизацииПоАмортизационнойПремии,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоПоАмортизационнойПремии1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоПоАмортизационнойПремии2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоПоАмортизационнойПремии3,
	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК Сумма
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения),
	|			&СубконтоКВ,
	|			Организация = &Организация
	|				И Субконто1 В (&ТаблицаОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ОсновноеСредствоКод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОС.ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииОС.СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовПоАмортизацииОС.СпособОтраженияРасходов
	|ПОМЕСТИТЬ СпособОтраженияРасходов
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&ДатаРегистратора,
	|			Организация = &Организация
	|				И Регистратор <> &Регистратор
	|				И ОсновноеСредство В (&ТаблицаОС)) КАК СпособыОтраженияРасходовПоАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК ПодразделениеОрганизации
	|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&ДатаРегистратора,
	|			Организация = &Организация
	|				И Регистратор <> &Регистратор
	|				И ОсновноеСредство В (&ТаблицаОС)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
	|	ХозрасчетныйОстатки.Сумма КАК СуммаНУ,
	|	ВЫБОР
	|		КОГДА &ЭтоБАУилиБАУКОРП
	|			ТОГДА -ХозрасчетныйОстатки.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА &ЭтоБАУилиБАУКОРП
	|			ТОГДА 0
	|		ИНАЧЕ -ХозрасчетныйОстатки.Сумма
	|	КОНЕЦ КАК СуммаВР,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	СпособОтражения.СпособОтраженияРасходовЗаданДокументом,
	|	СпособОтражения.СпособОтраженияРасходов
	|ПОМЕСТИТЬ ИтоговаяВыборка
	|ИЗ
	|	ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчетСрезПоследних КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО ХозрасчетныйОстатки.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособОтраженияРасходов КАК СпособОтражения
	|		ПО ХозрасчетныйОстатки.ОсновноеСредство = СпособОтражения.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяВыборка.ОсновноеСредство,
	|	ИтоговаяВыборка.ДокументАмортизационнойПремии,
	|	ИтоговаяВыборка.СуммаНУ,
	|	ИтоговаяВыборка.СуммаПР,
	|	ИтоговаяВыборка.СуммаВР,
	|	ИтоговаяВыборка.Подразделение,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.СтатьяРасходовАмортизационнойПремии, ВводОстатков.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходов,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.АналитикаРасходовАмортизационнойПремии, ВводОстатков.АналитикаРасходовАмортизационнойПремии) КАК АналитикаРасходов,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.ПередаватьРасходыВДругуюОрганизацию, ВводОстатков.ПередаватьРасходыВДругуюОрганизацию) КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.ОрганизацияПолучательРасходов, ВводОстатков.ОрганизацияПолучательРасходов) КАК ОрганизацияПолучательРасходов,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.СчетПередачиРасходов, ВводОстатков.СчетПередачиРасходов) КАК СчетПередачиРасходов
	|ИЗ
	|	ИтоговаяВыборка КАК ИтоговаяВыборка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ПО ИтоговаяВыборка.ДокументАмортизационнойПремии = ПринятиеКУчетуОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатков
	|		ПО ИтоговаяВыборка.ДокументАмортизационнойПремии = ВводОстатков.Ссылка
	|ГДЕ
	|	НЕ ИтоговаяВыборка.СпособОтраженияРасходовЗаданДокументом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяВыборка.ОсновноеСредство,
	|	ИтоговаяВыборка.ДокументАмортизационнойПремии,
	|	ИтоговаяВыборка.СуммаНУ,
	|	ИтоговаяВыборка.СуммаПР,
	|	ИтоговаяВыборка.СуммаВР,
	|	ИзменениеПараметровАмортизацииОС.ОтражениеАмортизационныхРасходов.(
	|		Подразделение КАК Подразделение,
	|		СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходов,
	|		АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходов,
	|		ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов КАК СчетПередачиРасходов,
	|		Коэффициент КАК Коэффициент
	|	) КАК ТаблицаРаспределения
	|ИЗ
	|	ИтоговаяВыборка КАК ИтоговаяВыборка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровАмортизацииОС
	|		ПО ИтоговаяВыборка.СпособОтраженияРасходов = ИзменениеПараметровАмортизацииОС.Ссылка
	|ГДЕ
	|	ИтоговаяВыборка.СпособОтраженияРасходовЗаданДокументом";
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда
		
		ПараметрыБлокировки = Новый Структура;
		ПараметрыБлокировки.Вставить("ТипТаблицы", "РегистрБухгалтерии");
		ПараметрыБлокировки.Вставить("ИмяТаблицы", "Хозрасчетный");
		ПараметрыБлокировки.Вставить("ИсточникДанных", ТаблицаОС);
		
		ЗначенияБлокировки = Новый Структура;
		ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, КонецМесяца(Реквизиты.Период)));
		ЗначенияБлокировки.Вставить("Организация", Реквизиты.Организация);
		ЗначенияБлокировки.Вставить("Счет", ПланыСчетов.Хозрасчетный.РасходыНаКапитальныеВложения);
		
		СтруктураИсточникаДанных = Новый Соответствие;
		СтруктураИсточникаДанных.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, "ОсновноеСредство");
		
		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(ПараметрыБлокировки, ЗначенияБлокировки, СтруктураИсточникаДанных);
		
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	
	Если Не Результат[4].Пустой() Тогда
		
		ТаблицаЗатрат = Результат[4].Выгрузить();
		
	КонецЕсли;
	
	Если Не Результат[5].Пустой() Тогда
		
		Если ТаблицаЗатрат.Количество() = 0 Тогда
			ТаблицаЗатрат.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
			ТаблицаЗатрат.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
			ТаблицаЗатрат.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
			ТаблицаЗатрат.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
			ТаблицаЗатрат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
			ТаблицаЗатрат.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
			ТаблицаЗатрат.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
			ТаблицаЗатрат.Колонки.Добавить("ПередаватьРасходыВДругуюОрганизацию", Новый ОписаниеТипов("Булево"));
			ТаблицаЗатрат.Колонки.Добавить("ЭтоЦелевыеСредства", Новый ОписаниеТипов("Булево"));
			ТаблицаЗатрат.Колонки.Добавить("ОрганизацияПолучательРасходов", Новый ОписаниеТипов("СправочникСсылка.Организации"));
			ТаблицаЗатрат.Колонки.Добавить("СчетПередачиРасходов", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
			ТаблицаЗатрат.Колонки.Добавить("ДокументАмортизационнойПремии");
		КонецЕсли;
		
		Выборка = Результат[5].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТаблицаРаспределения = Выборка.ТаблицаРаспределения.Выгрузить();
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			СуммыНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаНУ, МассивКоэффициентов);
			СуммыПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаПР, МассивКоэффициентов);
			СуммыВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаВР, МассивКоэффициентов);
			
			Если СуммыНУ = Неопределено
				И СуммыПР = Неопределено
				И СуммыВР = Неопределено Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Для Индекс=0 По ТаблицаРаспределения.Количество()-1 Цикл
				ПравилоОтражения = ТаблицаРаспределения[Индекс];
				СтрокаТаблицыЗатрат = ТаблицаЗатрат.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Выборка);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ПравилоОтражения);
				СтрокаТаблицыЗатрат.СуммаНУ = ?(СуммыНУ=Неопределено, 0, СуммыНУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаПР = ?(СуммыПР=Неопределено, 0, СуммыПР[Индекс]);
				СтрокаТаблицыЗатрат.СуммаВР = ?(СуммыВР=Неопределено, 0, СуммыВР[Индекс]);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаЗатрат;
	
КонецФункции

Функция ПодготовитьПараметрыСуммАмортизационнойПремии(ТаблицаАмортизации, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаАмортизации

	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"                                // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаКапитальныхВложенийВключаемыхВРасходы"; // <Число, 15, 2> - сумма амортизационной премии по ОС

	Параметры.Вставить("ТаблицаАмортизации",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаАмортизации, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Регистратор,"
	+ "Организация"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, ТаблицаРеквизиты);

	Если Параметры.ТаблицаНачисленияАмортизационнойПремии.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	Перечисления.МетодыНачисленияАмортизации.Линейный;

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаНачисленияАмортизационнойПремии Цикл

		Если СтрокаТаблицы.СуммаНУ = 0 Тогда
			Продолжить;
		КонецЕсли;

		// Списываем амортизационную премию со счета КВ.

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание   = НСтр("ru = 'Амортизационная премия'");

		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.РасходыНаКапитальныеВложения;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства",
			СтрокаТаблицы.ОсновноеСредство);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыАмортизационнойПремии",
			СтрокаТаблицы.ДокументАмортизационнойПремии);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;

		// Начисляем амортизационную премию.

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание = НСтр("ru = 'Амортизационная премия'");

		Проводка.СчетДт = СтрокаТаблицы.СчетУчетаЗатратПоАмортизационнойПремии;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТаблицы.СубконтоПоАмортизационнойПремии1);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.СубконтоПоАмортизационнойПремии2);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СтрокаТаблицы.СубконтоПоАмортизационнойПремии3);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеПоАмортизационнойПремии;
		КонецЕсли;

		Проводка.СчетКт = СтрокаТаблицы.СчетУчета;

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Если СвойстваСчетаДт.НалоговыйУчет Тогда
			Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
				Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
			КонецЕсли;
		КонецЕсли;

		Если СвойстваСчетаКт.НалоговыйУчет Тогда
			Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаПРКт = СтрокаТаблицы.СуммаПР;
				Проводка.СуммаВРКт = СтрокаТаблицы.СуммаВР;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

	// Вызов переопределяемой процедуры для возможности отражения дополнительных движений.
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ВыполнитьДополнительныеДействияНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаНачисленияАмортизационнойПремии

	СписокОбязательныхКолонок = ""
	+ "ДокументАмортизационнойПремии,"          // <ДокументСсылка.*> - документ отражения амортизационной премии
	+ "ОсновноеСредство,"                       // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "Подразделение,"                          // Подразделение, в котором учитывается ОС
	+ "ПодразделениеПоАмортизационнойПремии,"   // Подразделение, в котором требуется учесть расходы по амортизационной премии
	+ "СубконтоПоАмортизационнойПремии1,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто отражения расходов
		// по амортизационной премии
	+ "СубконтоПоАмортизационнойПремии2,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто отражения расходов
		// по амортизационной премии
	+ "СубконтоПоАмортизационнойПремии3,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто отражения расходов
		// по амортизационной премии
	+ "СуммаНУ,"                                // <Число, 15, 2> - сумма амортизационной премии
	+ "СуммаПР,"                                // <Число, 15, 2> - постоянные разницы в оценке суммы амортизационной
		// премии (ПБУ 18/02)
	+ "СуммаВР,"                                // <Число, 15, 2> - временные разницы в оценке суммы амортизационной
		// премии (ПБУ 18/02)
	+ "СчетУчета,"                              // <ПланСчетовСсылка.Хозрасчетный> - счет учета ОС
	+ "СчетУчетаЗатратПоАмортизационнойПремии"; // <ПланСчетовСсылка.Хозрасчетный> - счет учета расходов по амортизационной
		// премии

	Параметры.Вставить("ТаблицаНачисленияАмортизационнойПремии",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаНачисленияАмортизационнойПремии, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// АРЕНДНЫЕ ПЛАТЕЖИ (НУ)

Функция ПодготовитьТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат, КоличествоОбработанныхДанных, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат);

	Реквизиты = Параметры.Реквизиты[0];
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	ТаблицаРасходыПоАренднымПлатежамНУ = ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ();
	ТаблицаЗатратПоАмортизации = Параметры.ТаблицаЗатрат;
	
	ПараметрыРасходовПоАренднымПлатежам = Новый Структура;
	
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРеквизиты", Параметры.Реквизиты);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ", ТаблицаРасходыПоАренднымПлатежамНУ);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаКорректировкаАмортизации", ТаблицаЗатратПоАмортизации);

	Если Не ПлательщикНалогаНаПрибыль Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;
	
	ТаблицаАрендныхПлатежей = ПодготовитьТаблицуАрендныхПлатежей(
								Параметры.ТаблицаОС, Реквизиты, КоличествоОбработанныхДанных, Отказ);
	
	Если Отказ Тогда 
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Оставим в таблице затрат по амортизации только строки, 
	// относящиеся к ОС, полученным в аренду, т.е. учитываемые на субсчетах по аренде.
	Счет02_03 = ПланыСчетов.Хозрасчетный.АмортизацияАрендованногоИмущества;
	
	Инд = ТаблицаЗатратПоАмортизации.Количество() - 1;
	Пока Инд >= 0 Цикл
		СтрокаТаблицы = ТаблицаЗатратПоАмортизации[Инд];
		Если НЕ БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрокаТаблицы.СчетАмортизации, Счет02_03) Тогда
			ТаблицаЗатратПоАмортизации.Удалить(Инд);
		КонецЕсли;
		Инд = Инд - 1;
	КонецЦикла;

	// Если нет арендованных ОС, то больше ничего не делаем.
	Если ТаблицаЗатратПоАмортизации.Количество() + ТаблицаАрендныхПлатежей.Количество() = 0 Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Амортизация по некоторым объектам ОС могла быть рассчитана ранее в течение месяца 
	// при перемещениях ОС, эти суммы необходимо объединить с текущим расчетом.
	МассивОСвАренде = ТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ОсновноеСредство");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивОСвАренде);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",   НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПериода",    КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("Регистратор",     Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("МассивОСвАренде", МассивОСвАренде);
	
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	ИспользуетсяУправлениеВНА_2_4 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период);
	
	ТекстыЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, 
	|				СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&МассивОСвАренде)) КАК СчетаБухгалтерскогоУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, 
	|				СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	СчетаБухгалтерскогоУчетаОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетаБухгалтерскогоУчетаОС.Организация = &Организация
	|	И СчетаБухгалтерскогоУчетаОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (СчетаБухгалтерскогоУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ СчетаБухгалтерскогоУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Если ИспользуетсяУправлениеВНА_2_4 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОС
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&НачалоПериода,
		|			ОсновноеСредство В (&МассивОСвАренде)
		|				И Организация = &Организация) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорКонтрагента
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|ГДЕ
		|	ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПервоначальныеСведенияОС.Организация = &Организация
		|	И ПервоначальныеСведенияОС.ОсновноеСредство В (&МассивОСвАренде)
		|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РанееНачисленнаяАмортизация.ГруппаФинансовогоУчета.СчетУчетаАмортизации КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияРегл) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияНУ) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияВР) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияПР) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрНакопления.АмортизацияОС КАК РанееНачисленнаяАмортизация
		|ГДЕ
		|	РанееНачисленнаяАмортизация.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РанееНачисленнаяАмортизация.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
		|	И РанееНачисленнаяАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РанееНачисленнаяАмортизация.Организация = &Организация
		|   И РанееНачисленнаяАмортизация.ОсновноеСредство В (&МассивОСвАренде)
		|	И РанееНачисленнаяАмортизация.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееНачисленнаяАмортизация.ГруппаФинансовогоУчета.СчетУчетаАмортизации,
		|	РанееНачисленнаяАмортизация.ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПорядокУчетаОСБУ.ОсновноеСредство    КАК ОсновноеСредство,
		|	ПорядокУчетаОСБУ.СтатьяРасходов      КАК СтатьяРасходов,
		|	ПорядокУчетаОСБУ.АналитикаРасходов   КАК АналитикаРасходов,
		|	ПорядокУчетаОСБУ.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка) КАК СпособОтраженияРасходовЗаданДокументом,
		|	ПорядокУчетаОСБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов                                                                
		|ПОМЕСТИТЬ ВТ_СпособыОтраженияРасходовБУ
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В (&МассивОСвАренде)) КАК ПорядокУчетаОСБУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчетаОСБУ.ОсновноеСредство      КАК ОсновноеСредство,
		|	ПорядокУчетаОСБУ.СтатьяРасходов        КАК СтатьяРасходов,
		|	ПорядокУчетаОСБУ.АналитикаРасходов     КАК АналитикаРасходов,
		|	ПорядокУчетаОСБУ.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка) КАК СпособОтраженияРасходовЗаданДокументом,
		|	ПорядокУчетаОСБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов                                                                
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|ГДЕ
		|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПорядокУчетаОСБУ.Организация = &Организация
		|	И ПорядокУчетаОСБУ.ОсновноеСредство В (&МассивОСвАренде)
		|	И ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособОтраженияРасходов";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ДоговорЛизинга КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОС
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&НачалоПериода,
		|			ОсновноеСредство В (&МассивОСвАренде)
		|				И Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорКонтрагента
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОС
		|ГДЕ
		|	ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПервоначальныеСведенияОС.Организация = &Организация
		|	И ПервоначальныеСведенияОС.ОсновноеСредство В (&МассивОСвАренде)
		|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РанееНачисленнаяАмортизация.СчетКт КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.СубконтоКт1 КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.Сумма) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаНУКт) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаВРКт) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаПРКт) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериодаГраница,
		|			Организация = &Организация
		|				И СчетКт В
		|					(ВЫБРАТЬ
		|						СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|					ИЗ
		|						СчетаБухгалтерскогоУчетаОС)
		|				И НЕ СчетДт В
		|						(ВЫБРАТЬ
		|							СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|						ИЗ
		|							СчетаБухгалтерскогоУчетаОС)
		|				И Регистратор <> &Регистратор
		|				И СубконтоКт1 В (&МассивОСвАренде),
		|			,
		|			) КАК РанееНачисленнаяАмортизация
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееНачисленнаяАмортизация.СчетКт,
		|	РанееНачисленнаяАмортизация.СубконтоКт1,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпособыОтраженияРасходовБУ.ОсновноеСредство    КАК ОсновноеСредство,
		|	СпособыОтраженияРасходовБУ.СтатьяРасходов      КАК СтатьяРасходов,
		|	СпособыОтраженияРасходовБУ.АналитикаРасходов   КАК АналитикаРасходов,
		|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
		|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов
		|ПОМЕСТИТЬ ВТ_СпособыОтраженияРасходовБУ
		|ИЗ
		|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|			&НачалоПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В (&МассивОСвАренде)) КАК СпособыОтраженияРасходовБУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СпособыОтраженияРасходовБУ.ОсновноеСредство    КАК ОсновноеСредство,
		|	СпособыОтраженияРасходовБУ.СтатьяРасходов      КАК СтатьяРасходов,
		|	СпособыОтраженияРасходовБУ.АналитикаРасходов   КАК АналитикаРасходов,
		|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
		|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов
		|ИЗ
		|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК СпособыОтраженияРасходовБУ
		|ГДЕ
		|	СпособыОтраженияРасходовБУ.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СпособыОтраженияРасходовБУ.Организация = &Организация
		|	И СпособыОтраженияРасходовБУ.ОсновноеСредство В (&МассивОСвАренде)
		|	И (СпособыОтраженияРасходовБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
		|		ИЛИ СпособыОтраженияРасходовБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособОтраженияРасходов";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|				&НачалоПериода,
	|				Организация = &Организация
	|					И ОсновноеСредство В (&МассивОСвАренде)) КАК МестонахождениеОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И МестонахождениеОС.Организация = &Организация
	|	И МестонахождениеОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовБУ.ОсновноеСредство    КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение              КАК Подразделение,
	|	СпособыОтраженияРасходовБУ.СтатьяРасходов      КАК СтатьяРасходов,
	|	СпособыОтраженияРасходовБУ.АналитикаРасходов   КАК АналитикаРасходов,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ВТ_ПервоначальныеСведенияОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОС КАК ВТ_ПервоначальныеСведенияОС
	|		ПО (ВТ_ПервоначальныеСведенияОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Организация = &Организация)
	|			И (МестонахождениеОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		СтатьяРасходовАмортизационнойПремии,
	|		АналитикаРасходовАмортизационнойПремии,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.Амортизация.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		NULL,
	|		NULL,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		NULL
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РанееНачисленнаяАмортизация.СчетАмортизации,
	|	ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство,
	|	ВТ_ПервоначальныеСведенияОС.Контрагент,
	|	ВТ_ПервоначальныеСведенияОС.ДоговорКонтрагента,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.СтатьяРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.АналитикаРасходов,
	|	ВТ_РанееНачисленнаяАмортизация.Подразделение,
	|	ВТ_ПервоначальныеСведенияОС.НаправлениеДеятельности,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаБУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаНУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаВР,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаПР
	|ИЗ
	|	ВТ_РанееНачисленнаяАмортизация КАК ВТ_РанееНачисленнаяАмортизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОС КАК ВТ_ПервоначальныеСведенияОС
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СпособыОтраженияРасходовБУ КАК ВТ_СпособыОтраженияРасходовБУ
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_СпособыОтраженияРасходовБУ.ОсновноеСредство";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	СпособыОтраженияРасходовБУ = РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выгрузить();
	СпособыОтраженияРасходовБУ.Индексы.Добавить("ОсновноеСредство");
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
	КонецЦикла;
	
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СпособОтраженияРасходовЗаданДокументом Тогда
			
			ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(Выборка.СпособОтраженияРасходов);
		
			МассивБазы = Новый Массив;
			Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
				МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
			КонецЦикла;
			
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаПР, МассивБазы);
				
			Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
				
				СтрокаРаспределения = ТаблицаРаспределения[Сч];
			
				СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
				
				СтрокаТаблицы.СуммаБУ = ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
				СтрокаТаблицы.СуммаНУ = ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
				СтрокаТаблицы.СуммаВР = ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
				СтрокаТаблицы.СуммаПР = ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						
				СтрокаТаблицы.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
				СтрокаТаблицы.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
				СтрокаТаблицы.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
				СтрокаТаблицы.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
			КонецЦикла;
			
		Иначе
			
			СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			СтрокаТаблицы.ПодразделениеЗатрат = Выборка.Подразделение;
			СтрокаТаблицы.НаправлениеДеятельностиЗатрат = Выборка.НаправлениеДеятельности;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗатратПоАмортизации.Свернуть("АналитикаРасходов,ДоговорКонтрагента,Контрагент,
											|НаправлениеДеятельности,НаправлениеДеятельностиЗатрат,
											|ОсновноеСредство,Подразделение,ПодразделениеЗатрат,СтатьяРасходов,СчетАмортизации", 
										"КорректировкаАмортизацииНУ,СуммаБУ,СуммаВР,СуммаНУ,СуммаПР");
	
	// Определим общую сумму платежа в разрезе объекта ОС.
	ТаблицаАрендныхПлатежейПоОС = ТаблицаАрендныхПлатежей.Скопировать(, 
		"ОсновноеСредство, Контрагент, ДоговорКонтрагента,
		|СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	// Добавим в таблицу все ОС из таблицы затрат по амортизации для получения полного списка ОС.
	Для Каждого СтрокаТаблицы Из ТаблицаЗатратПоАмортизации Цикл
		НоваяСтрока = ТаблицаАрендныхПлатежейПоОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	ТаблицаАрендныхПлатежейПоОС.Свернуть("ОсновноеСредство, Контрагент, ДоговорКонтрагента", 
		"СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	ТаблицаЗатратПоАмортизации.Индексы.Добавить("ОсновноеСредство");
	ТаблицаАрендныхПлатежей.Индексы.Добавить("ОсновноеСредство");
		
	СтруктураПоискаОС = Новый Структура("ОсновноеСредство");
	СтруктураПоискаСпособовОтражения = Новый Структура("Ссылка");
	МассивБазы = Новый Массив;
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ТаблицаАрендныхПлатежейПоОС.Количество();
	
	Для Каждого СтрокаТаблицыАрендныхПлатежейПоОС Из ТаблицаАрендныхПлатежейПоОС Цикл
	
		СтруктураПоискаОС.ОсновноеСредство = СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство;
		
		НайденныеСтрокиАмортизации = ТаблицаЗатратПоАмортизации.НайтиСтроки(СтруктураПоискаОС);
		МассивБазы.Очистить();
		СуммаПлатежаНУ = 0;
		АмортизацияБУ = 0;
		АмортизацияНУ = 0;
		АмортизацияВР = 0;
		АмортизацияПР = 0;
		КорректировкаАмортизацииНУ = 0;
		
		Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
			АмортизацияБУ = АмортизацияБУ + НайденнаяСтрокаАмортизации.СуммаБУ;
			АмортизацияНУ = АмортизацияНУ + НайденнаяСтрокаАмортизации.СуммаНУ;
			АмортизацияВР = АмортизацияВР + НайденнаяСтрокаАмортизации.СуммаВР;
			АмортизацияПР = АмортизацияПР + НайденнаяСтрокаАмортизации.СуммаПР;
			МассивБазы.Добавить(НайденнаяСтрокаАмортизации.СуммаНУ);
		КонецЦикла;
		
		СуммаЗадолженностиПоАренде = СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаНачальныйОстаток 
			+ СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаОборотКт;
			
		// Чтобы совокупная величина расходов НУ, состоящая из арендных платежей
		// и амортизации предметов лизинга, не превысила общей суммы выплат по договору, проверяем:
		//  - расходы в НУ относим только в период действия договора (пока задолженность по аренде > 0)
		//  - если амортизация превышает платежи текущего месяца, то суммы превышения относим на ВР или ПР.
		Если ПлательщикНалогаНаПрибыль Тогда
			Если СуммаЗадолженностиПоАренде > 0 Тогда
				СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС - АмортизацияНУ;
				
				Если СуммаПлатежаНУ < 0 Тогда
					Если СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС < 0 Тогда
						// Корректировка арендных платежей в течение месяца, учитываем только ее.
						СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС;
					Иначе
						// Превышение амортизации НУ над суммой арендных платежей.
						// Надо скорректировать сумму амортизации НУ на величину превышения.
						КорректировкаАмортизацииНУ = СуммаПлатежаНУ;

						МассивРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
						Если МассивРаспределения <> Неопределено Тогда
							Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
								
								НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = МассивРаспределения[Инд];
								
							КонецЦикла;
						КонецЕсли;
						СуммаПлатежаНУ = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				// На начало месяца задолженности по аренде не было и в течение месяца
				// задолженность не увеличивалась (ОборотКт), поэтому сумму такой амортизации в НУ не признаем,
				// относим на ПР.
				КорректировкаАмортизацииНУ = - АмортизацияНУ;
				Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
					НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = - НайденныеСтрокиАмортизации[Инд].СуммаНУ;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		МассивБазы.Очистить();
		НайденныеСтрокиПлатежей = ТаблицаАрендныхПлатежей.НайтиСтроки(СтруктураПоискаОС);
		
		СуммаПлатежейБезНДС = 0;
		Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
			СуммаПлатежейБезНДС = СуммаПлатежейБезНДС + НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС;
		КонецЦикла;
		
		Если НайденныеСтрокиПлатежей.Количество() = 0 ИЛИ СуммаПлатежейБезНДС = 0 Тогда
		
			// Платежи по предмету аренды уже закончились, осталась только амортизация.
			// Заполняем данные в таблице для последующей записи в регистр сведений РасчетРасходовПоАренде.
 			НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
 			ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, СтрокаТаблицыАрендныхПлатежейПоОС);
			
			НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= 0;
			НоваяСтрокаРасходов.СуммаПлатежаНУ 	= 0;
			НоваяСтрокаРасходов.АмортизацияБУ 	= АмортизацияБУ;
			НоваяСтрокаРасходов.АмортизацияНУ 	= АмортизацияНУ;
			НоваяСтрокаРасходов.АмортизацияВР 	= АмортизацияВР;
			НоваяСтрокаРасходов.АмортизацияПР 	= АмортизацияПР;
			НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = КорректировкаАмортизацииНУ;
		
		Иначе

			// Распределим вычисленную сумму расходов и амортизации между строками платежей.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				МассивБазы.Добавить(НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС);
			КонецЦикла;
			
			МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияПР, МассивБазы);
			МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				КорректировкаАмортизацииНУ, МассивБазы);

			Для Инд = 0 По НайденныеСтрокиПлатежей.ВГраница() Цикл
				НайденныеСтрокиПлатежей[Инд].СуммаПлатежаНУ = ?(МассивСуммаПлатежаНУ = Неопределено, 0, МассивСуммаПлатежаНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияБУ 	= ?(МассивАмортизацияБУ  = Неопределено, 0, МассивАмортизацияБУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияНУ 	= ?(МассивАмортизацияНУ  = Неопределено, 0, МассивАмортизацияНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияВР 	= ?(МассивАмортизацияВР  = Неопределено, 0, МассивАмортизацияВР[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияПР 	= ?(МассивАмортизацияПР  = Неопределено, 0, МассивАмортизацияПР[Инд]);
				НайденныеСтрокиПлатежей[Инд].КорректировкаАмортизацииНУ = 
					?(МассивКорректировкаАмортизацииНУ = Неопределено, 0, МассивКорректировкаАмортизацииНУ[Инд]);
			КонецЦикла;
		
			// Относим платежи на расходы пропорционально коэффициентам.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				
				СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство, "ОсновноеСредство");
				Если СтрокаСпособОтраженияРасходовБУ <> Неопределено 
					И СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом Тогда
					
					ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходов);
				
					МассивБазы.Очистить();
					Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
						МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
					КонецЦикла;
					
					МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС, МассивБазы);
						
					МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаНУ, МассивБазы);
						
					МассивАмортизацияБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияБУ, МассивБазы);
						
					МассивАмортизацияНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияНУ, МассивБазы);
						
					МассивАмортизацияВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияВР, МассивБазы);
						
					МассивАмортизацияПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияПР, МассивБазы);
						
					МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.КорректировкаАмортизацииНУ, МассивБазы);
						
					Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
						
						СтрокаРаспределения = ТаблицаРаспределения[Сч];
					
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						
						НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= ?(МассивСуммаПлатежаБезНДС <> Неопределено, МассивСуммаПлатежаБезНДС[Сч], 0);
						НоваяСтрокаРасходов.СуммаПлатежаНУ 	= ?(МассивСуммаПлатежаНУ <> Неопределено, МассивСуммаПлатежаНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияБУ 	= ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияНУ 	= ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияВР 	= ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияПР 	= ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = ?(МассивКорректировкаАмортизацииНУ <> Неопределено, МассивКорректировкаАмортизацииНУ[Сч], 0);
						
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
					КонецЦикла; // Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
				
				Иначе
					
					СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(НайденнаяСтрокаПлатежа.ОсновноеСредство, "ОсновноеСредство");
					Если СтрокаСпособОтраженияРасходовБУ <> Неопределено Тогда
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаСпособОтраженияРасходовБУ.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаСпособОтраженияРасходовБУ.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаСпособОтраженияРасходовБУ.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаСпособОтраженияРасходовБУ.НаправлениеДеятельности;
					КонецЕсли; 
					
				КонецЕсли;
				
			КонецЦикла; // Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
		
		КонецЕсли; // Если НайденныеСтрокиПлатежей.Количество() = 0 Тогда
		
	КонецЦикла;	
	
	Возврат ПараметрыРасходовПоАренднымПлатежам;

КонецФункции

Процедура СформироватьДвиженияРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, 
		ТаблицаРеквизиты);

	Если Параметры.Реквизиты.Количество() = 0 
		ИЛИ Параметры.ТаблицаРасходыПоАренднымПлатежамНУ.Количество() = 0 Тогда
		
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаРасходыПоАренднымПлатежамНУ.Свернуть(
		"ОсновноеСредство, Контрагент, ДоговорКонтрагента",
		"АмортизацияБУ, АмортизацияНУ, АмортизацияВР, АмортизацияПР, КорректировкаАмортизацииНУ,
		|СуммаПлатежаБезНДС, СуммаПлатежаНУ");
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасходыПоАренднымПлатежамНУ Цикл
	
		Если СтрокаТаблицы.АмортизацияБУ = 0
			И СтрокаТаблицы.АмортизацияНУ = 0
			И СтрокаТаблицы.АмортизацияВР = 0
			И СтрокаТаблицы.АмортизацияПР = 0
			И СтрокаТаблицы.КорректировкаАмортизацииНУ = 0
			И СтрокаТаблицы.СуммаПлатежаБезНДС = 0
			И СтрокаТаблицы.СуммаПлатежаНУ = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Движение = Движения.РасчетРасходовПоАренде.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		Движение.ПериодРасчета 	= Реквизиты.ДатаРасчета;
		Движение.Организация	= Реквизиты.Организация;
		
	КонецЦикла;
				
	Движения.РасчетРасходовПоАренде.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияРасходыПоАренднымПлатежамНУиКорректировкиАмортизации(ПараметрыРасходыПоАренднымПлатежамНУ, Движения, Отказ) Экспорт

	СформироватьДвиженияРасходыПоАренднымПлатежамНУ(
		ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРасходыПоАренднымПлатежамНУ,
		ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРеквизиты,
		Движения,
		Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаЗатратПоАмортизации
	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"         // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СчетАмортизации,"     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"       // <СправочникСсылка.СтруктураПредприятия>
	+ "ПодразделениеЗатрат," // <СправочникСсылка.СтруктураПредприятия>
	+ "НаправлениеДеятельности,"       // <СправочникСсылка.НаправленияДеятельности>
	+ "НаправлениеДеятельностиЗатрат," // <СправочникСсылка.НаправленияДеятельности>
	+ "СтатьяРасходов,"      // <ПланВидовХарактеристикСсылка.СтатьиРасходов>
	+ "АналитикаРасходов,"   // <Характеристика.СтатьиРасходов>
	+ "Контрагент,"          // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"  // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "Коэффициент,"         // <Число>
	+ "СуммаБУ,"             // <Число(15, 2)>
	+ "СуммаНУ,"             // <Число(15, 2)>
	+ "СуммаВР,"             // <Число(15, 2)>
	+ "СуммаПР";             // <Число(15, 2)>
	
	Параметры.Вставить("ТаблицаЗатрат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаЗатрат, СписокОбязательныхКолонок));
		
	Параметры.ТаблицаЗатрат.Колонки.ОбъектУчета.Имя = "ОсновноеСредство";
	Параметры.ТаблицаЗатрат.Колонки.Добавить("КорректировкаАмортизацииНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	// Подготовка таблицы Параметры.Реквизиты
	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "ИмяСписка,"        // <Строка, 0>
	+ "Организация,"      // <СправочникСсылка.Организации>
	+ "Регистратор,"      // <ДокументСсылка.*>
	+ "ДатаРасчета,"      // <Дата>
	+ "Содержание,"       // <Строка, 0>
	+ "ВыдаватьСообщения" // <Булево>
	; 

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      	// <Дата>
	+ "Организация," 	// <СправочникСсылка.Организации>
	+ "Регистратор," 	// <ДокументСсылка.*>
	+ "ДатаРасчета" 	// <Дата>
	; 

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));


	// Подготовка таблицы Параметры.ТаблицаРасходыПоАренднымПлатежамНУ

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"      	// <СправочникСсылка.Контрагенты>
	+ "Контрагент,"      		// <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"   	// <СправочникСсылка.ДоговорыКонтрагентов>
	+ "АмортизацияБУ," 			// <Число(15, 2)>
	+ "АмортизацияНУ," 			// <Число(15, 2)>
	+ "АмортизацияВР," 			// <Число(15, 2)>
	+ "АмортизацияПР," 			// <Число(15, 2)>
	+ "СуммаПлатежаБезНДС," 	// <Число(15, 2)>
	+ "СуммаПлатежаНУ," 		// <Число(15, 2)>
	+ "КорректировкаАмортизацииНУ" // <Число(15, 2)>
	; 

	Параметры.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРасходыПоАренднымПлатежамНУ, 
			СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыРасходыПоАренднымПлатежамНУ(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "ИмяСписка,"        // <Строка, 0>
	+ "Организация,"      // <СправочникСсылка.Организации>
	+ "Регистратор,"      // <ДокументСсылка.*>
	+ "ДатаРасчета,"      // <Дата>
	+ "Содержание,"       // <Строка, 0>
	+ "ВыдаватьСообщения" // <Булево>
	; 

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));


	// Подготовка таблицы Параметры.ТаблицаРасходыПоАренднымПлатежамНУ

	СписокОбязательныхКолонок = ""
	+ "Контрагент,"                              // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"                      // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "Подразделение,"                           // <Ссылка на справочник подразделений>
	+ "ОсновноеСредство,"                        // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "ПодразделениеРасходовПоАренднымПлатежам," // <Ссылка на справочник подразделений>
	+ "СубконтоРасходовПоАренднымПлатежам1,"     // субконто
	+ "СубконтоРасходовПоАренднымПлатежам2,"     // субконто
	+ "СубконтоРасходовПоАренднымПлатежам3,"     // субконто
	+ "ДокументРасчетовСКонтрагентом,"           // <ДокументСсылка.*>
	+ "СуммаПлатежаНУ"                           // <Число(15, 2)>
	; 

	Параметры.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРасходыПоАренднымПлатежамНУ, 
			СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Функция ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ()

	ОписаниеТиповЧисло15_2     = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	ОписаниеТиповСубконто      = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип;
	ОписаниеТиповПодразделения = БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения();
	ОписаниеТиповХозрасчетный  = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");

	ТаблицаРасходыПоАренднымПлатежамНУ = Новый ТаблицаЗначений;
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ДоговорКонтрагента",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры.ТипЗначения);
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Подразделение", ОписаниеТиповПодразделения);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ПодразделениеЗатрат", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СчетАмортизации", ОписаниеТиповХозрасчетный);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ДокументРасчетовСКонтрагентом", ОписаниеТиповСубконто);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	Возврат ТаблицаРасходыПоАренднымПлатежамНУ;
	
КонецФункции

Функция ПодготовитьТаблицуАрендныхПлатежей(ТаблицаОС, Реквизиты, КоличествоОбработанныхДанных, Отказ)

	ТаблицаАрендныхПлатежей = ПолучитьПустуюТаблицуАрендныхПлатежей();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Период", Реквизиты.Период);
		Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("Период", КонецМесяца(Реквизиты.Период));
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСВсе();
	КонецЕсли;
	Запрос.Выполнить();

	// Определяем суммы арендных платежей без НДС из проводок вида Дт 76.07.1,76.27.1,76.37.1 - Кт 60,76 (с поставщиком)
	// по одному и тому же контрагенту и договору в Дт и Кт.
	
	МассивСчетовЛизинговыеПлатежи = Новый Массив;
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);     // 60
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами); // 76
	
	ВидыСубконтоКонтрагентыДоговоры = Новый Массив;
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос.УстановитьПараметр("МассивСчетовЛизинговыеПлатежи", МассивСчетовЛизинговыеПлатежи);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Реквизиты.Период));
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериода", Реквизиты.Период);
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.Период));
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыДоговоры", ВидыСубконтоКонтрагентыДоговоры);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДоговорыЛизинга.Ссылка КАК Договор,
	|	АналитикаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_ОтборРасчетов
	|ИЗ
	|	Справочник.ДоговорыЛизинга КАК ДоговорыЛизинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО (АналитикаПоПартнерам.Организация = &Организация)
	|			И (АналитикаПоПартнерам.Партнер = ДоговорыЛизинга.Партнер)
	|			И (АналитикаПоПартнерам.Контрагент = ДоговорыЛизинга.Контрагент)
	|			И (АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			И (АналитикаПоПартнерам.НаправлениеДеятельности = ДоговорыЛизинга.НаправлениеДеятельности)
	|ГДЕ
	|	ДоговорыЛизинга.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментам.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментам.Договор КАК ДоговорКонтрагента,
	|	-РасчетыПоФинансовымИнструментам.СуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
	|	РасчетыПоФинансовымИнструментам.СуммаРасход КАК ВалютнаяСуммаОборотКт
	|ПОМЕСТИТЬ ВТ_ЗадолженностьПоАренде
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			,
	|			(АналитикаУчетаПоПартнерам, Договор) В
	|				(ВЫБРАТЬ
	|					ВТ_ОтборРасчетов.КлючАналитики,
	|					ВТ_ОтборРасчетов.Договор
	|				ИЗ
	|					ВТ_ОтборРасчетов)
	|			И ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.АрендныеОбязательства)
	|			) КАК РасчетыПоФинансовымИнструментам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеУслугПоЛизингу.Контрагент КАК Контрагент,
	|	ПриобретениеУслугПоЛизингу.Договор КАК ДоговорКонтрагента,
	|	ПриобретениеУслугПоЛизингу.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС)) КАК СуммаПлатежаБезНДС
	|ПОМЕСТИТЬ ВТ_АрендныеПлатежи
	|ИЗ
	|	Документ.ПриобретениеУслугПоЛизингу КАК ПриобретениеУслугПоЛизингу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПоЛизингу.Начисления КАК ТаблицаНачисления
	|		ПО ТаблицаНачисления.Ссылка = ПриобретениеУслугПоЛизингу.Ссылка
	|			И ТаблицаНачисления.ТипНачисления В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ЛизинговыйПлатеж),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж))
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО
	|			Суммы.Регистратор = ТаблицаНачисления.Ссылка
	|			И Суммы.ИдентификаторСтроки = ТаблицаНачисления.ИдентификаторСтроки
	|			И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ПриобретениеУслугПоЛизингу.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПриобретениеУслугПоЛизингу.Организация = &Организация
	|	И ПриобретениеУслугПоЛизингу.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеУслугПоЛизингу.Контрагент,
	|	ПриобретениеУслугПоЛизингу.Договор,
	|	ПриобретениеУслугПоЛизингу.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	ДоговорКонтрагента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорКонтрагента,
		|	ПервоначальныеСведенияОС.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость
		|ПОМЕСТИТЬ ВТ_ОСвАренде
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						НеСнятыеСУчета.ОсновноеСредство
		|					ИЗ
		|						НеСнятыеСУчета)) КАК ПервоначальныеСведенияОС
		|ГДЕ
		|	ПервоначальныеСведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	ДоговорКонтрагента";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ДоговорЛизинга.Контрагент КАК Контрагент,
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ДоговорЛизинга КАК ДоговорКонтрагента,
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
		|ПОМЕСТИТЬ ВТ_ОСвАренде
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						НеСнятыеСУчета.ОсновноеСредство
		|					ИЗ
		|						НеСнятыеСУчета)) КАК ПервоначальныеСведенияОСБухгалтерскийУчет
		|ГДЕ
		|	ПервоначальныеСведенияОСБухгалтерскийУчет.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	ДоговорКонтрагента";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_ЗадолженностьПоАренде.Контрагент                                  КАК Контрагент,
	|	ВТ_ЗадолженностьПоАренде.ДоговорКонтрагента                          КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаНачальныйОстаток, 0)  КАК ВалютнаяСуммаНачальныйОстаток,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаОборотКт, 0)          КАК ВалютнаяСуммаОборотКт,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.Подразделение, НЕОПРЕДЕЛЕНО)             КАК Подразделение,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.ДокументРасчетовСКонтрагентом, НЕОПРЕДЕЛЕНО) КАК ДокументРасчетовСКонтрагентом,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ОсновноеСредство, НЕОПРЕДЕЛЕНО)                КАК ОсновноеСредство,
	|	ВТ_ОСвАренде.ИнвентарныйНомер                                        КАК ИнвентарныйНомер,
	|	ВТ_ОСвАренде.НаправлениеДеятельности                                 КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ПервоначальнаяСтоимость, 0)                    КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.СуммаПлатежаБезНДС, 0)                   КАК СуммаПлатежаБезНДС
	|ИЗ
	|	ВТ_ЗадолженностьПоАренде КАК ВТ_ЗадолженностьПоАренде
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендныеПлатежи КАК ВТ_АрендныеПлатежи
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_АрендныеПлатежи.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.ДоговорКонтрагента = ВТ_АрендныеПлатежи.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОСвАренде КАК ВТ_ОСвАренде
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_ОСвАренде.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.ДоговорКонтрагента = ВТ_ОСвАренде.ДоговорКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	ДоговорКонтрагента,
	|	Подразделение,
	|	ДокументРасчетовСКонтрагентом,
	|	ОсновноеСредство";

	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаАрендныхПлатежей;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	ЕстьДанные = Выборка.Следующий();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	ВременнаяТаблицаАрендныхПлатежей = ТаблицаАрендныхПлатежей.СкопироватьКолонки();

	Пока ЕстьДанные Цикл
		
		ТекущийКонтрагент                    = Выборка.Контрагент;
		ТекущийДоговорКонтрагента            = Выборка.ДоговорКонтрагента;
		ТекущееПодразделение                 = Выборка.Подразделение;
		ТекущийДокументРасчетовСКонтрагентом = Выборка.ДокументРасчетовСКонтрагентом;
		СуммаПлатежаБезНДС                   = Выборка.СуммаПлатежаБезНДС;
		ВалютнаяСуммаНачальныйОстаток        = Выборка.ВалютнаяСуммаНачальныйОстаток;
		ВалютнаяСуммаОборотКт                = Выборка.ВалютнаяСуммаОборотКт;
	
		// Проверка заполнения таблицы
		Если НЕ ЗначениеЗаполнено(Выборка.ОсновноеСредство) Тогда
			
			Если ТаблицаОС.Количество() = 0 Тогда
			
				ШаблонСообщения = НСтр("ru = 'Не определен предмет аренды для отражения расходов по арендным платежам в налоговом учете для ""%1"" по ""%2"". Расходы не будут отражены в налоговом учете.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
					Выборка.Контрагент, 
					Выборка.ДоговорКонтрагента);
					
				РасшифровкаПредупреждения = Новый Структура;
				РасшифровкаПредупреждения.Вставить("Контрагент", Выборка.Контрагент);
				РасшифровкаПредупреждения.Вставить("ДоговорКонтрагента", Выборка.ДоговорКонтрагента);

				// Выводим сообщение пользователю по текущему объекту, 
				// но не прерываем выполнение всей процедуры.
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПредупреждениеВыполненияРасчета(
					Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеЛизинговыхПлатежей,
					Реквизиты.Период,
					Реквизиты.Организация,
					ТекстСообщения,,
					РасшифровкаПредупреждения);
					
			КонецЕсли;
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
		КонецЕсли;
		
		Если (ВалютнаяСуммаНачальныйОстаток + ВалютнаяСуммаОборотКт = 0)
			И СуммаПлатежаБезНДС <> 0 Тогда
			
			ШаблонСообщения = НСтр("ru = 'По договору ""%1"" c ""%2"" отражено начисление арендного платежа в сумме %3 руб., но кредиторской задолженности на начало месяца и кредитового оборота в течение месяца нет. Расходы по арендному платежу не будут отражены в налоговом учете.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
				Выборка.ДоговорКонтрагента, 
				Выборка.Контрагент,
				Выборка.СуммаПлатежаБезНДС);

			// Выводим сообщение пользователю по текущему объекту, 
			// но не прерываем выполнение всей процедуры.
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, 
				Выборка.ДокументРасчетовСКонтрагентом, , Неопределено);
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
			
		КонецЕсли;
		
		// Распределим сумму платежа между предметами аренды по договору 
		// пропорционально их первоначальной стоимости.
		ВременнаяТаблицаАрендныхПлатежей.Очистить();
		
		Пока ЕстьДанные
			И Выборка.Контрагент                    = ТекущийКонтрагент
			И Выборка.ДоговорКонтрагента            = ТекущийДоговорКонтрагента
			И Выборка.Подразделение                 = ТекущееПодразделение
			И Выборка.ДокументРасчетовСКонтрагентом = ТекущийДокументРасчетовСКонтрагентом Цикл
			
			СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		Если ВременнаяТаблицаАрендныхПлатежей.Количество() > 1 Тогда
			
			МассивПервоначальныхСтоимостей = ВременнаяТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ПервоначальнаяСтоимость");
			
			МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СуммаПлатежаБезНДС, МассивПервоначальныхСтоимостей);
												
			МассивВалютнаяСуммаНачальныйОстаток = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
														ВалютнаяСуммаНачальныйОстаток, МассивПервоначальныхСтоимостей);
														
			МассивВалютнаяСуммаОборотКт = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ВалютнаяСуммаОборотКт, МассивПервоначальныхСтоимостей);

			Для Инд = 0 По ВременнаяТаблицаАрендныхПлатежей.Количество() - 1 Цикл

				СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей[Инд];
				СтрокаТаблицы.СуммаПлатежаБезНДС = 
					?(МассивСуммаПлатежаБезНДС = Неопределено, 0, МассивСуммаПлатежаБезНДС[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаНачальныйОстаток = 
					?(МассивВалютнаяСуммаНачальныйОстаток = Неопределено, 0, МассивВалютнаяСуммаНачальныйОстаток[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаОборотКт = 
					?(МассивВалютнаяСуммаОборотКт = Неопределено, 0, МассивВалютнаяСуммаОборотКт[Инд]);
					
			КонецЦикла;

		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ВременнаяТаблицаАрендныхПлатежей Цикл
			НоваяСтрока = ТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЦикла; 

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Функция ПолучитьПустуюТаблицуАрендныхПлатежей()

	ТаблицаАрендныхПлатежей = Новый ТаблицаЗначений;

	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);

	ТаблицаАрендныхПлатежей.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ДоговорКонтрагента",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыЛизинга"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("Подразделение",
		БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами.ТипЗначения);
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ПервоначальнаяСтоимость", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаНачальныйОстаток", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаОборотКт", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Процедура СформироватьДвиженияРасходыПоАренднымПлатежамНУ(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты, Движения, Отказ)

	Параметры = ПодготовитьПараметрыРасходыПоАренднымПлатежамНУ(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты);

	Если Параметры.ТаблицаРасходыПоАренднымПлатежамНУ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18          = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	// Дт-44.01 Кт-01.К
	Для каждого СтрокаТаблицы Из Параметры.ТаблицаРасходыПоАренднымПлатежамНУ Цикл

		Если СтрокаТаблицы.СуммаПлатежаНУ = 0 Тогда
			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период      	= Реквизиты.Период;
		Проводка.Организация 	= Реквизиты.Организация;

		Проводка.Содержание  	= "Признание в расходах лизинговых платежей";

		Проводка.СчетДт 		= СтрокаТаблицы.СчетРасходовПоАренднымПлатежам;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, 
			СтрокаТаблицы.СубконтоРасходовПоАренднымПлатежам1);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, 
			СтрокаТаблицы.СубконтоРасходовПоАренднымПлатежам2);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, 
			СтрокаТаблицы.СубконтоРасходовПоАренднымПлатежам3);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеРасходовПоАренднымПлатежам;
		КонецЕсли;

		Проводка.СчетКт 		= ПланыСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", 
			СтрокаТаблицы.ОсновноеСредство);

		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаДт.НалоговыйУчет Тогда
			Проводка.СуммаНУДт = СтрокаТаблицы.СуммаПлатежаНУ;
			Проводка.СуммаВРДт = - СтрокаТаблицы.СуммаПлатежаНУ;
		КонецЕсли;
		
		Если СвойстваСчетаКт.НалоговыйУчет Тогда
			Проводка.СуммаНУКт = СтрокаТаблицы.СуммаПлатежаНУ;
			Проводка.СуммаВРКт = - СтрокаТаблицы.СуммаПлатежаНУ;
		КонецЕсли;
	
		ОпределитьПостоянныеРазницыВРасходах(Проводка, ПоддержкаПБУ18);
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
				
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОТЛОЖЕННОЕ ПРИНЯТИЕ К УЧЕТУ ОС ПРИ РАСЧЕТЕ СЕБЕСТОМОСТИ РЕГЛАМЕНТНОЙ ОПЕРАЦИЕЙ

// Процедура СформироватьДвиженияПоСтоимостиОСПриПринятииКУчетуОтложенноеПроведение()
// формирует движения по дополнительным регистрам учета ОС после того, как становится известна
// стоимость списания оборудования со склада (сумма проводки Дт 01 - Кт 08.04). 
// Используется в случаях, когда момент списания себестоимости оборудования отличается 
// от момента принятия к учету ОС.
// 
// 
// Параметры:
//  ТаблицаСебестоимостьСписанныхТоваров - 	таблица значений со структурой как в функции 
//							  			   	УчетТоваровСервер.ПолучитьПустуюТаблицуСписанныеТовары() со следующими
//										 	значениями полей:
//		ПодразделениеОС 	- Подразделение учета ОС (Подразделение Дт), совпадает с МестонахождениемОС
//		ОсновноеСредство	- СправочникСсылка.ОбъектыЭксплуатации
//		СчетУчетаОС			- ПланСчетовСсылка.Хозрасчетный (например, 01.01)
//		Номенклатура		- СправочникСсылка.Номенклатура, позиция списанного оборудования (Номенклатура Кт)
//		Партия				- ДокументСсылка или НЕОПРЕДЕЛЕНО, если партионный учет не ведется
//		Период				- Дата проведения
//		ПодразделениеНоменклатуры	- Подразделение Кт
//		Склад				- СправочникСсылка.Склады, склад, с которого списано оборудование (Склад Кт)
//		СуммаВРОС			- Число, ВР в стоимости принимаемого ОС (СуммаВРДт)
//		СуммаНУОС			- Число, стоимость по НУ принимаемого ОС (СуммаНУДт)
//		СуммаПРОС			- Число, ПР в стоимости принимаемого ОС (СуммаПРДт)
//		СтоимостьБУ			- Число, стоимость БУ принимаемого ОС (Сумма)
//		СуммаВРНоменклатуры	- Число, ВР в стоимости списываемого оборудования (СуммаВРКт)
//		СуммаНУНоменклатуры - Число, стоимость по НУ списываемого оборудования (СуммаНУКт)
//		СуммаПРНоменклатуры - Число, ПР в стоимости списываемого оборудования (СуммаПРКт)
//		СчетУчетаНоменклатуры - ПланСчетовСсылка.Хозрасчетный (например, 08.04).
//
//  Организация			 	- СправочникСсылка.Организация.
//  ДатаДокумента			- Дата документа регистратора.
//  Регистратор			 	- Документ-регистратор, для которого будут записываться движения регистров ОС.
//							  В УП это, например, это документ расчета себестоимости списания.
//  Движения				- Коллекция наборов движений регистров.
//  Отказ					- Булево, признак отказа от проведения.
//
Процедура СформироватьДвиженияПоСтоимостиОСПриПринятииКУчетуОтложенноеПроведение(
										ТаблицаСебестоимостьСписанныхТоваров, 
										Организация, 
										ДатаДокумента, 
										Регистратор, 
										Движения, 
										Отказ) Экспорт

    // Подготовим ТаблицаСебестоимостьСписанныхТоваров к виду, используемому в процедурах принятия к учету ОС
    // по аналогии с тем, какую таблицу формирует УчетТоваровСервер.ПолучитьПустуюТаблицуСписанныеТовары().
    
	ПустаяТаблицаСписанныеТовары = ПолучитьПустуюТаблицуСписанныеТовары();

	ТаблицаСебестоимостьСписанныхТоваров.Колонки.ПодразделениеОС.Имя 			= "КорПодразделение";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.ОсновноеСредство.Имя 			= "КорСубконто1";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СчетУчетаОС.Имя 				= "КорСчетСписания";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.ПодразделениеНоменклатуры.Имя	= "Подразделение";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаВРОС.Имя					= "СуммаКорСписанияВР";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаНУОС.Имя					= "СуммаКорСписанияНУ";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаПРОС.Имя					= "СуммаКорСписанияПР";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СтоимостьБУ.Имя				= "СуммаСписания";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаВРНоменклатуры.Имя		= "СуммаСписанияВР";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаНУНоменклатуры.Имя		= "СуммаСписанияНУ";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СуммаПРНоменклатуры.Имя		= "СуммаПРНоменклатуры";
	ТаблицаСебестоимостьСписанныхТоваров.Колонки.СчетУчетаНоменклатуры.Имя		= "СчетУчета";
    
	Для Каждого Колонка Из ПустаяТаблицаСписанныеТовары.Колонки Цикл
		Если ТаблицаСебестоимостьСписанныхТоваров.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			ТаблицаСебестоимостьСписанныхТоваров.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
		КонецЕсли;
	КонецЦикла;
    
	// Заполним одинаковые значения.
	ВидСубконтоОсновныеСредства = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства;
    ТаблицаСебестоимостьСписанныхТоваров.ЗаполнитьЗначения(ВидСубконтоОсновныеСредства, "ВидКорСубконто1");
    ТаблицаСебестоимостьСписанныхТоваров.ЗаполнитьЗначения("ОС", "ИмяСписка");
	ТаблицаСебестоимостьСписанныхТоваров.ЗаполнитьЗначения(1, "Количество");
	ТаблицаСебестоимостьСписанныхТоваров.ЗаполнитьЗначения(НСтр("ru = 'Основные средства'"), "СинонимСписка");
	ТаблицаСебестоимостьСписанныхТоваров.ЗаполнитьЗначения(0, "Себестоимость");
	
	// Пронумеруем таблицу.
	Для Н = 1 По ТаблицаСебестоимостьСписанныхТоваров.Количество() Цикл
		СтрокаТаблицы 				= ТаблицаСебестоимостьСписанныхТоваров[Н - 1];
		СтрокаТаблицы.НомерСтроки 	= Н;
	КонецЦикла;
	
	// Построим таблицы с необходимыми данными по учету ОС 
	// по аналогии с текстами в менеджере документа ПринятиеКУчетуОС.
	
	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", 		ТаблицаСебестоимостьСписанныхТоваров.Скопировать(,"КорСубконто1, НомерСтроки"));
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(ДатаДокумента));
	Запрос.УстановитьПараметр("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, ДатаДокумента));
	Запрос.УстановитьПараметр("Регистратор", 	Регистратор);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТабОС.КорСубконто1 КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство,
	|	ТабОС.НомерСтроки КАК НомерСтроки
	|
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТабОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство" 
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
	+ ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеБУ()
	+ ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеНУ()
	+ ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеУСН()
	+ 
	"ВЫБРАТЬ
	|
	|	// ОсновныеСредства
	|
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ЕСТЬNULL(ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	
	|
	|	// ПервоначальныеСведенияОСБУ
	|
	|	&Регистратор КАК Регистратор,
	|	&ДатаКон КАК Период,
	|   ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.Регистратор КАК ДокументПринятияКУчету,
	|	&Организация КАК Организация,
	|	&ПлательщикНалогаНаПрибыль КАК ПлательщикНалогаНаПрибыль,
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.СпособПоступления КАК СпособПоступления,
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(ВТ_ПервоначальныеСведенияОСНалоговыйУчет.ПроцентАмортизационнойПремии, 0) КАК ПроцентАмортизационнойПремии,
	|	ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ПоказательНаработки КАК ПоказательНаработки,
	|	ИСТИНА КАК ИспользоватьСуммыСписания,
	|	0 КАК СуммаБУ,
	|	0 КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР,
	|	0 КАК СуммаУСН,
	|
	|
	| 	// ПервоначальныеСведенияОСНУ
	|
	|	ЕСТЬNULL(ВТ_ПараметрыАмортизацииОСНалоговыйУчет.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользованияНУ,
	|	ВТ_ПервоначальныеСведенияОСНалоговыйУчет.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходовНУ,
	|
	|	
	|	// ПервоначальныеСведенияОСУСН
	|
	|	ВТ_ПервоначальныеСведенияОСНалоговыйУчетУСН.ДатаПриобретения КАК ДатаПриобретения,
	|	0 КАК СрокПолезногоИспользованияУСН,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокВключенияСтоимостиВСоставРасходовУСН,
	|
	|	
	|	// ПараметрыАмортизацииОСБУ
	|
	|	ЕСТЬNULL(ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет.ГодоваяНормаАмортизации, 0) КАК ГодоваяНормаАмортизации,
	|	ЕСТЬNULL(ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет.КоэффициентУскорения, 0) КАК КоэффициентУскорения,
	|	ЕСТЬNULL(ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет.ПредполагаемыйОбъемПродукции, 0) КАК ПредполагаемыйОбъемПродукции,
	|	ЕСТЬNULL(ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользованияБУ,
	|
	|
	|	// АмортизационнаяПремия - все поля выбраны ранее
	|	
	|	// ВключениеВРасходыПриПринятииКУчетуНУ
	|	ВТ_ПервоначальныеСведенияОСНалоговыйУчет.СпособОтраженияРасходовПриВключенииВСтоимость КАК СпособыОтраженияРасходовПоАмортизации,
	|	ВТ_СчетаБухгалтерскогоУчетаОС.СчетУчета КАК СчетУчета
	|
	|ИЗ
	|	ТаблицаОС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОСНалоговыйУчет
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОСНалоговыйУчет.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыАмортизацииОСНалоговыйУчет
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_ПараметрыАмортизацииОСНалоговыйУчет.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОСНалоговыйУчетУСН
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_ПервоначальныеСведенияОСНалоговыйУчетУСН.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОС
	|		ПО ТаблицаОС.ОсновноеСредство = ВТ_СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки
	|";	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка			 = РезультатЗапроса.Выбрать();
	
	// Подготовим таблицы для передачи в качестве параметров.
	
	// Таблица для имитации шапки документа.
	ТаблицаРеквизиты = Новый ТаблицаЗначений;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ТаблицаРеквизиты.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	ТаблицаРеквизиты.Добавить();
	
	ПараметрыПроведения = Новый Структура("ОсновныеСредства, ПервоначальныеСведенияОСБУ,
										 |ПервоначальныеСведенияОСНУ, ПервоначальныеСведенияОСУСН,
										 |ПараметрыАмортизацииОСБУ, АмортизационнаяПремия,
										 |ВключениеВРасходыПриПринятииКУчетуНУ, ПараметрыАмортизацииОСНУ,
										 |РеквизитыНДС");
	
	// Таблицы для отдельных регистров, в которых учитываются ОС.
	
	// В документе ПринятиеКУчетуОС	это таблица по табличной части,
	// в текущей процедуре - одна строка запроса.
	СписокКолонок = "НомерСтроки, ОсновноеСредство, ИнвентарныйНомер";
	ПараметрыПроведения.ОсновныеСредства = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); 	
	ПараметрыПроведения.ОсновныеСредства.Добавить();
	
	
	СписокКолонок = "Регистратор, Период, Организация, ПлательщикНалогаНаПрибыль, 
					|ПорядокПогашенияСтоимости, СпособПоступления, СпособНачисленияАмортизации,
					|ПроцентАмортизационнойПремии, ПоказательНаработки, ИспользоватьСуммыСписания,
					|СуммаБУ, СуммаНУ, СуммаПР, СуммаВР, СуммаУСН";
	ПараметрыПроведения.ПервоначальныеСведенияОСБУ = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок);  // таблица из шапки документа - одна строка
	ПараметрыПроведения.ПервоначальныеСведенияОСБУ.Добавить();
	
	
	СписокКолонок = "Регистратор, Период, Организация, ПлательщикНалогаНаПрибыль,
					|СрокПолезногоИспользованияНУ, ПорядокВключенияСтоимостиВСоставРасходовНУ";
	ПараметрыПроведения.ПервоначальныеСведенияОСНУ = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.ПервоначальныеСведенияОСНУ.Колонки.СрокПолезногоИспользованияНУ.Имя = "СрокПолезногоИспользования";
	ПараметрыПроведения.ПервоначальныеСведенияОСНУ.Колонки.ПорядокВключенияСтоимостиВСоставРасходовНУ.Имя = "ПорядокВключенияСтоимостиВСоставРасходов";
	ПараметрыПроведения.ПервоначальныеСведенияОСНУ.Добавить();
	
	
	СписокКолонок = "Регистратор, Период, Организация,
					|СрокПолезногоИспользованияУСН, ПорядокВключенияСтоимостиВСоставРасходовУСН, ДатаПриобретения";
	ПараметрыПроведения.ПервоначальныеСведенияОСУСН = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); //таблица из шапки - одна строка
	ПараметрыПроведения.ПервоначальныеСведенияОСУСН.Добавить();
	
	
	СписокКолонок = "Регистратор, Период, Организация, 
					|ГодоваяНормаАмортизации, КоэффициентУскорения, ПредполагаемыйОбъемПродукции, 
					|СрокПолезногоИспользованияБУ";
	ПараметрыПроведения.ПараметрыАмортизацииОСБУ = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.ПараметрыАмортизацииОСБУ.Колонки.СрокПолезногоИспользованияБУ.Имя = "СрокПолезногоИспользования";
	ПараметрыПроведения.ПараметрыАмортизацииОСБУ.Добавить();
	
	
	СписокКолонок = "Период, Организация, 
					|ПроцентАмортизационнойПремии";
	ПараметрыПроведения.АмортизационнаяПремия = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.АмортизационнаяПремия.Колонки.Добавить("Регистратор"); // Тип регистратора для таблицы амортизационной премии переопределяется.
	ПараметрыПроведения.АмортизационнаяПремия.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ПараметрыПроведения.АмортизационнаяПремия.Добавить();
	
	
	СписокКолонок = "Регистратор, Период, Организация, ПлательщикНалогаНаПрибыль,
					|ПорядокВключенияСтоимостиВСоставРасходовНУ, СпособыОтраженияРасходовПоАмортизации,
					|СчетУчета, ПорядокПогашенияСтоимости";
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.ПорядокВключенияСтоимостиВСоставРасходовНУ.Имя = "ПорядокВключенияСтоимостиВСоставРасходов";
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.ПорядокПогашенияСтоимости.Имя = "ПорядокПогашенияСтоимостиБУ";
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.Добавить("Содержание", Новый ОписаниеТипов("Строка"));
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.Добавить("ИмяСубконто", Новый ОписаниеТипов("Строка"));
	ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Колонки.Добавить("ИмяСписка", Новый ОписаниеТипов("Строка"));
	
	СтрокаТаблицы = ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ.Добавить();
	СтрокаТаблицы.Содержание 	= НСтр("ru = 'Включение стоимости в состав расходов (НУ)'");
	СтрокаТаблицы.ИмяСубконто 	= "ОсновныеСредства";
	СтрокаТаблицы.ИмяСписка 	= "ОС";
						                               
	
	СписокКолонок = "Регистратор, Период, Организация, СрокПолезногоИспользованияНУ, ПлательщикНалогаНаПрибыль";
	ПараметрыПроведения.ПараметрыАмортизацииОСНУ = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.ПараметрыАмортизацииОСНУ.Колонки.СрокПолезногоИспользованияНУ.Имя = "СрокПолезногоИспользования";
	ПараметрыПроведения.ПараметрыАмортизацииОСНУ.Добавить();
	
	СписокКолонок = "Регистратор, Период, Организация";
	ПараметрыПроведения.РеквизитыНДС = ТаблицаРеквизиты.СкопироватьКолонки(СписокКолонок); // таблица из шапки - одна строка
	ПараметрыПроведения.РеквизитыНДС.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ПараметрыПроведения.РеквизитыНДС.Добавить();
	
	// Для передачи в качестве параметра создадим копию таблицы списанных товаров.
	ТаблицаСписанныеТовары = ТаблицаСебестоимостьСписанныхТоваров.СкопироватьКолонки();
	ТаблицаСписанныеТовары.Колонки.Добавить("НомерСтрокиДокумента");
	ТаблицаСписанныеТовары.Добавить();
	
	// Обработку результата запроса необходимо производить по каждому объекту ОС отдельно, 
	// т.к. у разных объектов ОС могут быть разные параметры (сроки, порядок включения в стоимость и т.п.).
	
	Пока Выборка.Следующий() Цикл
	
		// Позиционируемся в таблице списанных товаров.
		СтрокаТаблицыСписанныеТовары = ТаблицаСебестоимостьСписанныхТоваров[Выборка.НомерСтроки - 1];
		ЗаполнитьЗначенияСвойств(ТаблицаСписанныеТовары[0], СтрокаТаблицыСписанныеТовары);
		ТаблицаСписанныеТовары[0].НомерСтроки = 1;
		ТаблицаСписанныеТовары[0].НомерСтрокиДокумента = 1;
	
		// Заполним таблицы.
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ОсновныеСредства[0], Выборка);
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ПервоначальныеСведенияОСБУ[0], Выборка);
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ПервоначальныеСведенияОСНУ[0], Выборка);
		ПараметрыПроведения.ПервоначальныеСведенияОСНУ[0].СрокПолезногоИспользования = Выборка.СрокПолезногоИспользованияНУ;
		ПараметрыПроведения.ПервоначальныеСведенияОСНУ[0].ПорядокВключенияСтоимостиВСоставРасходов = Выборка.ПорядокВключенияСтоимостиВСоставРасходовНУ;
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ПервоначальныеСведенияОСУСН[0], Выборка);
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ПараметрыАмортизацииОСБУ[0], Выборка);
		ПараметрыПроведения.ПараметрыАмортизацииОСБУ[0].СрокПолезногоИспользования = Выборка.СрокПолезногоИспользованияБУ;
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.АмортизационнаяПремия[0], Выборка);
		ПараметрыПроведения.АмортизационнаяПремия[0].Подразделение 	= СтрокаТаблицыСписанныеТовары.КорПодразделение; // Подразделение местонахождения ОС
		ПараметрыПроведения.АмортизационнаяПремия[0].Регистратор	= Выборка.ДокументПринятияКУчету; // Для аморт. премии регистратор должен быть ПринятиеКУчетуОС, 
																								      // т.к. записывается в субконто счета КВ.
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ[0], Выборка);
		ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ[0].ПорядокВключенияСтоимостиВСоставРасходов = Выборка.ПорядокВключенияСтоимостиВСоставРасходовНУ;
		ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ[0].ПорядокПогашенияСтоимостиБУ = Выборка.ПорядокПогашенияСтоимости;
		ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ[0].Подразделение = СтрокаТаблицыСписанныеТовары.КорПодразделение; // Подразделение местонахождения ОС
	
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.ПараметрыАмортизацииОСНУ[0], Выборка);
		ПараметрыПроведения.ПараметрыАмортизацииОСНУ[0].СрокПолезногоИспользования = Выборка.СрокПолезногоИспользованияНУ;
		
		
		ЗаполнитьЗначенияСвойств(ПараметрыПроведения.РеквизитыНДС[0], Выборка);
		ПараметрыПроведения.РеквизитыНДС[0].Подразделение = СтрокаТаблицыСписанныеТовары.Подразделение; // подразделение номенклатуры
		
		
		// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

		// Таблица первоначальных сведений ОС
		ТаблицаПервоначальныеСведенияОС = ПодготовитьТаблицуПервоначальныеСведенияОС(
			ПараметрыПроведения.ОсновныеСредства,
			ТаблицаСписанныеТовары,
			ПараметрыПроведения.ПервоначальныеСведенияОСБУ,
			Отказ);

		// Таблица первоначальных сведений ОС (НУ)
		ТаблицаПервоначальныеСведенияОСНУ = ПодготовитьТаблицуПервоначальныеСведенияОСНУ(
			ТаблицаПервоначальныеСведенияОС,
			ПараметрыПроведения.ПервоначальныеСведенияОСНУ,
			Отказ);

		// Таблица первоначальных сведений ОС (УСН)
		ТаблицаПервоначальныеСведенияОСУСН = ПодготовитьТаблицуПервоначальныеСведенияОСУСН(
			ТаблицаПервоначальныеСведенияОС,
			ПараметрыПроведения.ПервоначальныеСведенияОСУСН,
			Отказ);
			
		// Таблица параметров амортизации (БУ)
		ТаблицаПараметровАмортизацииБУ = ПодготовитьТаблицуПараметрыАмортизацииОСБУ(
			ТаблицаПервоначальныеСведенияОС,
			ПараметрыПроведения.ПараметрыАмортизацииОСБУ,
			Отказ);

		// Таблица амортизационной премии
		ТаблицаАмортизационнойПремии = ПодготовитьТаблицуАмортизационнаяПремия(
			ТаблицаПервоначальныеСведенияОСНУ,
			ПараметрыПроведения.АмортизационнаяПремия,
			Отказ);

		// Таблица включения в расходы при принятии к учету (НУ)
		ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ = ПодготовитьТаблицуСписаниеНаРасходыНУ(
			ТаблицаПервоначальныеСведенияОС,
			ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ,
			Отказ);

		// Таблица параметров амортизации (НУ)
		ТаблицаПараметровАмортизацииНУ = ПодготовитьТаблицуПараметрыАмортизацииОСНУ(
			ТаблицаПервоначальныеСведенияОСНУ,
			ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ,
			ПараметрыПроведения.ПараметрыАмортизацииОСНУ,
			Отказ);
			
		// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		СформироватьДвиженияРегистрацияПервоначальныхСведенийОСБУ(
			ТаблицаПервоначальныеСведенияОС,
			ПараметрыПроведения.ПервоначальныеСведенияОСБУ,
			Движения, Отказ);

		СформироватьДвиженияИзмененияПараметровАмортизацииОСБУ(
			ТаблицаПараметровАмортизацииБУ,
			ПараметрыПроведения.ПараметрыАмортизацииОСБУ,
			Движения, Отказ);

		СформироватьДвиженияИзменениеПараметровАмортизацииОСНУ(
			ТаблицаПараметровАмортизацииНУ,
			ПараметрыПроведения.ПараметрыАмортизацииОСНУ,
			Движения, Отказ);

		СформироватьДвиженияОтражениеАмортизационнойПремии(
			ТаблицаАмортизационнойПремии,
			ПараметрыПроведения.АмортизационнаяПремия,
			Движения, Отказ);

		УправлениеВнеоборотнымиАктивамиПереопределяемый.СформироватьДвиженияНачислениеАмортизации(
			ТаблицаЗатратПоВключениюСтоимостиВСоставРасходовНУ,
			ПараметрыПроведения.ВключениеВРасходыПриПринятииКУчетуНУ,
			Движения, Отказ);

		СформироватьДвиженияРегистрацияПервоначальныхСведенийОСНУ(
			ТаблицаПервоначальныеСведенияОСНУ,
			ПараметрыПроведения.ПервоначальныеСведенияОСНУ,
			Движения, Отказ);
			
		СформироватьДвиженияРегистрацияПервоначальныхСведенийОСУСН(
			ТаблицаПервоначальныеСведенияОСУСН,
			ПараметрыПроведения.ПервоначальныеСведенияОСУСН,
			Движения, Отказ);
			
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьПустуюТаблицуСписанныеТовары()
	
	ТаблицаСписанныеТовары = Новый ТаблицаЗначений;
	ТаблицаСписанныеТовары.Колонки.Добавить("ИмяСписка",          ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ТаблицаСписанныеТовары.Колонки.Добавить("СинонимСписка",      ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ТаблицаСписанныеТовары.Колонки.Добавить("Период",             ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаСписанныеТовары.Колонки.Добавить("НомерСтроки",        ОбщегоНазначения.ОписаниеТипаЧисло(5, 0));
	ТаблицаСписанныеТовары.Колонки.Добавить("СчетУчета",          Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСписанныеТовары.Колонки.Добавить("Номенклатура",       Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСписанныеТовары.Колонки.Добавить("Склад",              Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаСписанныеТовары.Колонки.Добавить("Партия",             Документы.ТипВсеСсылки());
	ТаблицаСписанныеТовары.Колонки.Добавить("Себестоимость",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("Количество",         ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ТаблицаСписанныеТовары.Колонки.Добавить("КорСчетСписания",    Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСписанныеТовары.Колонки.Добавить("ВидКорСубконто1");
	ТаблицаСписанныеТовары.Колонки.Добавить("ВидКорСубконто2");
	ТаблицаСписанныеТовары.Колонки.Добавить("ВидКорСубконто3");
	ТаблицаСписанныеТовары.Колонки.Добавить("КорСубконто1");
	ТаблицаСписанныеТовары.Колонки.Добавить("КорСубконто2");
	ТаблицаСписанныеТовары.Колонки.Добавить("КорСубконто3");
	ТаблицаСписанныеТовары.Колонки.Добавить("КорПодразделение",   БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаСписанныеТовары.Колонки.Добавить("Подразделение",      БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаСписания",      ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаСписанияНУ",    ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаСписанияПР",    ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаСписанияВР",    ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаКорСписанияНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаКорСписанияПР", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаКорСписанияВР", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаСписанныеТовары.Колонки.Добавить("Содержание",		  ОбщегоНазначения.ОписаниеТипаСтрока(0));

	ТаблицаСписанныеТовары.Колонки.Добавить("Комитент",  					Справочники.ТипВсеСсылки());
	ТаблицаСписанныеТовары.Колонки.Добавить("ДоговорКомиссии",  			Справочники.ТипВсеСсылки());
	ТаблицаСписанныеТовары.Колонки.Добавить("СчетРасчетовСКомитентом",		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСписанныеТовары.Колонки.Добавить("СчетАвансовСКомитентом",		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаСписанныеТовары.Колонки.Добавить("ВалютаРасчетовСКомитентом",	Справочники.ТипВсеСсылки());
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаРасчетовСКомитентом",		ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеТовары.Колонки.Добавить("СуммаПоступленияОтКомитента",	ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	ТаблицаСписанныеТовары.Колонки.Добавить("Покупатель",                   Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаСписанныеТовары.Колонки.Добавить("ВыставленСФ",                  Новый ОписаниеТипов("Булево"));
	ТаблицаСписанныеТовары.Колонки.Добавить("ДатаСФ",                       ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаСписанныеТовары.Колонки.Добавить("СчетФактура",                  Документы.ТипВсеСсылки());
	ТаблицаСписанныеТовары.Колонки.Добавить("КлючСтроки",                   ОбщегоНазначения.ОписаниеТипаЧисло(5));
	
	Возврат ТаблицаСписанныеТовары;
	
КонецФункции

Функция ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеБУ()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ПоказательНаработки КАК ПоказательНаработки
	|
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОСБухгалтерскийУчет
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|						&ДатаКон, 
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ТаблицаОС.ОсновноеСредство ИЗ ТаблицаОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчет.ОсновноеСредство,
	|	ПараметрыАмортизацииОСБухгалтерскийУчет.КоэффициентАмортизации КАК ГодоваяНормаАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчет.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБухгалтерскийУчет.ОбъемПродукцииРабот КАК ПредполагаемыйОбъемПродукции,
	|	ПараметрыАмортизацииОСБухгалтерскийУчет.СрокПолезногоИспользования КАК СрокПолезногоИспользования
	|
	|ПОМЕСТИТЬ ВТ_ПараметрыАмортизацииОСБухгалтерскийУчет
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|						&ДатаКон,
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ТаблицаОС.ОсновноеСредство ИЗ ТаблицаОС)) КАК ПараметрыАмортизацииОСБухгалтерскийУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
	|
	|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|						&ДатаКон,
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ТаблицаОС.ОсновноеСредство ИЗ ТаблицаОС)) КАК СчетаБухгалтерскогоУчетаОС
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеНУ()	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчет.ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчет.ПорядокВключенияСтоимостиВСоставРасходов,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСНалоговыйУчет.ПорядокВключенияСтоимостиВСоставРасходов = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ПервоначальныеСведенияОСНалоговыйУчет.Регистратор КАК Документ.ПринятиеКУчетуОС).ПроцентКапитальныхВложенийВключаемыхВРасходыНУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентАмортизационнойПремии,
	|	ВЫРАЗИТЬ(ПервоначальныеСведенияОСНалоговыйУчет.Регистратор КАК Документ.ПринятиеКУчетуОС).СпособОтраженияРасходовПриВключенииВСтоимость КАК СпособОтраженияРасходовПриВключенииВСтоимость
	|
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОСНалоговыйУчет
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|						&ДатаКон,
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ ТаблицаОС)) КАК ПервоначальныеСведенияОСНалоговыйУчет
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНалоговыйУчет.ОсновноеСредство,
	|	ПараметрыАмортизацииОСНалоговыйУчет.СрокПолезногоИспользования
	|
	|ПОМЕСТИТЬ ВТ_ПараметрыАмортизацииОСНалоговыйУчет
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|						&ДатаКон,
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ ТаблицаОС)) КАК ПараметрыАмортизацииОСНалоговыйУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	
	
Функция ПолучитьТекстЗапросаПринятиеКУчетуОСОтложенноеПроведениеУСН()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетУСН.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСН.ПервоначальнаяСтоимостьУСН КАК СуммаУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСН.СрокПолезногоИспользования КАК СрокПолезногоИспользованияУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСН.ПорядокВключенияСтоимостиВСоставРасходовУСН КАК ПорядокВключенияСтоимостиВСоставРасходовУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСН.ДатаПриобретения КАК ДатаПриобретения
	|
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОСНалоговыйУчетУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(
	|						&ДатаКон,
	|						Организация = &Организация
	|							И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ ТаблицаОС)) КАК ПервоначальныеСведенияОСНалоговыйУчетУСН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|";	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// РАСЧЕТ АМОРТИЗАЦИИ ОС

Функция ПодготовитьТаблицуАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты, ТаблицаПараметровРасчетаАмортизации = Неопределено, КоличествоОбработанныхДанных = 0, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОбъект = Неопределено;
	
	Параметры = ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаАмортизации = ПустаяТаблицаЗначенийНачисленнойАмортизации();
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(Реквизиты.Организация, Реквизиты.Период);
	
	Если ОтражатьВНалоговомУчете И НЕ ЗначениеЗаполнено(МетодНачисленияАмортизацииНУ) Тогда
		Если Реквизиты.ВыдаватьСообщения Тогда
			ШаблонСообщения = НСтр("ru = 'Не указан метод начисления амортизации (НУ) в учетной политике организации %1
				|Укажите метод начисления амортизации на %2.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Реквизиты.Организация, Формат(НачалоГода(Реквизиты.ДатаРасчета)));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		Возврат ТаблицаАмортизации;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериодаДата", НачалоМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоМесяца(Реквизиты.ДатаРасчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("Период", Реквизиты.ДатаРасчета);
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.ДатаРасчета));
	
	ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(
										Реквизиты.ДатаРасчета, Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);
	
	// Получим список основных средств для расчета амортизации
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("ПериодСостояния", НачалоМесяца(Реквизиты.ДатаРасчета));
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ";
	ТаблицаОСНачислениеАмортизации = Запрос.Выполнить().Выгрузить();
	ТаблицаОСНачислениеАмортизации.Свернуть("ОсновноеСредство");
	
	// Получим признак возможности начисления амортизации по НУ только линейным методом
	ТаблицаПризнаков = ПодготовитьТаблицуТолькоЛинейныйМетодНУ(ТаблицаОСНачислениеАмортизации, Параметры.Реквизиты, Отказ);
	
	Запрос.УстановитьПараметр("ТаблицаПризнаков", ТаблицаПризнаков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПризнаков.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаПризнаков.ТолькоЛинейный
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	&ТаблицаПризнаков КАК ТаблицаПризнаков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	// Получим дополнительные параметры из регистров сведений
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения()
		+ ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации()
		+ ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете()
		+ ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры();
	
	Запрос.Выполнить();
	
	// Получим таблицу графиков амортизации
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиАмортизацииБУ.ГрафикАмортизации
	|ИЗ
	|	ГрафикиАмортизацииБУ КАК ГрафикиАмортизацииБУ";
	СписокГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков = ГрафикиАмортизацииОС(СписокГрафиков);
	
	// Соберем все параметры в одну таблицу
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОСБУ.ГруппаОС КАК ГруппаОС,
	|	ЕСТЬNULL(НачислениеАмортизацииБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(НачислениеАмортизацииНУ.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|	ЕСТЬNULL(ВыработкаОС.ОбъемВыработки, 0) КАК Количество,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0) КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период,
	|	ПараметрыАмортизацииОСНУ.Период КАК ПериодНУ,
	|	ГрафикиАмортизацииБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК СчетУчетаНачалоГода,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииНачалоГода,
	|	НЕ ПараметрыЦелевогоФинансирования.ОсновноеСредство ЕСТЬ NULL КАК ПрименениеЦелевогоФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяУправлениеВНА_2_4
	|			ТОГДА СчетаБухгалтерскогоУчетаОС.СчетУчетаЦФ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) 
	|	КОНЕЦ КАК СчетУчетаЦФ,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяУправлениеВНА_2_4
	|			ТОГДА СчетаБухгалтерскогоУчетаОС.СчетУчетаАмортизацииЦФ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетНачисленияАмортизацииЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНачалоГода.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаЦФНачалоГода,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНачалоГода.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетНачисленияАмортизацииЦФНачалоГода,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБУ.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОСБУ.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБУ.Контрагент КАК Контрагент,
	|	ПервоначальныеСведенияОСБУ.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБУ.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	МестонахождениеОСБУ.Подразделение КАК ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовБУ.СтатьяРасходов КАК СтатьяРасходов,
	|	СпособыОтраженияРасходовБУ.АналитикаРасходов КАК АналитикаРасходов,
	|	СпособыОтраженияРасходовБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	СпособыОтраженияРасходовБУ.ОрганизацияПолучательРасходов,
	|	СпособыОтраженияРасходовБУ.СчетПередачиРасходов,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(СпособыОтраженияРасходовБУ.СпособОтраженияРасходовДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСНУ.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользованияНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСНУ.ПРДляВычисленияАмортизации, 0) КАК ПРДляВычисленияАмортизации,
	|	ПервоначальныеСведенияОСНУ.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	СписокОС.ТолькоЛинейный КАК ТолькоЛинейныйМетодНУ,
	|	ПервоначальныеСведенияОСНУ.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(СпециальныйКоэффициентНУ.СпециальныйКоэффициент, 1) КАК СпециальныйКоэффициент,
	|	МестонахождениеОСБУ.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияОСНУ.ФактическийСрокИспользованияДо2009, 0)
	|		ИНАЧЕ (ГОД(&ДатаПереходаКЛинейномуМетоду) - ГОД(СостоянияОСПринятоКУчету.ДатаВводаВЭксплуатацию)) * 12 + (МЕСЯЦ(&ДатаПереходаКЛинейномуМетоду) - МЕСЯЦ(СостоянияОСПринятоКУчету.ДатаВводаВЭксплуатацию)) - 1
	|	КОНЕЦ КАК ФактическийСрокПриПереходеКЛинейномуМетоду,
	|	ПервоначальныеСведенияОСНУ.АмортизацияДо2009
	|ПОМЕСТИТЬ СписокОССПараметрами
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБУ КАК ПервоначальныеСведенияОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГрафикиАмортизацииБУ КАК ГрафикиАмортизацииБУ
	|		ПО СписокОС.ОсновноеСредство = ГрафикиАмортизацииБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОСНачалоГода.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|		ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|		ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияНачалоГода.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС КАК ВыработкаОС
	|		ПО СписокОС.ОсновноеСредство = ВыработкаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСНУ КАК ПервоначальныеСведенияОСНУ
	|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОСНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСНУ КАК ПараметрыАмортизацииОСНУ
	|		ПО СписокОС.ОсновноеСредство = ПараметрыАмортизацииОСНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ
	|		ПО СписокОС.ОсновноеСредство = СпециальныйКоэффициентНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО СписокОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СостоянияОСПринятоКУчету КАК СостоянияОСПринятоКУчету
	|		ПО СписокОС.ОсновноеСредство = СостоянияОСПринятоКУчету.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Регистратор", Реквизиты.Регистратор);
	// Получим амортизацию ранее начисленную документом
	Если ЗначениеЗаполнено(Реквизиты.Регистратор) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу();
		Запрос.Выполнить();
	Иначе
		ПустаяТаблицаОборотов = Новый ТаблицаЗначений;
		ПустаяТаблицаОборотов.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияНУОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
		Запрос.УстановитьПараметр("ПустаяТаблицаОборотов", ПустаяТаблицаОборотов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПустаяТаблицаОборотов.ОсновноеСредство КАК ОсновноеСредство,
		|	ПустаяТаблицаОборотов.АмортизацияОборот КАК АмортизацияОборот,
		|	ПустаяТаблицаОборотов.АмортизацияНУОборот КАК АмортизацияНУОборот
		|ПОМЕСТИТЬ АмортизацияОСДокумента
		|ИЗ
		|	&ПустаяТаблицаОборотов КАК ПустаяТаблицаОборотов";
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда
		
		// Блокировка регистра бухгалтерии.
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУ.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения)";
		РезультатЗапроса = Запрос.Выполнить();

		СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы, ИсточникДанных",
			"РегистрБухгалтерии", "Хозрасчетный", РезультатЗапроса);

		СтруктураЗначенийБлокировки = Новый Структура;
		СтруктураЗначенийБлокировки.Вставить("Период", Новый Диапазон(, КонецМесяца(Реквизиты.ДатаРасчета)));
		СтруктураЗначенийБлокировки.Вставить("Организация", Реквизиты.Организация);

		СтруктураИсточникаДанных = Новый Структура("Счет", "Счет");

		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных);

	КонецЕсли;

	// Получим суммы из регистра бухгалтерии
	МассивВидыСубконтоКВ = Новый Массив;
	МассивВидыСубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	МассивВидыСубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии);
	Запрос.УстановитьПараметр("ВидыСубконтоКВ", МассивВидыСубконтоКВ);
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок();
	Запрос.Выполнить();
	
	// Получим амортизированные за период активы
	Запрос.Текст = ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод();
	Запрос.Выполнить();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	Запрос.Текст = ПолучитьТекстЗапросаСпособовОтраженияРасходов();
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	// Сформируем основную таблицу для расчета
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(СписокОС.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	СписокОС.ОсновноеСредство.Код КАК Код,
	|	СписокОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СписокОС.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	СписокОС.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	СписокОС.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	СписокОС.Количество КАК Количество,
	|	СписокОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	СписокОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	СписокОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	СписокОС.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	СписокОС.КоэффициентУскорения КАК КоэффициентУскорения,
	|	СписокОС.Период КАК Период,
	|	СписокОС.ПериодНУ КАК ПериодНУ,
	|	СписокОС.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СписокОС.СчетУчета КАК СчетУчета,
	|	СписокОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СписокОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СписокОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	СписокОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	СписокОС.Контрагент КАК Контрагент,
	|	СписокОС.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СписокОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СписокОС.СтатьяРасходов КАК СтатьяРасходов,
	|	СписокОС.АналитикаРасходов КАК АналитикаРасходов,
	|	СписокОС.ПередаватьРасходыВДругуюОрганизацию,
	|	СписокОС.ОрганизацияПолучательРасходов,
	|	СписокОС.СчетПередачиРасходов,
	|	ЕСТЬNULL(СписокОС.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ) КАК СпособОтраженияРасходовЗаданДокументом,
	|	СписокОС.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	СписокОС.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	СписокОС.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	СписокОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	СписокОС.ТолькоЛинейныйМетодНУ КАК ТолькоЛинейныйМетодНУ,
	|	СписокОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	СписокОС.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	СписокОС.Подразделение КАК Подразделение,
	|	СписокОС.ФактическийСрокПриПереходеКЛинейномуМетоду КАК ФактическийСрокПриПереходеКЛинейномуМетоду,
	|	
	|	СписокОС.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	СписокОС.СчетУчетаЦФ КАК СчетУчетаЦФ,
	|	СписокОС.СчетНачисленияАмортизацииЦФ КАК СчетНачисленияАмортизацииЦФ,
	|	
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
	|
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0)
	|		+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаОстатокКт, 0)
	|		+ ВЫБОР 
	|			КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ТОГДА ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокДт, 0)
	|				ИНАЧЕ 0 
	|		КОНЕЦ КАК АмортизацияНачальныйОстаток,
	|
	|	(ЕСТЬNULL(СтоимостьНаНачалоГода.СуммаОстатокДт, 0) - ЕСТЬNULL(АмортизацияНаНачалоГода.СуммаОстатокКт, 0))
	|	+ (ЕСТЬNULL(СтоимостьЦФНаНачалоГода.СуммаОстатокДт, 0) - ЕСТЬNULL(АмортизацияЦФНаНачалоГода.СуммаОстатокКт, 0)) КАК СтоимостьНаНачалоГода,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) КАК СтоимостьНУНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) КАК СтоимостьПРНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0)
	|	+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаНУОстатокКт, 0) КАК АмортизацияНУНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаПРОстатокКт, 0)
	|	+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаПРОстатокКт, 0) КАК АмортизацияПРНачальныйОстаток,
	|	
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0)
	|		- ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0)
	|		- ВЫБОР 
	|			КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ТОГДА ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокДт, 0)
	|				ИНАЧЕ 0 
	|		КОНЕЦ КАК ОстаточнаяСтоимостьБУ,
	|
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) - ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0) КАК ОстаточнаяСтоимостьНУ,
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаНУОстатокКт, 0) КАК ОстаточнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0) - ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаПРОстатокКт, 0) КАК ОстаточнаяСтоимостьПР,
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаПРОстатокКт, 0) КАК ОстаточнаяСтоимостьПРЦФ,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымБУ,
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымНУ,
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымПР,
	|	
	|	ЕСТЬNULL(АмортизационнаяПремия.СуммаАмортизационнойПремии, 0) КАК СуммаАмортизационнойПремии,
	|	АмортизационнаяПремия.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
	|	ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка.СтатьяРасходовАмортизационнойПремии, ДокументАП_ВводОстатков.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходовАмортизационнойПремии,
	|	ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка.АналитикаРасходовАмортизационнойПремии, ДокументАП_ВводОстатков.АналитикаРасходовАмортизационнойПремии) КАК АналитикаРасходовАмортизационнойПремии,
	|	(ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка, ДокументАП_ВводОстатков.Ссылка) = СписокОС.СпособОтраженияРасходовДокументОснование) КАК СпособОтраженияРасходовАмортизационнойПремииЗаданДокументом,
	|	
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот,
	|	
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(СписокОС.АмортизацияДо2009, 0)
	|		ИНАЧЕ ЕСТЬNULL(АмортизацияОСПриПереходеКЛинейномуМетоду.АмортизацияНачальныйОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПриПереходеКЛинейномуМетоду,
	|	ВЫБОР КОГДА втАмортизированныеАктивы.ОсновноеСредство ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНачислениеАмортизацииЗаПериод
	|ИЗ
	|	СписокОССПараметрами КАК СписокОС
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК СтоимостьОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСНачалоПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК СтоимостьЦФОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФ = СтоимостьЦФОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК СтоимостьОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСКонецПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК СтоимостьЦФОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФ = СтоимостьЦФОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК АмортизацияОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСНачалоПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК АмортизацияЦФОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФ = АмортизацияЦФОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК АмортизацияОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСКонецПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК АмортизацияЦФОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФ = АмортизацияЦФОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСОбороты КАК АмортизацияОСОбороты
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСОбороты.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК СтоимостьНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетУчетаНачалоГода = СтоимостьНаНачалоГода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК СтоимостьЦФНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФНачалоГода = СтоимостьЦФНаНачалоГода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК АмортизацияНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииНачалоГода = АмортизацияНаНачалоГода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК АмортизацияЦФНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФНачалоГода = АмортизацияЦФНаНачалоГода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиАмортизационнойПремии КАК АмортизационнаяПремия
	|		ПО СписокОС.ОсновноеСредство = АмортизационнаяПремия.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС.ОС КАК ДокументАП_ПринятиеКУчету
	|		ПО АмортизационнаяПремия.ДокументАмортизационнойПремии = ДокументАП_ПринятиеКУчету.Ссылка
	|			И СписокОС.ОсновноеСредство = ДокументАП_ПринятиеКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ДокументАП_ВводОстатков
	|		ПО АмортизационнаяПремия.ДокументАмортизационнойПремии = ДокументАП_ВводОстатков.Ссылка
	|			И СписокОС.ОсновноеСредство = ДокументАП_ВводОстатков.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСПриПереходеКЛинейномуМетоду КАК АмортизацияОСПриПереходеКЛинейномуМетоду
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСПриПереходеКЛинейномуМетоду.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизированныеАктивы КАК втАмортизированныеАктивы
	|		ПО СписокОС.ОсновноеСредство = втАмортизированныеАктивы.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	ВыборкаПоОС = Запрос.Выполнить().Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ВыборкаПоОС.Количество();
	
	ПорядкиПогашенияСтоимости = Новый Соответствие;
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена, Истина);
	
	Пока ВыборкаПоОС.Следующий() Цикл
		
		СуммаАмортизацииБУ = 0;
		СуммаАмортизацииНУ = 0;
		СуммаАмортизацииПР = 0;
		СуммаАмортизацииВР = 0;
		
		СписатьОстатокБУ = Ложь;
		СписатьОстатокНУ = Ложь;
		СписатьОстатокПР = Ложь;
		
		СуммаАмортизационнойПремии = 0;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СчетНачисленияАмортизации) Тогда
			Если Реквизиты.ВыдаватьСообщения Тогда
				СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указан счет для начисления амортизации'"), 
					Реквизиты.Регистратор, Отказ);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Параметры расчета
		Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
			
			ПараметрыАмортизации = ТаблицаПараметровРасчетаАмортизации.Добавить();
			ПараметрыАмортизации.ОбъектУчета = ВыборкаПоОС.ОсновноеСредство;
			
			Если ВыборкаПоОС.НачислятьАмортизациюБУ Тогда
				ПараметрыАмортизации.МетодНачисленияБУ = ВыборкаПоОС.СпособНачисленияАмортизации;
				ПараметрыАмортизации.СрокИспользованияБУ = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьБУ = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьНаНачалоГодаБУ = ВыборкаПоОС.СтоимостьНаНачалоГода;
				ПараметрыАмортизации.ВыработкаЗаМесяцБУ = ВыборкаПоОС.Количество;
				ПараметрыАмортизации.ОбъемПродукцииБУ = ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
				ПараметрыАмортизации.КоэффициентАмортизацииБУ = ВыборкаПоОС.КоэффициентАмортизации;
				ПараметрыАмортизации.КоэффициентУскоренияБУ = ВыборкаПоОС.КоэффициентУскорения;
				ПараметрыАмортизации.ПРДляВычисленияАмортизации = ВыборкаПоОС.ПРДляВычисленияАмортизации;
			КонецЕсли;
			
			Если ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
				ПараметрыАмортизации.СрокИспользованияНУ = ВыборкаПоОС.СрокПолезногоИспользованияНУ;
				ПараметрыАмортизации.КоэффициентНУ = ВыборкаПоОС.СпециальныйКоэффициент;
			КонецЕсли;
			
			// Остальные параметры устанавливаются по месту расчета
			
		КонецЕсли; 
		
		Пропустить = Ложь;
		
		Если ВыборкаПоОС.НачислятьАмортизациюБУ
			И ПорядкиПогашенияСтоимости.Получить(ВыборкаПоОС.ПорядокПогашенияСтоимости) <> Неопределено Тогда
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СпособНачисленияАмортизации) Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указан способ начисления амортизации'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток <= 0 Тогда
				Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
			КонецЕсли;
			
			Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
				Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоОС.СтоимостьДляВычисленияАмортизации)
				И ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток > 0 Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщениеОбОшибке = НСтр("ru = 'Стоимость для начисления амортизации равна нулю
					|Возможно, не выполнено закрытие месяца за предыдущий период'");
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СообщениеОбОшибке, Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если (ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный
				ИЛИ ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования
				ИЛИ ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
				И НЕ ЗначениеЗаполнено(ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации) Тогда
				
				Пропустить = Истина;
			КонецЕсли;
			
			Если НЕ Пропустить Тогда
				
				Если ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный Тогда
					
					СуммаГодовойАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						КоэффициентПериода = 0;
					Иначе
						КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
							ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
						СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения = Истина Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Объем продукции для вычисления не определен'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						СуммаАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.Количество / ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФ Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения = Истина Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Процент годовой амортизации не определен'"),
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						
						СуммаГодовойАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.КоэффициентАмортизации / 100;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						Иначе
							КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
								ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
							СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
							Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
								ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Процент годовой амортизации не определен'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						СуммаАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.Количество / 1000 * ВыборкаПоОС.КоэффициентАмортизации / 100 ;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
					
					Если Год(ВыборкаПоОС.Период) = Год(Реквизиты.ДатаРасчета) Тогда
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
					Иначе
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;
					КонецЕсли;
					
					СуммаГодовойАмортизации = СтоимостьИтоговая / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;
					Иначе
						КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
							ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
						СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
						КонецЕсли;
					КонецЕсли;
					
					КоэффициентУскорения = ВыборкаПоОС.КоэффициентУскорения;
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентУскорения) Тогда
						КоэффициентУскорения = 1;
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Коэффициент ускорения не заполнен'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					СуммаАмортизации = СуммаАмортизации * КоэффициентУскорения;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования Тогда
					
					// Дата последнего изменения параметров
					Если ВыборкаПоОС.Период = NULL Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, 
							НСтр("ru = 'Не определилась дата начала использования (изменения параметров)'"), Реквизиты.Регистратор, Отказ);
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
					
						ДатаНачалаРасчета = НачалоМесяца(ДобавитьМесяц(ВыборкаПоОС.Период, 1));
						
						ЧислоЛетПользования = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации / 12;
						ЧислоЛетПользования = Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования - Цел(ЧислоЛетПользования) > 0, 1, 0);
						ЧислоЛетПрошедших   = Цел(УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаНачалаРасчета, Реквизиты.ДатаРасчета) / 12);
						ЧислоЛетОставшихся  = ЧислоЛетПользования - ЧислоЛетПрошедших;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.ФактическийСрокИспользования = ЧислоЛетПрошедших * 12;
							ПараметрыАмортизации.ОставшийсяСрокИспользования = ЧислоЛетОставшихся * 12;
						КонецЕсли;
						
						// Формула суммы чисел от 1 до N
						//		S = (N + 1) * N / 2
						СуммаЧиселЛет = (ЧислоЛетПользования + 1) * ЧислоЛетПользования / 2;
						
						ПроцентГодовойАмортизации = ЧислоЛетОставшихся / СуммаЧиселЛет;
						СуммаГодовойАмортизации   = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ПроцентГодовойАмортизации;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						Иначе
							КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
								ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
							СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
							Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
								ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				ВсегоОсталосьСписать = ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток;
				СписатьОстатокБУ = (ВсегоОсталосьСписать < СуммаАмортизации);
				СуммаАмортизацииБУ = Окр(Макс(0, Мин(СуммаАмортизации, ВсегоОсталосьСписать)), 2);
				
				СуммаАмортизацииПР = Окр(ВыборкаПоОС.ПРДляВычисленияАмортизации * (СуммаАмортизацииБУ / ВыборкаПоОС.СтоимостьДляВычисленияАмортизации), 2);
				ВсегоОсталосьСписатьПР = ВыборкаПоОС.СтоимостьПРНачальныйОстаток - ВыборкаПоОС.АмортизацияПРНачальныйОстаток;
				
				Если ВсегоОсталосьСписатьПР > 0 Тогда
					СписатьОстатокПР = (ВсегоОсталосьСписатьПР < СуммаАмортизацииПР);
					СуммаАмортизацииПР = Окр(Макс(0, Мин(СуммаАмортизацииПР, ВсегоОсталосьСписатьПР)), 2);
				Иначе
					СписатьОстатокПР = (ВсегоОсталосьСписатьПР > СуммаАмортизацииПР);
					СуммаАмортизацииПР = Окр(Мин(0, Макс(СуммаАмортизацииПР, ВсегоОсталосьСписатьПР)), 2);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Пропустить = Ложь;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			Если ПорядкиПогашенияСтоимости.Получить(ВыборкаПоОС.ПорядокВключенияСтоимостиВСоставРасходов) <> Неопределено
				И ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
				
				Если (ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.АмортизацияНУНачальныйОстаток) = 0 Тогда
					Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
				КонецЕсли;
				
				Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
					Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СтоимостьНУНачальныйОстаток) Тогда
					// Стоимость на начало месяца = 0.
					Пропустить = Истина;
				КонецЕсли;
				
				Если ВыборкаПоОС.ТолькоЛинейныйМетодНУ Тогда
					МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный;
				Иначе
					МетодНачисленияАмортизации = МетодНачисленияАмортизацииНУ;
				КонецЕсли;
				
				Если МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный
					И НЕ ЗначениеЗаполнено(ВыборкаПоОС.СрокПолезногоИспользованияНУ) Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Срок использования равен нулю'"), 
							Реквизиты.Регистратор, Отказ);
					КонецЕсли;
					Продолжить;
					
				ИначеЕсли МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Нелинейный
					И НЕ ЗначениеЗаполнено(ВыборкаПоОС.АмортизационнаяГруппа) Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указана амортизационная группа'"), 
							Реквизиты.Регистратор, Отказ, ВыборкаПоОС.ОсновноеСредство);
					КонецЕсли;
					Продолжить;
					
				КонецЕсли;
				
				Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
					ПараметрыАмортизации.МетодНачисленияНУ = МетодНачисленияАмортизации;
				КонецЕсли;
				
				Если НЕ Пропустить Тогда
					
					СуммаАмортизации = 0;
					
					СтоимостьДляВычисления = ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.СуммаАмортизационнойПремии;
					СрокИспользованияДляВычисления = Макс(1, ВыборкаПоОС.СрокПолезногоИспользованияНУ);
					
					СпециальныйКоэффициент = ?(ВыборкаПоОС.СпециальныйКоэффициент = 0, 1, ВыборкаПоОС.СпециальныйКоэффициент);
					
					Если МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный Тогда
						
						СтоимостьДляВычисления = СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияПриПереходеКЛинейномуМетоду;
						
						
						ФактическийСрокПриПереходеКЛинейномуМетоду = Макс(ВыборкаПоОС.ФактическийСрокПриПереходеКЛинейномуМетоду, 0);
						СрокИспользованияДляВычисления = СрокИспользованияДляВычисления - ФактическийСрокПриПереходеКЛинейномуМетоду;
						
						Если СрокИспользованияДляВычисления <= 0 Тогда 
							// ошибка в первоначальных данных
							СуммаАмортизации = 0;
						Иначе 
							СуммаАмортизации = СтоимостьДляВычисления / СрокИспользованияДляВычисления * СпециальныйКоэффициент;
						КонецЕсли;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = СтоимостьДляВычисления;
						КонецЕсли;
						
					ИначеЕсли МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Нелинейный Тогда
						
						НормаАмортизации = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьНормуПоАмортизационнойГруппе(ВыборкаПоОС.АмортизационнаяГруппа);
						
						Если НЕ (НормаАмортизации = Неопределено) Тогда
							
							СуммаАмортизации = (СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияНУНачальныйОстаток)
							* НормаАмортизации / 100
							* СпециальныйКоэффициент;
							
						КонецЕсли;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияНУНачальныйОстаток;
							ПараметрыАмортизации.НормаАмортизацииНУ = НормаАмортизации;
						КонецЕсли;
						
					КонецЕсли;
					
					ВсегоОсталосьСписать = ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.АмортизацияНУНачальныйОстаток;
					СписатьОстатокНУ = (ВсегоОсталосьСписать < СуммаАмортизации);
					СуммаАмортизацииНУ = Окр(Мин(ВсегоОсталосьСписать, СуммаАмортизации), 2);
					
					Если СуммаАмортизацииНУ > 0 Тогда
						СуммаАмортизационнойПремии = ВыборкаПоОС.СуммаАмортизационнойПремии;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			СуммаАмортизацииВР = СуммаАмортизацииБУ - СуммаАмортизацииНУ - СуммаАмортизацииПР;
			
		КонецЕсли;
		
		СпособОтражения = Неопределено;
		Если ВыборкаПоОС.СпособОтраженияРасходовЗаданДокументом Тогда
			СпособОтражения = СоответствиеСпособовОтражения.Получить(ВыборкаПоОС.СпособОтраженияРасходов);
		КонецЕсли;
		
		НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(
			ВыборкаПоОС,
			СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаАмортизацииПР,
			СписатьОстатокБУ, СписатьОстатокНУ, СписатьОстатокПР);
		ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоОС, НовыеСтроки, СпособОтражения);
		
		Если СуммаАмортизационнойПремии <> 0 Тогда
			Если Не ВыборкаПоОС.СпособОтраженияРасходовАмортизационнойПремииЗаданДокументом Тогда
				СпособОтражения = Неопределено;
			КонецЕсли;
			НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(
				ВыборкаПоОС,
				0, СуммаАмортизационнойПремии, 0,,,,
				Истина);
			ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоОС, НовыеСтроки, СпособОтражения);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПодготовитьСтрокиВТаблицуАмортизации(
		ВыборкаДанных,
		СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаАмортизацииПР,
		СписатьОстатокБУ=Ложь, СписатьОстатокНУ=Ложь, СписатьОстатокПР=Ложь,
		ЭтоАмортизационнаяПремия = Ложь)
	
	ПоляСтроки = "ОбъектУчета, СуммаБУ, СуммаНУ, СуммаПР, СуммаВР, Коэффициент, ЭтоЦелевыеСредства, ЭтоАмортизационнаяПремия, ДокументАмортизационнойПремии, НачислятьИзнос";
	СтрокаАмортизации = Новый Структура(ПоляСтроки);
	СтрокаАмортизацииЦФ = Новый Структура(ПоляСтроки);
	
	МассивРезультат = Новый Массив;
	
	Если СуммаАмортизацииБУ > 0
		ИЛИ СуммаАмортизацииНУ > 0
		ИЛИ СуммаАмортизацииПР <> 0 Тогда
		
		МассивРезультат.Добавить(СтрокаАмортизации);
		
		ЗаполнитьЗначенияСвойств(СтрокаАмортизации, ВыборкаДанных);
		
		СтрокаАмортизации.ОбъектУчета = ВыборкаДанных.ОсновноеСредство;
		СтрокаАмортизации.ЭтоАмортизационнаяПремия = ЭтоАмортизационнаяПремия;
		
		СтрокаАмортизации.СуммаБУ = СуммаАмортизацииБУ;
		СтрокаАмортизации.СуммаНУ = СуммаАмортизацииНУ;
		СтрокаАмортизации.СуммаПР = СуммаАмортизацииПР;
		СтрокаАмортизации.СуммаВР = СтрокаАмортизации.СуммаБУ - СтрокаАмортизации.СуммаНУ - СтрокаАмортизации.СуммаПР;
		
		Если ВыборкаДанных.СтоимостьНачальныйОстаток <= ВыборкаДанных.АмортизацияНачальныйОстаток Тогда
			СтрокаАмортизации.Коэффициент = 0;
		Иначе
			СтрокаАмортизации.Коэффициент = СуммаАмортизацииБУ / (ВыборкаДанных.СтоимостьНачальныйОстаток - ВыборкаДанных.АмортизацияНачальныйОстаток);
		КонецЕсли;
		
		СтрокаАмортизации.ЭтоЦелевыеСредства = Ложь;
		Если ВыборкаДанных.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
			СтрокаАмортизации.НачислятьИзнос = Истина;
		ИначеЕсли ВыборкаДанных.ПрименениеЦелевогоФинансирования Тогда
			
			Если ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ = 0
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ = 0
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР = 0 Тогда
				
				// Остались только собственные средства к амортизации
				СтрокаАмортизации.ЭтоЦелевыеСредства = Ложь;
				
			ИначеЕсли ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ = 1
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ = 1
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР = 1 Тогда
				
				// Остались только целевые средства к амортизации
				СтрокаАмортизации.ЭтоЦелевыеСредства = Истина;
				
			Иначе
				
				МассивРезультат.Добавить(СтрокаАмортизацииЦФ);
				
				ЗаполнитьЗначенияСвойств(СтрокаАмортизацииЦФ, СтрокаАмортизации);
				СтрокаАмортизацииЦФ.ЭтоЦелевыеСредства = Истина;
				СтрокаАмортизацииЦФ.ЭтоАмортизационнаяПремия = ЭтоАмортизационнаяПремия;
				
				СтрокаАмортизацииЦФ.СуммаБУ = ?(СписатьОстатокБУ, ВыборкаДанных.ОстаточнаяСтоимостьБУЦФ, СтрокаАмортизации.СуммаБУ * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ);
				СтрокаАмортизацииЦФ.СуммаНУ = ?(СписатьОстатокНУ, ВыборкаДанных.ОстаточнаяСтоимостьНУЦФ, СтрокаАмортизации.СуммаНУ * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ);
				СтрокаАмортизацииЦФ.СуммаПР = ?(СписатьОстатокПР, ВыборкаДанных.ОстаточнаяСтоимостьПРЦФ, СтрокаАмортизации.СуммаПР * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР);
				СтрокаАмортизацииЦФ.СуммаВР = СтрокаАмортизацииЦФ.СуммаБУ - СтрокаАмортизацииЦФ.СуммаНУ - СтрокаАмортизацииЦФ.СуммаПР;
				СтрокаАмортизацииЦФ.Коэффициент = ?(СписатьОстатокБУ, 1, СтрокаАмортизации.Коэффициент * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ);
				
				СтрокаАмортизации.СуммаБУ = ?(СписатьОстатокБУ, ВыборкаДанных.ОстаточнаяСтоимостьБУ, СтрокаАмортизации.СуммаБУ - СтрокаАмортизацииЦФ.СуммаБУ);
				СтрокаАмортизации.СуммаНУ = ?(СписатьОстатокНУ, ВыборкаДанных.ОстаточнаяСтоимостьНУ, СтрокаАмортизации.СуммаНУ - СтрокаАмортизацииЦФ.СуммаНУ);
				СтрокаАмортизации.СуммаПР = ?(СписатьОстатокПР, ВыборкаДанных.ОстаточнаяСтоимостьПР, СтрокаАмортизации.СуммаПР - СтрокаАмортизацииЦФ.СуммаПР);
				СтрокаАмортизации.СуммаВР = СтрокаАмортизации.СуммаБУ - СтрокаАмортизации.СуммаНУ - СтрокаАмортизации.СуммаПР;
				СтрокаАмортизации.Коэффициент = СтрокаАмортизации.Коэффициент - СтрокаАмортизацииЦФ.Коэффициент;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивРезультат;
	
КонецФункции

Процедура ДобавитьСтрокиВТаблицуАмортизации(Таблица, ВыборкаДанных, НовыеСтроки, ТаблицаРаспределения)
	
	Для Каждого Строка Из НовыеСтроки Цикл
		
		Если (Строка.СуммаБУ = 0 И Строка.СуммаНУ=0 И Строка.СуммаПР=0 И Строка.СуммаВР=0) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТаблицаРаспределения = Неопределено Тогда
			СтрокаТаблицыЗатрат = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
			
			Если Строка.ЭтоАмортизационнаяПремия Тогда
				СтрокаТаблицыЗатрат.СтатьяРасходов = ВыборкаДанных.СтатьяРасходовАмортизационнойПремии;
				СтрокаТаблицыЗатрат.АналитикаРасходов = ВыборкаДанных.АналитикаРасходовАмортизационнойПремии;
			КонецЕсли;
		Иначе
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			СуммыБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаБУ, МассивКоэффициентов);
			СуммыНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаНУ, МассивКоэффициентов);
			СуммыПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаПР, МассивКоэффициентов);
			СуммыВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаВР, МассивКоэффициентов);
			Коэффициенты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Коэффициент, МассивКоэффициентов, 36);
			
			Если СуммыБУ = Неопределено И СуммыНУ = Неопределено И СуммыПР = Неопределено И СуммыВР = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Индекс=0 По ТаблицаРаспределения.Количество()-1 Цикл
				ПравилоОтражения = ТаблицаРаспределения[Индекс];
				СтрокаТаблицыЗатрат = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ПравилоОтражения);
				Если Строка.ЭтоАмортизационнаяПремия Тогда
					СтрокаТаблицыЗатрат.СтатьяРасходов = ПравилоОтражения.СтатьяРасходовАмортизационнойПремии;
					СтрокаТаблицыЗатрат.АналитикаРасходов = ПравилоОтражения.АналитикаРасходовАмортизационнойПремии;
				КонецЕсли;
				СтрокаТаблицыЗатрат.СуммаБУ = ?(СуммыБУ=Неопределено, 0, СуммыБУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаНУ = ?(СуммыНУ=Неопределено, 0, СуммыНУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаПР = ?(СуммыПР=Неопределено, 0, СуммыПР[Индекс]);
				СтрокаТаблицыЗатрат.СуммаВР = ?(СуммыВР=Неопределено, 0, СуммыВР[Индекс]);
				СтрокаТаблицыЗатрат.Коэффициент = ?(Коэффициенты=Неопределено, 0, Коэффициенты[Индекс]);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ДатаРасчета," // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор," // <ДокументСсылка.*>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = СостоянияОСОрганизаций.Регистратор
	|ГДЕ
	|	(СостоянияОСОрганизаций.ДатаСостояния < &ПериодСостояния
	|			И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|		ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &ПериодСостояния)
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.ДатаСостояния КАК ДатаСостояния,
	|	СостоянияОС.Состояние
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
	|		ПО ТаблицаОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СостоянияОС.Организация = &Организация
	|	И СостоянияОС.ДатаСостояния < &Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОС.ДатаСостояния
	|ГДЕ
	|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = СостоянияОСОрганизаций.Регистратор)
	|ГДЕ
	|	(СостоянияОСОрганизаций.ДатаСостояния < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|				И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|				И (СостоянияОСОрганизаций.Активность)
	|	ГДЕ
	|		СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СостоянияОСОрганизаций.ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|	ГДЕ
	|		СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И СостоянияОСОрганизаций.Организация = &Организация
	|		И СостоянияОСОрганизаций.ДатаСостояния МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период
	|		И СостоянияОСОрганизаций.Активность) КАК СостоянияОСОрганизаций
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО СостоянияОСОрганизаций.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И СостоянияОСОрганизаций.Организация = &Организация
	|			И СостоянияОСОрганизаций.Активность
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = СостоянияОСОрганизаций.Регистратор)
	|ГДЕ
	|	(СостоянияОСОрганизаций.ДатаСостояния < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|				И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|				И (СостоянияОСОрганизаций.Активность)
	|	ГДЕ
	|		СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СостоянияОСОрганизаций.ОсновноеСредство
	|	ИЗ
	|		ТаблицаОС КАК ТаблицаОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|			ПО СостоянияОСОрганизаций.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|				И СостоянияОСОрганизаций.Организация = &Организация
	|				И СостоянияОСОрганизаций.Активность
	|	ГДЕ
	|		СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И СостоянияОСОрганизаций.ДатаСостояния МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период) КАК СостоянияОСОрганизаций
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации()

	ТекстЗапрос =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииБУ.НачислятьАмортизацию КАК НачислятьАмортизациюБУ
	|ПОМЕСТИТЬ НачислениеАмортизацииБУ
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииБУ
	|ГДЕ
	|	НачислениеАмортизацииБУ.НачислятьАмортизацию = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииНУ.НачислятьАмортизацию КАК НачислятьАмортизациюНУ
	|ПОМЕСТИТЬ НачислениеАмортизацииНУ
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииНУ
	|ГДЕ
	|	НачислениеАмортизацииНУ.НачислятьАмортизацию = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапрос;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОСБУ.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведенияОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБУ.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОСБУ.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОСБУ.ПоказательНаработки КАК ПоказательНаработки,
	|	ПервоначальныеСведенияОСБУ.ДоговорЛизинга КАК ДоговорКонтрагента,
	|	ПервоначальныеСведенияОСБУ.ДоговорЛизинга.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСНУ.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ПервоначальныеСведенияОСНУ.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОСНУ.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОСНУ.Период КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСНУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОСНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СрезСведенийОСБУ.ОсновноеСредство,
	|	СрезСведенийОСБУ.ПоказательНаработки
	|ПОМЕСТИТЬ АмПоНаработкеОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, СпособНачисленияАмортизации В (ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))) КАК СрезСведенийОСБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмПоНаработкеОС.ОсновноеСредство,
	|	АмПоНаработкеОС.ПоказательНаработки,
	|	ВЫБОР
	|		КОГДА СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятоКУчетуВПрошломМесяце
	|ПОМЕСТИТЬ АмортизируемыеПоНаработкеОС
	|ИЗ
	|	АмПоНаработкеОС КАК АмПоНаработкеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|				&КонецПериода,
	|				Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|					И Период < НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|					И Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), МЕСЯЦ, -1)
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							АмПоНаработкеОС.ОсновноеСредство
	|						ИЗ
	|							АмПоНаработкеОС КАК АмПоНаработкеОС)) КАК СостоянияОСОрганизацийСрезПоследних
	|		ПО АмПоНаработкеОС.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации) КАК ОсновноеСредство,
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки) КАК ПоказательНаработки,
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0) КАК ОбъемВыработки
	|ПОМЕСТИТЬ ВыработкаОС
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			&НачалоПериодаДата,
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|				ГДЕ
	|					НЕ АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|					ГДЕ
	|						НЕ АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации),
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки),
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0)
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), МЕСЯЦ, -1),
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|				ГДЕ
	|					АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|					ГДЕ
	|						АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСНУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСНУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСНУ.Период КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСНУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпециальныйКоэффициентНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР КОГДА СпециальныйКоэффициентНУ.СпециальныйКоэффициент = 0
	|		ТОГДА 1
	|		ИНАЧЕ СпециальныйКоэффициентНУ.СпециальныйКоэффициент 
	|	КОНЕЦ КАК СпециальныйКоэффициент
	|ПОМЕСТИТЬ СпециальныйКоэффициентНУ
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СпециальныйКоэффициентНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ГрафикиАмортизацииБУ.ГрафикАмортизации КАК ГрафикАмортизации
	|ПОМЕСТИТЬ ГрафикиАмортизацииБУ
	|ИЗ
	|	РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ГрафикиАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ОСПоКоторымНачисляетсяИзнос
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|	И ПорядокПогашенияСтоимости В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса),
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовБУ.СтатьяРасходов КАК СтатьяРасходов,
	|	СпособыОтраженияРасходовБУ.АналитикаРасходов КАК АналитикаРасходов,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов,
	|	ЕСТЬNULL(ИзменениеПараметровАмортизацииОС.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	СпособыОтраженияРасходовБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	СпособыОтраженияРасходовБУ.ОрганизацияПолучательРасходов,
	|	СпособыОтраженияРасходовБУ.СчетПередачиРасходов
	|ПОМЕСТИТЬ СпособыОтраженияРасходовБУ
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СпособыОтраженияРасходовБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровАмортизацииОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровАмортизацииОС.Ссылка
	|			И СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчета, СчетаБухгалтерскогоУчетаОС.СчетУчета) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств)
	|		ИНАЧЕ ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации)
	|	КОНЕЦ КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаЦФ, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизацииЦФ, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаАмортизацииЦФ
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОСПоКоторымНачисляетсяИзнос КАК ОСПоКоторымНачисляетсяИзнос
	|		ПО ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчета, СчетаБухгалтерскогоУчетаОС.СчетУчета) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств)
	|		ИНАЧЕ ЕСТЬNULL(СчетаБухгалтерскогоУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации)
	|	КОНЕЦ КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОСНачалоГода
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&НачалоГода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОСПоКоторымНачисляетсяИзнос КАК ОСПоКоторымНачисляетсяИзнос
	|		ПО ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансирования
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&НачалоПериода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОС.ОсновноеСредство
	|				ИЗ
	|					СписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияНачалоГода
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&НачалоГода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОС.ОсновноеСредство
	|				ИЗ
	|					СписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансирования.СчетУчета
	|ИЗ
	|	ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчетаЦФ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансированияНачалоГода.СчетУчета
	|ИЗ
	|	ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансирования.СчетАмортизации
	|ИЗ
	|	ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансированияНачалоГода.СчетАмортизации
	|ИЗ
	|	ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаКонецПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУНачалоГода.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоГода
	|ИЗ
	|	СчетаУчетаБУНачалоГода КАК СчетаУчетаБУНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СостоянияОСПринятоКУчету.ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОСПринятоКУчету.ДатаСостояния) КАК ДатаВводаВЭксплуатацию
	|ПОМЕСТИТЬ СостоянияОСПринятоКУчету
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСПринятоКУчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОС КАК СписокОС
	|		ПО СостоянияОСПринятоКУчету.ОсновноеСредство = СписокОС.ОсновноеСредство
	|			И (СостоянияОСПринятоКУчету.Организация = &Организация)
	|			И (СостоянияОСПринятоКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСПринятоКУчету.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ Проводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|		ПО Хозрасчетный.СчетКт = СчетаНачисленияАмортизацииБУ.Счет
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Регистратор
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение КАК ОсновноеСредство,
	|	СУММА(Проводки.Сумма) КАК АмортизацияОборот,
	|	СУММА(Проводки.СуммаНУКт) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСДокумента
	|ИЗ
	|	Проводки КАК Проводки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Проводки.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Проводки.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйСубконто.Значение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса ;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНачалоПериода.Субконто2 КАК ДокументАмортизационнойПремии,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт КАК СуммаАмортизационнойПремии
	|ПОМЕСТИТЬ ОстаткиАмортизационнойПремии
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения),
	|			&ВидыСубконтоКВ,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНачалоПериода.Счет КАК Счет,
	|	ОстаткиНачалоПериода.СуммаОстатокДт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокДт,
	|	ОстаткиНачалоПериода.СуммаОстатокКт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокКт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокКт
	|ПОМЕСТИТЬ ОстаткиНачалоПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоПериода.Счет
	|				ИЗ
	|					СчетаНачалоПериода КАК СчетаНачалоПериода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиКонецПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиКонецПериода.Счет КАК Счет,
	|	ОстаткиКонецПериода.СуммаОстатокДт,
	|	ОстаткиКонецПериода.СуммаНУОстатокДт,
	|	ОстаткиКонецПериода.СуммаПРОстатокДт,
	|	ОстаткиКонецПериода.СуммаОстатокКт,
	|	ОстаткиКонецПериода.СуммаНУОстатокКт,
	|	ОстаткиКонецПериода.СуммаПРОстатокКт
	|ПОМЕСТИТЬ ОстаткиКонецПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКонецПериода.Счет
	|				ИЗ
	|					СчетаКонецПериода КАК СчетаКонецПериода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиКонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаНачалоГода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНаНачалоГода.Счет КАК Счет,
	|	ОстаткиНаНачалоГода.СуммаОстатокДт,
	|	ОстаткиНаНачалоГода.СуммаОстатокКт
	|ПОМЕСТИТЬ ОстаткиНаНачалоГода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоГода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоГода.Счет
	|				ИЗ
	|					СчетаНачалоГода КАК СчетаНачалоГода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНаНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОСПриПереходеКЛинейномуМетоду.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОСПриПереходеКЛинейномуМетоду.СуммаНУОстатокКт КАК АмортизацияНачальныйОстаток
	|ПОМЕСТИТЬ АмортизацияОСПриПереходеКЛинейномуМетоду
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаПереходаКЛинейномуМетоду,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачисленияАмортизацииБУ.Счет
	|				ИЗ
	|					СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС
	|					ГДЕ
	|						СписокОС.ТолькоЛинейный = ЛОЖЬ)) КАК АмортизацияОСПриПереходеКЛинейномуМетоду
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОСОбороты.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОСОбороты.СуммаОборотКт КАК АмортизацияОборот,
	|	АмортизацияОСОбороты.СуммаНУОборотКт КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачисленияАмортизацииБУ.Счет
	|				ИЗ
	|					СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС),
	|			,
	|			) КАК АмортизацияОСОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаПериод.АмортизацияОборот - ЕСТЬNULL(ПоДокументу.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЗаПериод.АмортизацияНУОборот - ЕСТЬNULL(ПоДокументу.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСОбороты
	|ИЗ
	|	АмортизацияОСЗаПериод КАК ЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСДокумента КАК ПоДокументу
	|		ПО ЗаПериод.ОсновноеСредство = ПоДокументу.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаСпособовОтраженияРасходов()
	
	Возврат
	"ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		СтатьяРасходовАмортизационнойПремии,
	|		АналитикаРасходовАмортизационнойПремии,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	)
	|ИЗ
	|	СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом";
	
КонецФункции

Функция ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод()
	
	Возврат
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАктивыВДокументахЗаПериод
	|ИЗ
	|	Документ.АмортизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ВозвратОСОтАрендатора КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратОСОтАрендатора.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ИзменениеПараметровОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.МодернизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПередачаОСАрендатору КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСАрендатору.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПеремещениеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.СписаниеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПереоценкаОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			Регистратор <> &Регистратор
	|				И Регистратор ССЫЛКА Документ.АмортизацияОС
	|				И СчетКт В
	|					(ВЫБРАТЬ
	|						Т.СчетНачисленияАмортизации
	|					ИЗ
	|						СчетаБухгалтерскогоУчетаОС КАК Т),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втАктивыВДокументахЗаПериод.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАмортизированныеАктивы
	|ИЗ
	|	втАктивыВДокументахЗаПериод КАК втАктивыВДокументахЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втАктивыВДокументахЗаПериод";
	
КонецФункции

Функция ГрафикиАмортизацииОС(Графики)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Графики", Графики);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГодовыеГрафикиАмортизацииОС.Ссылка КАК График,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент2,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент3,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент4,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент5,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент6,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент7,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент8,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент9,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент10,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент11,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент12,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1 + ГодовыеГрафикиАмортизацииОС.Коэффициент2 + ГодовыеГрафикиАмортизацииОС.Коэффициент3 + ГодовыеГрафикиАмортизацииОС.Коэффициент4 + ГодовыеГрафикиАмортизацииОС.Коэффициент5 + ГодовыеГрафикиАмортизацииОС.Коэффициент6 + ГодовыеГрафикиАмортизацииОС.Коэффициент7 + ГодовыеГрафикиАмортизацииОС.Коэффициент8 + ГодовыеГрафикиАмортизацииОС.Коэффициент9 + ГодовыеГрафикиАмортизацииОС.Коэффициент10 + ГодовыеГрафикиАмортизацииОС.Коэффициент11 + ГодовыеГрафикиАмортизацииОС.Коэффициент12 КАК СуммаКоэффициентов
	|ИЗ
	|	Справочник.ГодовыеГрафикиАмортизацииОС КАК ГодовыеГрафикиАмортизацииОС";
	ТаблицаГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков.Индексы.Добавить("График");

	Возврат ТаблицаГрафиков;

КонецФункции

Функция ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков, График, ДатаРасчета)
	
	СтрокаТаблицы = ТаблицаГрафиков.Найти(График, "График");
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	СуммаВсех = СтрокаТаблицы.СуммаКоэффициентов;
	
	КоэффициентАмортизации = 0;
	
	Если СуммаВсех = 0 Тогда
		КоэффициентАмортизации = 1;
	Иначе
		СуммаОдного = СтрокаТаблицы["Коэффициент" + Месяц(ДатаРасчета)];
		КоэффициентАмортизации = СуммаОдного / СуммаВсех;
	КонецЕсли;

	Возврат КоэффициентАмортизации;

КонецФункции // ПолучитьКоэффициентАмортизацииИзГрафика()

Процедура СообщитьОбОшибкеПриНачисленииАмортизации(Выборка, ТекстСообщения, РегОперация, Отказ, Ссылка = Неопределено)
	
	ШаблонСообщения = НСтр("ru = '%1 для основного средства %2 (%3), инвентарный номер %4.'");
	ТекстСообщенияОбОшибке = СтрШаблон(ШаблонСообщения, ТекстСообщения, Выборка.ОсновноеСредствоПредставление, Выборка.Код, Выборка.ИнвентарныйНомер);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке, Ссылка,,, Отказ);
	
КонецПроцедуры

Функция ПодготовитьТаблицуТолькоЛинейныйМетодНУ(ТаблицаОС, Реквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыТолькоЛинейныйМетодНУ(ТаблицаОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.УстановитьПараметр("Период", Реквизиты[0].Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ВЫБОР КОГДА ПервоначальныеСведенияОСБУ.ОсновноеСредство ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТолькоЛинейный
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТаблицаОС КАК Т)
	|					И (АмортизационнаяГруппа В (ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|							И ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения))
	|						ИЛИ АмортизационнаяГруппа = ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа))) КАК ПервоначальныеСведенияОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОСБУ.ОсновноеСредство";
	ТаблицаПризнаков = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаПризнаков;
	
КонецФункции

Функция ПодготовитьПараметрыТолькоЛинейныйМетодНУ(ТаблицаОС)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// РАСЧЕТ И НАЧИСЛЕНИЕ ИЗНОСА

Функция ПодготовитьТаблицуИзносаБухРегл(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт

	ДокументОбъект = Неопределено;

	Параметры = ПодготовитьПараметрыИзносаБухРегл(ТаблицаОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонецПериода", ?(ДокументОбъект = Неопределено, Реквизиты.ДатаРасчета,
		Новый Граница(ДокументОбъект.МоментВремени(), ВидГраницы.Исключая)));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());

	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		Запрос.Выполнить();

		УсловиеОС = " И ОсновноеСредство В (ВЫБРАТЬ ТаблицаОС.ОсновноеСредство ИЗ ТаблицаОС КАК ТаблицаОС)";
	Иначе
		УсловиеОС = "";
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОСНачислениеИзноса.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&КонецПериода, Организация = &Организация" + УсловиеОС + ") КАК СписокОСНачислениеИзноса
	|ГДЕ
	|	СписокОСНачислениеИзноса.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)";
	РезультатЗапроса = Запрос.Выполнить();

	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.Текст =
		"УНИЧТОЖИТЬ ТаблицаОС";
		Запрос.Выполнить();
	КонецЕсли;
	ТаблицаОСНачислениеИзноса = РезультатЗапроса.Выгрузить();
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОСНачислениеИзноса);

	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице();
	Запрос.Выполнить();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета,
	|	СчетаУчетаОС.СчетНачисленияАмортизации КАК СчетИзноса
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ Счета
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчетаОС.СчетИзноса
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаЗаГод
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеСнятыеСУчета КАК СписокОС
	|		ПО СчетаБухгалтерскогоУчетаОС.ОсновноеСредство = СписокОС.ОсновноеСредство
	|			И (СчетаБухгалтерскогоУчетаОС.Организация = &Организация)
	|			И (СчетаБухгалтерскогоУчетаОС.Период МЕЖДУ &НачалоГода И &Период)";
	Запрос.Выполнить();

	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда

		// Блокировка регистра бухгалтерии.

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаУчетаОС.СчетИзноса КАК Счет
		|ИЗ
		|	СчетаУчетаОС КАК СчетаУчетаОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|ИЗ
		|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НеСнятыеСУчета КАК СписокОС
		|		ПО СчетаБухгалтерскогоУчетаОС.ОсновноеСредство = СписокОС.ОсновноеСредство
		|			И (СчетаБухгалтерскогоУчетаОС.Организация = &Организация)
		|			И (СчетаБухгалтерскогоУчетаОС.Период МЕЖДУ &НачалоГода И &Период)";
		РезультатЗапроса = Запрос.Выполнить();

		СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы, ИсточникДанных",
			"РегистрБухгалтерии", "Хозрасчетный", РезультатЗапроса);

		СтруктураЗначенийБлокировки = Новый Структура;
		СтруктураЗначенийБлокировки.Вставить("Период", Новый Диапазон(, КонецМесяца(Реквизиты.ДатаРасчета)));
		СтруктураЗначенийБлокировки.Вставить("Организация", Реквизиты.Организация);

		СтруктураИсточникаДанных = Новый Структура("Счет", "Счет");

		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных);

	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Счета.Счет
	|				ИЗ
	|					Счета КАК Счета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОС.ГруппаОС,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер,
	|	ЕСТЬNULL(ВосстановительнаяСтоимость.СуммаОстатокДт, 0) - ЕСТЬNULL(Износ.СуммаОстатокДт, 0) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки КАК ВосстановительнаяСтоимость
	|		ПО СчетаУчетаОС.ОсновноеСредство = ВосстановительнаяСтоимость.ОсновноеСредство
	|			И СчетаУчетаОС.СчетУчета = ВосстановительнаяСтоимость.Счет
	|			И СчетаУчетаОС.ОсновноеСредство = ВосстановительнаяСтоимость.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки КАК Износ
	|		ПО СчетаУчетаОС.ОсновноеСредство = Износ.ОсновноеСредство
	|			И СчетаУчетаОС.СчетИзноса = Износ.Счет,
	|	ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ЕСТЬNULL(ВосстановительнаяСтоимость.СуммаОстатокДт, 0) - ЕСТЬNULL(Износ.СуммаОстатокДт, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();

	ТекстЗапросаВременныеТаблицы = "";
	ТекстЗапросаОбъединение = "";

	ШаблонТекстаЗапросаВременныеТаблицы =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ СписокОС_Месяц_
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоМесяца_Месяц_,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК НачислениеАмортизацииОС
	|ГДЕ
	|	НачислениеАмортизацииОС.НачислятьАмортизацию = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета КАК СчетУчета,
	|	СчетаУчетаОС.СчетНачисленияАмортизации КАК СчетИзноса
	|ПОМЕСТИТЬ СчетаУчетаОС_Месяц_
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&НачалоМесяца_Месяц_,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС_Месяц_ КАК СписокОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодразделенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПодразделенияОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ ПодразделенияОС_Месяц_
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоМесяца_Месяц_,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС_Месяц_ КАК СписокОС)) КАК ПодразделенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	НормыАмортизацииОС.КоэффициентАмортизации КАК НормаАмортизации
	|ПОМЕСТИТЬ НормыАмортизацииОС_Месяц_
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&НачалоМесяца_Месяц_,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС_Месяц_ КАК СписокОС)) КАК НормыАмортизацииОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК ВосстановительнаяСтоимость
	|ПОМЕСТИТЬ ХозрасчетныйОстатки_Месяц_
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца_Месяц_,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаЗаГод.Счет
	|				ИЗ
	|					СчетаУчетаЗаГод КАК СчетаУчетаЗаГод),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС_Месяц_ КАК СписокОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет";

	ШаблонТекстаЗапросаОбъединение =
	"ВЫБРАТЬ
	|	СчетаУчетаОС_Месяц_.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаУчетаОС_Месяц_.СчетИзноса КАК СчетИзноса,
	|	ВЫРАЗИТЬ(&НачалоМесяца_Месяц_ КАК ДАТА) КАК НачалоМесяца,
	|	ЕСТЬNULL(ХозрасчетныйОстатки_Месяц_.ВосстановительнаяСтоимость, 0) КАК ВосстановительнаяСтоимость,
	|	ЕСТЬNULL(ПодразделенияОС_Месяц_.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ЕСТЬNULL(НормыАмортизацииОС_Месяц_.НормаАмортизации, 0) КАК НормаАмортизации
	|//ПОМЕСТИТЬ
	|ИЗ
	|	СчетаУчетаОС_Месяц_ КАК СчетаУчетаОС_Месяц_
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки_Месяц_ КАК ХозрасчетныйОстатки_Месяц_
	|		ПО СчетаУчетаОС_Месяц_.ОсновноеСредство = ХозрасчетныйОстатки_Месяц_.ОсновноеСредство
	|			И СчетаУчетаОС_Месяц_.СчетУчета = ХозрасчетныйОстатки_Месяц_.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияОС_Месяц_ КАК ПодразделенияОС_Месяц_
	|		ПО СчетаУчетаОС_Месяц_.ОсновноеСредство = ПодразделенияОС_Месяц_.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НормыАмортизацииОС_Месяц_ КАК НормыАмортизацииОС_Месяц_
	|		ПО СчетаУчетаОС_Месяц_.ОсновноеСредство = НормыАмортизацииОС_Месяц_.ОсновноеСредство";

	Для НомерМесяца = 1 По Месяц(Реквизиты.ДатаРасчета) Цикл

		НомерМесяцаСтр = СокрЛП(НомерМесяца);

		Запрос.УстановитьПараметр("НачалоМесяца" + НомерМесяцаСтр, ДобавитьМесяц(НачалоГода(Реквизиты.ДатаРасчета), НомерМесяца - 1));

		Если НЕ ПустаяСтрока(ТекстЗапросаВременныеТаблицы) Тогда
			ТекстЗапросаВременныеТаблицы = ТекстЗапросаВременныеТаблицы + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		КонецЕсли;

		ТекстЗапросаВременныеТаблицы = ТекстЗапросаВременныеТаблицы + СтрЗаменить(ШаблонТекстаЗапросаВременныеТаблицы,
			"_Месяц_", НомерМесяцаСтр);


		Если НЕ ПустаяСтрока(ТекстЗапросаОбъединение) Тогда
			ТекстЗапросаОбъединение = ТекстЗапросаОбъединение + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;

		ТекстДляВставки = СтрЗаменить(ШаблонТекстаЗапросаОбъединение, "_Месяц_", НомерМесяцаСтр);
		Если НомерМесяца = 1 Тогда
			ТекстДляВставки = СтрЗаменить(ТекстДляВставки, "//ПОМЕСТИТЬ", "ПОМЕСТИТЬ СтоимостьЗаГод");
		КонецЕсли;

		ТекстЗапросаОбъединение = ТекстЗапросаОбъединение + ТекстДляВставки;

	КонецЦикла;
	ТекстЗапросаОбъединение = ТекстЗапросаОбъединение + "
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Запрос.Текст = ТекстЗапросаВременныеТаблицы + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
		+ ТекстЗапросаОбъединение;
	Запрос.Выполнить();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(СписокОС.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	СписокОС.ОсновноеСредство.Код КАК Код,
	|	СписокОС.ИнвентарныйНомер,
	|	СписокОС.ОстаточнаяСтоимость,
	|	СтоимостьЗаГод.СчетИзноса,
	|	СтоимостьЗаГод.НачалоМесяца КАК НачалоМесяца,
	|	СтоимостьЗаГод.ВосстановительнаяСтоимость,
	|	СтоимостьЗаГод.Подразделение,
	|	СтоимостьЗаГод.НормаАмортизации
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтоимостьЗаГод КАК СтоимостьЗаГод
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЗаГод.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код,
	|	НачалоМесяца";

	ТаблицаИзноса = Запрос.Выполнить().Выгрузить();

	ТаблицаИзноса.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));

	// Расчет износа по объектам ОС
	Для каждого СтрокаОС Из ТаблицаИзноса Цикл

		Если НЕ ЗначениеЗаполнено(СтрокаОС.НормаАмортизации) Тогда
			Если Реквизиты.ВыдаватьСообщения Тогда
				ТекстСообщения = НСтр("ru = 'Не определена годовая норма амортизационных отчислений для основного средства'");
				СообщитьОбОшибкеПриНачисленииАмортизации(СтрокаОС, ТекстСообщения, Реквизиты.Регистратор, Отказ);
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		СтрокаОС.Сумма = СтрокаОС.ВосстановительнаяСтоимость * СтрокаОС.НормаАмортизации / 1200;

	КонецЦикла;

	Если Отказ Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;

	// Сворачиваем таблицу по ОС и счету начисления износа
	ТаблицаИзноса.Свернуть("ОсновноеСредство, СчетИзноса, Подразделение, ВосстановительнаяСтоимость", "Сумма");

	// Проверяем, не превышает ли рассчитанный износ остаточную стоимость ОС
	Для каждого СтрокаОС Из ТаблицаИзноса Цикл

		СтрокаОС.Сумма = Мин(СтрокаОС.Сумма, СтрокаОС.ВосстановительнаяСтоимость);

	КонецЦикла;

	Возврат ТаблицаИзноса;

КонецФункции

Функция ПодготовитьПараметрыИзносаБухРегл(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "ДатаРасчета," // <Дата>
	+ "Организация"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции


Процедура СформироватьДвиженияНачислениеИзноса(ТаблицаИзноса, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыНачислениеИзноса(ТаблицаИзноса, ТаблицаРеквизиты);

	Если Параметры.ТаблицаИзноса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаИзноса Цикл

		Если СтрокаТаблицы.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;

		Проводка = Движения.Хозрасчетный.Добавить();

		Проводка.Период = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;

		Проводка.Содержание = НСтр("ru = 'Износ основных средств'");

		Проводка.СчетДт = СтрокаТаблицы.СчетИзноса;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.Сумма;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыНачислениеИзноса(ТаблицаИзноса, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаИзноса

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"           // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "Подразделение,"              // 
	+ "Сумма,"                      // <Число, 15, 2> - сумма износа к начислению
	+ "СчетИзноса";                 // <ПланСчетовСсылка.Хозрасчетный> - счет начисления износа ОС

	Параметры.Вставить("ТаблицаИзноса",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаИзноса, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ВЫБЫТИЕ ОС

Процедура СформироватьДвиженияВыбытиеОС(ТаблицаРеквизиты, ПараметрыВыбытия, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыВыбытиеОС(ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаПараметрыСписания = ПараметрыВыбытия.ТаблицаПараметрыСписания;

	УправлениеВнеоборотнымиАктивамиПереопределяемый.СформироватьДвиженияНачислениеАмортизации(
		ПараметрыВыбытия.НачислениеАмортизации.ТаблицаЗатрат,
		ПараметрыВыбытия.НачислениеАмортизации.ТаблицаРеквизиты,
		Движения, Отказ);

	СформироватьДвиженияНачислениеАмортизационнойПремии(
		ПараметрыВыбытия.АмортизационнаяПремия.ТаблицаНачисленияАмортизационнойПремии,
		ПараметрыВыбытия.АмортизационнаяПремия.ТаблицаРеквизиты,
		Движения, Отказ);

	СформироватьДвиженияНачислениеИзноса(
		ПараметрыВыбытия.НачислениеИзноса.ТаблицаИзноса,
		ПараметрыВыбытия.НачислениеИзноса.ТаблицаРеквизиты,
		Движения, Отказ);

	СформироватьДвиженияРегистрацияСобытияОС(
		ПараметрыВыбытия.СобытияОС.ТаблицаОС,
		ПараметрыВыбытия.СобытияОС.ТаблицаРеквизиты,
		Движения, Отказ);

	СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСБУ(
		ПараметрыВыбытия.НачислениеАмортизацииОСБУ.ТаблицаОС,
		ПараметрыВыбытия.НачислениеАмортизацииОСБУ.ТаблицаРеквизиты,
		Движения, Отказ);

	СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСНУ(
		ПараметрыВыбытия.НачислениеАмортизацииОСНУ.ТаблицаОС,
		ПараметрыВыбытия.НачислениеАмортизацииОСНУ.ТаблицаРеквизиты,
		Движения, Отказ);

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	Перечисления.МетодыНачисленияАмортизации.Линейный;

	СписыватьТолькоЛинейный = Реквизиты.СписыватьТолькоЛинейныйНУ
		И МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный;

	Для каждого СтрокаТаблицы Из ПараметрыВыбытия.ТаблицаПараметрыСписания Цикл

		Если Реквизиты.Подразделение <> Неопределено Тогда
			ПодразделениеПроводки = Реквизиты.Подразделение;
		Иначе
			ПодразделениеПроводки = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		СписыватьТолькоБУ = СписыватьТолькоЛинейный И НЕ СтрокаТаблицы.ТолькоЛинейный;

		// Списание амортизации Дт 02.01 Кт 01.09
		СуммаПроводки   = СтрокаТаблицы.АмортизацияОС;
		СуммаПроводкиНУ = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.АмортизацияОСНУ);
		СуммаПроводкиПР = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.АмортизацияОСПР);
		СуммаПроводкиВР = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.АмортизацияОСВР);

		Если СуммаПроводки > 0
			ИЛИ СуммаПроводкиНУ > 0
			ИЛИ СуммаПроводкиПР <> 0
			ИЛИ СуммаПроводкиВР <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание  = Реквизиты.Содержание;

			Проводка.СчетДт = СтрокаТаблицы.СчетНачисленияАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ВыбытиеОС;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

			Если ОтражатьВНалоговомУчете Тогда

				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СуммаПроводкиПР;
						Проводка.СуммаВРДт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СуммаПроводкиПР;
						Проводка.СуммаВРКт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

		// Списание износа Кт 010
		СуммаПроводки = СтрокаТаблицы.ИзносОС;

		Если СуммаПроводки <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание  = Реквизиты.Содержание;

			Проводка.СчетКт = СтрокаТаблицы.СчетНачисленияАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

		КонецЕсли;

		// Списание балансовой стоимости Дт 01.09 Кт 01.01
		СуммаПроводки   = СтрокаТаблицы.СтоимостьОС;
		СуммаПроводкиНУ = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.СтоимостьОСНУ);
		СуммаПроводкиПР = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.СтоимостьОСПР);
		СуммаПроводкиВР = ?(СписыватьТолькоБУ, 0, СтрокаТаблицы.СтоимостьОСВР);

		Если СуммаПроводки > 0
			ИЛИ СуммаПроводкиНУ > 0
			ИЛИ СуммаПроводкиПР <> 0
			ИЛИ СуммаПроводкиВР <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период      = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание  = Реквизиты.Содержание;

			Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ВыбытиеОС;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

			Если ОтражатьВНалоговомУчете Тогда

				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СуммаПроводкиПР;
						Проводка.СуммаВРДт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СуммаПроводкиПР;
						Проводка.СуммаВРКт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыВыбытиеОС(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата>
	+ "Организация,"               // <СправочникСсылка.Организации>
	+ "Подразделение,"             // 
	+ "Содержание,"                // <Строка, 150>
	+ "СписыватьТолькоЛинейныйНУ"; // <Булево>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуОСДляСнятияСУчетаПриСписании(ТаблицаРеквизиты, ПараметрыВыбытия, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыОСДляСнятияСУчетаПриСписании(ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаПараметрыСписания = ПараметрыВыбытия.ТаблицаПараметрыСписания;

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	Перечисления.МетодыНачисленияАмортизации.Линейный;

	Если ОтражатьВНалоговомУчете
		И МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный Тогда

		ТаблицаОС = ПараметрыВыбытия.ТаблицаПараметрыСписания.Скопировать(Новый Структура("ТолькоЛинейный", Истина), "НомерСтроки, ОсновноеСредство");
	Иначе
		ТаблицаОС = ПараметрыВыбытия.ТаблицаПараметрыСписания.Скопировать(, "НомерСтроки, ОсновноеСредство");
	КонецЕсли;

	Возврат ТаблицаОС;

КонецФункции

Функция ПодготовитьПараметрыОСДляСнятияСУчетаПриСписании(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "Организация";      // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// СПИСАНИЕ ОСТАТОЧНОЙ СТОИМОСТИ ОС

Функция ПодготовитьТаблицуОстаточнойСтоимости(ТаблицаОС, ТаблицаРеквизиты, ПараметрыВыбытия, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыОстаточнойСтоимости(ТаблицаОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаПараметрыСписания = ПараметрыВыбытия.ТаблицаПараметрыСписания;

	ОтражатьВНалоговомУчете 		= 	УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18					=	УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ	=	Перечисления.МетодыНачисленияАмортизации.Линейный;

	СписыватьТолькоЛинейныйНУ = Реквизиты.СписыватьТолькоЛинейныйНУ И ОтражатьВНалоговомУчете
		И МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.Субконто,
	|	ТаблицаОС.СчетСписания
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();

	Если ТаблицаПараметрыСписания.Количество() > 0 Тогда
		// Получим остаточную стоимость по результатам выбытия
		Запрос.УстановитьПараметр("ТаблицаПараметрыСписания", ТаблицаПараметрыСписания);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаПараметрыСписания.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаПараметрыСписания.ТолькоЛинейный,
		|	ТаблицаПараметрыСписания.СтоимостьОС,
		|	ТаблицаПараметрыСписания.СтоимостьОСНУ,
		|	ТаблицаПараметрыСписания.СтоимостьОСПР,
		|	ТаблицаПараметрыСписания.СтоимостьОСВР,
		|	ТаблицаПараметрыСписания.АмортизацияОС,
		|	ТаблицаПараметрыСписания.АмортизацияОСНУ,
		|	ТаблицаПараметрыСписания.АмортизацияОСПР,
		|	ТаблицаПараметрыСписания.АмортизацияОСВР
		|ПОМЕСТИТЬ ТаблицаПараметрыСписания
		|ИЗ
		|	&ТаблицаПараметрыСписания КАК ТаблицаПараметрыСписания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПараметрыСписания.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаПараметрыСписания.ТолькоЛинейный,
		|	ТаблицаПараметрыСписания.СтоимостьОС - ТаблицаПараметрыСписания.АмортизацияОС КАК СтоимостьБУ,
		|	ТаблицаПараметрыСписания.СтоимостьОСНУ - ТаблицаПараметрыСписания.АмортизацияОСНУ КАК СтоимостьНУ,
		|	ТаблицаПараметрыСписания.СтоимостьОСПР - ТаблицаПараметрыСписания.АмортизацияОСПР КАК СтоимостьПР,
		|	ТаблицаПараметрыСписания.СтоимостьОСВР - ТаблицаПараметрыСписания.АмортизацияОСВР КАК СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСтоимости
		|ИЗ
		|	ТаблицаПараметрыСписания КАК ТаблицаПараметрыСписания
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		Запрос.Выполнить();
	Иначе
		// получим остаточную стоимость из регистра бухгалтерии, со счета выбытия
		Запрос.УстановитьПараметр("Период", Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
		Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
		ТаблицаТолькоЛинейный = ПодготовитьТаблицуТолькоЛинейныйМетодНУ(Параметры.ТаблицаОС, Параметры.Реквизиты, Отказ);
		Запрос.УстановитьПараметр("ТаблицаТолькоЛинейный", ТаблицаТолькоЛинейный);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаСумм.Субконто1 КАК ОсновноеСредство,
		|	ЕСТЬNULL(ТаблицаСумм.СуммаОстатокДт, 0) КАК СтоимостьБУ,
		|	ЕСТЬNULL(ТаблицаСумм.СуммаНУОстатокДт, 0) КАК СтоимостьНУ,
		|	ЕСТЬNULL(ТаблицаСумм.СуммаПРОстатокДт, 0) КАК СтоимостьПР,
		|	ЕСТЬNULL(ТаблицаСумм.СуммаВРОстатокДт, 0) КАК СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСумм
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)) КАК ТаблицаСумм
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТолькоЛинейный.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаТолькоЛинейный.ТолькоЛинейный
		|ПОМЕСТИТЬ ТаблицаТолькоЛинейный
		|ИЗ
		|	&ТаблицаТолькоЛинейный КАК ТаблицаТолькоЛинейный
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтоимости.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаТолькоЛинейный.ТолькоЛинейный,
		|	ТаблицаСтоимости.СтоимостьБУ,
		|	ТаблицаСтоимости.СтоимостьНУ,
		|	ТаблицаСтоимости.СтоимостьПР,
		|	ТаблицаСтоимости.СтоимостьВР
		|ПОМЕСТИТЬ ТаблицаСтоимости
		|ИЗ
		|	ТаблицаСумм КАК ТаблицаСтоимости
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТолькоЛинейный КАК ТаблицаТолькоЛинейный
		|		ПО ТаблицаСтоимости.ОсновноеСредство = ТаблицаТолькоЛинейный.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		Запрос.Выполнить();
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.Субконто,
	|	ТаблицаОС.СчетСписания,
	|	ТаблицаСтоимости.ТолькоЛинейный,
	|	ТаблицаСтоимости.СтоимостьБУ,
	|	ТаблицаСтоимости.СтоимостьНУ,
	|	ТаблицаСтоимости.СтоимостьПР,
	|	ТаблицаСтоимости.СтоимостьВР
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСтоимости КАК ТаблицаСтоимости
	|		ПО ТаблицаОС.ОсновноеСредство = ТаблицаСтоимости.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";
	ТаблицаСтоимости = Запрос.Выполнить().Выгрузить();

	Если НЕ ОтражатьВНалоговомУчете ИЛИ СписыватьТолькоЛинейныйНУ Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаСтоимости Цикл
			Если НЕ ОтражатьВНалоговомУчете
				ИЛИ Реквизиты.СписыватьТолькоЛинейныйНУ И НЕ СтрокаТаблицы.ТолькоЛинейный Тогда

				СтрокаТаблицы.СтоимостьНУ = 0;
				СтрокаТаблицы.СтоимостьПР = 0;
				СтрокаТаблицы.СтоимостьВР = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат ТаблицаСтоимости;

КонецФункции

Функция ПодготовитьПараметрыОстаточнойСтоимости(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "Субконто,"         // <Характеристика.ВидыСубконтоХозрасчетные> - субконто расходов по списанию стоимости ОС
	+ "СчетСписания";     // <ПланСчетовСсылка.Хозрасчетный> - счет списания ОС

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата>
	+ "Организация,"               // <СправочникСсылка.Организации>
	+ "Подразделение,"             // 
	+ "СписыватьТолькоЛинейныйНУ," // <Булево> - списывать остаточную стоимость ОС по налоговому учету только по ОС,
		// по которым амортизация всегда начисляется линейным методом
	+ "Регистратор";               // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуОстаточнойСтоимостиГосРегистрация(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыОстаточнойСтоимостиГосРегистрация(ТаблицаОС, ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.Субконто,
	|	ТаблицаОС.СчетСписания
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();

	// получим остаточную стоимость из регистра бухгалтерии, со счета выбытия
	ВидыСубконтоПереданныеОС = Новый Массив;
    ВидыСубконтоПереданныеОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
    ВидыСубконтоПереданныеОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("Период", Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ВидыСубконтоПереданныеОС", ВидыСубконтоПереданныеОС);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СтоимостьБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК СтоимостьНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокДт КАК СтоимостьПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокДт КАК СтоимостьВР
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости),
	|			&ВидыСубконтоПереданныеОС,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС)
	|				И Субконто2 = &Контрагент) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СтоимостьБУ, 0) КАК СтоимостьБУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СтоимостьНУ, 0) КАК СтоимостьНУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СтоимостьПР, 0) КАК СтоимостьПР,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СтоимостьВР, 0) КАК СтоимостьВР,
	|	ТаблицаОС.СчетСписания,
	|	ТаблицаОС.Субконто
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|		ПО ТаблицаОС.ОсновноеСредство = ХозрасчетныйОстатки.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";
	ТаблицаСтоимости = Запрос.Выполнить().Выгрузить();

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Для каждого СтрокаТаблицы Из ТаблицаСтоимости Цикл
			СтрокаТаблицы.СтоимостьНУ = 0;
			СтрокаТаблицы.СтоимостьПР = 0;
			СтрокаТаблицы.СтоимостьВР = 0;
		КонецЦикла;
	КонецЕсли;

	Возврат ТаблицаСтоимости;

КонецФункции

Функция ПодготовитьПараметрыОстаточнойСтоимостиГосРегистрация(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "Субконто,"         // <Характеристика.ВидыСубконтоХозрасчетные> - субконто расходов по списанию стоимости ОС
	+ "СчетСписания";     // <ПланСчетовСсылка.Хозрасчетный> - счет списания ОС

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата>
	+ "Организация,"               // <СправочникСсылка.Организации>
	+ "Подразделение,"             // 
	+ "Контрагент,"                // <СправочникСсылка.Контрагенты> - покупатель ОС
	+ "Регистратор";               // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияСписаниеОстаточнойСтоимостиОС(ТаблицаСтоимости, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыСписаниеОстаточнойСтоимостиОС(ТаблицаСтоимости, ТаблицаРеквизиты);

	Если Параметры.ТаблицаСтоимости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18          = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из  Параметры.ТаблицаСтоимости Цикл

		Если Реквизиты.Подразделение <> Неопределено Тогда
			ПодразделениеПроводки = Реквизиты.Подразделение;
		Иначе
			ПодразделениеПроводки = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Субконто = СтрокаТаблицы.Субконто;
		СчетСписания = СтрокаТаблицы.СчетСписания;

		// Списание остаточной стоимости Дт 91.02 Кт 01.09
		СуммаПроводки = СтрокаТаблицы.СтоимостьБУ;
		Если НЕ ОтражатьВНалоговомУчете Тогда

			СуммаПроводкиНУ = 0;
			СуммаПроводкиПР = 0;
			СуммаПроводкиВР = 0;
		Иначе
			СуммаПроводкиНУ = СтрокаТаблицы.СтоимостьНУ;
			СуммаПроводкиПР = СтрокаТаблицы.СтоимостьПР;
			СуммаПроводкиВР = СтрокаТаблицы.СтоимостьВР;
		КонецЕсли;

		Если СуммаПроводки > 0
			ИЛИ СуммаПроводкиНУ > 0
			ИЛИ СуммаПроводкиПР <> 0
			ИЛИ СуммаПроводкиВР <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период       = Реквизиты.Период;
			Проводка.Организация  = Реквизиты.Организация;
			Проводка.Содержание   = Реквизиты.Содержание;

			Проводка.СчетДт = СчетСписания;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Субконто);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ВыбытиеОС;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

			Если ОтражатьВНалоговомУчете Тогда

				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СуммаПроводкиПР;
						Проводка.СуммаВРДт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СуммаПроводкиПР;
						Проводка.СуммаВРКт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

	// Вызов переопределяемой процедуры для выполнения дополнительных действий при списании ОС.
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ВыполнитьДополнительныеДействияСписаниеОС(ТаблицаСтоимости, ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеОстаточнойСтоимостиОС(ТаблицаСтоимости, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаСтоимости

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СтоимостьБУ,"      // <Число, 15, 2> - остаточная стоимость ОС по данным бухгалтерского учета
	+ "СтоимостьНУ,"      // <Число, 15, 2> - остаточная стоимость ОС по данным налогового учета
	+ "СтоимостьПР,"      // <Число, 15, 2> - постоянные разницы в оценке остаточной стоимости ОС (ПБУ 18/02)
	+ "СтоимостьВР,"      // <Число, 15, 2> - временные разницы в оценке остаточной стоимости ОС (ПБУ 18/02)
	+ "Субконто,"         // <Характеристика.ВидыСубконтоХозрасчетные> - субконто расходов по списанию стоимости ОС
	+ "СчетСписания";     // <ПланСчетовСсылка.Хозрасчетный> - счет списания ОС

	Параметры.Вставить("ТаблицаСтоимости",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаСтоимости, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // 
	+ "Содержание";    // <Строка, 150>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияСписаниеОстаточнойСтоимостиОСГосРегистрация(ТаблицаСтоимости, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыСписаниеОстаточнойСтоимостиОСГосРегистрация(ТаблицаСтоимости, ТаблицаРеквизиты);

	Если Параметры.ТаблицаСтоимости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18          = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);

	Для каждого СтрокаТаблицы Из  Параметры.ТаблицаСтоимости Цикл

		Если Реквизиты.Подразделение <> Неопределено Тогда
			ПодразделениеПроводки = Реквизиты.Подразделение;
		Иначе
			ПодразделениеПроводки = СтрокаТаблицы.Подразделение;
		КонецЕсли;

		Субконто = СтрокаТаблицы.Субконто;
		СчетСписания = СтрокаТаблицы.СчетСписания;

		// Списание остаточной стоимости Дт 91.02 Кт 01.09
		СуммаПроводки = СтрокаТаблицы.СтоимостьБУ;
		Если НЕ ОтражатьВНалоговомУчете Тогда

			СуммаПроводкиНУ = 0;
			СуммаПроводкиПР = 0;
			СуммаПроводкиВР = 0;
		Иначе
			СуммаПроводкиНУ = СтрокаТаблицы.СтоимостьНУ;
			СуммаПроводкиПР = СтрокаТаблицы.СтоимостьПР;
			СуммаПроводкиВР = СтрокаТаблицы.СтоимостьВР;
		КонецЕсли;

		Если СуммаПроводки > 0
			ИЛИ СуммаПроводкиНУ > 0
			ИЛИ СуммаПроводкиПР <> 0
			ИЛИ СуммаПроводкиВР <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период       = Реквизиты.Период;
			Проводка.Организация  = Реквизиты.Организация;
			Проводка.Содержание   = Реквизиты.Содержание;

			Проводка.СчетДт = СчетСписания;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Субконто);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Реквизиты.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = ПодразделениеПроводки;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

			Если ОтражатьВНалоговомУчете Тогда

				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СуммаПроводкиПР;
						Проводка.СуммаВРДт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СуммаПроводкиПР;
						Проводка.СуммаВРКт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеОстаточнойСтоимостиОСГосРегистрация(ТаблицаСтоимости, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаСтоимости

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство," // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СтоимостьБУ,"      // <Число, 15, 2> - остаточная стоимость ОС по данным бухгалтерского учета
	+ "СтоимостьНУ,"      // <Число, 15, 2> - остаточная стоимость ОС по данным налогового учета
	+ "СтоимостьПР,"      // <Число, 15, 2> - постоянные разницы в оценке остаточной стоимости ОС (ПБУ 18/02)
	+ "СтоимостьВР,"      // <Число, 15, 2> - временные разницы в оценке остаточной стоимости ОС (ПБУ 18/02)
	+ "Субконто,"         // <Характеристика.ВидыСубконтоХозрасчетные> - субконто расходов по списанию стоимости ОС
	+ "СчетСписания";     // <ПланСчетовСсылка.Хозрасчетный> - счет списания ОС

	Параметры.Вставить("ТаблицаСтоимости",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаСтоимости, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // 
	+ "Контрагент,"    // <СправочникСсылка.Контрагенты> - покупатель ОС
	+ "Содержание";    // <Строка, 150>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ВОССТАНОВЛЕНИЕ АМОРТИЗАЦИОННОЙ ПРЕМИИ

Процедура СформироватьДвиженияВосстановлениеАмортизационнойПремии(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыВосстановлениеАмортизационнойПремии(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Если НЕ Реквизиты.ВосстановитьАмортизационнуюПремию Тогда
		Возврат;
	КонецЕсли;

	ОтражатьВНалоговомУчете      = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18               = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Линейный;

	Если НЕ ОтражатьВНалоговомУчете Тогда
		Возврат;
	КонецЕсли;

	СписокОбъектов = Параметры.ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокОС", СписокОбъектов);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТекущаяДата", Реквизиты.Период);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.Период), ДАТАВРЕМЯ(2006, 1, 1)) КАК Период
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&ТекущаяДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ДатаНачала = РезультатЗапроса.Выгрузить()[0].Период;
	Иначе
		ДатаНачала = '20060101';
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокОС", СписокОбъектов);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт), 0) КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&СписокОС),
	|			,
	|			) КАК ХозрасчетныйОбороты";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СуммаАморПремии = РезультатЗапроса.Выгрузить()[0].СуммаОборотКт;
	Иначе
		СуммаАморПремии = 0;
	КонецЕсли;

	СуммаАморПремии = СуммаАморПремии + Реквизиты.СуммаКапитальныхВложенийВключаемыхВРасходы;

	Если СуммаАморПремии = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Амортизационная премия не применялась к указанным объектам. Восстановление амортизационной премии не сделано'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, , "Объект", Ложь);
		Возврат;
	КонецЕсли;

	Проводка = Движения.Хозрасчетный.Добавить();

	Проводка.Период = Реквизиты.Период;
	Проводка.Организация = Реквизиты.Организация;
	Проводка.Содержание  = НСтр("ru = 'Передача ОС'");

	Проводка.СчетДт = Реквизиты.СчетУчетаРасчетовСКонтрагентом;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Реквизиты.ДоговорКонтрагента);

	СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

	Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
		Проводка.ПодразделениеДт = Реквизиты.Подразделение;
	КонецЕсли;

	Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Реквизиты.СтатьяДляВосстановленияАмортизационнойПремии);

	СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

	Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
		Проводка.ПодразделениеКт = Реквизиты.Подразделение;
	КонецЕсли;

	Если СвойстваСчетаКт.НалоговыйУчет Тогда
		Проводка.СуммаНУКт = СуммаАморПремии;
		Если ПоддержкаПБУ18 Тогда
			Проводка.СуммаПРКт = -СуммаАморПремии;
		КонецЕсли;
	КонецЕсли;

	Движения.Хозрасчетный.Записывать = Истина;


КонецПроцедуры

Функция ПодготовитьПараметрыВосстановлениеАмортизационнойПремии(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "ВосстановитьАмортизационнуюПремию,"            // <Булево> - необходимость восстановления амортизационной премии
	+ "Период,"                                       // <Дата>
	+ "ДоговорКонтрагента,"                           // <СправочникСсылка.ДоговорыКонтрагентов> - договор, по которому
		// производится реализация ОС
	+ "Контрагент,"                                   // <СправочникСсылка.Контрагенты> - контрагент-покупатель ОС
	+ "Организация,"                                  // <СправочникСсылка.Организации>
	+ "Подразделение,"                                // 
	+ "Регистратор,"                                  // <ДокументСсылка.*>
	+ "СтатьяДляВосстановленияАмортизационнойПремии," // <СправочникСсылка.ПрочиеДоходыИРасходы> - статья доходов,
		// по которой будет признан доход от восстановления амортизационной премии
	+ "СуммаКапитальныхВложенийВключаемыхВРасходы,"   // <Число, 15, 2> - сумма амортизационной премии к восстановлению
	+ "СчетУчетаРасчетовСКонтрагентом";               // <ПланСчетовСсылка.Хозрасчетный> - счет учет расчетов с
		// контрагентом по реализации ОС

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// МОДЕРНИЗАЦИЯ ОС

Процедура СформироватьДвиженияМодернизацияОС(ТаблицаМодернизации, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыМодернизацияОС(ТаблицаМодернизации, ТаблицаРеквизиты);

	Если Параметры.ТаблицаМодернизации.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ИДКонфигурации = РегламентированнаяОтчетностьПереопределяемый.ИДКонфигурации();

	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18          = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаМодернизации", Параметры.ТаблицаМодернизации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаМодернизации.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМодернизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаМодернизации.СуммаМодернизацииБУ,
	|	ТаблицаМодернизации.СуммаМодернизацииНУ,
	|	ТаблицаМодернизации.СуммаМодернизацииПР,
	|	ТаблицаМодернизации.СуммаМодернизацииВР,
	|	ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	" + ?(ИДКонфигурации = "БАУ" ИЛИ ИДКонфигурации = "БАУКОРП", "-ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыНУ", "0") + " КАК СуммаКапитальныхВложенийВключаемыхВРасходыПР,
	|	" + ?(ИДКонфигурации = "БАУ" ИЛИ ИДКонфигурации = "БАУКОРП", "0", "-ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыНУ") + " КАК СуммаКапитальныхВложенийВключаемыхВРасходыВР
	|ПОМЕСТИТЬ ТаблицаМодернизации
	|ИЗ
	|	&ТаблицаМодернизации КАК ТаблицаМодернизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета,
	|	СчетаУчетаОС.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаМодернизации.ОсновноеСредство
	|					ИЗ
	|						ТаблицаМодернизации КАК ТаблицаМодернизации)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМодернизации.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМодернизации.ОсновноеСредство,
	|	ТаблицаМодернизации.СуммаМодернизацииБУ,
	|	ТаблицаМодернизации.СуммаМодернизацииНУ,
	|	ТаблицаМодернизации.СуммаМодернизацииПР,
	|	ТаблицаМодернизации.СуммаМодернизацииВР,
	|	ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	|	ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыПР,
	|	ТаблицаМодернизации.СуммаКапитальныхВложенийВключаемыхВРасходыВР,
	|	СчетаУчетаОС.СчетУчета
	|ИЗ
	|	ТаблицаМодернизации КАК ТаблицаМодернизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|		ПО ТаблицаМодернизации.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ТаблицаПараметровМодернизации = Запрос.Выполнить().Выгрузить();

	Для каждого СтрокаТаблицы Из ТаблицаПараметровМодернизации Цикл

		// Списание модернизации Дт 01.01 Кт 08.03
		СуммаПроводки = СтрокаТаблицы.СуммаМодернизацииБУ;

		Если ОтражатьВНалоговомУчете Тогда

			СуммаПроводкиНУ = СтрокаТаблицы.СуммаМодернизацииНУ;
			СуммаПроводкиПР = СтрокаТаблицы.СуммаМодернизацииПР;
			СуммаПроводкиВР = СтрокаТаблицы.СуммаМодернизацииВР;
		Иначе
			СуммаПроводкиНУ = 0;
			СуммаПроводкиПР = 0;
			СуммаПроводкиВР = 0;

		КонецЕсли;

		Если СуммаПроводки > 0
			ИЛИ СуммаПроводкиНУ > 0
			ИЛИ СуммаПроводкиПР <> 0
			ИЛИ СуммаПроводкиВР <> 0 Тогда

			Проводка = Движения.Хозрасчетный.Добавить();

			Проводка.Период = Реквизиты.Период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание = НСтр("ru = 'Модернизация ОС'");

			Проводка.СчетДт = СтрокаТаблицы.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТаблицы.ОсновноеСредство);

			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = Реквизиты.Подразделение;
			КонецЕсли;

			Проводка.СчетКт = Реквизиты.СчетУчетаВнеоборотногоАктива;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбъектыСтроительства", Реквизиты.ОбъектСтроительства);

			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);

			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = Реквизиты.ПодразделениеВнеоборотногоАктива;
			КонецЕсли;

			Проводка.Сумма = СуммаПроводки;

			Если ОтражатьВНалоговомУчете Тогда

				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					Проводка.СуммаНУДт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРДт = СуммаПроводкиПР;
						Проводка.СуммаВРДт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

				Если СвойстваСчетаКт.НалоговыйУчет Тогда
					Проводка.СуммаНУКт = СуммаПроводкиНУ;
					Если ПоддержкаПБУ18 Тогда
						Проводка.СуммаПРКт = СуммаПроводкиПР;
						Проводка.СуммаВРКт = СуммаПроводкиВР;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	ТаблицаАмортизационнойПремии = ТаблицаПараметровМодернизации.Скопировать(, "НомерСтроки, ОсновноеСредство, СуммаКапитальныхВложенийВключаемыхВРасходыНУ");
	ТаблицаАмортизационнойПремии.Колонки.СуммаКапитальныхВложенийВключаемыхВРасходыНУ.Имя = "Сумма";
	СформироватьДвиженияОтражениеАмортизационнойПремии(ТаблицаАмортизационнойПремии, Параметры.Реквизиты, Движения, Отказ);

	ТаблицаНачисленияАмортизационнойПремии = ТаблицаПараметровМодернизации.Скопировать(, "НомерСтроки, ОсновноеСредство, СчетУчета, "
		+ "СуммаКапитальныхВложенийВключаемыхВРасходыНУ, СуммаКапитальныхВложенийВключаемыхВРасходыПР,"
		+ "СуммаКапитальныхВложенийВключаемыхВРасходыВР");
	ТаблицаНачисленияАмортизационнойПремии.Колонки.СуммаКапитальныхВложенийВключаемыхВРасходыНУ.Имя = "СуммаНУ";
	ТаблицаНачисленияАмортизационнойПремии.Колонки.СуммаКапитальныхВложенийВключаемыхВРасходыПР.Имя = "СуммаПР";
	ТаблицаНачисленияАмортизационнойПремии.Колонки.СуммаКапитальныхВложенийВключаемыхВРасходыВР.Имя = "СуммаВР";

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("ДокументАмортизационнойПремии",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии.ТипЗначения);
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.Регистратор, "ДокументАмортизационнойПремии");

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("СчетУчетаЗатратПоАмортизационнойПремии",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.СчетУчетаЗатратПоАмортизационнойПремии,
		"СчетУчетаЗатратПоАмортизационнойПремии");

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("ПодразделениеПоАмортизационнойПремии",
		БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.ПодразделениеПоАмортизационнойПремии,
		"ПодразделениеПоАмортизационнойПремии");

	ОписаниеТиповСубконто = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип;

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("СубконтоПоАмортизационнойПремии1", ОписаниеТиповСубконто);
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.СубконтоПоАмортизационнойПремии1,
		"СубконтоПоАмортизационнойПремии1");

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("СубконтоПоАмортизационнойПремии2", ОписаниеТиповСубконто);
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.СубконтоПоАмортизационнойПремии2,
		"СубконтоПоАмортизационнойПремии2");

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("СубконтоПоАмортизационнойПремии3", ОписаниеТиповСубконто);
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.СубконтоПоАмортизационнойПремии3,
		"СубконтоПоАмортизационнойПремии3");

	ТаблицаНачисленияАмортизационнойПремии.Колонки.Добавить("Подразделение",
		БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаНачисленияАмортизационнойПремии.ЗаполнитьЗначения(Реквизиты.Подразделение,
		"Подразделение");

	СформироватьДвиженияНачислениеАмортизационнойПремии(ТаблицаНачисленияАмортизационнойПремии, Параметры.Реквизиты, Движения, Отказ);

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыМодернизацияОС(ТаблицаМодернизации, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаМодернизации

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                                  // <Число, 5, 0>
	+ "ОсновноеСредство,"                             // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СуммаКапитальныхВложенийВключаемыхВРасходыНУ," // <Число, 15, 2> - сумма амортизационной премии
	+ "СуммаМодернизацииБУ,"                          // <Число, 15, 2> - сумма модернизации по данным бухгалтерского учета
	+ "СуммаМодернизацииНУ,"                          // <Число, 15, 2> - сумма модернизации по данным налогового учета
	+ "СуммаМодернизацииПР,"                          // <Число, 15, 2> - постоянные разницы в оценке модернизации (ПБУ 18/02)
	+ "СуммаМодернизацииВР";                          // <Число, 15, 2> - временные разницы в оценке модернизации (ПБУ 18/02)


	Параметры.Вставить("ТаблицаМодернизации",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаМодернизации, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                                 // <Дата>
	+ "ОбъектСтроительства,"                    // <СправочникСсылка.ОбъектыСтроительства> - объект строительства,
		// стоимость с которого нужно списать на модернизацию ОС
	+ "Организация,"                            // <СправочникСсылка.Организации>
	+ "Подразделение,"                          // 
	+ "ПодразделениеВнеоборотногоАктива,"       // 
	+ "ПодразделениеПоАмортизационнойПремии,"   // Подразделение, на которое нужно отнести затраты по отражению амортизационной премии
	+ "Регистратор,"                            // <ДокументСсылка.*>
	+ "СубконтоПоАмортизационнойПремии1,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто по
		// амортизационной премии
	+ "СубконтоПоАмортизационнойПремии2,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто по
		// амортизационной премии
	+ "СубконтоПоАмортизационнойПремии3,"       // <Характеристика.ВидыСубконтоХозрасчетные> - субконто по
		// амортизационной премии
	+ "СчетУчетаВнеоборотногоАктива,"           // <ПланСчетовСсылка.Хозрасчетный> - счет учета объекта строительства
	+ "СчетУчетаЗатратПоАмортизационнойПремии"; // <ПланСчетовСсылка.Хозрасчетный> - счет учета затрат по амортизационной
		// премии

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// НАЧИСЛЕНИЕ АМОРТИЗАЦИИ И АМОРТИЗАЦИОННОЙ ПРЕМИИ

Процедура СформироватьДвиженияНачислениеАмортизацииИАмортизационнойПремии(ПараметрыНачисленияАмортизации, Движения, Отказ) Экспорт

	УправлениеВнеоборотнымиАктивамиПереопределяемый.СформироватьДвиженияНачислениеАмортизации(ПараметрыНачисленияАмортизации.РаспределениеАмортизации.ТаблицаЗатрат,
		ПараметрыНачисленияАмортизации.РаспределениеАмортизации.ТаблицаРеквизиты, Движения, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	СформироватьДвиженияНачислениеАмортизационнойПремии(
		ПараметрыНачисленияАмортизации.АмортизационнаяПремия.ТаблицаНачисленияАмортизационнойПремии,
		ПараметрыНачисленияАмортизации.АмортизационнаяПремия.ТаблицаРеквизиты, Движения, Отказ);

КонецПроцедуры

// КОЭФФЦИЕНТ ПРИНЯТИЯ К УЧЕТУ ОБЪЕКТОВ СТРОИТЕЛЬСТВА (для НДС)

Функция ПолучитьКоэффициентРаспределенияСпособовСтроительства(ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыПолучитьКоэффициентРаспределенияСпособовСтроительства(ТаблицаРеквизиты);

	Реквизиты = Параметры.Реквизиты[0];

	Если Реквизиты.СуммаСтроительства = 0 Тогда
		Возврат 0;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор));
	Запрос.УстановитьПараметр("Счет", Реквизиты.Счет);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Объект", Реквизиты.Объект);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет = &Счет,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства),
	|			Организация = &Организация
	|				И Субконто1 = &Объект) КАК Остатки";

	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда
		ПараметрыБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрБухгалтерии", "Хозрасчетный");

		ЗначенияБлокировки = Новый Соответствие;
		ЗначенияБлокировки.Вставить("Период", Новый Диапазон(, Реквизиты.Период));
		ЗначенияБлокировки.Вставить("Организация", Реквизиты.Организация);
		ЗначенияБлокировки.Вставить("Счет", Реквизиты.Счет);
		ЗначенияБлокировки.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, Реквизиты.Объект);

		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(ПараметрыБлокировки, ЗначенияБлокировки);
	КонецЕсли;

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СуммаОстатка = 0;
	Иначе
		Результат = Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);
		СуммаОстатка = Результат.Итог("СуммаОстаток");
	КонецЕсли;

	Если СуммаОстатка = 0 Тогда
		КоэффициентРаспределения = 1;
	ИначеЕсли СуммаОстатка < 0 Тогда
		КоэффициентРаспределения = 1;
	Иначе
		КоэффициентРаспределения = Реквизиты.СуммаСтроительства / СуммаОстатка;
	КонецЕсли;

	Возврат КоэффициентРаспределения;

КонецФункции

Функция ПодготовитьПараметрыПолучитьКоэффициентРаспределенияСпособовСтроительства(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"             // <Дата>
	+ "Объект,"             // <СправочникСсылка.ОбъектыСтроительства> - объект строительства, коэффициент принятия
		// к учету, которого требуется определить
	+ "Организация,"        // <СправочникСсылка.Организации>
	+ "Регистратор,"        // <ДокументСсылка.*>
	+ "СуммаСтроительства," // <Число, 15, 2> - сумма принятия к учету
	+ "Счет";               // <ПланСчетовСсылка.Хозрасчетный> - счет учета объекта строительства

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ОПЛАТА ОС ДЛЯ УСН

Процедура СформироватьДвиженияОплатыОСДляУСН(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыОплатыОСДляУСН(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Если НЕ Реквизиты.ПрименяетсяУСН ИЛИ НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаТаблицы Из Параметры.ТаблицаОС Цикл
		Движение = Движения.ОплатыОСДляУСН.Добавить();
		Движение.Период               = Реквизиты.Период;
		Движение.Организация          = Реквизиты.Организация;
		Движение.ДокументМодернизации = Реквизиты.ДокументМодернизации;
		Движение.ОсновноеСредство     = СтрокаТаблицы.ОсновноеСредство;
		Движение.ДатаОплаты           = СтрокаТаблицы.ДатаОплаты;
		Движение.СуммаОплаты          = СтрокаТаблицы.СуммаОплаты;
	КонецЦикла;

	Движения.ОплатыОСДляУСН.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьПараметрыОплатыОСДляУСН(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"     // <СправочникСсылка.ОбъектыЭксплуатации> - 
	+ "ДатаОплаты,"           // <Дата> - 
	+ "СуммаОплаты";          // <Число, 15, 2> - 

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                           // <Дата>
	+ "Организация,"                      // <СправочникСсылка.Организации>
	+ "ДокументМодернизации,"             // <ДокументСсылка.МодернизацияОС>
	+ "ПрименяетсяУСН,"                   // <Булево>
	+ "ПрименяетсяУСНДоходыМинусРасходы"; // <Булево>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОПРЕДЕЛЕНИЕ СОСТОЯНИЯ ОС

// Функция рассчитывает стоимость объекта строительства по разным видам учета.
// Возвращает структуру со значениями стоимостей по видам учета, поля:
// - СтоимостьБУ
// - СтоимостьНУ
// - СтоимостьПР
// - СтоимостьВР.
//
Функция РассчитатьСтоимостьОбъектаСтроительства(Знач Организация, Знач ПодразделениеОрганизации, Знач Период, Знач СчетУчета, Знач ОбъектСтроительства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураСтоимостьОбъектаСтроительства = Новый Структура;
	СтруктураСтоимостьОбъектаСтроительства.Вставить("СтоимостьБУ", 0);
	СтруктураСтоимостьОбъектаСтроительства.Вставить("СтоимостьНУ", 0);
	СтруктураСтоимостьОбъектаСтроительства.Вставить("СтоимостьПР", 0);
	СтруктураСтоимостьОбъектаСтроительства.Вставить("СтоимостьВР", 0);
	
	Если ТипЗнч(Период) = Тип("Граница") Тогда
		ГраницаПолученияОстатков = Период;
	Иначе
		ГраницаПолученияОстатков = Новый Граница(Период);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",                   ГраницаПолученияОстатков);
	Запрос.УстановитьПараметр("Организация",              Организация);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("СчетУчета",                СчетУчета);
	Запрос.УстановитьПараметр("ОбъектСтроительства",      ОбъектСтроительства);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СтоимостьБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК СтоимостьНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокДт КАК СтоимостьПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокДт КАК СтоимостьВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто1 = &ОбъектСтроительства
	|				И Организация = &Организация
	|				И (Подразделение = &ПодразделениеОрганизации
	|					ИЛИ Подразделение ЕСТЬ NULL )) КАК ХозрасчетныйОстатки";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СтруктураСтоимостьОбъектаСтроительства, Выборка);
		
	КонецЕсли;
	
	Возврат СтруктураСтоимостьОбъектаСтроительства;

КонецФункции // РассчитатьСтоимостьОбъектаСтроительства()

// ПРОЧЕЕ

Процедура ОпределитьСчетаУчетаОС(ТаблицаОС, Период, Организация, ИмяКолонки = "Номенклатура") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокОС", ТаблицаОС.ВыгрузитьКолонку(ИмяКолонки));
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СчетаУчетаОС";
	РезультатЗапрос = Запрос.Выполнить();
	ТаблицаСчетов = РезультатЗапрос.Выгрузить();
	ТаблицаСчетов.Индексы.Добавить("ОсновноеСредство");
	Для каждого СтрокаОС Из ТаблицаОС Цикл
		НайденнаяСтрока = ТаблицаСчетов.Найти(СтрокаОС[ИмяКолонки], "ОсновноеСредство");
		Если НайденнаяСтрока <> Неопределено Тогда
			СтрокаОС.СчетУчета = НайденнаяСтрока.СчетУчета;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// Функция анализирует аналитику затрат по дебету проводки.
// Если статья затрат не принимаемая к НУ, то сумма НУ по дебету преобразуется в сумму ПР по дебету.
//
Функция ОпределитьПостоянныеРазницыВРасходах(Проводка,ПоддержкаПБУ18) Экспорт
	Если ПоддержкаПБУ18 Тогда

		СчетДт = Проводка.СчетДт;
		Если ЗначениеЗаполнено(СчетДт) И СчетДт.НалоговыйУчет Тогда
			ЭтоНепринимаемыеРасходы = НалоговыйУчет.ОпределитьНеПринимаемыеРасходы(Проводка);

			Если ЭтоНепринимаемыеРасходы Тогда

				Проводка.СуммаПРДт = Проводка.СуммаПРДт + Проводка.СуммаНУДт;
				Проводка.СуммаНУДт = 0;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;


КонецФункции

// По переданной структуре полей формирует запрос по табличной части документа.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа,
//  ИмяТабличнойЧасти - строка, имя табличной части,
//  СтруктураПолей    - структура, ключ структуры содержит псевдоним поля запроса, значение - строку запроса.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоТабличнойЧасти(ДокументОбъект, ИмяТабличнойЧасти, СтруктураПолей) Экспорт

	ТекстЗапроса = "";

	Для Каждого Реквизит Из СтруктураПолей Цикл

		ТекстЗапроса  = ТекстЗапроса + ",
		|	Док." + Реквизит.Значение + " КАК " + СокрЛП(Реквизит.Ключ);

	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Док.НомерСтроки " + ТекстЗапроса + "
	|
	|ИЗ
	|	Документ." + ДокументОбъект.Метаданные().Имя + "."+ СокрЛП(ИмяТабличнойЧасти) + " КАК Док
	|
	|ГДЕ
	|	Док.Ссылка = &ДокументСсылка";

	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ДокументСсылка" , ДокументОбъект.Ссылка);

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоТабличнойЧасти()

// Получает документ и дату для указанного состояния основного средства по бух учету.
//
// Параметры
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура ПолучитьДокументБухСостоянияОС(ОсновноеСредство, Организация, Состояние, ДокРегистратор, ДатаДокРегистратора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СостояниеОС", 	Состояние);
	Запрос.УстановитьПараметр("ОС",             ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СостоянияОСОрганизаций.Регистратор КАК Документ,
		|	СостоянияОСОрганизаций.ДатаСостояния КАК Дата
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		|
		|ГДЕ
		|	СостоянияОСОрганизаций.ОсновноеСредство = &ОС И
		|	СостоянияОСОрганизаций.Организация = &Организация И
		|	СостоянияОСОрганизаций.Состояние = &СостояниеОС
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;

	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';

	КонецЕсли;

КонецПроцедуры

// Функция возвращает таблицу значений с инвентарными номерами ОС.
//
// Параметры
//  ТаблицаОС   - Таблица значений со списком ОС, для которой нужно получить инвентарные номера.
//                Обязательные колонки: НомерСтроки, ОсновноеСредство
//  Организация - Организация, по которой требуется получить инвентарные номера.
//  Дата        - Дата, на которую требуется получить инвентарные номера.
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица с инвентарными номерами. Колонки: НомерСтроки, ОсновноеСредство, ИнвентарныйНомер.
//
Функция ИнвентарныеНомераОС(Знач ТаблицаОС, Знач Организация, Знач Дата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер
	|ПОМЕСТИТЬ ИнвентарныеНомера
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ИнвентарныеНомера.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИнвентарныеНомера КАК ИнвентарныеНомера
	|		ПО ТаблицаОС.ОсновноеСредство = ИнвентарныеНомера.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = РезультатЗапроса.Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

//  Функция возвращает инвентарный номерам ОС.
//
// Параметры
//  ОсновноеСредство - Объект основных средств, для которого требуется получить инвентарный номер.
//  Организация      - Организация, по которой требуется получить инвентарный номер.
//  Дата             - Дата, на которую требуется получить инвентарный номер.
//
// Возвращаемое значение:
//   Строка - Инвентарный номер переданного ОС.
//
Функция ПолучитьИнвентарныйНомерОС(Знач ОсновноеСредство, Знач Организация, Знач Дата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ИнвентарныйНомер;
	КонецЕсли;
	
КонецФункции // ПолучитьИнвентарныйНомерОС()

//  Функция дозаполняет табличную часть основных средств документа основными средствами
// с наименованием совпадающим с заданным основным средством. В случае отсутствия основных
// средств с подходящим наименованием, выдает сообщение об ошибке.
//
// Параметры
//  ПараметрыФормы   - Структура с параметрами заполнения, ключи структуры:
//  	Форма             - форма заполняемого документа
//  	Объект            - Значение основного реквизита формы - документа для заполнения
//  	ИмяТабличнойЧасти - Имя табличной части основных средств документа, значение по умолчанию "ОС"
//  	ПолучатьИнвентарныйНомерИзКода - Флаг необходимости получения основного средства из кода 
//  		справочника (в противном случае, по данным регистра сведений). Значение по умолчанию Ложь.
//  
//  ОсновноеСредство - Основное средство по наименованию которого требуется дозаполнить табличную часть.
//
// Возвращаемое значение:
//   Булево - Истина - в табличную часть добавлены строки с подходящими ОС, Ложь - подходящих ОС не найдено.
//
Функция ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(ПараметрыФормы, ОсновноеСредство) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Форма = ПараметрыФормы.Форма;
	Объект = ПараметрыФормы.Объект;
	Если ПараметрыФормы.Свойство("ИмяТабличнойЧасти") Тогда
		ИмяТабличнойЧасти = ПараметрыФормы.ИмяТабличнойЧасти;
	Иначе
		ИмяТабличнойЧасти = "ОС";
	КонецЕсли;
	Если ПараметрыФормы.Свойство("ПолучатьИнвентарныйНомерИзКода") Тогда
		ПолучатьИнвентарныйНомерИзКода = ПараметрыФормы.ПолучатьИнвентарныйНомерИзКода;
	Иначе
		ПолучатьИнвентарныйНомерИзКода = Ложь;
	КонецЕсли;
	
	ОсновноеСредствоНаименование = Строка(ОсновноеСредство);
	
	СписокОС = Объект[ИмяТабличнойЧасти].Выгрузить(, "ОсновноеСредство");
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Наименование", ОсновноеСредствоНаименование);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	ОсновныеСредства.Код КАК Код
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Наименование = &Наименование
	|	И (НЕ ОсновныеСредства.Ссылка В (&СписокОС))
	|	И ОсновныеСредства.ПометкаУдаления = ЛОЖЬ
	|	И ОсновныеСредства.ЭтоГруппа = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	Если НЕ ПолучатьИнвентарныйНомерИзКода Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер
		|ПОМЕСТИТЬ ИнвентарныеНомера
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		Запрос.Выполнить();
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	" + ?(ПолучатьИнвентарныйНомерИзКода, "ТаблицаОС.Код", "ЕСТЬNULL(ИнвентарныеНомера.ИнвентарныйНомер, """")") + " КАК ИнвентарныйНомер
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС" + ?(ПолучатьИнвентарныйНомерИзКода, "", "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИнвентарныеНомера КАК ИнвентарныеНомера
	|		ПО ТаблицаОС.ОсновноеСредство = ИнвентарныеНомера.ОсновноеСредство") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ШаблонСообщения = НСтр("ru = 'Другие элементы справочника с наименованием ""%1"" в справочнике ""Основные средства"" отсутствуют.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОсновноеСредствоНаименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		НоваяСтрока.ОсновноеСредство = Выборка.ОсновноеСредство;
		НоваяСтрока.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
	Возврат Истина;
	
КонецФункции // ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию()

//  Процедура перезаполняет переданную коллекцию формы подобранными основными средствами.
// По основным средствам присутствовавшим в коллекции изначально, данные колонок 
// дополняются исходными.
//
// Параметр:
//  КоллекцияОС - ДанныеФормыКоллекция, отображение табличной части с основными средствами
//  	в реквизит управляемой формы. Обязательно должна присутствовать колонка ОсновноеСредство.
//  
//  ВыбранноеЗначение - Структура, значение из обработчика ОбработкаВыбора полученное в результате
//  	подбора
// ..
//  Возвращаемое значение:
//    Массив - Массив новых строк коллекции.
//
Функция ОбработатьПодборОсновныхСредств(Знач КоллекцияОС, Знач ВыбранноеЗначение) Экспорт
	
	ТаблицаОС = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресОСВХранилище);
	
	ИсходныеДанные = КоллекцияОС.Выгрузить();
	ИсходныеДанные.Индексы.Добавить("ОсновноеСредство");
	
	ДобавленныеСтроки = Новый Массив;
	
	КоллекцияОС.Очистить();
	Для каждого СтрокаТаблицыОС Из ТаблицаОС Цикл
		ЭлементКоллекции = КоллекцияОС.Добавить();
		
		СтрокаИсходныхДанных = ИсходныеДанные.Найти(СтрокаТаблицыОС.ОсновноеСредство, "ОсновноеСредство");
		Если СтрокаИсходныхДанных <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаИсходныхДанных);
		Иначе
			ДобавленныеСтроки.Добавить(ЭлементКоллекции);
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаТаблицыОС);
	КонецЦикла;
	
	Возврат ДобавленныеСтроки;
	
КонецФункции

// Возвращает из справочника событий ОС первую найденную запись с заданным видом события,
// иначе возвращает пустую ссылку на справочник.
//
// Параметры
//  ВидСобытия (Перечисление ВидыСобытийОС): вид события.
//
// Возвращаемое значение:
//   элемент справочника событий ОС.
//
Функция ПолучитьСобытиеПоОСИзСправочника(ВидСобытия) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСобытияОС", ВидСобытия);
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ссылка,
	|	ВидСобытияОС
	|ИЗ
	|	Справочник.СобытияОС КАК СобытияОС
	|
	|ГДЕ
	|	ВидСобытияОС = &ВидСобытияОС";
	ТаблицаСобытий = Запрос.Выполнить().Выгрузить();

	Если ТаблицаСобытий.Количество()>0 Тогда
		Возврат ТаблицаСобытий[0].Ссылка;

	Иначе
		Возврат Справочники.СобытияОС.ПустаяСсылка();

	КонецЕсли;

КонецФункции // ПолучитьСобытиеОСИзСправочника()

#КонецОбласти

#КонецОбласти
