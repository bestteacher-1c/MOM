////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету НМА".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуНМА) Экспорт

	//++ Локализация
	
	ПоНаработке = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции");
				
	ПараметрыПринятияКУчетуНМА.Вставить("ПоНаработке", 
		ПараметрыПринятияКУчетуНМА.ПоНаработке ИЛИ ПоНаработке);
		
	ПоИнвентаризации = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации"));
	ПараметрыПринятияКУчетуНМА.Вставить("ПоИнвентаризации", ПоИнвентаризации);
	
	//-- Локализация
	
КонецПроцедуры

#Область ФормаДокумента

Процедура ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	ЗначенияРеквизитовДоИзменения.Вставить("СрокИспользованияБУ", Объект.СрокИспользованияБУ);
	ЗначенияРеквизитовДоИзменения.Вставить("ПервоначальнаяСтоимостьБУ", Объект.ПервоначальнаяСтоимостьБУ);
	ЗначенияРеквизитовДоИзменения.Вставить("ПервоначальнаяСтоимостьНУ", Объект.ПервоначальнаяСтоимостьНУ);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСпособыНачисленияАмортизации(Форма) Экспорт
	
	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СписокВыбора = Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора;
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный"));
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции"));
	
	Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ВспомогательныеРеквизиты, ПараметрыРеквизитовОбъекта, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ПараметрыПринятияКУчетуНМА = ВнеоборотныеАктивыКлиентСервер.ПараметрыПринятияКУчетуНМА(Объект, ВспомогательныеРеквизиты);
	
	ДоступныНастройкиРеглУчета = (Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
	
	ДоступныПараметрыАмортизацииНУ = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"))
									И Объект.ОтражатьВРеглУчете
									И Форма.ПлательщикНалогаНаПрибыль;
									
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ОтражатьВРеглУчете Тогда
			
			Если ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
				ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости Тогда
				
				Элементы.ЗаполнитьПервоначальнуюСтоимостьРегл.Видимость = Ложь;
				
				Элементы.ПервоначальнаяСтоимостьБУ.Заголовок = НСтр("ru = 'Бухгалтерский учет'");
				Элементы.ПервоначальнаяСтоимостьНУ.Заголовок = НСтр("ru = 'Налоговый учет'");
				Элементы.ПервоначальнаяСтоимостьПР.Заголовок = НСтр("ru = 'Постоянная разница'");
				Элементы.ПервоначальнаяСтоимостьВР.Заголовок = НСтр("ru = 'Временная разница'");
				
			КонецЕсли; 
			
		Иначе
			
			Элементы.ЗаполнитьПервоначальнуюСтоимостьРегл.Видимость = Ложь;
			
		КонецЕсли;
		
		Если Объект.ОтражатьВУпрУчете Тогда
			
			Если ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
				ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости Тогда
				
				Элементы.ЗаполнитьПервоначальнуюСтоимостьУпр.Видимость = Ложь;
				
				Элементы.ПервоначальнаяСтоимостьУУ.Заголовок = НСтр("ru = 'Первоначальная'");
				Элементы.ЛиквидационнаяСтоимость.Заголовок = НСтр("ru = 'Ликвидационная'");
				
				Элементы.ГруппаСтоимостьУпр.ОтображатьЗаголовок = Истина;
				
			КонецЕсли; 
			
		Иначе
			
			Элементы.ЗаполнитьПервоначальнуюСтоимостьУпр.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
									
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаУУ.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		Элементы.ГруппаОбщее.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru = 'Способ начисления амортизации'");
			Элементы.ПорядокУчетаБУ.Заголовок = НСтр("ru = 'Порядок учета'");
			Элементы.ПорядокУчетаНУ.Заголовок = НСтр("ru = 'Порядок учета'");
			
		Иначе
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru = 'Способ списания расходов'");
			Элементы.ПорядокУчетаБУ.Заголовок = НСтр("ru = 'Порядок списания'");
			Элементы.ПорядокУчетаНУ.Заголовок = НСтр("ru = 'Порядок списания'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаРасходыУУ.ОтображатьЗаголовок = 
			(Объект.ОтражатьВУпрУчете И Объект.ОтражатьВРеглУчете);
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		ПроверкаНезаполненного = ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта(
									"СтатьяРасходовУУ", "АвтоОтметкаНезаполненного", ПараметрыРеквизитовОбъекта);
		
		Если ПроверкаНезаполненного = Истина ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовУУ) Тогда
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
		ИначеЕсли ПроверкаНезаполненного = Ложь Тогда
			Если ДоступныПараметрыАмортизацииНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским и налоговым учетом'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом'");
			КонецЕсли;
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
			
			Если Объект.ОтражатьВУпрУчете Тогда
				
				Элементы.ГруппаРасходыРегл.Заголовок = ?(ДоступныПараметрыАмортизацииНУ, 
															НСтр("ru = 'Амортизация (бухгалтерский и налоговый учет)'"),
															НСтр("ru = 'Амортизация (бухгалтерский учет)'"));
			Иначе
				Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Амортизация'");
			КонецЕсли; 
														
			Элементы.ГруппаРасходыУУ.Заголовок = 
				?(ДоступныНастройкиРеглУчета,
					НСтр("ru = 'Амортизация (управленческий учет)'"),
					НСтр("ru = 'Амортизация'"));
					
		Иначе

			Если Объект.ОтражатьВУпрУчете Тогда
				Элементы.ГруппаРасходыРегл.Заголовок = ?(ДоступныПараметрыАмортизацииНУ, 
															НСтр("ru = 'Списание расходов (бухгалтерский и налоговый учет)'"),
															НСтр("ru = 'Списание расходов (бухгалтерский учет)'"));
			Иначе
				Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Списание расходов'");
			КонецЕсли; 
														
			Элементы.ГруппаРасходыУУ.Заголовок = 
				?(ДоступныНастройкиРеглУчета, 
					НСтр("ru = 'Списание расходов (управленческий учет)'"), 
					НСтр("ru = 'Списание расходов'"));
					
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
			
			СписокВыбораНУ = Форма.Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			Если Форма.ПлательщикНалогаНаПрибыль Тогда
				Если Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив") Тогда
					СтрокаПредставление = НСтр("ru = 'Начисление амортизации'");
				Иначе
					СтрокаПредставление = НСтр("ru = 'Списание расходов'");
				КонецЕсли;
				СписокВыбораНУ.Получить(0).Представление = СтрокаПредставление;
			Иначе
				СписокВыбораНУ.Получить(0).Представление = НСтр("ru = 'Включить в состав амортизируемого имущества'");
			КонецЕсли;
				
			Причина = "";
			Форма.РекомендуемыйПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
				
			Если ЗначениеЗаполнено(Форма.Объект.СрокИспользованияБУ) И Форма.Объект.СрокИспользованияБУ <= 12 Тогда
				Причина = НСтр("ru = 'Срок полезного использования не превышает 12 месяцев'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету");
			ИначеЕсли ЗначениеЗаполнено(Форма.Объект.ПервоначальнаяСтоимостьБУ) И Форма.Объект.ПервоначальнаяСтоимостьБУ <= 100000 Тогда
				Причина = НСтр("ru = 'Первоначальная стоимость не превышает 100 000 руб.'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету");
			КонецЕсли;
			
			МассивСтрок = Новый Массив;
			Если ЗначениеЗаполнено(Причина) И Форма.Объект.ПорядокУчетаНУ <> Форма.РекомендуемыйПорядокУчетаНУ Тогда
				МассивСтрок.Добавить(Причина);
				МассивСтрок.Добавить("," + " ");
				МассивСтрок.Добавить(НСтр("ru = 'рекомендуется установить значение'"));
				МассивСтрок.Добавить(" ");
				ПредставлениеРекомендуемогоПорядкаУчетаНУ = СписокВыбораНУ.НайтиПоЗначению(Форма.РекомендуемыйПорядокУчетаНУ).Представление;
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеРекомендуемогоПорядкаУчетаНУ,,,, "УстановкаПорядкаУчетаНУ"));
				МассивСтрок.Добавить(".");
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Истина;
			Иначе
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			КонецЕсли;
			
			Форма.УстановитьПорядокУчетаНУ = Новый ФорматированнаяСтрока(МассивСтрок);
		Иначе
			Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.СтраницаОтражениеРасходов.Заголовок = ?(
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации,
			НСтр("ru='Отражение доходов и расходов'"),
			НСтр("ru='Отражение расходов'"));
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетТоваров", Форма.РаздельныйУчетТоваровПоНалогообложениюНДС);
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", Форма.ПоддержкаПБУ18);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.ВедетсяУчетПостоянныхИВременныхРазниц);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(ИзмененныеРеквизиты, Объект, ПараметрыРеквизита) Экспорт

	//++ Локализация
	
	#Область СтраницаОсновное
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантПримененияЦелевогоФинансирования" Тогда
		Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = Истина;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов(Форма, СтруктураИзмененныхРеквизитов) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	ЭтоИнвентаризация = Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации");
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		И ЭтоИнвентаризация Тогда
		
		Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
		СтруктураИзмененныхРеквизитов.Вставить("ВариантПримененияЦелевогоФинансирования");
		
		Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		СтруктураИзмененныхРеквизитов.Вставить("ВидОбъектаУчета");
		
		Если Форма.ПлательщикНалогаНаПрибыль Тогда
			Объект.ПервоначальнаяСтоимостьНУ = Объект.ПервоначальнаяСтоимостьБУ;
		КонецЕсли;
		Объект.ПервоначальнаяСтоимостьПР = 0;
		Объект.ПервоначальнаяСтоимостьВР = 0;
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") Тогда
		Если Не Форма.ЕстьСвязанныеОрганизации Тогда
			Объект.ПередаватьРасходыВДругуюОрганизацию = Ложь;
			СтруктураИзмененныхРеквизитов.Вставить("ПередаватьРасходыВДругуюОрганизацию");
		КонецЕсли;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Процедура ПересчитатьСуммуВР(Форма) Экспорт

	Если (Форма.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации")
			ИЛИ НЕ Форма.СлужебныеПараметрыФормы.ЕстьУчетСебестоимости)
		И Форма.ПоддержкаПБУ18 Тогда
		
		Форма.Объект.ПервоначальнаяСтоимостьВР = 
				Форма.Объект.ПервоначальнаяСтоимостьБУ 
				- Форма.Объект.ПервоначальнаяСтоимостьНУ 
				- Форма.Объект.ПервоначальнаяСтоимостьПР;
				
	КонецЕсли; 

КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
