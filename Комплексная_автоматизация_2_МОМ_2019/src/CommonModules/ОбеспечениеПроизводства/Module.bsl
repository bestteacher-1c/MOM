
#Область ПрограммныйИнтерфейс

#Область ПараметрыОбеспечения

// Возвращает параметры обеспечения номенклатуры
//
// Параметры:
//  Номенклатура	 - СправочникСсылка.Номенклатура - Номенклатура для которой нужно получить параметры обеспечения.
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика номенклатуры.
//  Подразделение	 - СправочникСсылка.СтруктураПредприятия - Подразделение для которого нужно получить параметры обеспечения.
// 
// Возвращаемое значение:
//  Структура - Содержит свойства: Склад.
//
Функция ПараметрыОбеспеченияНоменклатуры(Номенклатура, Характеристика, Подразделение) Экспорт

	ТаблицаМатериалов = Новый ТаблицаЗначений;
	ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	СтрокаМатериал = ТаблицаМатериалов.Добавить();
	СтрокаМатериал.Номенклатура = Номенклатура; 
	СтрокаМатериал.Характеристика = Характеристика; 
	
	ПараметрыОбеспечения = ПараметрыОбеспеченияСпискаНоменклатуры(ТаблицаМатериалов, Подразделение);
	
	НастройкаОбеспечения = Новый Структура;
	НастройкаОбеспечения.Вставить("Склад", ПараметрыОбеспечения[0].Склад);

	Возврат НастройкаОбеспечения;
	
КонецФункции

// Возвращает параметры обеспечения списка номенклатуры
//
// Параметры:
//  ТаблицаМатериалов	 - ТаблицаЗначений - содержит колонки Номенклатура, Характеристика
//  Подразделение		 - СправочникСсылка.СтруктураПредприятия - подразделение для которого определяются параметры.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - содержит колонки Склад.
//
Функция ПараметрыОбеспеченияСпискаНоменклатуры(ТаблицаМатериалов, Подразделение) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаМатериалов.Номенклатура КАК Справочник.Номенклатура)                 КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаМатериалов.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика
	|ПОМЕСТИТЬ ВТТаблицаМатериалов
	|ИЗ
	|	&ТаблицаМатериалов КАК ТаблицаМатериалов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМатериалов.Номенклатура   КАК Номенклатура,
	|	ТаблицаМатериалов.Характеристика КАК Характеристика,
	|	&ТекстПоляСкладМатериалов КАК Склад
	|ИЗ
	|	ВТТаблицаМатериалов КАК ТаблицаМатериалов,
	|
	|	#ТекстСоединенияДляПолученияСкладаМатериалов";
	
	ТекстЗапросаДляПолученияСклада = ПроизводствоСервер.ТекстЗапросаНастройкиПередачиМатериалов(
		"ТаблицаМатериалов", "&Подразделение", Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения);
	
	ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"#ТекстСоединенияДляПолученияСкладаМатериалов",
						ТекстЗапросаДляПолученияСклада.ТекстСоединения);
						
	ТекстЗапроса = СтрЗаменить(
						ТекстЗапроса, 
						"&ТекстПоляСкладМатериалов",
						ТекстЗапросаДляПолученияСклада.ТекстПолеСклад);
	
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
	Запрос.УстановитьПараметр("СкладПоУмолчанию", Справочники.Склады.СкладПоУмолчанию());
	
	ПараметрыОбеспечения = Запрос.Выполнить().Выгрузить();

	Возврат ПараметрыОбеспечения;
	
КонецФункции


#КонецОбласти

#Область Прочее

// Функция возвращает структуру способа получения материалов по умолчанию
// 
// Возвращаемое значение:
//  Структура - способы получения материалов по умолчанию.
//
Функция СтруктураСпособыПолученияМатериаловПоУмолчанию() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Склад", ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"));
	Результат.Вставить("ЗаказатьНаСклад", Истина);
	Результат.Вставить("ВариантОбеспечения", ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.НеТребуется"));
	Результат.Вставить("Запланировать", Ложь);
	
	Результат.Вставить("ДатаПотребности", '00010101');
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает пустую таблицу, для выборки способов получения материалов в производство.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица материалов.
//
Функция СоздатьИсточникВыбораСпособовПолученияМатериалов() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Таблица.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	
	Таблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	Таблица.Колонки.Добавить("ПроизводитсяВПроцессе", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
	
	Таблица.Колонки.Добавить(
		"СпособПолученияМатериала", 
		Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПолученияМатериаловВСпецификации"));
	
	Таблица.Колонки.Добавить(
		"ИсточникПолученияПолуфабриката", 
		Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,СправочникСсылка.РесурсныеСпецификации"));
	
	Возврат Таблица;
	
КонецФункции

// Функция возвращает способ получения материала для этапа производства по умолчанию.
//
// Параметры:
//  ДанныеЗаказа	 - Структура - структура данных заказа:
//  	* Распоряжение           - ДокументСсылка.ЗаказНаПроизводство, ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство
//  	* ПодразделениеДиспетчер - СправочникСсылка.СтруктураПредприятия - Подразделение, ответственное за выполнение заказа
//  	* Назначение             - СправочникСсылка.Назначения - назначение обособленной потребности
//  	* НачатьНеРанее          - Дата - дата, не ранее которой необходимо начать производить.
//  ДанныеМатериала	 - Структура - структура данных материала:
//  	* Подразделение          - СправочникСсылка.СтруктураПредприятия - подразделение-получатель
//  	* ПроизводствоНаСтороне  - Булево - признак, что производство выполняется на стороне
//  	* Номенклатура           - СправочникСсылка.Номенклатура - материала, для которого определяется настройка
//  	* Характеристика         - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика материала, для которого определяется настройка
//   МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы используемые для получения способа обеспечения:
//       * ВтСпособыПолученияМатериалов - Временная таблица с полями Номенклатура, Характеристика, Назначение, Склад, ВариантОбеспечения.
//  ВариантЗаполненияОбеспечения	 - Вариант заполнения обеспечения (см. перечисление ВариантыЗаполненияОбеспеченияПроизводства)
// 
// Возвращаемое значение:
//  Структура - Содержит свойства:
//  	* Склад - СправочникСсылка.Склады - Склад, с которого передаются материалы в подразделение.
//  	* ЗаказатьНаСклад - Булево - признак, материал необходимо заказать на склад
//  	* ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения
//  	* Запланировать - Булево - признак, материал возможно.
//
Функция СпособПолученияМатериалаПоУмолчанию(ДанныеЗаказа, ДанныеМатериала, МенеджерВременныхТаблиц = Неопределено, ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	НастройкаПередачиМатериалов = СтруктураСпособыПолученияМатериаловПоУмолчанию();
	
	Если ЗначениеЗаполнено(ДанныеМатериала.Подразделение)
		И ЗначениеЗаполнено(ДанныеМатериала.Номенклатура) Тогда
		
		ТаблицаМатериалов = Новый ТаблицаЗначений;
		ТаблицаМатериалов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		ТаблицаМатериалов.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
		ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаМатериалов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		ЗаполнитьЗначенияСвойств(ТаблицаМатериалов.Добавить(), ДанныеМатериала);
		ЗаполнитьЗначенияСвойств(НастройкаПередачиМатериалов, СпособыПолученияМатериаловПоУмолчанию(ДанныеЗаказа,ТаблицаМатериалов,,ВариантЗаполненияОбеспечения)[0]);
		
	КонецЕсли;
	
	Возврат Новый ФиксированнаяСтруктура(НастройкаПередачиМатериалов);
	
КонецФункции

// Функция возвращает способы получения материалов для этапов производства по умолчанию.
//
// Параметры:
//   ДанныеЗаказа - Структура - структура данных заказа
//       * Распоряжение           - ДокументСсылка.ЗаказНаПроизводство, ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на
//           производство
//       * ПодразделениеДиспетчер - СправочникСсылка.СтруктураПредприятия - Подразделение, ответственное за выполнение заказа
//       * Назначение             - СправочникСсылка.Назначения - назначение обособленной потребности
//       * НачатьНеРанее          - Дата - дата, не ранее которой необходимо начать производить.
//   ТаблицаМатериалов - ТаблицаЗначений - таблица материалов этапа
//							Обязательные поля: Номенклатура, Характеристика, Подразделение, ПроизводствоНаСтороне,
//							Дополнительные поля: ПроизводитсяВПроцессе, СпособПолученияМатериала, ИсточникПолученияПолуфабриката.
//
//   МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы используемые для получения способа обеспечения:
//       * ВтСпособыПолученияМатериалов - Временная таблица с полями Номенклатура, Характеристика, Назначение, Склад, ВариантОбеспечения.
//  ВариантЗаполненияОбеспечения	 - Вариант заполнения обеспечения (см. перечисление ВариантыЗаполненияОбеспеченияПроизводства)
//
// Возвращаемое значение:
//   - ТаблицаЗначений - таблица материалов, дополненная способами получения материалов
//       * НомерСтроки - Число - номер строки исходной таблицы
//       * Номенклатура - СправочникСсылка.Номенклатура - материала, для которого определяется настройка
//       * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика материала, для которого
//                                                                        определяется настройка
//       * Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение-получатель 
//       * ПроизводствоНаСтороне - Булево - признак, что производство выполняется на стороне
//       * Склад - СправочникСсылка.Склады - Склад, с которого передаются материалы в подразделение. 
//       * ЗаказатьНаСклад - Булево - признак, материал необходимо заказать на склад
//       * ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения - вариант обеспечения
//       * Запланировать - Булево - признак, материал возможно.
//
Функция СпособыПолученияМатериаловПоУмолчанию(ДанныеЗаказа, ТаблицаМатериалов, МенеджерВременныхТаблиц = Неопределено, ВариантЗаполненияОбеспечения = Неопределено) Экспорт
	
	Если ТаблицаМатериалов.Колонки.Найти("Склад") = Неопределено Тогда
		ТаблицаМатериалов.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтСпособыПолученияМатериалов") = Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса
			+ ПроизводствоСервер.ТекстЗапросаВТСпособыПолученияМатериаловПустая();
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтФорматыСкладов") = Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса
			+ Справочники.ФорматыМагазинов.ТекстЗапросаВтФорматыСкладов(Ложь);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&ТекстПолеНомерСтроки                                                               КАК НомерСтроки,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Номенклатура КАК Справочник.Номенклатура)                 КАК Номенклатура,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Подразделение КАК Справочник.СтруктураПредприятия)        КАК Подразделение,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.ПроизводствоНаСтороне КАК БУЛЕВО)                         КАК ПроизводствоНаСтороне,
		|	ВЫРАЗИТЬ(МатериалыИУслуги.Склад КАК Справочник.Склады)                         		КАК Склад,
		|	&ТекстПолеПроизводитсяВПроцессе                                                     КАК ПроизводитсяВПроцессе,
		|	&ТекстПолеСпособПолученияМатериала                                                  КАК СпособПолученияМатериала,
		|	&ТекстПолеИсточникПолученияПолуфабриката                                            КАК ИсточникПолученияПолуфабриката
		|ПОМЕСТИТЬ ВТМатериалыИУслуги
		|ИЗ
		|	&ТаблицаМатериалов КАК МатериалыИУслуги
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИУслуги.НомерСтроки           КАК НомерСтроки,
		|	МатериалыИУслуги.Номенклатура          КАК Номенклатура,
		|	МатериалыИУслуги.Характеристика        КАК Характеристика,
		|	МатериалыИУслуги.Подразделение         КАК Подразделение,
		|	МатериалыИУслуги.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
		
		// Начало. Склад
		|	ВЫБОР КОГДА МатериалыИУслуги.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
		|		&ТекстПолеСклад
		|	ИНАЧЕ
		|		МатериалыИУслуги.Склад
		|	КОНЕЦ КАК Склад,
		// Конец. Склад
		
		// Начало. Заказать на склад
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ИЛИ МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																	ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|			ТОГДА ЛОЖЬ
		|		КОГДА МатериалыИУслуги.ПроизводитсяВПроцессе ТОГДА
		|			ВЫБОР 
		|				КОГДА ВЫРАЗИТЬ(МатериалыИУслуги.Подразделение КАК Справочник.СтруктураПредприятия).СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
		|					ТОГДА ЛОЖЬ
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Подразделение
		|					ТОГДА ЛОЖЬ
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Подразделение
		|					ТОГДА ИСТИНА
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Подразделение
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|		КОГДА &ТекстПолеОснование = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
		|				ИЛИ МатериалыИУслуги.ПроизводствоНаСтороне
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                       КАК ЗаказатьНаСклад,
		// Конец. Заказать на склад

		// Начало. Вариант обеспечения
		|	&ТекстПолеВариантОбеспечения                                КАК ВариантОбеспечения,
		// Конец. Вариант обеспечения
		
		|	&ДатаПотребности КАК ДатаПотребности,
		|	ВЫБОР
		|		КОГДА (&ПодразделениеДиспетчер = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(СпрСпособОбеспечения.ИсточникОбеспеченияПотребностей, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|					В (&ПодразделениеДиспетчер,
		|					   НЕОПРЕДЕЛЕНО,
		|					   ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))
		|				И ЕСТЬNULL(СпрСпособОбеспечения.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                       КАК Запланировать
		|ИЗ
		|	ВТМатериалыИУслуги КАК МатериалыИУслуги
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ПроизводимоеВПроцессеИзделие
		|		ПО ПроизводимоеВПроцессеИзделие.Ссылка = МатериалыИУслуги.ИсточникПолученияПолуфабриката
		|			И МатериалыИУслуги.ПроизводитсяВПроцессе
		|			И ПроизводимоеВПроцессеИзделие.Номенклатура = МатериалыИУслуги.Номенклатура
		|			И (ПроизводимоеВПроцессеИзделие.Характеристика = МатериалыИУслуги.Характеристика
		|				ИЛИ ПроизводимоеВПроцессеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|		// Сюда подставляется запрос для получения склада, варианта обеспечения
		|		%ТекстЗапросаПараметрыОбеспечения%
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО ВЫБОР КОГДА МатериалыИУслуги.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ТОГДА
		|				&ТекстПолеСклад
		|			ИНАЧЕ
		|				МатериалыИУслуги.Склад
		|			КОНЕЦ = СпрСклады.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособОбеспечения
		|		ПО &ПодстановкаОсновногоСпособаОбеспечения
		|";
		
	Если ТаблицаМатериалов.Колонки.Найти("ПроизводитсяВПроцессе") <> Неопределено Тогда
		ТекстПолеПроизводитсяВПроцессе = "МатериалыИУслуги.ПроизводитсяВПроцессе";
	Иначе
		ТекстПолеПроизводитсяВПроцессе = "Ложь";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеПроизводитсяВПроцессе",
		ТекстПолеПроизводитсяВПроцессе);
		
	// ТекстПолеНомерСтроки
	Если ТаблицаМатериалов.Колонки.Найти("НомерСтроки") <> Неопределено Тогда
		ТекстПолеНомерСтроки = "МатериалыИУслуги.НомерСтроки";
	Иначе
		ТекстПолеНомерСтроки = "0";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеНомерСтроки",
		ТекстПолеНомерСтроки);
		
	// ТекстПолеСпособПолученияМатериала
	Если ТаблицаМатериалов.Колонки.Найти("СпособПолученияМатериала") <> Неопределено Тогда
		ТекстПолеСпособПолученияМатериала = "МатериалыИУслуги.СпособПолученияМатериала";
	Иначе
		ТекстПолеСпособПолученияМатериала = "ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.Обеспечивать)";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеСпособПолученияМатериала",
		ТекстПолеСпособПолученияМатериала);
	
	// ТекстПолеИсточникПолученияПолуфабриката
	Если ТаблицаМатериалов.Колонки.Найти("ИсточникПолученияПолуфабриката") <> Неопределено Тогда
		ТекстПолеИсточникПолученияПолуфабриката = "МатериалыИУслуги.ИсточникПолученияПолуфабриката";
	Иначе
		ТекстПолеИсточникПолученияПолуфабриката = 
			"ВЫБОР 
			|	КОГДА ИСТИНА
			|		ТОГДА ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
			|КОНЕЦ";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеИсточникПолученияПолуфабриката",
		ТекстПолеИсточникПолученияПолуфабриката);
		
	//
	ТекстЗапросаПараметрыОбеспечения = ПроизводствоСервер.ТекстЗапросаПараметрыОбеспечения(
		"МатериалыИУслуги", "СпособПолученияМатериала",, ВариантЗаполненияОбеспечения);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеСклад",
		ТекстЗапросаПараметрыОбеспечения.ТекстПолеСклад);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеВариантОбеспечения",
		ТекстЗапросаПараметрыОбеспечения.ТекстПолеВариантОбеспечения);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстПолеОснование",
		ТекстЗапросаПараметрыОбеспечения.ТекстПолеОснование);
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"%ТекстЗапросаПараметрыОбеспечения%",
		ТекстЗапросаПараметрыОбеспечения.ТекстСоединения);
	
	ПоляСоединения = "МатериалыИУслуги.Номенклатура, МатериалыИУслуги.Характеристика,СпрСклады.Ссылка";
	ИмяПараметра   = "ПодстановкаОсновногоСпособаОбеспечения";
	
	ТекстЗапроса = РегистрыСведений.СхемыОбеспечения.ПодставитьСоединениеДляПолученияСпособаОбеспечения(
		ТекстЗапроса, ИмяПараметра, ПоляСоединения);

	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ПодразделениеДиспетчер", ДанныеЗаказа.ПодразделениеДиспетчер);
	Запрос.УстановитьПараметр("СкладПоУмолчанию", Справочники.Склады.СкладПоУмолчанию());
	
	Если ДанныеЗаказа.Свойство("ДатаПотребности") Тогда
		Запрос.УстановитьПараметр("ДатаПотребности", ДанныеЗаказа.ДатаПотребности);
	ИначеЕсли ДанныеЗаказа.Свойство("НачатьНеРанее") Тогда
		Запрос.УстановитьПараметр("ДатаПотребности", ДанныеЗаказа.НачатьНеРанее);
	Иначе
		Запрос.УстановитьПараметр("ДатаПотребности", '00010101');
	КонецЕсли;
	
	Если ДанныеЗаказа.Свойство("Распоряжение") Тогда
		Запрос.УстановитьПараметр("Распоряжение", ДанныеЗаказа.Распоряжение);
	Иначе
		Запрос.УстановитьПараметр("Распоряжение", Неопределено);
	КонецЕсли;
	
	Если ДанныеЗаказа.Свойство("Назначение") Тогда
		Запрос.УстановитьПараметр("Назначение", ДанныеЗаказа.Назначение);
	Иначе
		Запрос.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаМатериалов", ТаблицаМатериалов);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц, "ВТМатериалыИУслуги");
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область Прочее


Функция ВариантЗаполненияОбеспеченияПоВерсииПроизводства(Знач ИспользоватьПроизводство2_2 = Неопределено) Экспорт
	
	Если ИспользоватьПроизводство2_2 = Неопределено Тогда
		ИспользоватьПроизводство2_2 = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеПроизводством2_2")
	КонецЕсли;
	
	Если ИспользоватьПроизводство2_2 Тогда
		Возврат Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоСхемамОбеспечения;
	Иначе
		Возврат Перечисления.ВариантыЗаполненияОбеспеченияПроизводства.ПоНастройкамПередачиВПроизводство;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
