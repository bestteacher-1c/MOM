////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ЕстьУчетВнеоборотныхАктивов2_2() Экспорт

	Результат = Ложь;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет КАК Таблица
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет КАК Таблица
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = НЕ Результат.Пустой();
	
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Возвращает дату начала учета внеоборотных активов версии 2.4.
// 
// Возвращаемое значение:
//  Дата - Дата начала учета.
//
Функция ДатаНачалаУчетаВнеоборотныхАктивов2_4() Экспорт

	ДатаНачалаУчета = '000101010000';
	
	//++ Локализация
	ДатаНачалаУчета = Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Получить();
	//-- Локализация
	
	Возврат ДатаНачалаУчета;
	
КонецФункции

#Область ОбновлениеИБ

Процедура РегламентированныйУчетВНА_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	// Регистрация не требуется
	Возврат;
	
КонецПроцедуры

Процедура РегламентированныйУчетВНА_ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	//++ Локализация
	Если НЕ Константы.РегламентированныйУчетВНА.Получить() Тогда
		МенеджерЗначения = Константы.РегламентированныйУчетВНА.СоздатьМенеджерЗначения();
		МенеджерЗначения.Значение = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения);
	КонецЕсли;
	//-- Локализация
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовЗарегистрацииДанныхКОбработкеРегистраПрочиеРасходы(СписокЗапросов) Экспорт

	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.Регистратор ССЫЛКА Документ.РегламентнаяОперация
	|	И ВЫРАЗИТЬ(ПрочиеРасходы.Регистратор КАК Документ.РегламентнаяОперация).ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей)
	|	И ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	ПрочиеРасходы.УдалитьИсточникДвижений <> ЗНАЧЕНИЕ(Перечисление.УдалитьИсточникиДвижений.ПустаяСсылка)
	|	И ПрочиеРасходы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.ПустаяСсылка)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПрочиеРасходыДляПереходаНаНовуюВерсию(Регистратор, НаборЗаписей) Экспорт

	//++ Локализация
	
	ДанныеОбъекта = Неопределено;
	
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.РегламентнаяОперация") Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
		Блокировка.Заблокировать();
		
		ТипОперацииДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "ТипОперации");
		
	КонецЕсли;
	
	Для каждого ЗаписьРегистра Из НаборЗаписей Цикл
		
		Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.РегламентнаяОперация")
			И ТипОперацииДокумента = Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей Тогда
			ЗаписьРегистра.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПризнаниеВНУЛизинговыхПлатежей;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ЗаписьРегистра.УдалитьИсточникДвижений)
			И НЕ ЗначениеЗаполнено(ЗаписьРегистра.ВидИсточника) Тогда
			ЗаписьРегистра.ВидИсточника = Перечисления.ВидыИсточниковДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС;
			ЗаписьРегистра.УдалитьИсточникДвижений = Перечисления.УдалитьИсточникиДвижений.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовЗарегистрацииДанныхКОбработкеРегистраПартииПрочихРасходов(СписокЗапросов) Экспорт

	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииПрочихРасходов.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|ГДЕ
	|	ПартииПрочихРасходов.Регистратор ССЫЛКА Документ.РегламентнаяОперация
	|	И ВЫРАЗИТЬ(ПартииПрочихРасходов.Регистратор КАК Документ.РегламентнаяОперация).ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей)
	|	И ПартииПрочихРасходов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПартииПрочихРасходовДляПереходаНаНовуюВерсию(Регистратор, Набор) Экспорт

	//++ Локализация
	
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.РегламентнаяОперация") Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
		Блокировка.Заблокировать();
		
		ТипОперацииДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "ТипОперации");
		
	КонецЕсли; 
	
	Для каждого ЗаписьНабора Из Набор Цикл
		
		Если НЕ ЗначениеЗаполнено(ЗаписьНабора.ХозяйственнаяОперация)
			И ТипОперацииДокумента = Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей Тогда
			ЗаписьНабора.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПризнаниеВНУЛизинговыхПлатежей;
		КонецЕсли; 
		
	КонецЦикла; 
			
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовЗарегистрацииДанныхКОбработкеРегистраПрочиеАктивыПассивы(СписокЗапросов) Экспорт

	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|ГДЕ
	|	ПрочиеАктивыПассивы.УдалитьИсточникДвижений <> ЗНАЧЕНИЕ(Перечисление.УдалитьИсточникиДвижений.ПустаяСсылка)
	|	И ПрочиеАктивыПассивы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.ПустаяСсылка)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработатьДанныеРегистраПрочиеАктивыПассивыДляПереходаНаНовуюВерсию(НаборЗаписей) Экспорт

	//++ Локализация
	Для каждого Запись Из НаборЗаписей Цикл
	
		Если ЗначениеЗаполнено(Запись.УдалитьИсточникДвижений)
			И НЕ ЗначениеЗаполнено(Запись.ВидИсточника) Тогда
			Запись.ВидИсточника = Перечисления.ВидыИсточниковДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС;
			Запись.УдалитьИсточникДвижений = Перечисления.УдалитьИсточникиДвижений.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокЗапросовЗарегистрацииДанныхКОбработкеРегистраПервоначальныеСведенияОС(СписокЗапросов) Экспорт

	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК Данные
	|ГДЕ
	|	Данные.Регистратор ССЫЛКА Документ.ПоступлениеАрендованныхОС
	|	И Данные.Арендодатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК Данные
	|ГДЕ
	|	Данные.Регистратор ССЫЛКА Документ.ВыбытиеАрендованныхОС
	|	И Данные.Арендодатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Регистратор
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК Данные
	|ГДЕ
	|	Данные.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И ВЫРАЗИТЬ(Данные.Регистратор КАК Документ.ВводОстатковВнеоборотныхАктивов2_4).ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОС),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом))
	|	И Данные.Арендодатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокРегистраторовРегистраПервоначальныеСведенияОСДляОбработки(Регистраторы) Экспорт

	//++ Локализация
	Регистраторы.Добавить("Документ.ПоступлениеАрендованныхОС");
	Регистраторы.Добавить("Документ.ВыбытиеАрендованныхОС");
	Регистраторы.Добавить("Документ.ВводОстатковВнеоборотныхАктивов2_4");
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

//++ Локализация

// Определяет максимальный размер амортизационной премии.
//
// Параметры:
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационные группа ОС.
// 
// Возвращаемое значение:
//  Число - процент амортизационной премии.
//
Функция ПроцентКапитальныхВложенийВключаемыхВРасходыНУ(АмортизационнаяГруппа) Экспорт

	Если НЕ ЗначениеЗаполнено(АмортизационнаяГруппа) Тогда
		Возврат 0;
	ИначеЕсли АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ТретьяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ЧетвертаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПятаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ШестаяГруппа
		ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.СедьмаяГруппа Тогда
		
		Возврат 30;
	Иначе
		Возврат 10;
	КонецЕсли;

КонецФункции

// Формирует временную таблицу, которая содержит сведения об основных средствах, указанных в документах.
//  Может использоваться при печати.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Менеджер временных таблиц.
//  СписокДокументов		 - Массив					 - Список документов.
//
Процедура ПолучитьСведенияОбОсновныхСредствахВДокументах(МенеджерВременныхТаблиц, СписокДокументов) Экспорт

	ИспользуемыеВременныеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	ОбъектыДляКоторыхСведенияНеАктуальны = ВнеоборотныеАктивы.ОтложенноеФормированиеДвиженийПриФормированииПроводок(СписокДокументов);
	ДанныеДляПредварительногоРасчетаСтоимости = ВнеоборотныеАктивы.ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(СписокДокументов);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ОбъектыДляКоторыхСведенияНеАктуальны, 
		ДанныеДляПредварительногоРасчетаСтоимости.ОбъектыДляКоторыхСведенияНеАктуальны,
		Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", СписокДокументов);
	Запрос.УстановитьПараметр("ОбъектыДляКоторыхСведенияНеАктуальны", ОбъектыДляКоторыхСведенияНеАктуальны);
	
	// Вычисление периода, за который нужно получить данные (для оптимизации).
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК НачалоПериода,
	|	ЕСТЬNULL(МАКСИМУМ(Т.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК КонецПериода
	|ИЗ
	|	втОбъектыДокументов КАК Т";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	НачалоПериода = '000101010000';
	КонецПериода = '000101010000';
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.НачалоПериода) Тогда
			НачалоПериода = НачалоМесяца(Выборка.НачалоПериода);
			КонецПериода = КонецМесяца(Выборка.КонецПериода);
		КонецЕсли; 
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ДатаНачалаУчета24 = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ПолучитьДанные22 = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
						И НачалоПериода < ДатаНачалаУчета24;
		
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ДатаНачалаУчета24);
	Запрос.УстановитьПараметр("ПолучитьДанные22", ПолучитьДанные22);
	
	СписокЗапросов = Новый Массив;
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС_СрезПоследних КАК ТаблицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СчетаБухгалтерскогоУчетаОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыПараметров.Ссылка КАК Ссылка,
		|	ПериодыПараметров.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|ИЗ
		|	втОбъектыДокументов КАК ПериодыПараметров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаПоследнийПериод
		|		ПО (ТаблицаПоследнийПериод.ОсновноеСредство = ПериодыПараметров.ОсновноеСредство)
		|			И (ТаблицаПоследнийПериод.Период <= ПериодыПараметров.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыПараметров.Ссылка,
		|	ПериодыПараметров.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	ПериодСрезаПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСрезПоследних.Ссылка КАК Ссылка,
		|	ТаблицаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаРегистраНаДату.СчетУчета КАК СчетУчета,
		|	ТаблицаРегистраНаДату.СчетАмортизации КАК СчетНачисленияАмортизации
		|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияОС
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС_СрезПоследних КАК ТаблицаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ТаблицаРегистраНаДату
		|		ПО (ТаблицаРегистраНаДату.ОсновноеСредство = ТаблицаСрезПоследних.ОсновноеСредство)
		|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПараметрыЦелевогоФинансированияОС_СрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета КАК Счет
		|ПОМЕСТИТЬ СписокСчетов
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетУчета
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСчетов.СчетНачисленияАмортизации
		|ИЗ
		|	ПараметрыЦелевогоФинансированияОС КАК СписокСчетов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокСчетов.СчетУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Период КАК Период,
		|	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОсновноеСредство,
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт
		|ПОМЕСТИТЬ втХозрасчетный
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&ДатаНачалаУчета24,
		|			Регистратор,
		|			,
		|			Счет В
		|				(ВЫБРАТЬ
		|					СписокСчетов.Счет
		|				ИЗ
		|					СписокСчетов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
		|			(Субконто1) В
		|				(ВЫБРАТЬ
		|					Т.ОсновноеСредство
		|				ИЗ
		|					втОбъектыДокументов КАК Т)) КАК ХозрасчетныйОстаткиИОбороты
		|ГДЕ
		|	НЕ ХозрасчетныйОстаткиИОбороты.Регистратор = НЕОПРЕДЕЛЕНО";
		
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСтоимость.Период КАК Период,
	|	ТаблицаСтоимость.Регистратор КАК Регистратор,
	|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаСтоимость.СтоимостьРеглПриход + ТаблицаСтоимость.СтоимостьЦФПриход КАК СтоимостьПриход,
	|	ТаблицаСтоимость.СтоимостьРеглРасход + ТаблицаСтоимость.СтоимостьЦФРасход КАК СтоимостьРасход,
	|	ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток КАК СтоимостьКонечныйОстаток
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаСтоимость
	|ГДЕ
	|	(ТаблицаСтоимость.СтоимостьРеглКонечныйОстаток + ТаблицаСтоимость.СтоимостьЦФКонечныйОстаток) <> 0
	|		ИЛИ (ТаблицаСтоимость.СтоимостьРеглОборот + ТаблицаСтоимость.СтоимостьЦФОборот) <> 0
	|
	|//втСтоимостиЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Период КАК Период,
	|	ТаблицаАмортизация.Регистратор КАК Регистратор,
	|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаАмортизация.АмортизацияРеглРасход + ТаблицаАмортизация.АмортизацияЦФРасход КАК АмортизацияПриход,
	|	ТаблицаАмортизация.АмортизацияРеглПриход + ТаблицаАмортизация.АмортизацияЦФПриход КАК АмортизацияРасход,
	|	-(ТаблицаАмортизация.АмортизацияРеглКонечныйОстаток + ТаблицаАмортизация.АмортизацияЦФКонечныйОстаток) КАК АмортизацияКонечныйОстаток
	|ПОМЕСТИТЬ втАмортизацияЗаписи
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ТаблицаАмортизация
	|
	|//втАмортизацияЗаписи22//
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период";
	
	Если ПолучитьДанные22 Тогда
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаСтоимость.Период КАК Период,
		|	ТаблицаСтоимость.Регистратор КАК Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаСтоимость.СуммаОборотДт) КАК СтоимостьПриход,
		|	СУММА(ТаблицаСтоимость.СуммаОборотКт) КАК СтоимостьРасход,
		|	СУММА(ТаблицаСтоимость.СуммаКонечныйОстатокДт) КАК СтоимостьКонечныйОстаток
		|ИЗ
		|	втХозрасчетный КАК ТаблицаСтоимость
		|ГДЕ
		|	ТаблицаСтоимость.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетУчета
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСтоимость.Период,
		|	ТаблицаСтоимость.Регистратор,
		|	ТаблицаСтоимость.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втСтоимостиЗаписи22//", ТекстЗапроса22);
		
		ТекстЗапроса22 =
		"		
		|ОБЪЕДИНИТЬ ВСЕ
		|		
		|ВЫБРАТЬ
		|	ТаблицаАмортизация.Период КАК Период,
		|	ТаблицаАмортизация.Регистратор КАК Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	СУММА(ТаблицаАмортизация.СуммаОборотКт) КАК АмортизацияПриход,
		|	СУММА(ТаблицаАмортизация.СуммаОборотДт) КАК АмортизацияРасход,
		|	СУММА(ТаблицаАмортизация.СуммаКонечныйОстатокКт) КАК АмортизацияКонечныйОстаток
		|ИЗ
		|	втХозрасчетный КАК ТаблицаАмортизация
		|ГДЕ
		|	ТаблицаАмортизация.Счет В
		|			(ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				СчетаБухгалтерскогоУчетаОС КАК СписокСчетов
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				СписокСчетов.СчетНачисленияАмортизации
		|			ИЗ
		|				ПараметрыЦелевогоФинансированияОС КАК СписокСчетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаАмортизация.Период,
		|	ТаблицаАмортизация.Регистратор,
		|	ТаблицаАмортизация.ОсновноеСредство";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//втАмортизацияЗаписи22//", ТекстЗапроса22);
		
	КонецЕсли; 
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце.
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0) КАК СтоимостьОборот
	|ПОМЕСТИТЬ втСтоимостиРаспределениеНДС
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.СтоимостьПриход, 0) - ЕСТЬNULL(РаспределениеНДС.СтоимостьРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка КАК Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство КАК ОсновноеСредство,
	|	втСтоимостиЗаписи.СтоимостьКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0) КАК Стоимость,
	|
	// Содержит изменение стоимости документом, например, изменение сумму затрат на модернизацию.
	|	СУММА(втСтоимостиЗаписиПриход.СтоимостьПриход)
	|		+ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(втСтоимостиПериод.Ссылка) В (
	|						ТИП(Документ.ПринятиеКУчетуОС),
	|						ТИП(Документ.ПринятиеКУчетуОС2_4),
	|						ТИП(Документ.МодернизацияОС),
	|						ТИП(Документ.МодернизацияОС2_4))
	|					ТОГДА СУММА(ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СтоимостьПриход,
	|
	|	СУММА(втСтоимостиЗаписиПриход.СтоимостьРасход) КАК СтоимостьРасход
	
	|ПОМЕСТИТЬ втСтоимости
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписиПриход
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписиПриход.ОсновноеСредство
	|			И втСтоимостиПериод.Ссылка = втСтоимостиЗаписиПриход.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРаспределениеНДС КАК РаспределениеНДС
	|		ПО втСтоимостиПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втСтоимостиПериод.Период >= РаспределениеНДС.Период
	|			И втСтоимостиПериод.Период <> КОНЕЦПЕРИОДА(втСтоимостиПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втСтоимостиПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство,
	|	втСтоимостиЗаписи.СтоимостьКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.СтоимостьОборот, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(втАмортизацияЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Дата КАК Дата,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втАмортизацияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И КОНЕЦПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) >= втАмортизацияЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Дата,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Сумма НДС, включенная в стоимость в конце месяце,
	// Она должна учитываться с момента принятия к учету или модернизации.
	|ВЫБРАТЬ
	|	МИНИМУМ(ЕСТЬNULL(ПринятиеКУчетуИлиМодернизация.Период, НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ))) КАК Период,
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0) КАК АмортизацияОборот
	|ПОМЕСТИТЬ втАмортизацияРаспределениеНДС
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК РаспределениеНДС
	|		ПО втОбъектыДокументов.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата < РаспределениеНДС.Период
	|			И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(РаспределениеНДС.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК ПринятиеКУчетуИлиМодернизация
	|		ПО РаспределениеНДС.ОсновноеСредство = ПринятиеКУчетуИлиМодернизация.ОсновноеСредство
	|			И НАЧАЛОПЕРИОДА(РаспределениеНДС.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПринятиеКУчетуИлиМодернизация.Период, МЕСЯЦ)
	|			И ТИПЗНАЧЕНИЯ(ПринятиеКУчетуИлиМодернизация.Регистратор) В (
	|				ТИП(Документ.ПринятиеКУчетуОС),
	|				ТИП(Документ.ПринятиеКУчетуОС2_4),
	|				ТИП(Документ.МодернизацияОС),
	|				ТИП(Документ.МодернизацияОС2_4))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ),
	|	втОбъектыДокументов.ОсновноеСредство,
	|	ЕСТЬNULL(РаспределениеНДС.АмортизацияПриход, 0) - ЕСТЬNULL(РаспределениеНДС.АмортизацияРасход, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втАмортизацияПериод.Ссылка КАК Ссылка,
	|	втАмортизацияЗаписи.ОсновноеСредство КАК ОсновноеСредство,
	|	втАмортизацияЗаписи.АмортизацияКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0) КАК Амортизация,
	
	// Содержит изменение амортизации документом.
	|	СУММА(втАмортизацияЗаписиПриход.АмортизацияПриход) КАК АмортизацияПриход,
	|	СУММА(втАмортизацияЗаписиПриход.АмортизацияРасход)
	|		+ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(втАмортизацияПериод.Ссылка) В (
	|						ТИП(Документ.ПринятиеКУчетуОС),
	|						ТИП(Документ.ПринятиеКУчетуОС2_4),
	|						ТИП(Документ.МодернизацияОС),
	|						ТИП(Документ.МодернизацияОС2_4))
	|					ТОГДА СУММА(ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК АмортизацияРасход
	|ПОМЕСТИТЬ втАмортизация
	|ИЗ
	|	втАмортизацияПериод КАК втАмортизацияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписи
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписи.ОсновноеСредство
	|			И втАмортизацияПериод.Период = втАмортизацияЗаписи.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияЗаписи КАК втАмортизацияЗаписиПриход
	|		ПО втАмортизацияПериод.ОсновноеСредство = втАмортизацияЗаписиПриход.ОсновноеСредство
	|			И втАмортизацияПериод.Ссылка = втАмортизацияЗаписиПриход.Регистратор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияРаспределениеНДС КАК РаспределениеНДС
	|		ПО втАмортизацияПериод.ОсновноеСредство = РаспределениеНДС.ОсновноеСредство
	|			И втАмортизацияПериод.Период >= РаспределениеНДС.Период
	|			И втАмортизацияПериод.Период <> КОНЕЦПЕРИОДА(втАмортизацияПериод.Период, МЕСЯЦ)
	|			И НАЧАЛОПЕРИОДА(втАмортизацияПериод.Дата, МЕСЯЦ) = РаспределениеНДС.НачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	втАмортизацияПериод.Ссылка,
	|	втАмортизацияЗаписи.ОсновноеСредство,
	|	втАмортизацияЗаписи.АмортизацияКонечныйОстаток + ЕСТЬNULL(РаспределениеНДС.АмортизацияОборот, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПервоначальныеСведенияОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И (втОбъектыДокументов.Дата >= ПервоначальныеСведения.Период
	|				ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведения.Регистратор) = ТИП(Документ.РаспределениеНДС)
	|					И НАЧАЛОПЕРИОДА(втОбъектыДокументов.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПервоначальныеСведения.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведения.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведения.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведения.ОсновноеСредство.КодПоОКОФ КАК КодПоОКОФ,
	|	ПервоначальныеСведения.ОсновноеСредство.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ,
	|	ПервоначальныеСведения.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4 КАК ПеремещениеОС2_4
	|		ПО ПеремещениеОС2_4.Ссылка = ПервоначальныеСведения.Регистратор
	|ГДЕ
	|	ПеремещениеОС2_4.Ссылка ЕСТЬ NULL
	|		ИЛИ ПеремещениеОС2_4.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|		ИЛИ ПеремещениеОС2_4.ОрганизацияПолучатель = ПервоначальныеСведения.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// МестонахождениеОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втМестонахождениеПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= МестонахождениеБУ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= МестонахождениеБУ.Период
	|ГДЕ
	|	&ПолучитьДанные22
	|	И втОбъектыДокументов.Дата < &ДатаНачалаУчета24
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеПериод.Ссылка КАК Ссылка,
	|	МестонахождениеБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеБУ.МОЛ КАК МОЛ,
	|	МестонахождениеБУ.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождение
	|ИЗ
	|	втМестонахождениеПериод КАК втМестонахождениеПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеБУ
	|		ПО втМестонахождениеПериод.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втМестонахождениеПериод.Период = МестонахождениеБУ.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втМестонахождениеПериод.Ссылка КАК Ссылка,
	|	МестонахождениеБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеБУ.МОЛ КАК МОЛ,
	|	МестонахождениеБУ.Местонахождение КАК Местонахождение
	|ИЗ
	|	втМестонахождениеПериод КАК втМестонахождениеПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеБУ
	|		ПО втМестонахождениеПериод.ОсновноеСредство = МестонахождениеБУ.ОсновноеСредство
	|			И втМестонахождениеПериод.Период = МестонахождениеБУ.Период
	|			И втМестонахождениеПериод.Период < &ДатаНачалаУчета24
	|ГДЕ
	|	&ПолучитьДанные22
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПараметрыАмортизацииОСБУ
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втОбъектыДокументов.Организация = ПараметрыАмортизации.Организация
	|			И втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПараметрыАмортизации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизации.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииПериод.Организация = ПараметрыАмортизации.Организация
	|			И втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизации.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ПорядокУчетаОС
	|ВЫБРАТЬ
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втОбъектыДокументов.Дата >= ПорядокУчетаОС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСПериод.Ссылка КАК Ссылка,
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	втПорядокУчетаОСПериод КАК втПорядокУчетаОСПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Период = ПорядокУчетаОС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(втПервоначальныеСведения.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПервоначальнаяСтоимостьБУ, 0) КАК ПервоначальнаяСтоимостьБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.МетодНачисленияАмортизацииБУ, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) КАК ПорядокУчетаБУ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втПервоначальныеСведения.ГруппаОС, ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)) КАК ГруппаОС,
	|	ЕСТЬNULL(втПервоначальныеСведения.КодПоОКОФ, ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка)) КАК КодПоОКОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.ШифрПоЕНАОФ, ЗНАЧЕНИЕ(Справочник.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов.ПустаяСсылка)) КАК ШифрПоЕНАОФ,
	|	ЕСТЬNULL(втПервоначальныеСведения.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|	ЕСТЬNULL(втМестонахождение.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождение.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|	ЕСТЬNULL(втПорядокУчетаОС.ГруппаФинансовогоУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(втПорядокУчетаОС.ГруппаФинансовогоУчета.СчетУчетаАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втПараметрыАмортизации.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) - ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьОборот,
	|	ЕСТЬNULL(втСтоимости.СтоимостьПриход, 0) КАК СтоимостьПриход,
	|	ЕСТЬNULL(втСтоимости.СтоимостьРасход, 0) КАК СтоимостьРасход,
	|	ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) - ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(втАмортизация.АмортизацияПриход, 0) КАК АмортизацияПриход,
	|	ЕСТЬNULL(втАмортизация.АмортизацияРасход, 0) КАК АмортизацияРасход,
	|	ЕСТЬNULL(втСтоимости.Стоимость, 0) - ЕСТЬNULL(втАмортизация.Амортизация, 0) КАК ОстаточнаяСтоимость,
	|	НЕ втОбъектыДокументов.ОсновноеСредство В (&ОбъектыДляКоторыхСведенияНеАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождение КАК втМестонахождение
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождение.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождение.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втСтоимости
	|		ПО втОбъектыДокументов.Ссылка = втСтоимости.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втСтоимости.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизация КАК втАмортизация
	|		ПО втОбъектыДокументов.Ссылка = втАмортизация.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втАмортизация.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ГруппаОС) КАК КоличествоРазличныхГруппаОС,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КодПоОКОФ) КАК КоличествоРазличныхКодПоОКОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК КоличествоРазличныхШифрПоЕНАОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК КоличествоРазличныхАмортизационнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоличествоРазличныхКоэффициентАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ГруппаОС) КАК ГруппаОС,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КодПоОКОФ) КАК КодПоОКОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК ШифрПоЕНАОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоэффициентАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	МИНИМУМ(втСведенияОбъектовДокументов.СведенияАктуальны) КАК СведенияАктуальны
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка";
	
	СписокЗапросов.Добавить(ТекстЗапроса);

	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Выполнить();
	
	ИспользуемыеВременныеТаблицы.Добавить("втСведенияОбъектовДокументов");
	ИспользуемыеВременныеТаблицы.Добавить("втОбщиеСведенияОбъектовДокументов");
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВременныеТаблицы);
	
КонецПроцедуры

// Определяет необходимость указания статьи расходов для отражения расходов по имущественным налогам.
//
// Параметры:
//  Организация				 - СправочникСсылка.Организации			 - Организация документа.
//  Дата					 - Дата									 - Дата документа.
//  СписокОС				 - Массив								 - Список ОС документа.
//  ГруппаОС				 - ПеречислениеСсылка.ГруппыОС			 - Группа основных средств.
//  АмортизационнаяГруппа	 - ПеречислениеСсылка.АмортизационныеГруппы	 - Амортизационная группа основных средств.
// 
// Возвращаемое значение:
//  Булево - Истина, если требуется заполнить статью.
//
Функция ТребуетсяНастройкаОтраженияРасходовПоНалогам(Организация, Дата, СписокОС, ГруппаОС, АмортизационнаяГруппа) Экспорт

	Если НЕ ЗначениеЗаполнено(СписокОС) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Дата >= '201501010000'
		И Дата < '201901010000'
		И (АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПерваяГруппа
			ИЛИ АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВтораяГруппа) Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Если ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
		
		Возврат Ложь; // Земельные участки.
		
	ИначеЕсли ЕстьНедвижимоеИмущество(СписокОС, ГруппаОС) Тогда
		
		Возврат Истина; // Недвижимое имущество.
		
	Иначе
		
		// Движимое имущество.
		Если Дата >= '201901010000' Тогда
			
			Возврат Ложь;
			
		ИначеЕсли Дата < '201301010000' Тогда
			
			Возврат Истина;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(Организация)
			ИЛИ НЕ ЗначениеЗаполнено(ГруппаОС)
			ИЛИ Дата < '201801010000' Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Дата, Организация = &Организация) КАК СтавкиНалогаНаИмущество
		|ГДЕ
		|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		Возврат Результат.Пустой();

	КонецЕсли;
	
КонецФункции

// Определяет как в документе заполняются суммы НУ при формировании проводок.
// 
// Параметры:
// 	ТипСсылки - Тип - 
// Возвращаемое значение:
// 	Булево - Истина, если документ сам заполняется суммы НУ при формировании проводок.
Функция СуммыНалоговогоУчетаЗаполнены(ТипСсылки) Экспорт
	
	СуммыНалоговогоУчетаЗаполнены = 
		
		// 2.2
		ТипСсылки = Тип("ДокументСсылка.АмортизацияНМА")
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуНМА")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеНМА")
		Или ТипСсылки = Тип("ДокументСсылка.ВозвратОСОтАрендатора")
		Или ТипСсылки = Тип("ДокументСсылка.ВыбытиеАрендованныхОС")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровОС")
		Или ТипСсылки = Тип("ДокументСсылка.МодернизацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПоступлениеАрендованныхОС")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуОС")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеОС")
		
		// 2.4
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.АмортизацияОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ВозвратОСОтАрендатора2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ИзменениеПараметровОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.МодернизацияОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПередачаОСАрендатору2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПеремещениеОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПереоценкаОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4")
		Или ТипСсылки = Тип("ДокументСсылка.РазукомплектацияОС")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеНМА2_4")
		Или ТипСсылки = Тип("ДокументСсылка.СписаниеОС2_4");
		
	Возврат СуммыНалоговогоУчетаЗаполнены;
	
КонецФункции

// Возвращает текст комментария, который используется при вводе остатков для перехода на 2.4 и обнуления регистра Прочие расходы.
// 
// Возвращаемое значение:
// 	Строка - 
Функция КомментарийОбнулениеРегистраПрочиеРасходы() Экспорт
	
	Возврат НСтр("ru = 'Документ создан помощником перехода на учет внеоборотных активов версии 2.4.
              |Используется для корректировки остатка регистра ""Прочие расходы"" на момент перехода.
              |До завершения перехода изменять комментарий не допускается.'");
              	
КонецФункции

#Область РаспределениеНДС

// Увеличивает стоимость внеоборотных активов после распределения НДС.
//
// Параметры:
//  ТаблицаВнеоборотныхАктивов	 - ТаблицаЗначений	 - Содержит внеоборотные активы на которые был распределен НДС.
//  ПрочиеРасходы				 - ТаблицаЗначений	 - Расходы, полученные в результате распределения НДС.
//  РезультатРаспределения		 - ТаблицаЗначений	 - Результат распределения НДС.
//  Реквизиты					 - Структура		 - Содержит реквизиты документа Распределение НДС.
//  ТаблицыДляДвижений			 - Структура		 - (возвращаемое значение) Содержит таблицы для записи движений.
//
Процедура ВключитьВСтоимостьВнеоборотныхАктивовРезультатРаспределенияНДС(ТаблицаВнеоборотныхАктивов, ПрочиеРасходы, РезультатРаспределения, Реквизиты, ТаблицыДляДвижений) Экспорт
	
	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период) Тогда
		
		ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_4(
			ПрочиеРасходы, 
			ТаблицыДляДвижений,
			Реквизиты);
			
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(
			ТаблицаВнеоборотныхАктивов,
			РезультатРаспределения,
			ТаблицыДляДвижений,
			Реквизиты);
			
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.2.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_2(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаАктивовПассивов КАК Объект
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|  ТИПЗНАЧЕНИЯ(ТаблицаОстатков.АналитикаАктивовПассивов) В (
	|		ТИП(Справочник.ОбъектыЭксплуатации),
	|		ТИП(Справочник.НематериальныеАктивы))
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.Организация      КАК Организация,
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Регистратор      КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.ДатаСостояния >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|	И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СостоянияОС.Организация,
	|	СобытияОС.ОсновноеСредство,
	|	СостоянияОС.Регистратор
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, ОсновноеСредство) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|				И Событие.ВидСобытияОС В (ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Модернизация), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Достройка), 
	|										  ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.Дооборудование))) КАК СобытияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|				&Граница,
	|			(Организация, ОсновноеСредство, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)
	|					И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|						ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияОС
	|		ПО СобытияОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|ГДЕ
	|	СобытияОС.Период >= НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВводОстатковОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ВводОстатковОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВводОстатковОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ЛОЖЬ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовНУ,
	|	ЛОЖЬ КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатковОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ВводОстатковОС.Ссылка
	|		И ОСПринятыеКУчету.ОсновноеСредство = ВводОстатковОС.ОсновноеСредство
	|ГДЕ
	|	ВводОстатковОС.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятиеКУчетуОС.Дата КАК ДатаПринятияКУчету,
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.Организация КАК Организация,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК Объект,
	|	ПринятиеКУчетуОС.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР
	|		КОГДА ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|				И КОНЕЦПЕРИОДА(ПринятиеКУчетуОС.Дата, МЕСЯЦ) = &КонецПериода
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ПринятиеКУчетуОС.Местонахождение КАК ПодразделениеРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов КАК СтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ПринятиеКУчетуОС.АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ПринятиеКУчетуОС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Дата КАК ДатаПринятияКУчету,
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.Организация КАК Организация,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК АналитикаРасходов,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаспределятьНДС,
	|	ВЫБОР 
	|		КОГДА ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).ПорядокСписанияНИОКРНаРасходыНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету)
	|				И ВЫРАЗИТЬ(НМАПринятыеКУчету.НематериальныйАктив КАК Справочник.НематериальныеАктивы).ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ ВключаетсяВРасходыНУПриПринятииКУчету,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).Подразделение КАК ПодразделениеРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов КАК СтатьяРасходовНУ,
	|   ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	ВЫРАЗИТЬ(НМАПринятыеКУчету.Регистратор КАК Документ.ПринятиеКУчетуНМА).АналитикаРасходов КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|			&Граница,
	|			(Организация, НематериальныйАктив, Состояние) В 
	|				(ВЫБРАТЬ
	|					ОтборОбъектов.Организация,
	|					ОтборОбъектов.Объект,
	|					ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЗ
	|					ОтборОбъектов КАК ОтборОбъектов)) КАК НМАПринятыеКУчету
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|;
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтРегистраторыПринятияКУчетуОС";
	
	Запрос.УстановитьПараметр("Граница",      Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу принятых к учету внеоборотных активов (ВтВнеоборотныеАктивы) при использования учета
// внеоборотных активов 2.4.
//
// Параметры:
//  НачалоПериода			 - Дата						 - Начало периода.
//  КонецПериода			 - Дата						 - Конец периода.
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - Хранит сформированную таблицу ВтВнеоборотныеАктивы.
//
Процедура СформироватьТаблицуПринятыхКУчетуВнеоборотныхАктивовДляРаспределенияНДС_2_4(НачалоПериода, КонецПериода, МенеджерВременныхТаблиц) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация,
	|	ТаблицаОстатков.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ОтборОбъектов
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|ГДЕ
	|	ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|//////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьОС.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""ОС""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьОС.Организация                       КАК Организация,
	|	СтоимостьОС.АналитикаКапитализацииРасходов    КАК Объект,
	|	СтоимостьОС.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьОС.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ПОМЕСТИТЬ ВтВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|ГДЕ
	|	СтоимостьОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьОС.Активность
	|	И СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьОС.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И СтоимостьОС.ОтражатьВРеглУчете
	|
	|	И (СтоимостьОС.Организация, СтоимостьОС.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(СтоимостьНМА.Период, МЕСЯЦ)       КАК ДатаПринятияКУчету,
	|	""НМА""                                        КАК ВнеоборотныйАктив,
	|	СтоимостьНМА.Организация                       КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив               КАК Объект,
	|	СтоимостьНМА.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	(СтоимостьНМА.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)) КАК РаспределятьНДС,
	// В режиме 2.4 не используются, но нужны для совместимости
	|	ЛОЖЬ                   КАК ВключаетсяВРасходыНУПриПринятииКУчету,
	|	НЕОПРЕДЕЛЕНО           КАК ПодразделениеРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК СтатьяРасходовНУ,
	|	NULL                   КАК ЭтоПринимаемаяСтатьяРасходовНУ,
	|	НЕОПРЕДЕЛЕНО           КАК АналитикаРасходовНУ
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|ГДЕ
	|	СтоимостьНМА.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СтоимостьНМА.Активность
	|	И СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И СтоимостьНМА.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И СтоимостьНМА.ОтражатьВРеглУчете
	|
	|	И (СтоимостьНМА.Организация, СтоимостьНМА.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ОтборОбъектов.Организация,
	|				ОтборОбъектов.Объект
	|			ИЗ
	|				ОтборОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВнеоборотныйАктив
	|;
	|
	|//////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборОбъектов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецПериода, ВидГраницы.Включая));
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область РасчетАмортизации

Процедура ДополнитьПараметрамиУчетаВнеоборотныхАктивов(ПараметрыРасчета) Экспорт

	//++ Локализация
	
	ПараметрыРасчета.Вставить("ДатаНачалаУчета", ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	ИспользоватьРеглУчет = Константы.ИспользоватьРеглУчет.Получить()
							И Константы.ДатаНачалаВеденияРеглУчета.Получить() <= ПараметрыРасчета.Период;
							
	ПараметрыРасчета.Вставить("ИспользоватьРеглУчет", ИспользоватьРеглУчет);
	
	ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(
										ПараметрыРасчета.Период, Неопределено);
										
	ПараметрыРасчета.Вставить("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);
	
	//-- Локализация
	
КонецПроцедуры

Процедура СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт

	//++ Локализация
	Документы.АмортизацияОС.СоздатьДокументыАмортизацииОС(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры
 
Процедура СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета, Отказ) Экспорт
	
	//++ Локализация
	Документы.АмортизацияНМА.СоздатьДокументыАмортизацииНМА(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций, Отказ);
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Функция ТекстПоляНормаАмортизации(ПолеАмортизационнаяГруппа) Экспорт

	ТекстПоля =
	"ВЫБОР СписокОС.АмортизационнаяГруппа
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа)    ТОГДА 14.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)    ТОГДА 8.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ТретьяГруппа)    ТОГДА 5.6
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа) ТОГДА 3.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПятаяГруппа)     ТОГДА 2.7
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ШестаяГруппа)    ТОГДА 1.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.СедьмаяГруппа)   ТОГДА 1.3
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа)   ТОГДА 1.0
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа)   ТОГДА 0.8
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа)   ТОГДА 0.7
	|	КОНЕЦ";
	
	ТекстПоля = СтрЗаменить(ТекстПоля, "СписокОС.АмортизационнаяГруппа", ПолеАмортизационнаяГруппа);
	
	Возврат ТекстПоля;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область СформироватьЗаписиРегистровЗаданий

Процедура СформироватьЗаписиРегистровЗаданий(ДокументСсылка, ДанныеТаблиц) Экспорт

	//++ Локализация
	
	СформироватьЗаданиеАмортизацияОС(ДокументСсылка, ДанныеТаблиц);
	СформироватьЗаданиеАмортизацияНМА(ДокументСсылка, ДанныеТаблиц);
		
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуНалогаНаИмущество(ДокументСсылка, ДанныеТаблиц);
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуТранспортногоНалога(ДокументСсылка, ДанныеТаблиц);
	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуЗемельногоНалога(ДокументСсылка, ДанныеТаблиц);
	
	СформироватьЗаданиеПризнаниеВНУЛизинговыхПлатежей(ДанныеТаблиц);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииОС(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаОСБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБУ");
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСписокТаблицДляФормированияЗаданийКРасчетуАмортизацииНМА(СписокТаблиц) Экспорт

	//++ Локализация
	СписокТаблиц.Добавить("ПорядокУчетаНМАБУ");
	СписокТаблиц.Добавить("ПараметрыАмортизацииНМАБУ");
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииОС(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.ОсновноеСредство              КАК ОсновноеСредство,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""НаработкиОбъектовЭксплуатации""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.ОсновноеСредство,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация       КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.Организация       КАК Организация,
	|		ПорядокУчетаОСБУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСБУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|				ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ПорядокУчетаОСБУПоследние.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ПорядокУчетаОСБУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период = ПорядокУчетаОСБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаОСБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСБУ//
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация         КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство    КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодБУ            КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ_НачислятьАмортизацию КАК ПорядокУчетаОСБУ
		|		ПО (ПорядокУчетаОСБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСБУ//", ТекстПорядокУчетаОСБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаОСУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.Организация       КАК Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСУУ.Организация       КАК Организация,
	|		ПорядокУчетаОСУУ.ОсновноеСредство  КАК ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаОСУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаОСУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация        КАК Организация,
	|			ИзмененныеДанные.ОсновноеСредство   КАК ОсновноеСредство,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)  КАК Период,
	|			МАКСИМУМ(ПорядокУчетаОСУУ.Период)   КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|				ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|					И (ПорядокУчетаОСУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеОС2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаОСУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.ОсновноеСредство
	|		) КАК ПорядокУчетаОСУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ПорядокУчетаОСУУПоследние.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ПорядокУчетаОСУУПоследние.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период = ПорядокУчетаОСУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|							ИЛИ ПорядокУчетаОСУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаОСУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаОСУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаОСУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.ОсновноеСредство
	|
	|	//ТекстПорядокУчетаОСУУ//
	|
	|) КАК ПорядокУчетаОСУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСУУ.Организация,
	|	ПорядокУчетаОСУУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаОСУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация       КАК Организация,
		|	ИзмененныеДанные.ОсновноеСредство  КАК ОсновноеСредство,
		|	ИзмененныеДанные.ПериодУУ          КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСУУ_НачислятьАмортизацию КАК ПорядокУчетаОСУУ
		|		ПО (ПорядокУчетаОСУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаОСУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаОСУУ//", ТекстПорядокУчетаОСУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ВЫБОР
	|						КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|							ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|							ТОГДА ПериодЗаданийБУ.Период
	|						ИНАЧЕ ПериодЗаданийУУ.Период
	|						КОНЕЦ < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|		ПО (ПакетыАмортизацииОС.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииОС.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииОС.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаОСУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаОСУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаДляФормированияЗаданийКРасчетуАмортизацииНМА(ДанныеТаблиц, ТекстОбъединенияДанных) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ИзмененныеДанные
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация                   КАК Организация,
	|	ИзмененныеДанные.НематериальныйАктив           КАК НематериальныйАктив,
	|	ИзмененныеДанные.Документ                      КАК Документ,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВРеглУчете)  КАК ОтражатьВРеглУчете,
	|	МАКСИМУМ(ИзмененныеДанные.ОтражатьВУпрУчете)   КАК ОтражатьВУпрУчете,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодБУ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) В (
	|							ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4),
	|							ТИП(Документ.РаспределениеНДС))
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|				КОГДА ИзмененныеДанные.ИмяТаблицы = ""ВыработкаНМА""
	|						ИЛИ НЕ &ПорядокНачисленияПоСтандартамРегл
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1) 
	|			КОНЕЦ) КАК ПериодУУ
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.НематериальныйАктив,
	|	ИзмененныеДанные.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАБУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийБУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАБУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАБУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАБУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАБУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодБУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАБУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|				ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАБУ.Период <= ИзмененныеДанные.ПериодБУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАБУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВРеглУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАБУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ПорядокУчетаНМАБУПоследние.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ПорядокУчетаНМАБУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период = ПорядокУчетаНМАБУПоследние.ПериодСведений)
	|	ГДЕ
	|		(ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАБУ.Период, МЕСЯЦ, 1))
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Период > ИзмененныеДанные.ПериодБУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВРеглУчете
	|		И (ПорядокУчетаНМАБУ.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМАБУ.НачислятьАмортизациюНУ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАБУ//
	|
	|	) КАК ПорядокУчетаНМАБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАБУ.Организация,
	|	ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАБУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация            КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив    КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодБУ               КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАБУ_НачислятьАмортизацию КАК ПорядокУчетаНМАБУ
		|		ПО (ПорядокУчетаНМАБУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАБУ//", ТекстПорядокУчетаНМАБУ);
		
	КонецЕсли;
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчетаНМАУУ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)) КАК Период
	|ПОМЕСТИТЬ ПериодЗаданийУУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаНМАУУ.Организация          КАК Организация,
	|		ПорядокУчетаНМАУУ.НематериальныйАктив  КАК НематериальныйАктив,
	|		ВЫБОР
	|			КОГДА ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|					И НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ПорядокУчетаНМАУУ.Период, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУПоследние.Период, МЕСЯЦ, 1)
	|			ИНАЧЕ ПорядокУчетаНМАУУПоследние.Период
	|		КОНЕЦ КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ИзмененныеДанные.Организация           КАК Организация,
	|			ИзмененныеДанные.НематериальныйАктив   КАК НематериальныйАктив,
	|			МИНИМУМ(ИзмененныеДанные.ПериодУУ)     КАК Период,
	|			МАКСИМУМ(ПорядокУчетаНМАУУ.Период)     КАК ПериодСведений
	|		ИЗ
	|			ИзмененныеДанные КАК ИзмененныеДанные
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|				ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|					И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|					И (ПорядокУчетаНМАУУ.Период <= ИзмененныеДанные.ПериодУУ)
	|					И (ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.СписаниеНМА2_4)
	|						ИЛИ ИзмененныеДанные.Документ <> ПорядокУчетаНМАУУ.Регистратор)
	|		ГДЕ
	|			ИзмененныеДанные.ОтражатьВУпрУчете
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ИзмененныеДанные.Организация,
	|			ИзмененныеДанные.НематериальныйАктив
	|		) КАК ПорядокУчетаНМАУУПоследние
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ПорядокУчетаНМАУУПоследние.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ПорядокУчетаНМАУУПоследние.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период = ПорядокУчетаНМАУУПоследние.ПериодСведений)
	|	ГДЕ
	|		ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив,
	|		МИНИМУМ(ВЫБОР 
	|					КОГДА &ПорядокНачисленияПоСтандартамРегл 
	|							ИЛИ ПорядокУчетаНМАУУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|						ТОГДА ДОБАВИТЬКДАТЕ(ПорядокУчетаНМАУУ.Период, МЕСЯЦ, 1)
	|					ИНАЧЕ ПорядокУчетаНМАУУ.Период
	|				КОНЕЦ)
	|	ИЗ
	|		ИзмененныеДанные КАК ИзмененныеДанные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
	|				И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Период > ИзмененныеДанные.ПериодУУ)
	|	ГДЕ
	|		ИзмененныеДанные.ОтражатьВУпрУчете
	|		И ПорядокУчетаНМАУУ.НачислятьАмортизациюУУ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ИзмененныеДанные.Организация,
	|		ИзмененныеДанные.НематериальныйАктив
	|
	|	//ТекстПорядокУчетаНМАУУ//
	|
	|) КАК ПорядокУчетаНМАУУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМАУУ.Организация,
	|	ПорядокУчетаНМАУУ.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		
		ТекстПорядокУчетаНМАУУ = "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация          КАК Организация,
		|	ИзмененныеДанные.НематериальныйАктив  КАК НематериальныйАктив,
		|	ИзмененныеДанные.ПериодУУ             КАК Период
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаНМАУУ_НачислятьАмортизацию КАК ПорядокУчетаНМАУУ
		|		ПО (ПорядокУчетаНМАУУ.Организация = ИзмененныеДанные.Организация)
		|			И (ПорядокУчетаНМАУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстПорядокУчетаНМАУУ//", ТекстПорядокУчетаНМАУУ);
		
	КонецЕсли;
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ФормированиеЗаданий
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ВЫБОР
	|						КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|							ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|							ТОГДА ПериодЗаданийБУ.Период
	|						ИНАЧЕ ПериодЗаданийУУ.Период
	|					КОНЕЦ < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|				КОГДА ПериодЗаданийБУ.Период <= ПериодЗаданийУУ.Период
	|						ИЛИ ПериодЗаданийУУ.Период ЕСТЬ NULL
	|					ТОГДА ПериодЗаданийБУ.Период
	|				ИНАЧЕ ПериодЗаданийУУ.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийБУ КАК ПериодЗаданийБУ
	|		ПО (ПериодЗаданийБУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийБУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодЗаданийУУ КАК ПериодЗаданийУУ
	|		ПО (ПериодЗаданийУУ.Организация = ИзмененныеДанные.Организация)
	|			И (ПериодЗаданийУУ.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО (ПакетыАмортизацииНМА.Организация = ИзмененныеДанные.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
	|ГДЕ
	|	НЕ ПериодЗаданийБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ ПериодЗаданийУУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ЕСТЬNULL(ПакетыАмортизацииНМА.НомерПакета, 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАБУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАБУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПорядокУчетаНМАУУ_НачислятьАмортизацию") <> Неопределено Тогда
		ТекстЗапроса = "УНИЧТОЖИТЬ ПорядокУчетаНМАУУ_НачислятьАмортизацию";
		СписокЗапросов.Добавить(ТекстЗапроса);
	КонецЕсли;
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ПриВыполненииОперацииЗакрытияМесяцаРасчетСтоимостиВнеоборотныхАктивов(НачалоРасчета, ВременныеТаблицы, ПараметрыОбработчика, Отказ) Экспорт

	//++ Локализация
	
	ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, ВременныеТаблицы);
				
	ДоначислитьНалогНаИмущество(НачалоРасчета, ВременныеТаблицы, Отказ);
	
	//-- Локализация
	
КонецПроцедуры

Функция ЗаписьДвиженийРасчетаСтоимостиВыполняетсяВМодулеЛокализации(ИмяРегистра) Экспорт

	//++ Локализация
	
	Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете")
		ИЛИ ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
		Возврат Истина;
	КонецЕсли;
	
	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции
 
Процедура ЗаписатьДвиженияРасчетаСтоимости(ТаблицыДляДвижений, ВыборкаДокумент, ПараметрыОбработчика) Экспорт
	
	//++ Локализация
	
	Если ПараметрыОбработчика = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОтражениеДокументовВРеглУчете = Неопределено;
	ТаблицаОтражениеДокументовВМеждународномУчете = Неопределено;
	
	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		ИмяРегистра = ВРег(ИмяРегистра);
		
		Если ИмяРегистра = ВРег("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВРеглУчете = Таблица.Значение;
			Продолжить;
		ИначеЕсли ИмяРегистра = ВРег("ОтражениеДокументовВМеждународномУчете") Тогда
			ТаблицаОтражениеДокументовВМеждународномУчете = Таблица.Значение;
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаОтражениеДокументовВРеглУчете = Неопределено Тогда
		ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(
		ВыборкаДокумент.Регистратор, 
		ВыборкаДокумент.Организация, 
		ВыборкаДокумент.Период);
	КонецЕсли; 
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТаблицыДвиженийРасчетаСтоимости(ВыборкаДокумент, ТаблицыДляДвижений) Экспорт

	//++ Локализация
	
	Если НЕ ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
		
		ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(
													ВыборкаДокумент.Регистратор, 
													ВыборкаДокумент.Организация, 
													ВыборкаДокумент.Период);
		
		ТаблицыДляДвижений.Вставить("ТаблицаОтражениеДокументовВРеглУчете", ТаблицаОтражениеДокументовВРеглУчете);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекущиеРасходыПриформированииТаблицДвиженийРасчетаСтоимости(ВыборкаДокумент, Результат, ТекущиеРасходы) Экспорт

	//++ Локализация
	РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	КорректировкаСтоимостиАрендованногоИмущества(ВыборкаДокумент, Результат.ДанныеДокумента, ТекущиеРасходы);
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаВыборкиДанныхДляРасчетаСтоимости() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.ВидОбъектовУчета                          КАК ВидОбъектовУчета,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Период                                    КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ФактическаяСтоимость                      КАК ФактическаяСтоимость,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете,
	|	УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи КАК ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В
	|					(ВЫБРАТЬ
	|						КэшГраниц.Организация
	|					ИЗ
	|						КэшГраниц)) КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеКРасчету.Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПослеРасчетаСтоимостиВнеоборотныхАктивов(Запрос, МенеджерВременныхТаблиц, ТаблицыУпрБаланса) Экспорт

	//++ Локализация
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Регистратор КАК Регистратор
		|ИЗ
		|	ДанныеКРасчету КАК Т";
		
		ДокументыКОтражению = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
		
		Обработки.ДвиженияАктивовПассивов.ОтразитьДокументыВУправленческомБалансе(ДокументыКОтражению, ТаблицыУпрБаланса);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьХозяйственныеОперацииПоКоторымРассчитываетсяСтоимость(Операции) Экспорт

	//++ Локализация
	Операции.Добавить(Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга);
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ОтложенноеФормированиеДвижений

Процедура ПриВыполненииОтложенногоФормированияДвижений(Знач Выборка, Знач ПараметрыВыполнения, Знач ТаблицыДляДвижений)  Экспорт
	
	//++ Локализация
	
	Если ПараметрыВыполнения.ВернутьДокументыКОтражению Тогда
		
		Если ТаблицыДляДвижений.Свойство("ТаблицаОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ТаблицаОтражениеДокументовВРеглУчете;
		ИначеЕсли ТаблицыДляДвижений.Свойство("ОтражениеДокументовВРеглУчете") Тогда
			ТаблицаОтражениеДокументовВУчете = ТаблицыДляДвижений.ОтражениеДокументовВРеглУчете;
		Иначе
			ТаблицаОтражениеДокументовВУчете = ТаблицаОтражениеДокументов(Выборка.Ссылка, Выборка.Организация, Выборка.Дата);
		КонецЕсли;
		
		РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВУчете);
		
		
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьОтложенноеФормированиеДвижений(ПараметрыВыполнения, Отказ) Экспорт

	//++ Локализация
	
	#Область ТребуетсяПродажаПоСхеме22
	
	Если Константы.ИспользоватьВнеоборотныеАктивы2_2.Получить() Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ВнеоборотныйАктив
		|ПОМЕСТИТЬ ПервоначальныеСведения22
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|			&КонецМесяца,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация В (
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)))) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияНМА.НематериальныйАктив
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
		|			&КонецМесяца,
		|			НематериальныйАктив В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))) КАК ПервоначальныеСведенияНМА
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ВнеоборотныйАктив
		|ПОМЕСТИТЬ ПервоначальныеСведения24
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|			&КонецМесяца,
		|			ОсновноеСредство В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация В (
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав)))) КАК ПервоначальныеСведенияОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПервоначальныеСведенияНМА.НематериальныйАктив
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
		|			&КонецМесяца,
		|			НематериальныйАктив В
		|				(ВЫБРАТЬ
		|					ДанныеКРасчету.ОбъектУчета
		|				ИЗ
		|					ДанныеКРасчету
		|				ГДЕ
		|					ДанныеКРасчету.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов))) КАК ПервоначальныеСведенияНМА
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВнеоборотныйАктив
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеКРасчету.Ссылка КАК Ссылка,
		|	ДанныеКРасчету.Организация КАК Организация,
		|	ТаблицаДокумента.Номер КАК НомерДокумента,
		|	ТаблицаДокумента.Дата КАК ДатаДокумента,
		|	ДанныеКРасчету.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ДанныеКРасчету.Дата КАК Дата
		|ИЗ
		|	ДанныеКРасчету КАК ДанныеКРасчету
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов КАК ТаблицаДокумента
		|		ПО (ТаблицаДокумента.Ссылка = ДанныеКРасчету.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения24 КАК ПервоначальныеСведения24
		|		ПО (ПервоначальныеСведения24.ВнеоборотныйАктив = ДанныеКРасчету.ОбъектУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведения22 КАК ПервоначальныеСведения22
		|		ПО (ПервоначальныеСведения22.ВнеоборотныйАктив = ДанныеКРасчету.ОбъектУчета)
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ДанныеКРасчету.Ссылка) = ТИП(Документ.РеализацияУслугПрочихАктивов)
		|	И ПервоначальныеСведения24.ВнеоборотныйАктив ЕСТЬ NULL
		|	И НЕ ПервоначальныеСведения22.ВнеоборотныйАктив ЕСТЬ NULL
		|	И ДанныеКРасчету.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов), 
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = ПараметрыВыполнения.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПараметрыВыполнения.Месяц));
		Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПараметрыВыполнения.Месяц));
	
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав Тогда
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация с отложенным переходом прав"", для основных средств, подготовленных к передаче, до перехода на версию учета 2.4.
                                         |Для этого необходимо оформить реализацию на основании документа ""Подготовка к передаче ОС"".'");
			Иначе
				ОписаниеПроблемы = НСтр("ru = 'В документе Реализация услуг и прочих активов №%1 от %2 необходимо использовать операцию ""Реализация"", для внеоборотных активов, подготовленных к передаче, до перехода на версию учета 2.4.'");
			КонецЕсли; 
			
			ОписаниеПроблемы = СтрШаблон(ОписаниеПроблемы, 
										Выборка.НомерДокумента, 
										Формат(Выборка.ДатаДокумента, "ДЛФ=D"));
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				ПараметрыВыполнения.ЭтапРасчета, 
				ПараметрыВыполнения.Месяц,
				Выборка.Организация,
				ОписаниеПроблемы,,
				Выборка.Ссылка, 
				Отказ);
					
		КонецЦикла; 
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ТекстЗапросаНачислениеИзноса() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ НачислениеИзноса
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					КэшГраниц.Организация,
	|					КэшГраниц.ОбъектУчета
	|				ИЗ
	|					ВТ_КэшГраниц КАК КэшГраниц)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьТекстЗапросаВТ_СтоимостьВНА(ТекстЗапроса) Экспорт
	
	//++ Локализация
	ТекстЗапросаЛокализация =
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|	0 КАК РезервПереоценкиСтоимости,
	|	0 КАК РезервПереоценкиСтоимостиРегл,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК КорректировкаСтоимостиНУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Организация,
	|					ДанныеКРасчету.ОбъектУчета
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаНУОстаток <> 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СтоимостьВНА_Остатки_Локализация//", ТекстЗапросаЛокализация);

	//
	ТекстЗапросаЛокализация =
	"
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НачалоМесяца КАК Период,
	|	ХозрасчетныйДвижения.Регистратор КАК Регистратор,
	|	ХозрасчетныйДвижения.Организация КАК Организация,
	|	ХозрасчетныйДвижения.СубконтоКт1 КАК ОбъектУчета,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|	0 КАК АмортизационнаяПремия,
	|	0 КАК ЗалоговаяСтоимость,
	|	0 КАК ПредварительнаяСтоимость,
	|	0 КАК ПредварительнаяСтоимостьРегл,
	|	0 КАК РезервПереоценкиСтоимости,
	|	0 КАК РезервПереоценкиСтоимостиРегл,
	|	-ХозрасчетныйДвижения.СуммаНУКт КАК КорректировкаСтоимостиНУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто КАК ХозрасчетныйДвижения
	|ГДЕ
	|	ХозрасчетныйДвижения.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ХозрасчетныйДвижения.Регистратор ССЫЛКА Документ.РегламентнаяОперация
	|	И ХозрасчетныйДвижения.Активность
	|	И ХозрасчетныйДвижения.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|	И ХозрасчетныйДвижения.СуммаНУКт <> 0
	|	И (ХозрасчетныйДвижения.Организация, ХозрасчетныйДвижения.СубконтоКт1) В
	|			(ВЫБРАТЬ
	|				ДанныеКРасчету.Организация,
	|				ДанныеКРасчету.ОбъектУчета
	|			ИЗ
	|				ДанныеКРасчету КАК ДанныеКРасчету)";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СтоимостьВНА_Движения_Локализация//", ТекстЗапросаЛокализация);
	//-- Локализация
	
КонецПроцедуры 

#КонецОбласти

#Область ЖурналДокументовОС

Процедура ДополнитьХозяйственныеОперацииИДокументыОС(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	
	ИспользоватьЛизинг = ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг");
	ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	#Область ПринятиеКУчетуОС2_4
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ПринятиеКУчетуОС";
	Строка.ДобавитьКнопкуСоздать        = Истина;
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'принятие к учету ОС'");
	
	Если ИспользоватьЛизинг Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ПринятиеКУчетуОС";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'принятие к учету ОС'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли;
	#КонецОбласти
	
	#Область ПеремещениеОС2_4
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПеремещениеОС2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ПеремещениеОС";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'перемещение ОС'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли; 
	#КонецОбласти
	
	#Область Документы2_2
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИзменениеСостоянияОС;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИзменениеСостоянияОС.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ИзменениеСостоянияОС";
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РеализацияУслугПрочихАктивов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "РеализацияВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'реализация услуг и прочих активов'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
	КонецЕсли; 
	
	#КонецОбласти
	
	#Область ИнвентаризацияОС
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ИнвентаризацияОС";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияВложенийВОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ИнвентаризацияОС";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбъектыСтроительства") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИнвентаризацияОС.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ИнвентаризацияОС";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'инвентаризация ОС'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли; 
	#КонецОбласти
	
	#Область Прочее
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратОСотАрендатора;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВозвратОСОтАрендатора2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВозвратОСОтАрендатора";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'возврат ОС от арендатора'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ИспользоватьРеглУчет Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ИзменениеСпособаОтраженияИмущественныхНалогов;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ИзменениеСпособаОтраженияИмущественныхНалогов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'изменение способа отражения имущественных налогов'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли; 
	
	Если ИспользоватьРеглУчет Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтменаРегистрацииЗемельныхУчастков;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ОтменаРегистрацииЗемельныхУчастков.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ОтменаРегистрацииЗемельныхУчастков";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'отмена регистрации земельных участков'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтменаРегистрацииТранспортныхСредств;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ОтменаРегистрацииТранспортныхСредств.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ОтменаРегистрацииТранспортныхСредств";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'отмена регистрации транспортных средств'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПередачаОСАрендатору;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПередачаОСАрендатору2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ПередачаОСАрендатору";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'передача ОС арендатору'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ИспользоватьЛизинг Тогда
	
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПоступлениеПредметовЛизинга;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПоступлениеПредметовЛизинга.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ПоступлениеПредметовЛизинга";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'поступление предметов лизинга'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли;
	
	Если ИспользоватьРеглУчет Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РегистрацияЗемельныхУчастков;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РегистрацияЗемельныхУчастков.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "РегистрацияЗемельныхУчастков";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'регистрация земельных участков'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'регистрация порядка налогообложения по налогу на имущество'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РегистрацияТранспортныхСредств;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.РегистрацияТранспортныхСредств.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "РегистрацияТранспортныхСредств";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'регистрация транспортных средств'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
	КонецЕсли;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПоступлениеАрендованныхОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ПоступлениеАрендованныхОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ПоступлениеАрендованныхОС";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'поступление арендованных ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВыбытиеАрендованныхОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВыбытиеАрендованныхОС.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВыбытиеАрендованныхОС";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'выбытие арендованных ОС'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		Строка.ПолноеИмяДокумента			= "Документ.ОтчетОператораСистемыПлатон";
		Строка.КлючНазначенияИспользования 	= "ОтчетОператораСистемыПлатон";
		Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'отчеты оператора ""Платон""'");
		Строка.ДобавитьКнопкуСоздать		= Истина;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВводОстатков
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду основных средств'");
	Строка.ДобавитьКнопкуСоздать        = Ложь;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС;
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
	Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков полученных в аренду основных средств'");
	Строка.ДобавитьКнопкуСоздать        = Ложь;
	
	Если ИспользоватьЛизинг Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга на балансе'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков переданных в аренду предметов лизинга на балансе'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом;
		Строка.ПолноеИмяДокумента			= Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования 	= "ВводОстатковВнеоборотныхАктивов";
		Строка.ЗаголовокРабочегоМеста	 	= НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом'");
		Строка.ДобавитьКнопкуСоздать        = Ложь;
		
	КонецЕсли; 
	
	#КонецОбласти
	
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЖурналаОС(ТекстЗапроса) Экспорт

	//++ Локализация
	
	// ПроверкаДокументовВРеглУчете
	ПроверкаДокументовСервер.ДоработатьЗапросДинамическогоСпискаЖурналаДокументов(ТекстЗапроса, "РеестрДокументов");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатусПроверки КАК СтатусПроверки", "НЕОПРЕДЕЛЕНО КАК УдаленСтатусПроверки");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫРАЗИТЬ(&ИндикаторПроверки КАК БУЛЕВО) КАК ИндикаторПроверки", "ЛОЖЬ КАК УдаленИндикаторПроверки");	
	// Конец ПроверкаДокументовВРеглУчете
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЖурналДокументовНМА

Процедура ДополнитьХозяйственныеОперацииИДокументыНМА(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ИнвентаризацияНМА;
	Строка.ПолноеИмяДокумента           = Метаданные.Документы.ИнвентаризацияНМА.ПолноеИмя();
	Строка.КлючНазначенияИспользования  = "ИнвентаризацияНМА";
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Инвентаризация НМА'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ПринятиеКУчетуНМАпоИнвентаризации;
	Строка.ПолноеИмяДокумента           = Метаданные.Документы.ПринятиеКУчетуНМА2_4.ПолноеИмя();
	Строка.КлючНазначенияИспользования  = "ПринятиеКУчетуНМА";
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Принятие к учету НМА по инвентаризации'");
	Строка.ДобавитьКнопкуСоздать        = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		
		Строка = ХозяйственныеОперацииИДокументы.Добавить();
		Строка.ХозяйственнаяОперация        = Перечисления.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс;
		Строка.ПолноеИмяДокумента           = Метаданные.Документы.ПеремещениеНМА2_4.ПолноеИмя();
		Строка.КлючНазначенияИспользования  = "ПеремещениеНМАвПодразделениеВыделенноеНаБаланс";
		Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Перемещение НМА'");
		Строка.ДобавитьКнопкуСоздать        = Истина;
		
	КонецЕсли; 
	
	//-- Локализация	
	
КонецПроцедуры
 
Процедура ДополнитьТекстЗапросаЖурналаНМА(ТекстЗапроса) Экспорт

	//++ Локализация
	
	// ПроверкаДокументовВРеглУчете
	ПроверкаДокументовСервер.ДоработатьЗапросДинамическогоСпискаЖурналаДокументов(ТекстЗапроса, "РеестрДокументов");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатусПроверки КАК СтатусПроверки", "НЕОПРЕДЕЛЕНО КАК УдаленСтатусПроверки");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫРАЗИТЬ(&ИндикаторПроверки КАК БУЛЕВО) КАК ИндикаторПроверки", "ЛОЖЬ КАК УдаленИндикаторПроверки");
	// Конец ПроверкаДокументовВРеглУчете
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

Процедура ТекстЗапросаВтТаблицаНалогообложениеНДС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "ВтНалогообложениеНДС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL КАК ОсновноеСредство,
	|	NULL КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС";
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчета.ОсновноеСредство        КАК ОсновноеСредство,
	|	ПорядокУчета.НалогообложениеНДС      КАК НалогообложениеНДС
	|ПОМЕСТИТЬ ВтНалогообложениеНДС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	//-- Локализация
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаРесурсыРегистраПервоначальныеСведенияОС(ТекстЗапроса, ИмяТаблицы) Экспорт

	РеквизитыЛокализация = "NULL";
	
	//++ Локализация
	
	РеквизитыЛокализация = 
	"	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ВариантПримененияЦелевогоФинансирования КАК ВариантПримененияЦелевогоФинансирования,
	|	ПервоначальныеСведенияОС.Арендодатель КАК Арендодатель";
	
	РеквизитыЛокализация = СтрЗаменить(РеквизитыЛокализация, "&ПервоначальныеСведенияОС", ИмяТаблицы);
	
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПервоначальныеСведенияОС_РеквизитыЛокализация", РеквизитыЛокализация);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРасходы.ПериодРасчета                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ                                             КАК Организация,
	|	ТаблицаРасходы.КорПодразделение                   КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов                     КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов                  КАК АналитикаРасходов,
	|	ТаблицаРасходы.КорНаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                      КАК ВидДеятельностиНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаСНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаБезНДС,
	|	СУММА(ТаблицаРасходы.СуммаУУ)                     КАК СуммаБезНДСУпр,
	|	СУММА(ТаблицаРасходы.СуммаБУ + ТаблицаРасходы.СуммаЦФ)    КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаРасходы.СуммаБУ + ТаблицаРасходы.СуммаЦФ)    КАК СуммаБезНДСРегл,
	|	СУММА(ТаблицаРасходы.СуммаПР + ТаблицаРасходы.СуммаПРЦФ)  КАК ПостояннаяРазница,
	|	СУММА(ТаблицаРасходы.СуммаВР + ТаблицаРасходы.СуммаВРЦФ)  КАК ВременнаяРазница,
	|	ВЫБОР ТаблицаРасходы.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации)
	|		ИНАЧЕ ТаблицаРасходы.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	НЕ ТаблицаРасходы.НачислятьИзнос
	|	И ТаблицаРасходы.Организация = &Организация
	|	И ТаблицаРасходы.НомерПакета = &НомерПакета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.ПередаватьРасходыВДругуюОрганизацию
	|			ТОГДА ТаблицаРасходы.ОрганизацияПолучательРасходов
	|		ИНАЧЕ ТаблицаРасходы.Организация
	|	КОНЕЦ,
	|	ТаблицаРасходы.ПериодРасчета,
	|	ТаблицаРасходы.КорПодразделение,
	|	ТаблицаРасходы.КорНаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	ВЫБОР ТаблицаРасходы.ХозяйственнаяОперация
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСизДругойОрганизации)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАвДругуюОрганизацию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияНМАизДругойОрганизации)
	|		ИНАЧЕ ТаблицаРасходы.ХозяйственнаяОперация
	|	КОНЕЦ";
	
	//-- Локализация
	
	Возврат ТекстЗапроса

КонецФункции

Функция ТекстЗапросаФормированиеЗаданийКРасчетуСтоимостиВНА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьОС.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьОС.Период >= ИзмененныеДанные.Период)
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьОС.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьНМА.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьНМА.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьНМА.Период >= ИзмененныеДанные.Период)
	|			И (СтоимостьНМА.Активность)
	|			И (СтоимостьНМА.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьНМА.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьОС.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьОС.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьОС.АналитикаКапитализацииРасходов = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьОС.Период >= ИзмененныеДанные.НачалоМесяца)
	|			И (СтоимостьОС.Активность)
	|			И (СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьОС.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга), 
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьОС.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СтоимостьНМА.Период > &ДатаНачалаУчета
	|				ТОГДА СтоимостьНМА.Период
	|			ИНАЧЕ &ДатаНачалаУчета
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК СтоимостьНМА
	|		ПО (СтоимостьНМА.Организация = ИзмененныеДанные.Организация)
	|			И (СтоимостьНМА.НематериальныйАктив = ИзмененныеДанные.ОбъектУчета)
	|			И (СтоимостьНМА.Период >= ИзмененныеДанные.НачалоМесяца)
	|			И (СтоимостьНМА.Активность)
	|			И (СтоимостьНМА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (СтоимостьНМА.ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА)))
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.РаспределениеНДС)
	|	И СтоимостьНМА.Период >= &ДатаНачалаУчетаСебестоимости
	|	И &ИспользоватьУчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	ИзмененныеДанные.ОбъектУчета";
	
	//-- Локализация	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияОстаток, 0)       
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|					И &ВедетсяРегламентированныйУчетВНА
	|				ИЛИ ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|					И НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияОСОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьОстаток, 0)
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|					И &ВедетсяРегламентированныйУчетВНА
	|				ИЛИ ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|					И НЕ &ВедетсяРегламентированныйУчетВНА
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьРеглОстаток, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьНУЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьПРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.СтоимостьВРЦФОстаток, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьОСОстатки.ЗалоговаяСтоимостьОстаток, 0)
	|	КОНЕЦ КАК ЗалоговаяСтоимость
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК АмортизацияОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = АмортизацияОСОстатки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС.Остатки(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК СтоимостьОСОстатки
	|		ПО ОбъектыЭксплуатации.Ссылка = СтоимостьОСОстатки.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСУУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСУУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСБУ
	|		ПО ОбъектыЭксплуатации.Ссылка = ПорядокУчетаОСБУ.ОсновноеСредство
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСтоимостьИАмортизацияНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтоимостьНМАОстатки.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМАОстатки.СтоимостьОстаток КАК СтоимостьУУ,
	|	СтоимостьНМАОстатки.СтоимостьРеглОстаток КАК СтоимостьБУ,
	|	СтоимостьНМАОстатки.СтоимостьНУОстаток КАК СтоимостьНУ,
	|	СтоимостьНМАОстатки.СтоимостьПРОстаток КАК СтоимостьПР,
	|	СтоимостьНМАОстатки.СтоимостьВРОстаток КАК СтоимостьВР,
	|	СтоимостьНМАОстатки.СтоимостьЦФОстаток КАК СтоимостьЦФ,
	|	СтоимостьНМАОстатки.СтоимостьНУЦФОстаток КАК СтоимостьНУЦФ,
	|	СтоимостьНМАОстатки.СтоимостьПРЦФОстаток КАК СтоимостьПРЦФ,
	|	СтоимостьНМАОстатки.СтоимостьВРЦФОстаток КАК СтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|				+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|				+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток = 0
	|			ТОГДА 0
	|		ИНАЧЕ (СтоимостьНМАОстатки.СтоимостьПРОстаток + СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|				/ (СтоимостьНМАОстатки.СтоимостьВРОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРОстаток
	|					+ СтоимостьНМАОстатки.СтоимостьВРЦФОстаток 
	|					+ СтоимостьНМАОстатки.СтоимостьПРЦФОстаток)
	|	КОНЕЦ КАК ДоляПР
	|ПОМЕСТИТЬ СтоимостьНМАОстатки
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.Остатки(
	|			,
	|			Организация = &Организация
	|				И НематериальныйАктив = &НематериальныйАктив) КАК СтоимостьНМАОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияОстаток, 0)
	|	КОНЕЦ КАК Амортизация,
	|
	// АмортизацияРегл
	|	ВЫБОР
	|		КОГДА &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|				ИЛИ НЕ &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияРеглОстаток, 0)
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	// АмортизацияЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияЦФ,
	|
	// АмортизацияНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУ,
	|
	// АмортизацияНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияНУЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияНУЦФ,
	|
	// АмортизацияПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПР,
	|
	// АмортизацияПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияПРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПРЦФ,
	|
	// АмортизацияВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0) 
	|					- ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВР,
	|
	// АмортизацияВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(-АмортизацияНМАОстатки.АмортизацияВРЦФОстаток, 0)
	|	КОНЕЦ КАК АмортизацияВРЦФ,
	|
	// Стоимость
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьУУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьУУ, 0)
	|	КОНЕЦ КАК Стоимость,
	|
	// СтоимостьРегл
	|	ВЫБОР
	|		КОГДА &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|				ИЛИ &ВедетсяРегламентированныйУчетВНА И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьБУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьБУ, 0)
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьЦФ, 0)
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУ, 0)
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьНУЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьНУЦФ, 0)
	|	КОНЕЦ КАК СтоимостьНУЦФ,
	|
	// СтоимостьПР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьПР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПР, 0)
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьПРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьВР, 0)
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВР, 0)
	|	КОНЕЦ КАК СтоимостьВР,
	|
	// СтоимостьВРЦФ
	|	ВЫБОР
	|		КОГДА ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.Списан)
	|			ТОГДА 0
	|		КОГДА НематериальныеАктивы.ВидОбъектаУчета = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМАОстатки.СтоимостьВРЦФ, 0)
	|	КОНЕЦ КАК СтоимостьВРЦФ
	|
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА.Остатки(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК АмортизацияНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = АмортизацияНМАОстатки.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНМАОстатки КАК СтоимостьНМАОстатки
	|		ПО НематериальныеАктивы.Ссылка = СтоимостьНМАОстатки.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПервоначальныеСведенияНМА
	|		ПО НематериальныеАктивы.Ссылка = ПервоначальныеСведенияНМА.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАБУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАБУ.НематериальныйАктив
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив) КАК ПорядокУчетаНМАУУ
	|		ПО НематериальныеАктивы.Ссылка = ПорядокУчетаНМАУУ.НематериальныйАктив
	|ГДЕ
	|	НематериальныеАктивы.Ссылка = &НематериальныйАктив";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполнитьОтражениеВУчете() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ПринятоКУчету.ОтражатьВУпрУчете) > 0, ЛОЖЬ) КАК ОтражатьВУпрУчете,
	|	ЕСТЬNULL(СУММА(ПринятоКУчету.ОтражатьВРеглУчете) > 0, ЛОЖЬ) КАК ОтражатьВРеглУчете
	|
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		0 КАК ОтражатьВРеглУчете,
	|		1 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|	ГДЕ
	|		ПорядокУчетаОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОС.ОсновноеСредство В(&СписокАктивов)
	|		И ПорядокУчетаОС.Организация = &Организация
	|		И ПорядокУчетаОС.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК ОтражатьВРеглУчете,
	|		0 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|	ГДЕ
	|		ПорядокУчетаОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОС.ОсновноеСредство В(&СписокАктивов)
	|		И ПорядокУчетаОС.Организация = &Организация
	|		И ПорядокУчетаОС.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		0 КАК ОтражатьВРеглУчете,
	|		1 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчета
	|	ГДЕ
	|		ПорядокУчета.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|		И ПорядокУчета.НематериальныйАктив В(&СписокАктивов)
	|		И ПорядокУчета.Организация = &Организация
	|		И ПорядокУчета.Регистратор <> &Регистратор
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК ОтражатьВРеглУчете,
	|		0 КАК ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчета
	|	ГДЕ
	|		ПорядокУчета.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|		И ПорядокУчета.НематериальныйАктив В(&СписокАктивов)
	|		И ПорядокУчета.Организация = &Организация
	|		И ПорядокУчета.Регистратор <> &Регистратор) КАК ПринятоКУчету";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.ТекущаяОрганизация,
	|	ОбъектыЭксплуатации.ТекущееМестонахождение,
	|	ОбъектыЭксплуатации.ТекущийМОЛ,
	|
	|	ОбъектыЭксплуатации.ДокументСнятияСУчета,
	|
	|	ОбъектыЭксплуатации.УжеПринятоКУчету,
	|	ОбъектыЭксплуатации.ДругаяОрганизация,
	|	ОбъектыЭксплуатации.ДругоеМестонахождение,
	|	ОбъектыЭксплуатации.ДругойМОЛ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		МестонахождениеОС.Организация КАК ТекущаяОрганизация,
	|		МестонахождениеОС.Местонахождение КАК ТекущееМестонахождение,
	|		МестонахождениеОС.МОЛ КАК ТекущийМОЛ,
	|
	|		ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) КАК ДокументСнятияСУчета,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|				И (ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведенияОС.ДокументСнятияСУчета) <> ТИП(Документ.ВыбытиеАрендованныхОС))
	|			ИЛИ &ОтражатьВРеглУчете
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|				И (ЕСТЬNULL(ПервоначальныеСведенияОС.ДокументСнятияСУчета, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ТИПЗНАЧЕНИЯ(ПервоначальныеСведенияОС.ДокументСнятияСУчета) <> ТИП(Документ.ВыбытиеАрендованныхОС)) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И ЕСТЬNULL(МестонахождениеОС.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.Местонахождение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.Местонахождение, НЕОПРЕДЕЛЕНО) <> &Местонахождение
	|					И &Местонахождение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругоеМестонахождение,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестонахождениеОС.МОЛ ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И (ЕСТЬNULL(МестонахождениеОС.МОЛ, НЕОПРЕДЕЛЕНО) <> &МОЛ 
	|					И &МОЛ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				ИЛИ &МестонахождениеВТабличнойЧасти) КАК ДругойМОЛ
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НЕ Регистратор ССЫЛКА Документ.ПоступлениеПредметовЛизинга
	|						И Организация = &Организация
	|						И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
	|			ПО (ПервоначальныеСведенияОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
	|			ПО (МестонахождениеОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|			ПО (ПорядокУчетаОСБУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСБУ.Организация = МестонахождениеОС.Организация)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|			ПО (ПорядокУчетаОСУУ.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство)
	|				И (ПорядокУчетаОСУУ.Организация = МестонахождениеОС.Организация)
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	
	|	) КАК ОбъектыЭксплуатации
	|ГДЕ
	|	(ОбъектыЭксплуатации.УжеПринятоКУчету
	|			ИЛИ ОбъектыЭксплуатации.ДругаяОрганизация
	|			ИЛИ ОбъектыЭксплуатации.ДругоеМестонахождение
	|			ИЛИ ОбъектыЭксплуатации.ДругойМОЛ)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаПроверитьВозможностьПринятияКУчетуНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыУчета.Ссылка,
	|	ОбъектыУчета.Представление,
	|	ОбъектыУчета.ВидОбъектаУчета,
	|	ОбъектыУчета.ТекущаяОрганизация,
	|	ОбъектыУчета.ТекущееПодразделение,
	|	ОбъектыУчета.ДокументСписания,
	|	ОбъектыУчета.УжеПринятоКУчету,
	|	ОбъектыУчета.ДругаяОрганизация,
	|	ОбъектыУчета.ДругоеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыУчета.Ссылка КАК Ссылка,
	|		ОбъектыУчета.Представление КАК Представление,
	|		ОбъектыУчета.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|		МестоУчетаНМА.Организация КАК ТекущаяОрганизация,
	|		МестоУчетаНМА.Подразделение КАК ТекущееПодразделение,
	|		ЕСТЬNULL(ПервоначальныеСведения.ДокументСписания, НЕОПРЕДЕЛЕНО) КАК ДокументСписания,
	|
	|		&ОтражатьВУпрУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуУУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуУУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ &ОтражатьВРеглУчете
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДокументПринятияКУчетуБУ, НЕОПРЕДЕЛЕНО) <> &Ссылка
	|				И ЕСТЬNULL(ПервоначальныеСведения.ДатаПринятияКУчетуБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК УжеПринятоКУчету,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Организация ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|			И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ДругаяОрганизация,
	|
	|		(НЕ &ОтражатьВУпрУчете ИЛИ НЕ &ОтражатьВРеглУчете)
	|			И НЕ МестоУчетаНМА.Подразделение ЕСТЬ NULL
	|			И (&ОтражатьВРеглУчете И ПорядокУчетаНМАУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				ИЛИ &ОтражатьВУпрУчете И ПорядокУчетаНМАБУ.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
	|			И ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|			И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ДругоеПодразделение
	|	ИЗ
	|		Справочник.НематериальныеАктивы КАК ОбъектыУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И Организация = &Организация
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПервоначальныеСведения
	|			ПО (ПервоначальныеСведения.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|			ПО (МестоУчетаНМА.НематериальныйАктив = ОбъектыУчета.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|			ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАБУ.Организация = МестоУчетаНМА.Организация)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|					&Период,
	|					Регистратор <> &Ссылка
	|						И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|			ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = МестоУчетаНМА.НематериальныйАктив)
	|				И (ПорядокУчетаНМАУУ.Организация = МестоУчетаНМА.Организация)
	|	ГДЕ
	|		ОбъектыУчета.Ссылка В(&СписокНМА)) КАК ОбъектыУчета
	|ГДЕ
	|	ОбъектыУчета.УжеПринятоКУчету
	|		ИЛИ ОбъектыУчета.ДругаяОрганизация
	|		ИЛИ ОбъектыУчета.ДругоеПодразделение";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСоздатьВтРасчетСтоимости(Выборка, Запрос) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	ТекущиеРасходы.СуммаУпр                  КАК Стоимость,
	|	ТекущиеРасходы.Сумма                     КАК Сумма,
	|
	// СтоимостьРегл
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл - ТекущиеРасходы.СуммаЦФ
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	// СтоимостьНУ
	|	ВЫБОР
	|		КОГДА НЕ &ПлательщикНалогаНаПрибыль
	|				ИЛИ &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.СуммаРегл
	|				- ТекущиеРасходы.ПостояннаяРазница
	|				- ТекущиеРасходы.ВременнаяРазница
	|				- (ТекущиеРасходы.СуммаЦФ - ТекущиеРасходы.СуммаПРЦФ - ТекущиеРасходы.СуммаВРЦФ) 
	|				- ТекущиеРасходы.КорректировкаСтоимостиНУ
	|	КОНЕЦ КАК СтоимостьНУ,
	|
	// СтоимостьПР
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК СтоимостьПР,
	|
	// СтоимостьВР
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ВременнаяРазница - ТекущиеРасходы.СуммаВРЦФ + ТекущиеРасходы.КорректировкаСтоимостиНУ
	|	КОНЕЦ КАК СтоимостьВР,
	|
	|	0 КАК СтоимостьЦФ,
	|	0 КАК СтоимостьНУЦФ,
	|	0 КАК СтоимостьПРЦФ,
	|	0 КАК СтоимостьВРЦФ,
	|
	// КорПостояннаяРазница
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ПостояннаяРазница - ТекущиеРасходы.СуммаПРЦФ
	|	КОНЕЦ КАК КорПостояннаяРазница,
	|
	// КорВременнаяРазница
	|	ВЫБОР
	|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА 0
	|		ИНАЧЕ ТекущиеРасходы.ВременнаяРазница - ТекущиеРасходы.СуммаВРЦФ
	|	КОНЕЦ КАК КорВременнаяРазница,
	|
	// КорректировкаСтоимостиНУ
	|	ТекущиеРасходы.КорректировкаСтоимостиНУ КАК КорректировкаСтоимостиНУ
	|
	|ПОМЕСТИТЬ ВтРасчетСтоимости
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|ГДЕ
	|	ТекущиеРасходы.СуммаУпр <> 0
	|		ИЛИ &ВариантПримененияЦелевогоФинансирования <> ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			И (ТекущиеРасходы.СуммаРегл <> 0
	|				ИЛИ ТекущиеРасходы.ПостояннаяРазница <> 0
	|				ИЛИ ТекущиеРасходы.ВременнаяРазница <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущиеРасходы.ОбъектУчета               КАК ОбъектУчета,
	|	ТекущиеРасходы.СтатьяРасходов            КАК КорСтатьяРасходов,
	|	ТекущиеРасходы.АналитикаРасходов         КАК КорАналитикаРасходов,
	|	ТекущиеРасходы.Подразделение             КАК КорПодразделение,
	|	ТекущиеРасходы.НаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|
	|	0 КАК Стоимость,
	|	0 КАК Сумма,
	|
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьНУ,
	|	0 КАК СтоимостьПР,
	|	0 КАК СтоимостьВР,
	|
	// СтоимостьЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЦФ,
	|
	// СтоимостьНУЦФ
	|	0 КАК СтоимостьНУЦФ,
	|
	// СтоимостьПРЦФ
	|	ВЫБОР &ВариантПримененияЦелевогоФинансирования
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|			ТОГДА ТекущиеРасходы.СуммаРегл 
	|					- ТекущиеРасходы.ПостояннаяРазница 
	|					- ТекущиеРасходы.ВременнаяРазница
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|			ТОГДА ТекущиеРасходы.СуммаЦФ 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПРЦФ,
	|
	// СтоимостьВРЦФ
	|	0 КАК СтоимостьВРЦФ,
	|	ТекущиеРасходы.СуммаПРЦФ КАК КорПостояннаяРазница,
	|	ТекущиеРасходы.СуммаВРЦФ КАК КорВременнаяРазница,
	|
	// КорректировкаСтоимостиНУ
	|	0 КАК КорректировкаСтоимостиНУ
	|
	|ИЗ
	|	втТекущиеРасходы КАК ТекущиеРасходы
	|ГДЕ
	|	&ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)
	|	ИЛИ &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное)
	|		И (ТекущиеРасходы.СуммаЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаПРЦФ <> 0
	|			ИЛИ ТекущиеРасходы.СуммаВРЦФ <> 0)";
	
	Запрос.УстановитьПараметр("ВариантПримененияЦелевогоФинансирования", Выборка.ВариантПримененияЦелевогоФинансирования);
	Запрос.УстановитьПараметр("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Выборка.Организация, Выборка.Период));
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаданияКРасчетуАмортизацииОСНаСледующийПериод(НачалоПериода) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период КАК Период
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		(НачислениеАмортизации.НачислятьАмортизациюБУ
		|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизациюУУ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаОСБУ КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		(НачислениеАмортизации.НачислятьАмортизациюБУ
		|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ВЫБОР ПорядокУчетаВНАВУпрУчете.Значение
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
		|						ТОГДА НачислениеАмортизации.Период
		|					ИНАЧЕ ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)
		|				КОНЕЦ), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаОСУУ КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
		|			ПО (ИСТИНА)
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизациюУУ
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)";
		
	КонецЕсли; 
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И (НачалоПериода <= ДатаНачалаУчета // на дату перехода в новых регистрах может не быть данных, поэтому смотрим старые данные
			ИЛИ ДатаНачалаУчета = '000101010000') Тогда
		
		Если ТекстЗапроса <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + 
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|";
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + 
		"	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период КАК Период
		|	ИЗ
		|		РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период
		|	ИЗ
		|		РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.ОсновноеСредство = НачислениеАмортизации.ОсновноеСредство
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)";
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(" + ТекстЗапроса + ") КАК НачислениеАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаЗаданияКРасчетуАмортизацииНМАНаСледующийПериод(НачалоПериода) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период КАК Период
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|	ГДЕ
		|		(НачислениеАмортизации.НачислятьАмортизациюБУ
		|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизациюУУ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаНМАБУ КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|	ГДЕ
		|		(НачислениеАмортизации.НачислятьАмортизациюБУ
		|				ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ВЫБОР ПорядокУчетаВНАВУпрУчете.Значение
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
		|						ТОГДА НачислениеАмортизации.Период
		|					ИНАЧЕ ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)
		|				КОНЕЦ), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.ПорядокУчетаНМАУУ КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
		|			ПО (ИСТИНА)
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизациюУУ
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)";
	КонецЕсли; 
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И (НачалоПериода <= ДатаНачалаУчета // на дату перехода в новых регистрах может не быть данных, поэтому смотрим старые данные
			ИЛИ ДатаНачалаУчета = '000101010000')Тогда
		
		Если ТекстЗапроса <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + 
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|";
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + 
		"	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		&Период КАК Период
		|	ИЗ
		|		РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК НачислениеАмортизации
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
		|					&Период,
		|					Организация В (&Организация)) КАК СостоянияНМА
		|			ПО НачислениеАмортизации.НематериальныйАктив = СостоянияНМА.НематериальныйАктив
		|				И НачислениеАмортизации.Организация = СостоянияНМА.Организация
		|				И (НачислениеАмортизации.НачислятьАмортизацию)
		|				И (СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0) КАК НомерПакета,
		|		ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(НачислениеАмортизации.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО)
		|	ИЗ
		|		РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК НачислениеАмортизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизации
		|			ПО ПакетыАмортизации.Организация = НачислениеАмортизации.Организация
		|				И ПакетыАмортизации.НематериальныйАктив = НачислениеАмортизации.НематериальныйАктив
		|	ГДЕ
		|		НачислениеАмортизации.НачислятьАмортизацию
		|		И НачислениеАмортизации.Организация В (&Организация)
		|		И НачислениеАмортизации.Период >= &Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		ЕСТЬNULL(ПакетыАмортизации.НомерПакета, 0)";
		
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета,
	|	ЕСТЬNULL(МИНИМУМ(НачислениеАмортизации.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц
	|ИЗ
	|	(" + ТекстЗапроса + ") КАК НачислениеАмортизации
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеАмортизации.Организация,
	|	НачислениеАмортизации.НомерПакета";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНаработкиОбъектовЭксплуатацииИзменение() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК ПервоначальныеСведенияПериод,
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПервоначальныеСведенияПоследнее2_2
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ДатаНачалаУчетаВнеоборотныхАктивов2_4 КАК ДатаНачалаУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_2 КАК Учет2_2
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_4 КАК Учет2_4
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОсновноеСредство = ТаблицаИзменение.ОсновноеСредство)
	|			И (ПервоначальныеСведения.Период <= ТаблицаИзменение.Период)
	|			И (ПервоначальныеСведения.СпособНачисленияАмортизации В (
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)))
	|ГДЕ
	|	Учет2_2.Значение = ИСТИНА
	|	И (Учет2_4.Значение = ЛОЖЬ
	|			ИЛИ ДатаНачалаУчета.Значение > ТаблицаИзменение.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменение.ОсновноеСредство,
	|	ТаблицаИзменение.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК ПервоначальныеСведенияПериод,
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПервоначальныеСведенияПоследнее2_4
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ДатаНачалаУчетаВнеоборотныхАктивов2_4 КАК ДатаНачалаУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_2 КАК Учет2_2
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_4 КАК Учет2_4
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОсновноеСредство = ТаблицаИзменение.ОсновноеСредство)
	|			И (ПервоначальныеСведения.Период <= ТаблицаИзменение.Период)
	|			И (ПервоначальныеСведения.МетодНачисленияАмортизацииБУ В (
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)))
	|ГДЕ
	|	Учет2_4.Значение = ИСТИНА
	|	И (Учет2_2.Значение = ЛОЖЬ
	|			ИЛИ ДатаНачалаУчета.Значение <= ТаблицаИзменение.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменение.ОсновноеСредство,
	|	ТаблицаИзменение.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПараметрыАмортизацииОСУУ.Период) КАК ПараметрыАмортизацииОСУУПериод,
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСУУПоследнее
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ДатаНачалаУчетаВнеоборотныхАктивов2_4 КАК ДатаНачалаУчета
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_2 КАК Учет2_2
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ИспользоватьВнеоборотныеАктивы2_4 КАК Учет2_4
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ТаблицаИзменение.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Период <= ТаблицаИзменение.Период)
	|			И (ПараметрыАмортизацииОСУУ.МетодНачисленияАмортизации В (
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции), 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега)))
	|ГДЕ
	|	Учет2_4.Значение = ИСТИНА
	|	И (Учет2_2.Значение = ЛОЖЬ
	|			ИЛИ ДатаНачалаУчета.Значение <= ТаблицаИзменение.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменение.ОсновноеСредство,
	|	ТаблицаИзменение.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИзменение.Период КАК Период,
	|	ТаблицаИзменение.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальныеСведения2_2.Организация, 
	|		ЕСТЬNULL(ПараметрыАмортизацииОСУУ.Организация, 
	|				ПервоначальныеСведения2_4.Организация)) КАК Организация,
	|	ИСТИНА КАК ОтражатьВРеглУчете,
	|	ИСТИНА КАК ОтражатьВУпрУчете,
	|	&Регистратор КАК Документ
	|ПОМЕСТИТЬ НаработкиОбъектовЭксплуатацииИзменение
	|ИЗ
	|	НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации КАК ТаблицаИзменение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияПоследнее2_2 КАК ПервоначальныеСведенияПоследнее2_2
	|		ПО (ТаблицаИзменение.ОсновноеСредство = ПервоначальныеСведенияПоследнее2_2.ОсновноеСредство)
	|			И (ТаблицаИзменение.Период = ПервоначальныеСведенияПоследнее2_2.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения2_2
	|		ПО (ПервоначальныеСведения2_2.ОсновноеСредство = ПервоначальныеСведенияПоследнее2_2.ОсновноеСредство)
	|			И (ПервоначальныеСведения2_2.Период = ПервоначальныеСведенияПоследнее2_2.ПервоначальныеСведенияПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияПоследнее2_4 КАК ПервоначальныеСведенияПоследнее2_4
	|		ПО (ТаблицаИзменение.ОсновноеСредство = ПервоначальныеСведенияПоследнее2_4.ОсновноеСредство)
	|			И (ТаблицаИзменение.Период = ПервоначальныеСведенияПоследнее2_4.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения2_4
	|		ПО (ПервоначальныеСведения2_4.ОсновноеСредство = ПервоначальныеСведенияПоследнее2_4.ОсновноеСредство)
	|			И (ПервоначальныеСведения2_4.Период = ПервоначальныеСведенияПоследнее2_4.ПервоначальныеСведенияПериод)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСУУПоследнее КАК ПараметрыАмортизацииОСУУПоследнее
	|		ПО (ТаблицаИзменение.ОсновноеСредство = ПараметрыАмортизацииОСУУПоследнее.ОсновноеСредство)
	|			И (ТаблицаИзменение.Период = ПараметрыАмортизацииОСУУПоследнее.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСУУ КАК ПараметрыАмортизацииОСУУ
	|		ПО (ПараметрыАмортизацииОСУУ.ОсновноеСредство = ПараметрыАмортизацииОСУУПоследнее.ОсновноеСредство)
	|			И (ПараметрыАмортизацииОСУУ.Период = ПараметрыАмортизацииОСУУПоследнее.ПараметрыАмортизацииОСУУПериод)
	|ГДЕ
	|	НЕ ПервоначальныеСведения2_2.ОсновноеСредство ЕСТЬ NULL
	|		ИЛИ НЕ ПервоначальныеСведения2_4.ОсновноеСредство ЕСТЬ NULL
	|		ИЛИ НЕ ПараметрыАмортизацииОСУУ.ОсновноеСредство ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаработкиОбъектовЭксплуатацииИзменениеБезОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПервоначальныеСведенияПоследнее2_2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПервоначальныеСведенияПоследнее2_4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПараметрыАмортизацииОСУУПоследнее
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаработкиОбъектовЭксплуатацииПередЗаписью";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ПорядокУчетаОС.Период)   КАК Период,
	|	ПорядокУчетаОС.Организация       КАК Организация,
	|	ПорядокУчетаОС.ОсновноеСредство  КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_СписокОС_БезНомера
	|ИЗ
	|	(ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаОС.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаОС.Организация                  КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство             КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	ГДЕ
	|		(ПорядокУчетаОС.НачислятьАмортизациюБУ
	|			ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|		И ПорядокУчетаОС.Организация В (&Организация)
	|		И ПакетыАмортизацииОС.НомерПакета ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаОС.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаОС.Организация                  КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство             КАК ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	ГДЕ
	|		ПорядокУчетаОС.НачислятьАмортизациюУУ
	|		И ПорядокУчетаОС.Организация В (&Организация)
	|		И ПакетыАмортизацииОС.НомерПакета ЕСТЬ NULL
	|
	|	) КАК ПорядокУчетаОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОС.Организация,
	|	ПорядокУчетаОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокОС.Период                      КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(СписокОС.Период, МЕСЯЦ) КАК КонецМесяца
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	ВТ_СписокОС_БезНомера КАК СписокОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Период                                 КАК Период,
	|	СписокОС.Организация                            КАК Организация,
	|	СписокОС.НомерПакета                            КАК НомерПакета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокОС.ОсновноеСредство) КАК ОбъемПакета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.НачалоМесяца КАК Период,
	|		ПорядокУчетаОС.Организация КАК Организация,
	|		ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|		ПакетыАмортизацииОС.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОС
	|			ПО (ПорядокУчетаОС.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаОС.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаОС.Организация В (&Организация))
	|				И (ПорядокУчетаОС.НачислятьАмортизациюБУ
	|					ИЛИ ПорядокУчетаОС.НачислятьАмортизациюНУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Периоды.НачалоМесяца,
	|		ПорядокУчетаОС.Организация,
	|		ПорядокУчетаОС.ОсновноеСредство,
	|		ПакетыАмортизацииОС.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчетаОС
	|			ПО (ПорядокУчетаОС.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаОС.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаОС.Организация В (&Организация))
	|				И (ПорядокУчетаОС.НачислятьАмортизациюУУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииОС КАК ПакетыАмортизацииОС
	|			ПО (ПакетыАмортизацииОС.Организация = ПорядокУчетаОС.Организация)
	|				И (ПакетыАмортизацииОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство)) КАК СписокОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокОС.Период,
	|	СписокОС.НомерПакета,
	|	СписокОС.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Период            КАК Период,
	|	СписокОС.Организация       КАК Организация,
	|	СписокОС.ОсновноеСредство  КАК ОсновноеСредство
	|ИЗ
	|	ВТ_СписокОС_БезНомера КАК СписокОС";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРассчитатьНомераПакетовАмортизацииНМА() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	МИНИМУМ(ПорядокУчетаНМА.Период)     КАК Период,
	|	ПорядокУчетаНМА.Организация         КАК Организация,
	|	ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ ВТ_СписокНМА_БезНомера
	|ИЗ
	|	(ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаНМА.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаНМА.Организация                  КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив          КАК НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМА
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|			И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	ГДЕ
	|		(ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|				ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|		И ПорядокУчетаНМА.Организация В (&Организация)
	|		И ПакетыАмортизацииНМА.НомерПакета ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ 
	|		НАЧАЛОПЕРИОДА(ПорядокУчетаНМА.Период, МЕСЯЦ) КАК Период,
	|		ПорядокУчетаНМА.Организация                  КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив          КАК НематериальныйАктив
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМА
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	ГДЕ
	|		ПорядокУчетаНМА.НачислятьАмортизациюУУ
	|		И ПорядокУчетаНМА.Организация В (&Организация)
	|		И ПакетыАмортизацииНМА.НомерПакета ЕСТЬ NULL
	|
	|	) КАК ПорядокУчетаНМА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаНМА.Организация,
	|	ПорядокУчетаНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНМА.Период                      КАК НачалоМесяца,
	|	КОНЕЦПЕРИОДА(СписокНМА.Период, МЕСЯЦ) КАК КонецМесяца
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	ВТ_СписокНМА_БезНомера КАК СписокНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНМА.Период                                    КАК Период,
	|	СписокНМА.Организация                               КАК Организация,
	|	СписокНМА.НомерПакета                               КАК НомерПакета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписокНМА.НематериальныйАктив) КАК ОбъемПакета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.НачалоМесяца КАК Период,
	|		ПорядокУчетаНМА.Организация КАК Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|		ПакетыАмортизацииНМА.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ КАК ПорядокУчетаНМА
	|			ПО (ПорядокУчетаНМА.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаНМА.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаНМА.Организация В (&Организация))
	|				И (ПорядокУчетаНМА.НачислятьАмортизациюБУ
	|					ИЛИ ПорядокУчетаНМА.НачислятьАмортизациюНУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Периоды.НачалоМесяца,
	|		ПорядокУчетаНМА.Организация,
	|		ПорядокУчетаНМА.НематериальныйАктив,
	|		ПакетыАмортизацииНМА.НомерПакета КАК НомерПакета
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчетаНМА
	|			ПО (ПорядокУчетаНМА.Период >= Периоды.НачалоМесяца)
	|				И (ПорядокУчетаНМА.Период <= Периоды.КонецМесяца)
	|				И (ПорядокУчетаНМА.Организация В (&Организация))
	|				И (ПорядокУчетаНМА.НачислятьАмортизациюУУ)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|			ПО (ПакетыАмортизацииНМА.Организация = ПорядокУчетаНМА.Организация)
	|				И (ПакетыАмортизацииНМА.НематериальныйАктив = ПорядокУчетаНМА.НематериальныйАктив)) КАК СписокНМА
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокНМА.Период,
	|	СписокНМА.НомерПакета,
	|	СписокНМА.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНМА.Период               КАК Период,
	|	СписокНМА.Организация          КАК Организация,
	|	СписокНМА.НематериальныйАктив  КАК НематериальныйАктив
	|ИЗ
	|	ВТ_СписокНМА_БезНомера КАК СписокНМА";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьРеквизитыОСПриПринятииКУчету(Запрос, Объект) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка,
	|	ОбъектыЭксплуатации.Представление,
	|
	|	ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер,
	|	ОбъектыЭксплуатации.ДругаяАмортизационнаяГруппа,
	|	ОбъектыЭксплуатации.ДругаяГруппаОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|		ОбъектыЭксплуатации.Представление КАК Представление,
	|
	|		ОбъектыЭксплуатации.ИнвентарныйНомер = """" КАК НеЗаполненИнвентарныйНомер,
	|
	|		ОбъектыЭксплуатации.АмортизационнаяГруппа <> &АмортизационнаяГруппа
	|			И ОбъектыЭксплуатации.АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)
	|			И &АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка) КАК ДругаяАмортизационнаяГруппа,
	|
	|		ОбъектыЭксплуатации.ГруппаОС <> &ГруппаОС
	|			И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			И &ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК ДругаяГруппаОС
	|
	|	ИЗ
	|		Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|	ГДЕ
	|		ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|
	|	) КАК ОбъектыЭксплуатации
	|
	|ГДЕ
	|	(ОбъектыЭксплуатации.НеЗаполненИнвентарныйНомер
	|			ИЛИ ОбъектыЭксплуатации.ДругаяАмортизационнаяГруппа
	|			ИЛИ ОбъектыЭксплуатации.ДругаяГруппаОС)";
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПринятиеКУчетуОС2_4") Тогда
		Запрос.УстановитьПараметр("АмортизационнаяГруппа", Объект.АмортизационнаяГруппа);
		Запрос.УстановитьПараметр("ГруппаОС", Объект.ГруппаОС);
	Иначе
		Запрос.УстановитьПараметр("АмортизационнаяГруппа", Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		Запрос.УстановитьПараметр("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТребуетсяРасчетАмортизацииОС(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	(НачислениеАмортизации.НачислятьАмортизациюБУ
		|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизациюУУ";
		
	КонецЕсли; 
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И (Период <= ДатаНачалаУчета // на дату перехода в новых регистрах может не быть данных, поэтому смотрим старые данные
			ИЛИ ДатаНачалаУчета = '000101010000') Тогда
		
		Если ТекстЗапроса <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + 
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|";
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию";
		
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат ТекстЗапроса;

КонецФункции
 
Функция ТекстЗапросаТребуетсяРасчетАмортизацииНМА(Период) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = "";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	(НачислениеАмортизации.НачислятьАмортизациюБУ
		|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&Период, Организация В (&Организация)) КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизациюУУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаНМАБУ КАК НачислениеАмортизации
		|ГДЕ
		|	(НачислениеАмортизации.НачислятьАмортизациюБУ
		|			ИЛИ НачислениеАмортизации.НачислятьАмортизациюНУ)
		|	И НачислениеАмортизации.Организация В(&Организация)
		|	И НачислениеАмортизации.Период >= &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.ПорядокУчетаНМАУУ КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизациюУУ
		|	И НачислениеАмортизации.Организация В(&Организация)
		|	И НачислениеАмортизации.Период >= &Период";
	КонецЕсли; 
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") 
		И (Период <= ДатаНачалаУчета // на дату перехода в новых регистрах может не быть данных, поэтому смотрим старые данные
			ИЛИ ДатаНачалаУчета = '000101010000') Тогда
		
		Если ТекстЗапроса <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + 
				"
				|ОБЪЕДИНИТЬ ВСЕ
				|";
		КонецЕсли; 
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
		|			&Период,
		|			Организация = &Организация) КАК НачислениеАмортизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
		|				&Период,
		|				Организация В (&Организация)) КАК СостоянияНМА
		|		ПО НачислениеАмортизации.НематериальныйАктив = СостоянияНМА.НематериальныйАктив
		|			И НачислениеАмортизации.Организация = СостоянияНМА.Организация
		|			И (НачислениеАмортизации.НачислятьАмортизацию)
		|			И (СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету))
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК НачислениеАмортизации
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|	И НачислениеАмортизации.Организация В (&Организация)
		|	И НачислениеАмортизации.Период >= &Период";
	
	КонецЕсли; 
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоОСПринятыКУчету(Объект, СостоянияПринят, ПроверитьВВыбранномУчете) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТипДокумента = ТипЗнч(Объект);
	Если ТипДокумента = Тип("ДокументОбъект.ВозвратОСОтАрендатора2_4")
		ИЛИ ТипДокумента = Тип("ДокументОбъект.ПередачаОСАрендатору2_4") Тогда
		ПроверитьВВыбранномУчете = Ложь;
	КонецЕсли; 
	
	СостоянияПринят.Добавить(Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.Представление КАК Представление,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК СостояниеУУ
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСУУ
	|		ПО (ПорядокУчетаОСУУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаОСУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаОСБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&СостоянияПринят))";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроверитьЧтоНМАПринятыКУчету() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НематериальныеАктивы.Ссылка КАК Ссылка,
	|	НематериальныеАктивы.Представление КАК Представление,
	|	НематериальныеАктивы.ВидОбъектаУчета КАК ВидОбъектаУчета,
	|	ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) КАК СостояниеБУ,
	|	ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) КАК СостояниеУУ,
	|	МестоУчетаНМА.Организация КАК Организация,
	|	МестоУчетаНМА.Организация.Представление КАК ОрганизацияПредставление,
	|	МестоУчетаНМА.Подразделение КАК Подразделение,
	|	МестоУчетаНМА.Подразделение.Представление КАК ПодразделениеПредставление
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАБУ
	|		ПО (ПорядокУчетаНМАБУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК ПорядокУчетаНМАУУ
	|		ПО (ПорядокУчетаНМАУУ.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И НематериальныйАктив В (&СписокНМА)) КАК МестоУчетаНМА
	|		ПО (МестоУчетаНМА.НематериальныйАктив = НематериальныеАктивы.Ссылка)
	|ГДЕ
	|	НематериальныеАктивы.Ссылка В(&СписокНМА)
	|	И (
	|		(&ОтражатьВУпрУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ &ОтражатьВРеглУчете И &ПроверитьВВыбранномУчете
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|			ИЛИ НЕ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|				И НЕ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&СостоянияПринят)
	|		)
	|
	// Проверка места учета НМА
	|		ИЛИ (
	|				(НЕ &ОтражатьВУпрУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАУУ.Состояние, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (НЕ &ОтражатьВРеглУчете ИЛИ ЕСТЬNULL(ПорядокУчетаНМАБУ.Состояние, НЕОПРЕДЕЛЕНО) В (&СостоянияПринят))
	|				И (ЕСТЬNULL(МестоУчетаНМА.Организация, НЕОПРЕДЕЛЕНО) <> &Организация
	|						И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ИЛИ ЕСТЬNULL(МестоУчетаНМА.Подразделение, НЕОПРЕДЕЛЕНО) <> &Подразделение
	|						И &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|			)
	|		)";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
#КонецОбласти

#Область ПанельСправочниковВнеоборотныеАктивы

Процедура ПриСозданииНаСервере_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт

	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Форма.Элементы.ОткрытьГруппыФинансовогоУчетаВнеоборотныхАктивов.РасширеннаяПодсказка.Заголовок = 
			НСтр("ru = 'Классификация внеоборотных активов по правилам отражения в бухгалтерском учете.'");
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

Процедура УправлениеЭлементами_ПанельСправочниковВнеоборотныеАктивы(Форма) Экспорт
	
	//++ Локализация

	Элементы = Форма.Элементы;
	
	Элементы.ОткрытьКлассификаторЕНАОФ.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ЕдиныеНормыАмортизационныхОтчисленийОсновныхФондов);
	Элементы.ОткрытьКлассификаторОКОФ.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ОбщероссийскийКлассификаторОсновныхФондов);
	Элементы.ОткрытьГодовыеГрафикиАмортизацииОС.Видимость = ПравоДоступа("Просмотр", Метаданные.Справочники.ГодовыеГрафикиАмортизацииОС);
	Элементы.ОткрытьСтавкиТранспортногоНалога.Видимость = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СтавкиТранспортногоНалога);
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПанельАдминистрированияКА

Процедура СохранитьЗначениеРеквизита_ПанельАдминистрированияКА(Форма, РеквизитПутьКДанным, КонстантаИмя) Экспорт

	//++ Локализация
	
	НаборКонстант = Форма.НаборКонстант;
	
	Если РеквизитПутьКДанным = "УчетВнеоборотныхАктивов" Тогда
		
		Если Форма.УчетВнеоборотныхАктивов = "2_2" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Истина;
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		ИначеЕсли Форма.УчетВнеоборотныхАктивов = "2_4" Тогда
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_4";
			
			Если НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
				Если ЗначениеЗаполнено(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4) Тогда
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(Форма.ДоступностьУчета24.МинимальнаяДатаНачалаУчета2_4);
				Иначе
					НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), 1));
				КонецЕсли; 
			Иначе
				НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			КонецЕсли; 
			
		Иначе
			
			КонстантаИмя = "ИспользоватьВнеоборотныеАктивы2_2";
			НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 = Ложь;
			НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4 = '000101010000';
			
		КонецЕсли;
		
		Константы.ИспользоватьВнеоборотныеАктивы2_2.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2);
		Константы.ИспользоватьВнеоборотныеАктивы2_4.Установить(НаборКонстант.ИспользоватьВнеоборотныеАктивы2_4);
		Константы.ДатаНачалаУчетаВнеоборотныхАктивов2_4.Установить(НаборКонстант.ДатаНачалаУчетаВнеоборотныхАктивов2_4);
		
		Если НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НЕ НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Ложь;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Ложь);
		ИначеЕсли НЕ НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 И НаборКонстант.ИспользоватьВнеоборотныеАктивы2_2 Тогда
			НаборКонстант.ОтображатьВнеоборотныеАктивы2_2 = Истина;
			Константы.ОтображатьВнеоборотныеАктивы2_2.Установить(Истина);
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//  Настройки	 - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//  Может использоваться для получения настроек варианта этого отчета при помощи функции ВариантыОтчетов.ОписаниеВарианта().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	//++ Локализация
	
	#Область СверкаРасчетаАмортизации
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СверкаРасчетаАмортизации);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_2";
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.Описание = НСтр("ru = 'Показывает расхождения в расчете амортизации версии 2.2 и 2.4.
                                      |Используется только для тестирования в не рабочей информационной базе.'");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Истина;
	
	#КонецОбласти
	
	#Область ВедомостьПоОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ВедомостьПоОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие сводные данные о стоимости и амортизации основных средств?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ВедомостьПоОС");
	ОписаниеВарианта.Описание = НСтр("ru= 'Какие сводные данные о стоимости и амортизации основных средств?'");
	#КонецОбласти
	
	#Область ИнвентарнаяКнигаОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИнвентарнаяКнигаОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Отчет предназначен для учета наличия объектов основных средств, а также их движения внутри организации в соответствии с формой ОС-6б'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПолей = НСтр("ru= 'Наименование организации
		|Наименование структурного подразделения
		|Наименование объектов основных средств
		|Инвентарный номер
		|Поступило
		|Первоначальная стоимость
		|Срок полезного использования
		|Сумма начисленной амортизации (износа)
		|Остаточная стоимость
		|Переоценка
		|Внутренние перемещения, выбытие (списание)'");
	ОписаниеВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов = НСтр("ru= 'Период
		|Организация
		|Подразделение
		|МОЛ
		|Ответственный'");
	#КонецОбласти
	
	#Область РеестрДоговоровЛизинга
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.РеестрДоговоровЛизинга);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Состояние расчетов по договорам лизинга.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьРеглУчет");
	ВариантыОтчетовУТПереопределяемый.ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, "РасчетыПоДоговоруЛизинга");
	#КонецОбласти
	
	#Область СправкаРасчетАмортизационнойПремии
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетАмортизационнойПремии);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Наименование = НСтр("ru = 'Справка-расчет амортизационной премии'");
	ОписаниеВарианта.Описание = НСтр("ru = 'Сумма амортизационной, премии принятая в состав расходов текущего периода в соответствии со ст. 259 НК РФ.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьРеглУчет");
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриЗаписиРегистраСведений(Объект, ИмяРегистра) Экспорт

	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивыСлужебный.ВедетсяРегламентированныйУчетВНА() Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяРегистра = "МестонахождениеОС" Тогда
		ПриЗаписиВРегистрМестонахождениеОС(Объект);
	ИначеЕсли ИмяРегистра = "ПараметрыАмортизацииОСБУ" Тогда
		ПриЗаписиВРегистрПараметрыАмортизацииОСБУ(Объект);
	ИначеЕсли ИмяРегистра = "ПорядокУчетаОСБУ" Тогда
		ПриЗаписиВРегистрПорядокУчетаОСБУ(Объект);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Функция ТребуетсяЗагрузитьТаблицыДвижений(ИмяРегистра) Экспорт

	//++ Локализация
	
	//++ НЕ УТ
	Если ИмяРегистра = "ОтражениеДокументовВРеглУчете" Тогда
		// Формирование движений выполняется процедурой РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению().
		Возврат Ложь;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	Возврат Истина;
	
КонецФункции

Функция ОбъектЭксплуатацииПринятКУчету(Ссылка) Экспорт

	ПринятКУчету = Ложь;
	
	//++ Локализация
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ТекущаяДатаСеанса()) Тогда
		ОрганизацияОС = УчетОСВызовСервера.ОрганизацияВКоторойОСПринятоКУчету(Ссылка);
		ПринятКУчету = ЗначениеЗаполнено(ОрганизацияОС);
	КонецЕсли;
	//-- Локализация
	
	Возврат ПринятКУчету;
	
КонецФункции

Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт

	//++ Локализация
	
	Объекты.Добавить(Метаданные.Документы.АмортизацияНМА);
	Объекты.Добавить(Метаданные.Документы.АмортизацияОС);
	Объекты.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСОтАрендатора2_4);
	Объекты.Добавить(Метаданные.Документы.ВозвратОСОтАрендатора);
	Объекты.Добавить(Метаданные.Документы.ВыбытиеАрендованныхОС);
	Объекты.Добавить(Метаданные.Документы.ВыработкаНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровНМА);
	Объекты.Добавить(Метаданные.Документы.ИзменениеПараметровОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСостоянияОС);
	Объекты.Добавить(Метаданные.Документы.ИзменениеСпособаОтраженияИмущественныхНалогов);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияОС);
	Объекты.Добавить(Метаданные.Документы.ИнвентаризацияНМА);
	Объекты.Добавить(Метаданные.Документы.МодернизацияОС);
	Объекты.Добавить(Метаданные.Документы.ОтменаРегистрацииЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.ОтменаРегистрацииТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.ОтчетОператораСистемыПлатон);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСАрендатору2_4);
	Объекты.Добавить(Метаданные.Документы.ПередачаОСАрендатору);
	Объекты.Добавить(Метаданные.Документы.ПеремещениеОС);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаНМА);
	Объекты.Добавить(Метаданные.Документы.ПереоценкаОС);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеНМА);
	Объекты.Добавить(Метаданные.Документы.ПодготовкаКПередачеОС);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеАрендованныхОС);
	Объекты.Добавить(Метаданные.Документы.ПоступлениеПредметовЛизинга);
	Объекты.Добавить(Метаданные.Документы.ПриобретениеУслугПоЛизингу);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуНМА);
	Объекты.Добавить(Метаданные.Документы.ПринятиеКУчетуОС);
	Объекты.Добавить(Метаданные.Документы.РегистрацияЗемельныхУчастков);
	Объекты.Добавить(Метаданные.Документы.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество);
	Объекты.Добавить(Метаданные.Документы.РегистрацияТранспортныхСредств);
	Объекты.Добавить(Метаданные.Документы.СписаниеНМА);
	Объекты.Добавить(Метаданные.Документы.СписаниеОС);
	Объекты.Добавить(Метаданные.Справочники.ДоговорыЛизинга);
	
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНМА);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовОС);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовЛизинга);
	
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаТаблицаПрочиеДоходыПриПереоценке(ТекстыТекущегоЗапроса) Экспорт

	//++ Локализация
	
	#Область ПризнаниеДоходовОтЦелевогоФинансирования
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	&Подразделение                                 КАК Подразделение,
	|	ТаблицаПереоценки.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	&УменьшениеНакопленнойАмортизации              КАК ХозяйственнаяОперация,
	|	&СтатьяДоходов                                 КАК СтатьяДоходов,
	|	&АналитикаДоходов                              КАК АналитикаДоходов,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУпр,
	|
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ 
	|		- ВЫБОР 
	|			КОГДА ТаблицаПереоценки.НачислятьИзнос
	|				ТОГДА 0
	|			КОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ > 0
	|				ТОГДА ТаблицаПереоценки.СуммаУценкиАмортизацииЦФ
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК СуммаРегл
	|
	|ИЗ
	|	ТаблицаПереоценки КАК ТаблицаПереоценки
	|ГДЕ
	|	ТаблицаПереоценки.СуммаУценкиСтоимостиЦФ > 0
	|	И &ИспользоватьУчетПрочихДоходовРасходовРегл";
	ТекстыТекущегоЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ВыбытиеАрендованныхОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПриобретениеУслугПоЛизингу КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаЕстьУчетВнеоборотныхАктивов2_4(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииНМАБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ КАК Таблица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияНМА КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьГруппыОрганизацийОСиНМА(Период, МассивОСиНМА) Экспорт

	//++ Локализация
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Период) Тогда
		// Поддержка только 2.4
		Возврат;
	КонецЕсли;
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Период", Период);
	ВнеоборотныеАктивыСлужебный.ДополнитьПараметрамиУчетаВнеоборотныхАктивов(ПараметрыРасчета);
	
	СписокЗапросов = Новый Массив;
	
	#Область ПеремещенияМеждуОрганизациями
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ ПеремещенияМеждуОрганизациями
	|ИЗ
	|	Документ.ПеремещениеОС2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.ОрганизацияПолучатель,
	|	ТабличнаяЧасть.НематериальныйАктив
	|ИЗ
	|	Документ.ПеремещениеНМА2_4 КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеНМА2_4.НМА КАК ТабличнаяЧасть
	|		ПО (ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаДокумента.Проведен
	|	И ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс)
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПорядокУчета
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОбъектУчета,
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ ПорядокУчета
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАБУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ.СрезПоследних(&КонецПредыдущегоМесяца, ) КАК ПорядокУчета
	|ГДЕ
	|	(ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.НематериальныйАктив,
	|	ПорядокУчета.Организация,
	|	ПорядокУчета.СпособОтраженияРасходов,
	|	ПорядокУчета.ОрганизацияПолучательРасходов
	|ИЗ
	|	РегистрСведений.ПорядокУчетаНМАУУ КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И &ПорядокУчетаВНАВУпрУчете = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ)
	|	И (ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию
	|			ИЛИ ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СпособыОтраженияРасходов
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов
	|ПОМЕСТИТЬ ПорядокУчетаСоСпособомОтраженияРасходов
	|ИЗ
	|	ПорядокУчета КАК ПорядокУчета
	|ГДЕ
	|	ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|		И ПорядокУчета.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка КАК СпособОтраженияРасходов,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов КАК ОрганизацияПолучатель
	|ПОМЕСТИТЬ СпособыОтраженияРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.Амортизация КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.АмортизационнаяПремия КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаАмортизация.Ссылка,
	|	ТаблицаАмортизация.ОрганизацияПолучательРасходов
	|ИЗ
	|	Документ.ИзменениеПараметровНМА2_4.АмортизационныеРасходы КАК ТаблицаАмортизация
	|ГДЕ
	|	ТаблицаАмортизация.Ссылка В
	|			(ВЫБРАТЬ
	|				СпособыОтраженияРасходов.СпособОтраженияРасходов
	|			ИЗ
	|				ПорядокУчетаСоСпособомОтраженияРасходов КАК СпособыОтраженияРасходов)
	|	И ТаблицаАмортизация.ПередаватьРасходыВДругуюОрганизацию";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПакетыАмортизации
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ ПакетыАмортизации
	|ИЗ
	|	ПеремещенияМеждуОрганизациями КАК ТаблицаДанных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|ГДЕ
	|	(ТаблицаДанных.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|			ИЛИ ТаблицаДанных.СпособОтраженияРасходов = ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанных.Организация,
	|	СпособыОтраженияРасходов.ОрганизацияПолучатель,
	|	ТаблицаДанных.ОбъектУчета
	|ИЗ
	|	ПорядокУчета КАК ТаблицаДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпособыОтраженияРасходов КАК СпособыОтраженияРасходов
	|		ПО (СпособыОтраженияРасходов.СпособОтраженияРасходов = ТаблицаДанных.СпособОтраженияРасходов)
	|ГДЕ
	|	ТаблицаДанных.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка)
	|	И ТаблицаДанных.СпособОтраженияРасходов <> ЗНАЧЕНИЕ(Документ.ИзменениеПараметровНМА2_4.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписокОбъектовУчета
	Документы.АмортизацияОС2_4.ТекстЗапросаСписокВсехОС(СписокЗапросов, ПараметрыРасчета, "_ОС");
	Документы.АмортизацияНМА2_4.ТекстЗапросаСписокВсехНМА(СписокЗапросов, ПараметрыРасчета, "_НМА");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокОбъектовУчета.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ СписокОбъектовУчета
	|ИЗ
	|	ВТ_СписокОбъектовУчета_УУ_ОС КАК СписокОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокОбъектовУчета.НематериальныйАктив
	|ИЗ
	|	ВТ_СписокОбъектовУчета_УУ_НМА КАК СписокОбъектовУчета";
	
	Если ПараметрыРасчета.ИспользоватьРеглУчет Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокОбъектовУчета.ОсновноеСредство
		|ИЗ
		|	ВТ_СписокОбъектовУчета_БУ_ОС КАК СписокОбъектовУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокОбъектовУчета.НематериальныйАктив
		|ИЗ
		|	ВТ_СписокОбъектовУчета_БУ_НМА КАК СписокОбъектовУчета";
	КонецЕсли; 
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область Выборка
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДанных.Организация КАК Организация,
	|	ТаблицаДанных.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	ПакетыАмортизации КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.ОбъектУчета В
	|			(ВЫБРАТЬ
	|				СписокОбъектовУчета.ОбъектУчета
	|			ИЗ
	|				СписокОбъектовУчета КАК СписокОбъектовУчета)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ВнеоборотныеАктивы.УстановитьПараметрыЗапросаДляРасчетаАмортизации(Запрос, ПараметрыРасчета);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	НомерГруппы  = -1;
	
	Пока Выборка.Следующий() Цикл
		
		НомерГруппы = НомерГруппы + 1;
		МассивОСиНМА.Добавить(Новый Массив);
		
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.Организация);
		МассивОСиНМА[НомерГруппы].Добавить(Выборка.ОрганизацияПолучатель);
		
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПорядокУчетаПриКоторомНачисляетсяАмортизация(ПорядокУчета) Экспорт

	//++ Локализация
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзноса);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ);
	ПорядокУчета.Добавить(Перечисления.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена);
	ПорядокУчета.Добавить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации);
	ПорядокУчета.Добавить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыЗапросаДляРасчетаАмортизации(Запрос, ПараметрыРасчета) Экспорт

	//++ Локализация
	Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ПараметрыРасчета.ДатаПереходаКЛинейномуМетоду);
	Запрос.УстановитьПараметр("МинимальнаяСуммаВР", 0.5);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовКоторыеМогутИзменитьСтоимость(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПоступлениеАрендованныхОС", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РаспределениеНДС", Ложь, ТипыОбъектов);
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("ПередачаОСАрендатору2_4", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовКоторыеМогутНачислитьАмортизацию(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РаспределениеНДС", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовПоКоторымНужноИсключитьРасходыПриРасчетеСтоимости(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РаспределениеНДС", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТипыДокументовПоКоторымНужноУчестьАмортизацию(ТипыОбъектов) Экспорт

	//++ Локализация
	ВнеоборотныеАктивыСлужебный.ДобавитьТипОбъектаМетаданных("РаспределениеНДС", Ложь, ТипыОбъектов);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДанныеВыбораНематериальныхАктивов2_2(Параметры) Экспорт

	//++ Локализация
	
	Если Параметры.Свойство("Контекст")Тогда
		
		ИндексЗапятой = СтрНайти(Параметры.Контекст, ",");
		Контекст = Параметры.Контекст;
		Если ИндексЗапятой <> 0 Тогда
			Контекст = Сред(Контекст, 1, ИндексЗапятой-1);
		КонецЕсли;
		
		Если Контекст = "БУ"
			И (ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры, "ТекущийРегистратор, ДатаСведений")
				Или Параметры.Свойство("Отбор")
				И ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры.Отбор, "БУОрганизация, БУСостояние")) Тогда
			
			Параметры.Отбор.Вставить("Ссылка", ЭлементыНМАПоОтборуБУ(Параметры));
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДанныеВыбораОбъектовЭксплуатации2_2(Параметры) Экспорт

	//++ Локализация
	
	Если Не Параметры.Свойство("Отбор") Тогда
		Параметры.Вставить("Отбор", Новый Структура);
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ГруппаОС") Тогда
		Параметры.Отбор.Вставить("БУГруппаОС", Параметры.Отбор.ГруппаОС);
		Параметры.Отбор.Удалить("ГруппаОС");
	ИначеЕсли Параметры.Свойство("БУГруппаОС") Тогда
		Параметры.Отбор.Вставить("ГруппаОС", Параметры.Отбор.БУГруппаОС);
	КонецЕсли;
	Если Параметры.Отбор.Свойство("АмортизационнаяГруппа") Тогда
		Параметры.Отбор.Вставить("БУАмортизационнаяГруппа", Параметры.Отбор.АмортизационнаяГруппа);
	ИначеЕсли Параметры.Свойство("БУАмортизационнаяГруппа") Тогда
		Параметры.Отбор.Вставить("АмортизационнаяГруппа", Параметры.Отбор.БУАмортизационнаяГруппа);
	КонецЕсли;
	
	Если Параметры.Свойство("ДоговорЛизинга") И ЗначениеЗаполнено(Параметры.ДоговорЛизинга) Тогда
		Параметры.Отбор.Вставить("НаправлениеДеятельности", ВнеоборотныеАктивыВызовСервера.НаправлениеДеятельности(Параметры.ДоговорЛизинга));
	КонецЕсли;
	Если Параметры.Свойство("ВариантПримененияЦелевогоФинансирования")
		И Параметры.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется") Тогда
		Параметры.Отбор.Удалить("НаправлениеДеятельности");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("МФУГруппаОС") Тогда
		Параметры.Отбор.Вставить("ГруппаОСМеждународныйУчет", Параметры.Отбор.МФУГруппаОС);
	КонецЕсли;
	
	
	Если Параметры.Свойство("Контекст")Тогда
		
		ИндексЗапятой = СтрНайти(Параметры.Контекст, ",");
		Контекст = Параметры.Контекст;
		Если ИндексЗапятой <> 0 Тогда
			Контекст = Сред(Контекст, 1, ИндексЗапятой-1);
		КонецЕсли;
		
		Если Контекст = "БУ"
			И (ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры, "ТекущийРегистратор, ДатаСведений")
				Или Параметры.Свойство("Отбор")
				И ОбщегоНазначенияУТКлиентСервер.СтруктураСодержитКлючи(Параметры.Отбор, "БУОрганизация, БУПодразделение, БУСостояние, ВидНалога")) Тогда
			
			Параметры.Отбор.Вставить("Ссылка", ЭлементыОСПоОтборуБУ(Параметры));
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаДанныеВыбораПоказателейНаработкиПоОтбору(СписокЗапросовОбъединение) Экспорт

	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ПоказательНаработки КАК Значение,
	|	ПервоначальныеСведенияОС.ПоказательНаработки.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			,
	|			ОсновноеСредство = &ОбъектОтбора
	|	) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	НЕ &ПоказательАмортизации
	|	И НЕ &ИспользуетсяУправлениеВНА_2_4";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьНаличиеУчета(НаличиеУчета) Экспорт

	//++ Локализация
	НаличиеУчета.Вставить("ЕстьУчет2_2", ЕстьУчетВнеоборотныхАктивов2_2());
	НаличиеУчета.Вставить("ВедетсяУчетПлатежейВПлатон", ВедетсяУчетПлатежейВПлатон());
	НаличиеУчета.Вставить("ИспользуетсяУУНаПланеСчетовХозрасчетный", Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить());
	НаличиеУчета.Вставить("ИспользоватьРеглУчет", Константы.ИспользоватьРеглУчет.Получить());
	
	НаличиеУчета.МожноОтключитьУчет = 
		НаличиеУчета.МожноОтключитьУчет
		И НЕ НаличиеУчета.ЕстьУчет2_2 
		И НЕ НаличиеУчета.ВедетсяУчетПлатежейВПлатон;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДобавитьВТекстЗапросаВтТаблицаОСПоляЛокализации(ТекстЗапроса, ИмяДокумента) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	Если ИмяДокумента = "Документ.ПередачаОСАрендатору2_4" Тогда
		ПоляЛокализации = "ТаблицаОС.ЗалоговаяСтоимость КАК ЗалоговаяСтоимость";
	КонецЕсли;
	//-- Локализация
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЛокализации", ПоляЛокализации);
	
КонецПроцедуры

Процедура ПроверитьВозможностьПринятияКУчетуОС(Выборка, Объект, ДанныеСтроки, МестонахождениеВТабличнойЧасти, Путь, Отказ) Экспорт

	//++ Локализация
	
	ТекстНеУказан = НСтр("ru = '<Не указан>'");
	
	Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в организацию ""%2"", соответствующую управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругоеМестонахождение И НЕ Выборка.УжеПринятоКУчету 
		И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.Подразделение <> Выборка.ТекущееМестонахождение) Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято в подразделение ""%2"", соответствующее управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееМестонахождение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругойМОЛ И НЕ Выборка.УжеПринятоКУчету
		И (НЕ МестонахождениеВТабличнойЧасти ИЛИ ДанныеСтроки.МОЛ <> Выборка.ТекущийМОЛ) Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему регламентированному учету.'");
		Иначе
			ТекстСообщения = НСтр("ru='Основное средство ""%1"" должно быть принято с МОЛ ""%2"", соответствующему в управленческому учету.'");
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, ?(ЗначениеЗаполнено(Выборка.ТекущийМОЛ), Выборка.ТекущийМОЛ, ТекстНеУказан));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
		
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПроверитьВозможностьПринятияКУчетуНМА(Выборка, Объект, Путь, Отказ) Экспорт
	
	Если Выборка.ДругаяОрганизация И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую регламентированному учету.'");
			КонецЕсли; 
		Иначе
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в организацию ""%2"", соответствующую управленческому учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в организацию ""%2"", соответствующую управленческому учету.'");
			КонецЕсли;
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущаяОрганизация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	Если Выборка.ДругоеПодразделение И НЕ Выборка.УжеПринятоКУчету Тогда
		Если Объект.ОтражатьВУпрУчете Тогда
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее регламентированному учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее регламентированному учету.'");
			КонецЕсли;
		Иначе
			Если Выборка.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда
				ТекстСообщения = НСтр("ru='Расходы на НИОКР ""%1"" должны быть приняты в подразделение ""%2"", соответствующее управленческому учету.'");
			Иначе
				ТекстСообщения = НСтр("ru='Нематериальный актив ""%1"" должен быть принят в подразделение ""%2"", соответствующее управленческому учету.'");
			КонецЕсли;
		КонецЕсли; 
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Представление, Выборка.ТекущееПодразделение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьОписаниеРегистровОСДляКонтроляДатЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.МестонахождениеОСБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьОписаниеРегистровНМАДляКонтроляДатЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет", "Период", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СостоянияНМАОрганизаций", "Период", "РегламентныеОперации", "Организация");
	//-- Локализация
	
КонецПроцедуры

Функция ИспользуетсяУправлениеВНА_2_4(Период) Экспорт

	ИспользуетсяУправлениеВНА_2_4 = Ложь;
	
	//++ Локализация
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ИспользуетсяУправлениеВНА_2_4 = 
		(Период >= ДатаНачалаУчета
			ИЛИ Период = '000101010000' 
				И ТекущаяДатаСеанса() >= ДатаНачалаУчета);
					
	//-- Локализация

	Возврат ИспользуетсяУправлениеВНА_2_4;
	
КонецФункции
 
Функция ИспользуетсяУправлениеВНА() Экспорт

	ИспользуетсяУправлениеВНА = Ложь;
	
	//++ Локализация
	ИспользуетсяУправлениеВНА = ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2");
	//-- Локализация
	
	Возврат ИспользуетсяУправлениеВНА;
	
КонецФункции

Функция УсловияПереходаНаУчет2_2() Экспорт

	КомментарийУчет2_2 = "";
	
	Если НЕ Константы.ИспользоватьРеглУчет.Получить() Тогда
		РежимПартионногоУчета = Ложь;
		КомментарийУчет2_2 = КомментарийУчет2_2 + Символы.ПС
			+ НСтр("ru = '- включить опцию ""Регламентированный учет""
                    |(раздел ""НСИ и администрирование"" - ""Регламентированный учет"")'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КомментарийУчет2_2) Тогда
		КомментарийУчет2_2 = НСтр("ru = 'Для включения возможности учета версии 2.2 необходимо:'") + КомментарийУчет2_2;
	КонецЕсли; 
	
	ДоступностьУчета2_2 = Новый Структура;
	ДоступностьУчета2_2.Вставить("КомментарийУчет2_2", КомментарийУчет2_2);
	ДоступностьУчета2_2.Вставить("ДоступенУчет", НЕ ЗначениеЗаполнено(КомментарийУчет2_2));
	
	Возврат ДоступностьУчета2_2;
	
КонецФункции

Процедура УсловияПереходаНаУчет2_4(МинимальнаяДатаНачалаУчета2_4, КомментарийМинДатаНачалаУчета2_4, МаксимальнаяДатаНачалаУчета2_4, КомментарийМаксДатаНачалаУчета2_4) Экспорт

	//++ Локализация
	
	ДатаОпции = МаксимальнаяДатаДокументовВерсии22();
	Если ЗначениеЗаполнено(ДатаОпции) И ДатаОпции > МинимальнаяДатаНачалаУчета2_4 Тогда
		МинимальнаяДатаНачалаУчета2_4 = КонецМесяца(ДатаОпции) + 1;
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть позже даты оформленных документов версии 2.2 : %1'");
		КомментарийМинДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МинимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 
	
	МаксимальнаяДатаНачалаУчета2_4 = ?(Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить(), Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить(), '000101010000');
	Если ЗначениеЗаполнено(МаксимальнаяДатаНачалаУчета2_4) Тогда
		ШаблонСообщения = НСтр("ru = 'Начало учета должно быть не позже даты начала ведения управленческого учета на плане счетов регл. учета: %1'");
		КомментарийМаксДатаНачалаУчета2_4 = СтрШаблон(ШаблонСообщения, Формат(МаксимальнаяДатаНачалаУчета2_4, "ДЛФ=D"));
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьУсловияПереходаНаУчет2_4(ДоступностьУчета2_4) Экспорт

	//++ Локализация
	
	УчетВФункциональнойВалюте = Ложь;
	УчетВнеоборотныхАктивовМеждународныйУчет = Ложь;
	
	
	ДоступностьУчета2_4.Вставить("УчетВнеоборотныхАктивовМеждународныйУчет", УчетВнеоборотныхАктивовМеждународныйУчет);
	ДоступностьУчета2_4.Вставить("УчетВФункциональнойВалюте", УчетВФункциональнойВалюте);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПроверитьРеквизитыОСПриПринятииКУчету(Выборка, Объект, Путь, Отказ) Экспорт

	//++ Локализация
	
	Если Выборка.ДругаяАмортизационнаяГруппа Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Амортизационная группа основного средства ""%1"" не должна отличаться от группы, указанной в документе.'"), Выборка.Представление);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	Если Выборка.ДругаяГруппаОС Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru='Группа основного средства ""%1"" не должна отличаться от группы, указанной в документе.'"), Выборка.Представление);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаПриЗаписиВРегистрПервоначальныеСведенияОС(МенеджерВременныхТаблиц, ТекстЗапроса) Экспорт

	//++ Локализация
	ДополнитьТекстЗапросаПриЗаписиВРегистрДляЦелейУСН("ПервоначальныеСведенияОС", МенеджерВременныхТаблиц, ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьТекстЗапросаПриЗаписиВРегистрПервоначальныеСведенияНМА(МенеджерВременныхТаблиц, ТекстЗапроса) Экспорт

	//++ Локализация
	ДополнитьТекстЗапросаПриЗаписиВРегистрДляЦелейУСН("ПервоначальныеСведенияНМА", МенеджерВременныхТаблиц, ТекстЗапроса);
	//-- Локализация
	
КонецПроцедуры

Функция ЕстьПраваНаЧтениеСостоянияОС() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;
	
КонецФункции

Функция ЕстьПраваНаЧтениеСостоянияНМА() Экспорт

	ЕстьПрава = Истина;
	
	//++ Локализация
	ЕстьПрава = ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
	//-- Локализация
	
	Возврат ЕстьПрава;

КонецФункции

Процедура ОпределитьСледующийПериодФормированияЗаданий(Операция, Организация, СледующийПериод) Экспорт

	//++ Локализация
	
	Если Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество Тогда
		
		СледующийПериод = ПериодРасчетаНалогаНаИмущество(Организация, СледующийПериод);
		
	ИначеЕсли Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога Тогда
		
		СледующийПериод = ПериодРасчетаЗемельногоНалога(Организация, СледующийПериод);
		
	ИначеЕсли Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога Тогда
		
		СледующийПериод = ПериодРасчетаТранспортногоНалога(Организация, СледующийПериод);
		
	ИначеЕсли Операция = Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеЛизинговыхПлатежей Тогда
		
		СледующийПериод = ПериодПризнанияВНУЛизинговыхПлатежей(Организация, СледующийПериод);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПередЗаписьюЗаданийКЗакрытиюМесяца(Месяц, ТекущаяОперация, ТекущаяОрганизация) Экспорт
	
	//++ Локализация
	
	Если ТекущаяОперация = Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаНаИмущество 
		И НЕ РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(ТекущаяОрганизация, Месяц)
		
		ИЛИ ТекущаяОперация = Перечисления.ОперацииЗакрытияМесяца.РасчетЗемельногоНалога 
		И НЕ РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(ТекущаяОрганизация, Месяц)
		
		ИЛИ ТекущаяОперация = Перечисления.ОперацииЗакрытияМесяца.РасчетТранспортногоНалога 
		И НЕ РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(ТекущаяОрганизация, Месяц) Тогда
		
		Месяц = НачалоМесяца(КонецГода(Месяц));
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры
 
Функция ПараметрыРасшифровкиОтчета(ПолноеИмяОтчета, Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек) Экспорт

	ПараметрыРасшифровки = Неопределено;
	
	//++ Локализация
	
	Если ПолноеИмяОтчета = "Отчет.РеестрДоговоровЛизинга" Тогда
		
		ПараметрыРасшифровки = ПараметрыРасшифровкиРеестраДоговоровЛизинга(Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек);
	
	КонецЕсли;

	//-- Локализация

	Возврат ПараметрыРасшифровки;
	
КонецФункции

Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт

	//++ Локализация
	
	// ОтчетОператораСистемыПлатон
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	Строка.КлючНазначенияИспользования 	= "ОтчетОператораСистемыПлатон";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ОтчетОператораСистемыПлатон");
	Строка.ПолноеИмяДокумента			= "Документ.ОтчетОператораСистемыПлатон";
	Строка.ЗаголовокРабочегоМеста       = НСтр("ru = 'Документы закупки (отчеты системы ""Платон"")'");
	
	//-- Локализация
	
КонецПроцедуры
 

#КонецОбласти

//++ Локализация

#Область ПроведениеПоРеглУчету

Процедура ТекстЗапросаПеремещениеСтоимостиОС(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.КорКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Строки.КорКонтрагент 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Строки.КорОрганизация 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0))";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПередачаИзносаИсходящиеДвижения // Дт  :: Кт 010
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт  :: Кт 010)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПередачаИзносаВходящиеДвижения // Дт 010 :: Кт 
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Передача амортизации ОС исходящие проводки (Дт 010 :: Кт)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеАмортизацииОСвДругуюОрганизацию))
	|	И Строки.НачислятьИзнос
	|	И (Строки.Организация <> Строки.КорОрганизация
	|		ИЛИ Строки.Подразделение <> Строки.КорПодразделение)
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеСтоимостиНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение стоимости НМА (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Перемещение стоимости НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровСтоимостиНМА)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаПеремещениеАмортизацииНМА(СписокЗапросов) Экспорт

	#Область ПеремещениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПеремещениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение амортизации НМА (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.КорГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Перемещение амортизации НМА"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияНМА КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеПараметровАмортизацииНМА)
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

КонецПроцедуры

Процедура ТекстЗапросаНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область Амортизация // (Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Амортизация_ЦФ // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Износ // Дт <СчетУчетаИзноса> :: Кт <>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаИзноса :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление износа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДоходыОтЦелевогоФинансирования // Дт <98> :: Кт <91>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Строки.КорПодразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.КорПодразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СубконтоКт1,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ + Строки.АмортизацияПРЦФ + Строки.АмортизацияВРЦФ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Признание доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|	ПО Строки.Регистратор = ПараметрыЦелевогоФинансированияОС.Ссылка
	|		И Строки.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|		И Строки.Организация = ПараметрыЦелевогоФинансированияОС.Организация
	|ГДЕ
	|	НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияНаПрочиеОперации // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И Строки.КорСтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияОтправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт РасчетыПоТекущимОперациям :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизацияПолучатель // Дт <СчетУчетаЗатрат> :: Кт <СчетНакопленияАмортизации>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУ КАК СуммаНУДт,
	|	Строки.АмортизацияПР КАК СуммаПРДт,
	|	Строки.АмортизацияВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУ КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияНУ <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
		
КонецПроцедуры

Процедура ТекстЗапросаАмортизационнаяПремия(СписокЗапросов) Экспорт
			
	#Область АмортизационнаяПремия // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияКВ // Дт <> :: Кт <КВ>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Снятие амортизационной премии с КВ (Дт <ПустаяСсылка> :: Кт КВ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизационнаяПремия КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|	ПО Строки.Организация = ПервоначальныеСведенияОС.Организация
	|		И Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияОтправитель // Дт <РасчетыПоТекущимОперациям> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт РасчетыПоТекущимОперациям :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетДт,
	|	Строки.КорОрганизация КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияПолучатель // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.КорОрганизация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.КорСтатьяРасходов КАК СубконтоДт1,
	|	Строки.КорАналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоТекущимОперациям) КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.КорСтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.КорАналитикаРасходов
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область АмортизационнаяПремияНаПрочиеОперации // Дт <СчетУчетаЗатрат> :: Кт <СчетУчетаОС>
	
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.КорСтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.КорПодразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СтоимостьНУ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СтоимостьНУ КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.КорСтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|	И Строки.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ТекстЗапросаПеремещениеДоходовОСЗаСчетЦФ(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение доходов за счет целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.Сумма КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.Сумма КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.Сумма КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение доходов за счет целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДоходыОСЗаСчетЦФ КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.Организация = Строки.КорОрганизация
	|	И Строки.Подразделение <> Строки.КорПодразделение";

	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ТекстЗапросаВТНачислениеАмортизацииОС(СписокЗапросов) Экспорт

	#Область втПервоначальныеСведенияОС
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ
	|ПОМЕСТИТЬ втПервоначальныеСведенияОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних КАК ПервоначальныеСведенияОС
	|		ПО (Строки.Организация = ПервоначальныеСведенияОС.Организация)
	|			И (Строки.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	Строки.АмортизационнаяПремия <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область втПараметрыЦелевогоФинансированияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыКОтражению.Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	Строки.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|		ПО (Строки.Регистратор = ДокументыКОтражению.Ссылка)
	|ГДЕ
	|	(Строки.АмортизацияЦФ <> 0
	|			ИЛИ Строки.АмортизацияНУЦФ <> 0
	|			ИЛИ Строки.АмортизацияПРЦФ <> 0
	|			ИЛИ Строки.АмортизацияВРЦФ <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.Ссылка КАК Ссылка,
	|	ПараметрыЦелевогоФинансированияОС.Организация КАК Организация,
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОСПоследнее.АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокОС.Ссылка КАК Ссылка,
	|		СписокОС.Организация КАК Организация,
	|		СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|		МАКСИМУМ(ПараметрыЦелевогоФинансированияОС.Период) КАК ПоследнийПериод
	|	ИЗ
	|		втСписокОС КАК СписокОС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|			ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокОС.Ссылка,
	|		СписокОС.Организация,
	|		СписокОС.ОсновноеСредство) КАК ПараметрыЦелевогоФинансированияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОСПоследнее
	|		ПО ПараметрыЦелевогоФинансированияОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОСПоследнее.ОсновноеСредство
	|			И ПараметрыЦелевогоФинансированияОС.ПоследнийПериод = ПараметрыЦелевогоФинансированияОСПоследнее.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Организация,
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Функция ТекстЗапросаВтСчетаВложенияВоВнеоборотныеАктивы(ДобавитьСчетаУчетаНМА, СписокЗапросов) Экспорт

	ИмяТаблицы = "втСчетаВложенияВоВнеоборотныеАктивы";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаВложенияВоВнеоборотныеАктивы
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|ГДЕ
	|	План.Ссылка В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПодготовкаКВводуВЭксплуатацию), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования), 
	|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств)
	|					//ДобавитьСчетаУчетаНМА//
	|					)
	|   
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	План.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))";
	
	Если ДобавитьСчетаУчетаНМА Тогда
		ТекстСчетаНМА = 
		",ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов), 
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
		|					ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДобавитьСчетаУчетаНМА//", ТекстСчетаНМА);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, СписокЗапросов) Тогда
		СписокЗапросов.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДоходыОСЗаСчетЦФ() Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДоходыЗаСчетЦФ.Регистратор КАК Регистратор,
	|	ДоходыЗаСчетЦФ.Период КАК Период,
	|	ДоходыЗаСчетЦФ.Организация КАК Организация,
	|	ДоходыЗаСчетЦФ.КорОрганизация КАК КорОрганизация,
	|	ДоходыЗаСчетЦФ.Подразделение КАК Подразделение,
	|	ДоходыЗаСчетЦФ.КорПодразделение КАК КорПодразделение,
	|	ДоходыЗаСчетЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ДоходыЗаСчетЦФ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втДоходыОСЗаСчетЦФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Регистратор КАК Регистратор,
	|		СтоимостьОС.Период КАК Период,
	|		СтоимостьОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|		СтоимостьОС.КорГруппаФинансовогоУчета КАК КорГруппаФинансовогоУчета,
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.КорОрганизация КАК КорОрганизация,
	|		СтоимостьОС.Подразделение КАК Подразделение,
	|		СтоимостьОС.КорПодразделение КАК КорПодразделение,
	|		СтоимостьОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтоимостьОС.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.СтоимостьЦФ КАК Сумма
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И СтоимостьОС.СтоимостьЦФ <> 0
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыКОтражению.Ссылка
	|				ИЗ
	|					ДокументыКОтражению КАК ДокументыКОтражению)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизацияОС.Регистратор,
	|		АмортизацияОС.Период,
	|		АмортизацияОС.ГруппаФинансовогоУчета,
	|		АмортизацияОС.КорГруппаФинансовогоУчета,
	|		АмортизацияОС.Организация,
	|		АмортизацияОС.КорОрганизация,
	|		АмортизацияОС.Подразделение,
	|		АмортизацияОС.КорПодразделение,
	|		АмортизацияОС.НаправлениеДеятельности,
	|		АмортизацияОС.КорНаправлениеДеятельности,
	|		АмортизацияОС.ОсновноеСредство,
	|		-АмортизацияОС.АмортизацияЦФ
	|	ИЗ
	|		РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ГДЕ
	|		АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И АмортизацияОС.АмортизацияЦФ <> 0
	|		И АмортизацияОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыКОтражению.Ссылка
	|				ИЗ
	|					ДокументыКОтражению КАК ДокументыКОтражению)) КАК ДоходыЗаСчетЦФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыЗаСчетЦФ.Регистратор,
	|	ДоходыЗаСчетЦФ.Период,
	|	ДоходыЗаСчетЦФ.Организация,
	|	ДоходыЗаСчетЦФ.КорОрганизация,
	|	ДоходыЗаСчетЦФ.Подразделение,
	|	ДоходыЗаСчетЦФ.КорПодразделение,
	|	ДоходыЗаСчетЦФ.НаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.КорНаправлениеДеятельности,
	|	ДоходыЗаСчетЦФ.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДоходыЗаСчетЦФ.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ЦелевоеФинансирование

Процедура ЗаполнитьСуммыЦелевыхСредств(ОС, ЦелевоеФинансирование, ВариантПримененияЦелевогоФинансирования) Экспорт
	
	Для каждого ДанныеСтроки Из ОС Цикл
		ДанныеСтроки.СуммаЦелевыхСредств = 0;
	КонецЦикла; 
	
	Если ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Полное Тогда
		
		Для каждого ДанныеСтроки Из ЦелевоеФинансирование Цикл
			ДанныеСтроки.Сумма = 0;
		КонецЦикла; 
		
	ИначеЕсли ВариантПримененияЦелевогоФинансирования = Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		
		СтоимостьРеглКоэффициенты = Новый Массив;
		Для каждого ДанныеСтроки Из ОС Цикл
			СтоимостьРеглКоэффициенты.Добавить(ДанныеСтроки.СтоимостьБУ);
		КонецЦикла; 
		
		СуммаКРаспределению = ЦелевоеФинансирование.Итог("Сумма");
		РезультатРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаКРаспределению, СтоимостьРеглКоэффициенты);
		
		Если РезультатРаспределения = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для Сч = 0 По РезультатРаспределения.ВГраница() Цикл
			ОС[Сч].СуммаЦелевыхСредств = РезультатРаспределения[Сч];
		КонецЦикла;
		
	Иначе
		
		ЦелевоеФинансирование.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЦелевоеФинансированиеОчиститьСубконто(ЦелевоеФинансирование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ЦелевоеФинансирование.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Таблица.Счет КАК ПланСчетов.Хозрасчетный) КАК Счет,
	|	Таблица.Субконто1 КАК Субконто1,
	|	Таблица.Субконто2 КАК Субконто2,
	|	Таблица.Субконто3 КАК Субконто3
	|ПОМЕСТИТЬ втДанныеЗаполнения
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеЗаполнения.ИндексСтроки,
	|	
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто1
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто2
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР КОГДА ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втДанныеЗаполнения.Субконто3
	|	КОНЕЦ КАК Субконто3
	|ИЗ
	|	втДанныеЗаполнения КАК втДанныеЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто1.Ссылка И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто2.Ссылка И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто3.Ссылка И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаЦФ = ЦелевоеФинансирование[Выборка.ИндексСтроки];
		ЗаполнитьЗначенияСвойств(СтрокаЦФ, Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ТекстЗапросаВтТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПорядокУчетаОСБУ";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПорядокУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчета.Состояние КАК Состояние,
	|	ПорядокУчета.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	ПорядокУчета.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	ПорядокУчета.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчета.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчета.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчета.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|	ПорядокУчета.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчета.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчета.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПорядокУчета.СпособОтраженияРасходовАмортизационнойПремии КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ПорядокУчета.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПорядокУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаПараметрыЦелевогоФинансированияОС(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыЦелевогоФинансированияОС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияОС
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаВтТаблицаПараметрыЦелевогоФинансированияНМА(ТекстыЗапроса, ИмяДокумента) Экспорт

	ИмяТаблицы = "втПараметрыЦелевогоФинансированияНМА";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокНМА(ТекстыЗапроса, ИмяДокумента);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	ПараметрыЦелевогоФинансированияНМА.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияНМА.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияНМА.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияНМА.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ втПараметрыЦелевогоФинансированияНМА
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						СписокНМА.НематериальныйАктив
	|					ИЗ
	|						втСписокНМА КАК СписокНМА)) КАК ПараметрыЦелевогоФинансированияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете_Амортизация(Запрос, ТекстыЗапроса, Регистры) Экспорт

	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Ссылка,
	|	&Период,
	|	НАЧАЛОПЕРИОДА(ТаблицаРасходы.ПериодРасчета, ДЕНЬ),
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете)
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПериодРасчетаНалогаНаИмущество(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОСНО
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&КонецКвартала,
	|			Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям) КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитика
	|		ПО Т.УчетнаяПолитика = СпрУчетнаяПолитика.Ссылка
	|			И (СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Общая)
	|				ИЛИ &КонецКвартала >= ДАТАВРЕМЯ(2015, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Организация КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПринятыеКУчету.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|				&НачалоГода,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации
	|					ГДЕ
	|						Организации.ОСНО)) КАК ПринятыеКУчету
	|	ГДЕ
	|		ПринятыеКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПринятыеКУчету.Организация КАК Организация
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций КАК ПринятыеКУчету
	|	ГДЕ
	|		ПринятыеКУчету.Период МЕЖДУ &НачалоГода И &КонецКвартала
	|		И ПринятыеКУчету.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПринятыеКУчету.Активность
	|		И ПринятыеКУчету.Организация В
	|				(ВЫБРАТЬ
	|					Организации.Ссылка
	|				ИЗ
	|					Организации
	|				ГДЕ
	|					Организации.ОСНО)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СтавкиНалога.Организация
	|	ИЗ
	|		РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(
	|				&КонецКвартала,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)) КАК СтавкиНалога
	|	ГДЕ
	|		СтавкиНалога.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)) КАК Организации";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодРасчетаЗемельногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(
	|			&КонецКвартала,
	|			(Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));
	
КонецФункции

Функция ПериодРасчетаТранспортногоНалога(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.Ссылка В (&Организация)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И Организации.ЮридическоеФизическоеЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистрация.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&КонецКвартала,
	|			Организация В
	|					(ВЫБРАТЬ
	|						Организации.Ссылка
	|					ИЗ
	|						Организации)
	|				И ВключатьВНалоговуюБазу) КАК Регистрация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));

	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(
								Выборка.Организация, НачалоПериода);
		
		Если УплачиваютсяАвансы Тогда
			Возврат НачалоМесяца(КонецКвартала(НачалоПериода));
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат НачалоМесяца(КонецГода(НачалоПериода));

КонецФункции

Функция ПериодПризнанияВНУЛизинговыхПлатежей(Организация, НачалоПериода) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1 КАК Поле1
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И (ДоговорЛизинга.ДатаОкончанияДействия >= &Период
	|					ИЛИ ДоговорЛизинга.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))) КАК СведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &Организация) КАК СостоянияОС
	|		ПО СостоянияОС.ОсновноеСредство = СведенияОС.ОсновноеСредство
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	Если НЕ Результат.Пустой() Тогда
		Возврат НачалоПериода;
	КонецЕсли; 

	// Проверим более поздние периоды
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ДОБАВИТЬКДАТЕ(СведенияОС.Период, МЕСЯЦ, 1)), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК СведенияОС
	|ГДЕ
	|	СведенияОС.ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)
	|	И СведенияОС.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И СведенияОС.Организация = &Организация
	|	И СведенияОС.Период >= &Период";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Период;
	
КонецФункции

// Определяет в какой организации НМА принят к учету.
//
// Параметры:
//  НематериальныйАктив - СправочникСсылка.НематериальныеАктивы - НМА, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой НМА принят к учету.
//
Функция ОрганизацияВКоторойНМАПринятКУчету(НематериальныйАктив) Экспорт
	
	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.СостоянияНМАОрганизаций) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СостоянияНМА.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(, НематериальныйАктив = &НМА) КАК СостоянияНМА
	|ГДЕ
	|	СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НМА", НематериальныйАктив);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции

#Область ЦелевоеФинансирование

// Возвращает данные для заполнения табличной части "Целевое финансирование" документов принятия к учета НМА/ОС и
// модернизации ОС.
//
// Параметры:
// 		ДанныеОтбора - Структура, ДанныеФормыСтруктура - Структура параметров отбора остатков.
// 		
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица с данными для заполнения ТЧ.
//
Функция ДанныеЗаполненияЦелевогоФинансирования(ДанныеОтбора) Экспорт
	
	Параметры = Новый Структура("Дата, Организация, Подразделение, НаправлениеДеятельности");
	ЗаполнитьЗначенияСвойств(Параметры, ДанныеОтбора);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СчетРодитель", ПланыСчетов.Хозрасчетный.ЦелевоеФинансирование);
	Запрос.УстановитьПараметр("ПустойЗаголовок", НСтр("ru='отсутствует'"));
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", НЕ ЗначениеЗаполнено(Параметры.Подразделение));
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Запрос.Параметры, Параметры, Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	НЕ ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL  КАК Субконто1Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто1Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто1Заголовок,
	|	ХозрасчетныйВидыСубконто1.ВидСубконто.ТипЗначения КАК Субконто1ТипЗначения,
	|	НЕ ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL  КАК Субконто2Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто2Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто2Заголовок,
	|	ХозрасчетныйВидыСубконто2.ВидСубконто.ТипЗначения КАК Субконто2ТипЗначения,
	|	НЕ ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL  КАК Субконто3Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто3Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто3Заголовок,
	|	ХозрасчетныйВидыСубконто3.ВидСубконто.ТипЗначения КАК Субконто3ТипЗначения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет.Родитель В (&СчетРодитель),
	|			,
	|			Организация = &Организация
	|				И (Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|				И НаправлениеДеятельности = &НаправлениеДеятельности) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто1.Ссылка
	|			И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто2.Ссылка
	|			И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО ХозрасчетныйОстатки.Счет = ХозрасчетныйВидыСубконто3.Ссылка
	|			И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстаток < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ХозрасчетныйОстатки.Счет.Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполняет служебные реквизиты в таблице "ЦелевоеФинансирование" таблицы объекта документа.
//
// Параметры:
// 		ОбъектФормы - ДанныеФормыСтруктура - Объект документа
// 		Строка - Число - Идентификатор строки, в которой требуется заполнение.
//
Процедура ЗаполнитьСлужебныеРеквизитыВТаблицеЦелевогоФинансирования(ОбъектФормы, Строка=Неопределено) Экспорт
	
	МассивСтрок = Неопределено;
	Если Строка <> Неопределено Тогда
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(ОбъектФормы.ЦелевоеФинансирование.НайтиПоИдентификатору(Строка));
	КонецЕсли;
	
	Таблица = ОбъектФормы.ЦелевоеФинансирование.Выгрузить(МассивСтрок);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("ПустойЗаголовок", НСтр("ru='отсутствует'"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	(ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО)) - 1 КАК ИндексСтроки,
	|	ВЫРАЗИТЬ(Таблица.Счет КАК ПланСчетов.Хозрасчетный) КАК Счет
	|ПОМЕСТИТЬ втДанныеЗаполнения
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеЗаполнения.ИндексСтроки,
	|	
	|	НЕ ХозрасчетныйВидыСубконто1.Ссылка ЕСТЬ NULL КАК Субконто1Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто1Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто1.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто1Заголовок,
	|	ХозрасчетныйВидыСубконто1.ВидСубконто.ТипЗначения КАК Субконто1ТипЗначения,
	|	
	|	НЕ ХозрасчетныйВидыСубконто2.Ссылка ЕСТЬ NULL КАК Субконто2Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто2Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто2.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто2Заголовок,
	|	ХозрасчетныйВидыСубконто2.ВидСубконто.ТипЗначения КАК Субконто2ТипЗначения,
	|	
	|	НЕ ХозрасчетныйВидыСубконто3.Ссылка ЕСТЬ NULL КАК Субконто3Разрешено,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК Субконто3Вид,
	|	ЕСТЬNULL(ХозрасчетныйВидыСубконто3.ВидСубконто.Представление, &ПустойЗаголовок) КАК Субконто3Заголовок,
	|	ХозрасчетныйВидыСубконто3.ВидСубконто.ТипЗначения КАК Субконто3ТипЗначения
	|ИЗ
	|	втДанныеЗаполнения КАК втДанныеЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто1
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто1.Ссылка И (ХозрасчетныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто2
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто2.Ссылка И (ХозрасчетныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто3
	|		ПО втДанныеЗаполнения.Счет = ХозрасчетныйВидыСубконто3.Ссылка И (ХозрасчетныйВидыСубконто3.НомерСтроки = 3)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонПредставления = НСтр("ru='<%1>'");
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаЦФ = ОбъектФормы.ЦелевоеФинансирование[Выборка.ИндексСтроки];
		ЗаполнитьЗначенияСвойств(СтрокаЦФ, Выборка);
		СтрокаЦФ.Субконто1Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто1Заголовок);
		СтрокаЦФ.Субконто2Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто2Заголовок);
		СтрокаЦФ.Субконто3Заголовок = СтрШаблон(ШаблонПредставления, Выборка.Субконто3Заголовок);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

#Область РасчетСтоимостиВнеоборотныхАктивов

Процедура ОпределитьРазницуВСтоимостиОСПослеРасчетаСтоимости(НачалоРасчета, МенеджерВременныхТаблиц)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОбъектУчета,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьУУ - СтоимостьОС.ПредварительнаяСтоимостьУУ) КАК Стоимость,
	|	СУММА(СтоимостьОС.ФактическаяСтоимостьБУ - СтоимостьОС.ПредварительнаяСтоимостьБУ) КАК СтоимостьРегл
	|ПОМЕСТИТЬ ВТ_РазницаВСтоимостиОС
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтоимостьОС.Организация КАК Организация,
	|		СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|		СтоимостьОС.Стоимость КАК ФактическаяСтоимостьУУ,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК ФактическаяСтоимостьБУ,
	|		0 КАК ПредварительнаяСтоимостьУУ,
	|		0 КАК ПредварительнаяСтоимостьБУ
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.РасчетСтоимости
	|		И СтоимостьОС.Регистратор В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		СтоимостьОС.Стоимость,
	|		СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|		И СтоимостьОС.Регистратор ССЫЛКА Документ.РаспределениеНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.ПринятиеКУчетуОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьОС.Ссылка.Организация,
	|		СтоимостьОС.ОсновноеСредство,
	|		0,
	|		0,
	|		СтоимостьОС.СтоимостьУУ,
	|		СтоимостьОС.СтоимостьБУ
	|	ИЗ
	|		Документ.МодернизацияОС2_4.ОС КАК СтоимостьОС
	|	ГДЕ
	|		СтоимостьОС.Ссылка В
	|				(ВЫБРАТЬ
	|					ДанныеКРасчету.Регистратор
	|				ИЗ
	|					ДанныеКРасчету КАК ДанныеКРасчету)
	|
	|	) КАК СтоимостьОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Организация,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтоимостьОС.ФактическаяСтоимостьУУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьУУ)
	|		ИЛИ СУММА(СтоимостьОС.ФактическаяСтоимостьБУ) > СУММА(СтоимостьОС.ПредварительнаяСтоимостьБУ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоРасчета));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(НачалоРасчета));
	
	Результат = Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДоначислитьНалогНаИмущество(Месяц, МенеджерВременныхТаблиц, Отказ)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Ссылка КАК РегламентныйДокумент,
	|	РегламентнаяОперация.Дата КАК ДатаОтражения
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Проведен
	|	И РегламентнаяОперация.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество)
	|	И РегламентнаяОперация.Организация В
	|			(ВЫБРАТЬ
	|				ВТ_РазницаВСтоимостиОС.Организация
	|			ИЗ
	|				ВТ_РазницаВСтоимостиОС
	|			ГДЕ
	|				ВТ_РазницаВСтоимостиОС.СтоимостьРегл > 0)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Месяц));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Месяц));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокИзменяемыхРегистров = Новый Массив;
	СписокИзменяемыхРегистров.Добавить("ПрочиеРасходы");
	СписокИзменяемыхРегистров.Добавить("ПрочиеАктивыПассивы");
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.РегламентныйДокумент);
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетНалогаНаИмущество.НаборЗаписей");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			
			Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистра + ".НаборЗаписей");
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.РегламентныйДокумент);
			КонецЦикла; 
			
			Блокировка.Заблокировать(); 
			
			ВременныеТаблицыДоРасчета = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
			
			РасчетПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(
								Выборка.Организация, 
								Месяц, 
								МенеджерВременныхТаблиц);
		
			// Удалим все таблицы, которые были созданы во время расчета налога.
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ВременныеТаблицыДоРасчета);
			
			РасходыПоНалогу = РасходыПоНалогу(Выборка.Организация, Месяц, РасчетПоНалогу, Отказ);
			
			СформироватьДвиженияРасчетНалога(
				Выборка.Организация, 
				Выборка.ДатаОтражения, 
				Выборка.РегламентныйДокумент, 
				РасчетПоНалогу,
				РасходыПоНалогу,
				СписокИзменяемыхРегистров);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПроблемуВыполненияРасчета(
				Перечисления.ОперацииЗакрытияМесяца.РасчетСтоимостиВнеоборотныхАктивов,
				Месяц,
				Выборка.Организация,
				ТекстОшибки,,,
				Отказ);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РасходыПоНалогу(Организация, Период, РасчетПоНалогу, Отказ)

	СправкаРасчет = РасчетИмущественныхНалоговПереопределяемый.ПустаяСправкаРасчет("РасчетНалогаНаИмущество");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетПоНалогу, СправкаРасчет);
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();

	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
												ВалютаРегл, ВалютаУпр, Период);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкаРасчет.ОсновноеСредство КАК ОсновноеСредство,
	|	СправкаРасчет.ИФНС КАК РегистрацияВНалоговомОргане,
	|	СправкаРасчет.СуммаНалогаКУплате КАК СуммаНалогаКУплате
	|ПОМЕСТИТЬ СправкаРасчет
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&КонецМесяца,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СправкаРасчет.ОсновноеСредство
	|					ИЗ
	|						СправкаРасчет КАК СправкаРасчет)
	|				И Организация = &Организация) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ОсновныеСредства.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СправкаРасчет.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) КАК СуммаРегл,
	|	СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр) КАК Сумма,
	|	СУММА((СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА (СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате) * &КоэффициентПересчетаВУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|				ТОГДА СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|	МестонахождениеОС.Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	&ХозяйственнаяОперация
	|ИЗ
	|	СправкаРасчет КАК СправкаРасчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|		ПО (РасчетНалогаНаИмущество.Организация = &Организация)
	|			И (РасчетНалогаНаИмущество.ПериодРасчета = &Период)
	|			И (РасчетНалогаНаИмущество.ОсновноеСредство = СправкаРасчет.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СправкаРасчет.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|		ПО СправкаРасчет.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО (СтатьиРасходов.Ссылка = &СтатьяРасходов)
	|ГДЕ
	|	СправкаРасчет.СуммаНалогаКУплате - РасчетНалогаНаИмущество.СуммаНалогаКУплате > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСредства.НаправлениеДеятельности,
	|	СправкаРасчет.РегистрацияВНалоговомОргане,
	|	МестонахождениеОС.Подразделение";
	
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период",        НачалоДня(КонецМесяца(Период)));
	Запрос.УстановитьПараметр("КонецМесяца",   КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.НачислениеИмущественныхНалогов);
	Запрос.УстановитьПараметр("СтатьяРасходов",   ПланыВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций",
		РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций(НачалоМесяца(Период)));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаРасходовПоНалогу = РасчетИмущественныхНалоговУП.ТаблицаРасходовПоНалогу(
									Перечисления.ТипыНалогов.НалогНаИмущество, 
									Выборка,
									Неопределено,
									Отказ);
									
	Возврат ТаблицаРасходовПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(Организация, ДатаОтражения, РегламентныйДокумент, РасчетПоНалогу, ТаблицыНачислениеНалога, СписокИзменяемыхРегистров)

	ПоляПоиска = "ПериодРасчета,Организация,ВидНалоговойБазы,ИФНС,КодПоОКТМО,КодВидаИмущества,
					|ОсновноеСредство,НалоговаяСтавка,КодНалоговойЛьготыОсвобождениеОтНалогообложения,
					|ПонижениеНалоговойСтавки,КБК,ДатаСведений";
	
	РасчетПоНалогу.Индексы.Добавить(ПоляПоиска);
	
	РасчетНалогаНаИмущество = РегистрыСведений.РасчетНалогаНаИмущество.СоздатьНаборЗаписей();
	РасчетНалогаНаИмущество.Отбор.Регистратор.Установить(РегламентныйДокумент);
	РасчетНалогаНаИмущество.Прочитать();
	Для каждого ДанныеСтроки Из РасчетНалогаНаИмущество Цикл
		СтруктураПоиска = Новый Структура(ПоляПоиска);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
		СписокСтрок = РасчетПоНалогу.НайтиСтроки(СтруктураПоиска);
		Если СписокСтрок.Количество() <> 0 Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, СписокСтрок[0]);
		КонецЕсли; 
	КонецЦикла;
	РасчетНалогаНаИмущество.ДополнительныеСвойства.Вставить(ВнеоборотныеАктивы.ИмяСлужебногоДополнительногоСвойстваОбъекта());
	РасчетНалогаНаИмущество.Записать();
	
	Для каждого ИмяРегистра Из СписокИзменяемыхРегистров Цикл
		
		ДобавитьВРегистрНовыеЗаписи(
		    РегламентныйДокумент,
			ИмяРегистра, 
			ТаблицыНачислениеНалога[ИмяРегистра],
			Перечисления.ВидыИсточниковДвижений.ДоначислениеНалогаНаИмуществоПослеРасчетаСтоимостиОС);
			
	КонецЦикла;
	
	ТаблицаОтражениеДокументовВРеглУчете = ТаблицаОтражениеДокументов(РегламентныйДокумент, Организация, ДатаОтражения);
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ТаблицаОтражениеДокументовВРеглУчете);
	
КонецПроцедуры

Процедура РассчитатьСтоимостьПриЦелевомФинансировании(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	ТекущиеРасходы.Колонки.Добавить("СуммаЦФ",   ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТекущиеРасходы.Колонки.Добавить("СуммаПРЦФ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	ТекущиеРасходы.Колонки.Добавить("СуммаВРЦФ", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	
	Если ВыборкаДокумент.ВариантПримененияЦелевогоФинансирования <> Перечисления.ВариантыПримененияЦелевогоФинансирования.Частичное Тогда
		Возврат;
	КонецЕсли; 
		
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		
		// Сумму целевых средств нужно распределить пропорционально по строкам расходов.
		СтоимостьРеглКоэффициенты = Новый Массив;
		
		СтруктураПоиска = Новый Структура("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасход Из СписокСтрок Цикл
			СтоимостьРеглКоэффициенты.Добавить(СтрокаРасход.СуммаРегл);
		КонецЦикла; 
		
		СуммаЦФ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДокумента.СуммаЦелевыхСредств, СтоимостьРеглКоэффициенты);
		
		Для Сч = 0 По СписокСтрок.ВГраница() Цикл
			
			СтрокаРасход = СписокСтрок[Сч];
			
			СтрокаРасход.СуммаЦФ = ?(СуммаЦФ <> Неопределено, СуммаЦФ[Сч], 0);
			
			СтрокаРасход.СуммаПРЦФ = Мин(СтрокаРасход.СуммаЦФ, СтрокаРасход.ПостояннаяРазница);
			
			Если СтрокаРасход.ПостояннаяРазница > 0
				И СтрокаРасход.ПостояннаяРазница > СтрокаРасход.СуммаЦФ Тогда
				СтрокаРасход.СуммаВРЦФ = 0;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ВременнаяРазница > (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница;
			ИначеЕсли СтрокаРасход.ВременнаяРазница > 0 
				И СтрокаРасход.ПостояннаяРазница <= (СтрокаРасход.СуммаЦФ - СтрокаРасход.ПостояннаяРазница) Тогда
				СтрокаРасход.СуммаВРЦФ = СтрокаРасход.ВременнаяРазница;
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура КорректировкаСтоимостиАрендованногоИмущества(ВыборкаДокумент, ДанныеДокумента, ТекущиеРасходы)

	Если ВыборкаДокумент.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга
		ИЛИ НЕ ВыборкаДокумент.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи Тогда
		Возврат;
	КонецЕсли; 
	
	Для каждого СтрокаДокумента Из ДанныеДокумента Цикл
		
		// Стоимость в НУ распределить пропорционально по строкам расходов.
		СтоимостьНУКоэффициенты = Новый Массив;
		
		СтруктураПоиска = Новый Структура("ОбъектУчета", СтрокаДокумента.ОбъектУчета);
		СписокСтрок = ТекущиеРасходы.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаРасход Из СписокСтрок Цикл
			СтоимостьНУКоэффициенты.Добавить(СтрокаРасход.СуммаРегл - СтрокаРасход.ПостояннаяРазница - СтрокаРасход.ВременнаяРазница);
		КонецЦикла; 
		
		СуммаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаДокумента.СтоимостьНУ, СтоимостьНУКоэффициенты);
		
		Для Сч = 0 По СписокСтрок.ВГраница() Цикл
			
			СтрокаРасход = СписокСтрок[Сч];
			СтрокаРасход.КорректировкаСтоимостиНУ = СтоимостьНУКоэффициенты[Сч] - СуммаНУ[Сч];
			
		КонецЦикла;
		
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

#Область РаспределениеНДС_2_4

Процедура ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_4(ПрочиеРасходы, ТаблицыДляДвижений, Реквизиты)

	Если ПрочиеРасходы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = ТекстЗапросаРасчетСтоимостиПриРаспределенииНДС();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПрочиеРасходы", ПрочиеРасходы);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ДокументРаспределенияНДС", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ПериодРаспределенияНДС", Реквизиты.Период);
	
	Результат = Запрос.Выполнить();
	ВыборкаДокумент = Результат.Выбрать();
	
	ИспользуемыеТаблицы = "КэшГраниц,ДанныеКРасчету,НакопленныеРасходы,РасходыПоДокументам,втПервоначальныеСведения";
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ВнеоборотныеАктивы.ЗаблокироватьДанныеПередРасчетомСтоимости(ВыборкаДокумент.Регистратор, ВыборкаДокумент.ВидОбъектовУчета);
		
		ТаблицыДляДвиженийДокумента = СформироватьТаблицыДвиженийРасчетаСтоимостиПриРаспределенииНДС(ВыборкаДокумент, МенеджерВременныхТаблиц);
		Для каждого КлючИЗначение Из ТаблицыДляДвиженийДокумента Цикл
			ДобавитьТаблицуДвижений(КлючИЗначение.Ключ, КлючИЗначение.Значение, ТаблицыДляДвижений);
		КонецЦикла;
		
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьТаблицуДвижений(ИмяТаблицы, ТаблицаИсточника, Приемник)

	Если Приемник.Свойство(ИмяТаблицы) Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаИсточника, Приемник[ИмяТаблицы]);
	Иначе
		ТаблицаПриемник = ТаблицаИсточника.Скопировать();
		Приемник.Вставить(ИмяТаблицы, ТаблицаПриемник);
	КонецЕсли; 
	
КонецПроцедуры

Функция СформироватьТаблицыДвиженийРасчетаСтоимостиПриРаспределенииНДС(ВыборкаДокумент, МенеджерВременныхТаблиц)

	ТекстыЗапроса = Новый СписокЗначений;
	
	#Область ТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасходыПоДокументам.Организация                КАК Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение              КАК Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов             КАК СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов          КАК АналитикаРасходов,
	|	СУММА(РасходыПоДокументам.Сумма)               КАК Сумма,
	|	СУММА(РасходыПоДокументам.СуммаУпр)            КАК СуммаУпр,
	|	СУММА(РасходыПоДокументам.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(РасходыПоДокументам.СуммаРегл)           КАК СуммаРегл,
	|	СУММА(РасходыПоДокументам.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(РасходыПоДокументам.ВременнаяРазница)    КАК ВременнаяРазница
	|ИЗ
	|	РасходыПоДокументам КАК РасходыПоДокументам
	|ГДЕ
	|	РасходыПоДокументам.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоДокументам.Организация,
	|	РасходыПоДокументам.НаправлениеДеятельности,
	|	РасходыПоДокументам.Подразделение,
	|	РасходыПоДокументам.СтатьяРасходов,
	|	РасходыПоДокументам.АналитикаРасходов";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТекущиеРасходы");
	#КонецОбласти
	
	#Область ДанныеДокумента
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство      КАК ОбъектУчета,
	|	ТаблицаОС.СтоимостьУУ           КАК СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ           КАК СтоимостьБУ,
	|	ТаблицаОС.СтоимостьНУ           КАК СтоимостьНУ,
	|	ТаблицаОС.СуммаЦелевыхСредств   КАК СуммаЦелевыхСредств,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете             КАК ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ КАК ОтражатьВУпрУчете
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СтоимостьУУ,
	|	ТаблицаОС.СтоимостьБУ,
	|	0,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ
	|ИЗ
	|	Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НематериальныйАктив,
	|	ТаблицаОС.ПервоначальнаяСтоимостьУУ,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ,
	|	0,
	|	ТаблицаОС.СуммаЦелевыхСредств,
	|	0,
	|	&ОтражатьВРеглУчете,
	|	ВЫБОР
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &ОтражатьВУпрУчете
	|		КОГДА НЕ ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ ЕСТЬ NULL
	|			ТОГДА ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ < &НачалоМесяца
	|		ИНАЧЕ &ОтражатьВУпрУчете
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО (ПервоначальныеСведения.ОбъектУчета = ТаблицаОС.НематериальныйАктив)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Регистратор";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДанныеДокумента");
	#КонецОбласти
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	Запрос.УстановитьПараметр("Организация", ВыборкаДокумент.Организация);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", ВыборкаДокумент.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", ВыборкаДокумент.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	
	Результат = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);
	
	ПараметрыРасчетаСтоимости = ВнеоборотныеАктивы.ПараметрыРасчетаСтоимости();
	ЗаполнитьЗначенияСвойств(ПараметрыРасчетаСтоимости, ВыборкаДокумент);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Результат.ДанныеДокумента, ПараметрыРасчетаСтоимости.ТаблицаОбъектовУчета);
	ТекущиеРасходы = ВнеоборотныеАктивы.РассчитатьРасходыПоДокументу(Результат.ТекущиеРасходы, ПараметрыРасчетаСтоимости);
	
	ДополнитьТекущиеРасходыПриформированииТаблицДвиженийРасчетаСтоимости(
		ВыборкаДокумент, Результат, ТекущиеРасходы);
	
	ВнеоборотныеАктивы.СоздатьВтРасчетСтоимости(ВыборкаДокумент, ТекущиеРасходы, МенеджерВременныхТаблиц);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	#Область ТаблицаСтоимостьОС
	ТекстЗапроса =
	// ПринятиеКУчетуОС2_4
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР,
	|
	|	РасчетСтоимости.КорПостояннаяРазница         КАК КорПостояннаяРазница,
	|	РасчетСтоимости.КорВременнаяРазница          КАК КорВременнаяРазница,
	|	РасчетСтоимости.КорректировкаСтоимостиНУ     КАК КорректировкаСтоимостиНУ,
	|
	|	ВЫБОР 
	|		КОГДА ПринятиеКУчетуОС.ОтражатьВРеглУчете
	|				И ПринятиеКУчетуОС.ВключитьАмортизационнуюПремиюВСоставРасходов
	|			ТОГДА РасчетСтоимости.СтоимостьНУ * ПринятиеКУчетуОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизационнаяПремия
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ПО ПринятиеКУчетуОС.Ссылка = &Регистратор
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПринятиеКУчетуОС2_4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// МодернизацияОС2_4
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР,
	|
	|	РасчетСтоимости.КорПостояннаяРазница         КАК КорПостояннаяРазница,
	|	РасчетСтоимости.КорВременнаяРазница          КАК КорВременнаяРазница,
	|	0                                            КАК КорректировкаСтоимостиНУ,
	|
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК АмортизационнаяПремия
	|
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК МодернизацияОС
	|		ПО МодернизацияОС.Ссылка = &Регистратор
	|		И МодернизацияОС.ОсновноеСредство = РасчетСтоимости.ОбъектУчета
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.МодернизацияОС2_4)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.СтатьяРасходовАмортизационнойПремии    КАК КорСтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходовАмортизационнойПремии КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК СтоимостьНУ,
	|	-ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК СтоимостьВР,
	|	0 КАК СтоимостьПР,
	|
	|	0 КАК КорПостояннаяРазница,
	|	0 КАК КорВременнаяРазница,
	|	0 КАК КорректировкаСтоимостиНУ,
	|
	|	ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ
	|					* МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК АмортизационнаяПремия
	|
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = &Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК МодернизацияОС
	|		ПО МодернизацияОС.Ссылка = &Регистратор
	|		И МодернизацияОС.ОсновноеСредство = РасчетСтоимости.ОбъектУчета
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.МодернизацияОС2_4)
	|	И МодернизацияОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	ПринятиеКУчетуОС.Местонахождение             КАК Подразделение,
	|	ПринятиеКУчетуОС.ГруппаФинансовогоУчета      КАК ГруппаФинансовогоУчета,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	ИСТИНА                                       КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                         КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК ОсновноеСредство,
	|	ПринятиеКУчетуОС.Местонахождение             КАК КорПодразделение,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК КорНаправлениеДеятельности,
	|	ПринятиеКУчетуОС.СтатьяРасходовБУ            КАК КорСтатьяРасходов,
	|	ПринятиеКУчетуОС.АналитикаРасходовБУ         КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                         КАК РасчетСтоимости,
	|
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК СтоимостьВР,
	|	0                                            КАК СтоимостьПР,
	|	0                                            КАК КорПостояннаяРазница,
	|	0                                            КАК КорВременнаяРазница,
	|	0                                            КАК КорректировкаСтоимостиНУ,
	|	0                                            КАК АмортизационнаяПремия
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|ГДЕ
	|	ПринятиеКУчетуОС.Ссылка = &Регистратор
	|	И РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаСтоимостьОС", Истина);
	#КонецОбласти
	
	#Область ТаблицаСтоимостьНМА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК НематериальныйАктив,
	|	РасчетСтоимости.КорПодразделение             КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК КорСтатьяРасходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК КорАналитикаРасходов,
	|	ИСТИНА                                       КАК РасчетСтоимости,
	|
	|	РасчетСтоимости.Стоимость                    КАК Стоимость,
	|	РасчетСтоимости.СтоимостьРегл                КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	РасчетСтоимости.СтоимостьВР                  КАК СтоимостьВР,
	|	РасчетСтоимости.СтоимостьПР                  КАК СтоимостьПР
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	&ГруппаФинансовогоУчета                      КАК ГруппаФинансовогоУчета,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиНМА) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                         КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                       КАК ОтражатьВУпрУчете,
	|	РасчетСтоимости.ОбъектУчета                  КАК НематериальныйАктив,
	|	ПринятиеКУчетуНМА.Подразделение              КАК КорПодразделение,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ПринятиеКУчетуНМА.СтатьяРасходовБУ           КАК КорСтатьяРасходов,
	|	ПринятиеКУчетуНМА.АналитикаРасходовБУ        КАК КорАналитикаРасходов,
	|	ИСТИНА                                       КАК РасчетСтоимости,
	|
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьРегл,
	|	РасчетСтоимости.СтоимостьНУ                  КАК СтоимостьНУ,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК СтоимостьВР,
	|	0                                            КАК СтоимостьПР
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ПринятиеКУчетуНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|ГДЕ
	|	ПринятиеКУчетуНМА.Ссылка = &Регистратор
	|	И РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы
	|	И ПринятиеКУчетуНМА.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаСтоимостьНМА", Истина);
	#КонецОбласти
	
	#Область ВТ_НачисленнаяАмортизация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                КАК ПериодРасчета,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.Местонахождение                        КАК Подразделение,
	|	ТаблицаОС.ОбъектУчета                                  КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.Местонахождение                        КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовБУ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации)
	|	КОНЕЦ                                                  КАК СтатьяРасходов,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовБУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                  КАК АналитикаРасходов,
	|	0                                                      КАК СуммаУУ,
	|	ТаблицаОС.СтоимостьРегл                                КАК СуммаБУ,
	|	0                                                      КАК СуммаНУ,
	|	0                                                      КАК СуммаПР,
	|	ТаблицаОС.СтоимостьРегл                                КАК СуммаВР,
	|	0                                                      КАК СуммаЦФ,
	|	0                                                      КАК СуммаНУЦФ,
	|	0                                                      КАК СуммаПРЦФ,
	|	0                                                      КАК СуммаВРЦФ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ЛОЖЬ                                                   КАК НачислятьИзнос,
	|	ЛОЖЬ                                                   КАК ЭтоАмортизационнаяПремия,
	|	0                                                      КАК РесурсВыработанныйЗаПрошлыйПериод,
	|	0                                                      КАК РесурсВыработанныйЗаТекущийПериод,
	|	0                                                      КАК СтоимостьДляВычисленияАмортизации,
	|	ЛОЖЬ                                                   КАК ЭтоДоначисление
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ПервоначальныеСведенияОС.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ТаблицаОС
	|		ПО (ТаблицаОС.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету)
	|	И ПервоначальныеСведенияОС.Активность
	|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|	И ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаОС.СтоимостьРегл > 0
	|	И ПервоначальныеСведенияОС.Организация = &Организация
	|	И ПервоначальныеСведенияОС.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ТаблицаОС.ОбъектУчета
	|			ИЗ
	|				ВтРасчетСтоимости КАК ТаблицаОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                КАК ПериодРасчета,
	|	ДанныеДокумента.Организация                            КАК Организация,
	|	ДанныеДокумента.Местонахождение                        КАК Подразделение,
	|	ТаблицаОС.ОбъектУчета                                  КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ДанныеДокумента.НаправлениеДеятельности                КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.Местонахождение                        КАК КорПодразделение,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.СтатьяРасходовУУ = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовБУ
	|		КОГДА ДанныеДокумента.СтатьяРасходовУУ <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				И ДанныеДокумента.СтатьяРасходовУУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовУУ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ДоначислениеИмущественныхНалоговИАмортизации) 
	|	КОНЕЦ                                                  КАК СтатьяРасходов,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.АналитикаРасходовУУ = НЕОПРЕДЕЛЕНО
	|				И ДанныеДокумента.СтатьяРасходовБУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовБУ
	|		КОГДА ДанныеДокумента.АналитикаРасходовУУ <> НЕОПРЕДЕЛЕНО
	|				И ДанныеДокумента.СтатьяРасходовУУ.ВариантРаспределенияРасходовРегл В (&СписокРазрешенныхВариантовРаспределенияРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовУУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                  КАК АналитикаРасходов,
	|	ТаблицаОС.Стоимость                                    КАК СуммаУУ,
	|	0                                                      КАК СуммаБУ,
	|	0                                                      КАК СуммаНУ,
	|	0                                                      КАК СуммаПР,
	|	0                                                      КАК СуммаВР,
	|	0                                                      КАК СуммаЦФ,
	|	0                                                      КАК СуммаНУЦФ,
	|	0                                                      КАК СуммаПРЦФ,
	|	0                                                      КАК СуммаВРЦФ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию    КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов          КАК ОрганизацияПолучательРасходов,
	|	ЛОЖЬ                                                   КАК НачислятьИзнос,
	|	ЛОЖЬ                                                   КАК ЭтоАмортизационнаяПремия,
	|	0                                                      КАК РесурсВыработанныйЗаПрошлыйПериод,
	|	0                                                      КАК РесурсВыработанныйЗаТекущийПериод,
	|	0                                                      КАК СтоимостьДляВычисленияАмортизации,
	|	ЛОЖЬ                                                   КАК ЭтоДоначисление
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ДанныеДокумента
	|		ПО (ДанныеДокумента.Ссылка = ПервоначальныеСведенияОС.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК ТаблицаОС
	|		ПО (ТаблицаОС.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство)
	|ГДЕ
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету)
	|	И ПервоначальныеСведенияОС.Активность
	|	И ПервоначальныеСведенияОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|	И ПервоначальныеСведенияОС.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ТаблицаОС.Стоимость > 0
	|	И ПервоначальныеСведенияОС.Организация = &Организация
	|	И ПервоначальныеСведенияОС.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				ТаблицаОС.ОбъектУчета
	|			ИЗ
	|				ВтРасчетСтоимости КАК ТаблицаОС)";
	Документы.АмортизацияОС2_4.ТекстЗапросаВтНачисленнаяАмортизация(ТекстыЗапроса, ТекстЗапроса, Ложь);
	#КонецОбласти
	
	#Область АмортизацияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Ссылка                                         КАК Регистратор,
	|	ВЫБОР 
	|		КОГДА НачисленнаяАмортизация.ОрганизацияПолучательРасходов <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОСвДругуюОрганизацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.АмортизацияОС)
	|	КОНЕЦ                                           КАК ХозяйственнаяОперация,
	|	НачисленнаяАмортизация.ПериодРасчета            КАК Период,
	|	НачисленнаяАмортизация.Организация              КАК Организация,
	|	НачисленнаяАмортизация.Подразделение            КАК Подразделение,
	|	НачисленнаяАмортизация.ОсновноеСредство         КАК ОсновноеСредство,
	|	НачисленнаяАмортизация.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	НачисленнаяАмортизация.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|
	|	НачисленнаяАмортизация.СуммаУУ    КАК Амортизация,
	|	НачисленнаяАмортизация.СуммаБУ    КАК АмортизацияРегл,
	|	НачисленнаяАмортизация.СуммаНУ    КАК АмортизацияНУ,
	|	НачисленнаяАмортизация.СуммаПР    КАК АмортизацияПР,
	|	НачисленнаяАмортизация.СуммаВР    КАК АмортизацияВР,
	|	НачисленнаяАмортизация.СуммаЦФ    КАК АмортизацияЦФ,
	|	НачисленнаяАмортизация.СуммаНУЦФ  КАК АмортизацияНУЦФ,
	|	НачисленнаяАмортизация.СуммаПРЦФ  КАК АмортизацияПРЦФ,
	|	НачисленнаяАмортизация.СуммаВРЦФ  КАК АмортизацияВРЦФ,
	|
	|	НачисленнаяАмортизация.ОрганизацияПолучательРасходов КАК КорОрганизация,
	|	НачисленнаяАмортизация.КорПодразделение              КАК КорПодразделение,
	|	НачисленнаяАмортизация.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	НачисленнаяАмортизация.СтатьяРасходов                КАК КорСтатьяРасходов,
	|	НачисленнаяАмортизация.АналитикаРасходов             КАК КорАналитикаРасходов,
	|	НачисленнаяАмортизация.НачислятьИзнос                КАК НачислятьИзнос
	|ИЗ
	|	ВТ_НачисленнаяАмортизация КАК НачисленнаяАмортизация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "АмортизацияОС", Истина);
	#КонецОбласти
	
	#Область ПрочиеРасходы
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы());
	СписокЗапросовОбъединение.Добавить(ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаОтражениеНачисленнойАмортизацииВПрочихРасходах());
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   РасчетРасходов.Подразделение                 КАК Подразделение,
	|	РасчетРасходов.СтатьяРасходов                КАК СтатьяРасходов,
	|	РасчетРасходов.АналитикаРасходов             КАК АналитикаРасходов,
	|	РасчетРасходов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	РасчетРасходов.Сумма                         КАК СуммаСНДС,
	|	РасчетРасходов.СуммаБезНДС                   КАК СуммаБезНДС,
	|	РасчетРасходов.СуммаУпр                      КАК СуммаБезНДСУпр,
	|
	|	РасчетРасходов.СуммаРегл                     КАК СуммаСНДСРегл,
	|	РасчетРасходов.СуммаРегл                     КАК СуммаБезНДСРегл,
	|	РасчетРасходов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	РасчетРасходов.ВременнаяРазница              КАК ВременнаяРазница,
	|
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтРасчетРасходов КАК РасчетРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   ПринятиеКУчетуОС.Местонахождение             КАК Подразделение,
	|	ПринятиеКУчетуОС.СтатьяРасходовБУ            КАК СтатьяРасходов,
	|	ПринятиеКУчетуОС.АналитикаРасходовБУ         КАК АналитикаРасходов,
	|	ПринятиеКУчетуОС.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ РасчетСтоимости.СтоимостьНУ
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (ПринятиеКУчетуОС.СтатьяРасходовБУ = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	ПринятиеКУчетуОС.Ссылка = &Регистратор
	|	И ПринятиеКУчетуОС.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Амортизационная премия в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   МодернизацияОС2_4.Подразделение              КАК Подразделение,
	|	МодернизацияОС2_4.СтатьяРасходовАмортизационнойПремии КАК СтатьяРасходов,
	|	МодернизацияОС2_4.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходов,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|				* ТаблицаОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2))
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-ВЫРАЗИТЬ(РасчетСтоимости.СтоимостьНУ 
	|				* ТаблицаОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ / 100 КАК ЧИСЛО(31,2)) КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.МодернизацияОС2_4 КАК МодернизацияОС2_4
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = МодернизацияОС2_4.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО РасчетСтоимости.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (МодернизацияОС2_4.СтатьяРасходовАмортизационнойПремии = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	МодернизацияОС2_4.Ссылка = &Регистратор
	|	И МодернизацияОС2_4.ВключитьАмортизационнуюПремиюВСоставРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Списание на расходы в НУ
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|   ПринятиеКУчетуНМА.Подразделение              КАК Подразделение,
	|	ПринятиеКУчетуНМА.СтатьяРасходовБУ           КАК СтатьяРасходов,
	|	ПринятиеКУчетуНМА.АналитикаРасходовБУ        КАК АналитикаРасходов,
	|	ПринятиеКУчетуНМА.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                 КАК ВидДеятельностиНДС,
	|
	|	0                                            КАК СуммаСНДС,
	|	0                                            КАК СуммаБезНДС,
	|	0                                            КАК СуммаБезНДСУпр,
	|
	|	0                                            КАК СуммаСНДСРегл,
	|	0                                            КАК СуммаБезНДСРегл,
	|	ВЫБОР КОГДА ПВХСтатьиРасходов.ПринятиеКНалоговомуУчету
	|		ТОГДА 0
	|		ИНАЧЕ РасчетСтоимости.СтоимостьНУ
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	-РасчетСтоимости.СтоимостьНУ                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеСтоимостиОС) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ПринятиеКУчетуНМА2_4 КАК ПринятиеКУчетуНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРасчетСтоимости КАК РасчетСтоимости
	|		ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО (ПринятиеКУчетуНМА.СтатьяРасходовБУ = ПВХСтатьиРасходов.Ссылка)
	|ГДЕ
	|	ПринятиеКУчетуНМА.Ссылка = &Регистратор
	|	И ПринятиеКУчетуНМА.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтПрочиеРасходы");
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаПрочиеРасходы", Истина);
	#КонецОбласти
		
	#Область ДвиженияДоходыРасходыПрочиеАктивыПассивы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&Организация                                 КАК Организация,
	|
	|	РасчетСтоимости.КорПодразделение             КАК Подразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК Статья,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаДоходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                 КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                               КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                                 КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	РасчетСтоимости.ОбъектУчета                  КАК КорАналитикаАктивовПассивов,
	|	&ГруппаФинансовогоУчета                      КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                                 КАК КорОрганизация,
	|
	|	РасчетСтоимости.Стоимость                    КАК Сумма,
	|	РасчетСтоимости.СтоимостьРегл                КАК СуммаРегл
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.ОбъектыЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                      КАК Период,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	&Организация                                 КАК Организация,
	|
	|	РасчетСтоимости.КорПодразделение             КАК Подразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	РасчетСтоимости.КорСтатьяРасходов            КАК Статья,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаДоходов,
	|	РасчетСтоимости.КорАналитикаРасходов         КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                 КАК ГруппаФинансовогоУчета,
	|
	|	&Подразделение                               КАК КорПодразделение,
	|	РасчетСтоимости.КорНаправлениеДеятельности   КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_НМА                                КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                 КАК КорАналитикаРасходов,
	|	РасчетСтоимости.ОбъектУчета                  КАК КорАналитикаАктивовПассивов,
	|	&ГруппаФинансовогоУчета                      КАК КорГруппаФинансовогоУчета,
	|
	|	&Организация                                 КАК КорОрганизация,
	|
	|	РасчетСтоимости.Стоимость                    КАК Сумма,
	|	РасчетСтоимости.СтоимостьРегл                КАК СуммаРегл
	|ИЗ
	|	ВтРасчетСтоимости КАК РасчетСтоимости
	|ГДЕ
	|	РасчетСтоимости.ОбъектУчета ССЫЛКА Справочник.НематериальныеАктивы";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", Истина);
	#КонецОбласти
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ВыборкаДокумент.Регистратор);
	Запрос.УстановитьПараметр("Организация", ВыборкаДокумент.Организация);
	Запрос.УстановитьПараметр("Подразделение", ВыборкаДокумент.Подразделение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ВыборкаДокумент.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("Период", ВыборкаДокумент.ПериодРаспределенияНДС);
	Запрос.УстановитьПараметр("Ссылка", ВыборкаДокумент.ДокументРаспределенияНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.РаспределениеНДС);
	Запрос.УстановитьПараметр("СтатьяАП_ОС", ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства);
	Запрос.УстановитьПараметр("СтатьяАП_НМА", ПланыВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ВыборкаДокумент.ПериодРаспределенияНДС));
	Запрос.УстановитьПараметр("ОтражатьВРеглУчете", ВыборкаДокумент.ОтражатьВРеглУчете);
	Запрос.УстановитьПараметр("ОтражатьВУпрУчете", ВыборкаДокумент.ОтражатьВУпрУчете);
	Запрос.УстановитьПараметр("НомерПакета", 0);
	
	СписокРазрешенныхВариантовРаспределенияРасходов = Новый Массив;
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	СписокРазрешенныхВариантовРаспределенияРасходов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	Запрос.УстановитьПараметр("СписокРазрешенныхВариантовРаспределенияРасходов", СписокРазрешенныхВариантовРаспределенияРасходов);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, ВыборкаДокумент);

	РезультатыЗапроса = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);

	// Возвращаем отмеченные таблицы.
	ТаблицыДляДвижений = Новый Структура;
	Для каждого ТекстЗапроса Из ТекстыЗапроса Цикл
		Если ТекстЗапроса.Пометка Тогда
			ТаблицыДляДвижений.Вставить(ТекстЗапроса.Представление, РезультатыЗапроса[ТекстЗапроса.Представление]);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

Функция ТекстЗапросаРасчетСтоимостиПриРаспределенииНДС()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	NULL КАК Организация,
	|	NULL КАК НаправлениеДеятельности,
	|	NULL КАК Подразделение,
	|	NULL КАК СтатьяРасходов,
	|	NULL КАК АналитикаРасходов,
	|	0    КАК Сумма,
	|	0    КАК СуммаУпр,
	|	0    КАК СуммаБезНДС,
	|	0    КАК СуммаРегл,
	|	0    КАК ПостояннаяРазница,
	|	0    КАК ВременнаяРазница
	|ПОМЕСТИТЬ НакопленныеРасходы
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ПрочиеРасходы.Сумма                    КАК Сумма,
	|	ПрочиеРасходы.СуммаУпр                 КАК СуммаУпр,
	|	ПрочиеРасходы.СуммаБезНДС              КАК СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл                КАК СуммаРегл,
	|	ПрочиеРасходы.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница         КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходы_БезОтбора
	|ИЗ 
	|	&ПрочиеРасходы КАК ПрочиеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ПрочиеРасходы.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ 
	|	ПрочиеРасходы_БезОтбора КАК ПрочиеРасходы
	|ГДЕ
	|	ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ТипРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА)
	|	И (ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ИЛИ ВЫРАЗИТЬ(ПрочиеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПрочиеРасходы_БезОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""ОсновныеСредства""                                     КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ВЫБОР
	|		КОГДА НЕ ПринятиеКУчетуОС.Ссылка ЕСТЬ NULL
	|			ТОГДА ПринятиеКУчетуОС.ЧастичныйВводВЭксплуатацию 
	|					ИЛИ ПринятиеКУчетуОС.ПорядокУчетаУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена)
	|					ИЛИ ПринятиеКУчетуОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации)
	|					ИЛИ ПринятиеКУчетуОС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга)
	|					ИЛИ ПринятиеКУчетуОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                    КАК ФактическаяСтоимость,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.АналитикаКапитализацииРасходов         КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ ДанныеКРасчету
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуОС
	|		ПО ПринятиеКУчетуОС.Ссылка = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.МодернизацияОС))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.АналитикаКапитализацииРасходов) В
	|			(ВЫБРАТЬ
	|				ПрочиеРасходы.Организация,
	|				ПрочиеРасходы.АналитикаРасходов
	|			ИЗ
	|				ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НематериальныеАктивы""                                 КАК ВидОбъектовУчета,
	|	НАЧАЛОПЕРИОДА(ДанныеКРасчету.Период, ДЕНЬ)               КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыАналитикиКапитализацииРасходов.НМАиНИОКР) КАК ВидАналитикиКапитализацииРасходов,
	|	ЛОЖЬ                                                     КАК ФактическаяСтоимость,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.НаправлениеДеятельности                   КАК НаправлениеДеятельности,
	|	ВсеДанныеКРасчету.НематериальныйАктив                    КАК АналитикаКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМА КАК ВсеДанныеКРасчету
	|		ПО ВсеДанныеКРасчету.Регистратор = ДанныеКРасчету.Регистратор
	|ГДЕ
	|	ДанныеКРасчету.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И ДанныеКРасчету.Активность
	|	И ДанныеКРасчету.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	И ДанныеКРасчету.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеКУчетуНМА))
	|
	|	И (ДанныеКРасчету.Организация, ДанныеКРасчету.НематериальныйАктив) В
	|			(ВЫБРАТЬ
	|				ПрочиеРасходы.Организация,
	|				ПрочиеРасходы.АналитикаРасходов
	|			ИЗ
	|				ПрочиеРасходы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДанныеКРасчету.ОсновноеСредство КАК ОбъектУчета,
	|	ВсеДанныеКРасчету.Организация КАК Организация
	|ПОМЕСТИТЬ втОбъектыУчета
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ВсеДанныеКРасчету
	|ГДЕ
	|	ВсеДанныеКРасчету.Активность
	|	И ВсеДанныеКРасчету.Регистратор В
	|			(ВЫБРАТЬ
	|				ДанныеКРасчету.Регистратор
	|			ИЗ
	|				ДанныеКРасчету)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДанныеКРасчету.НематериальныйАктив КАК ОбъектУчета,
	|	ВсеДанныеКРасчету.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ВсеДанныеКРасчету
	|ГДЕ
	|	ВсеДанныеКРасчету.Активность
	|	И ВсеДанныеКРасчету.Регистратор В
	|			(ВЫБРАТЬ
	|				ДанныеКРасчету.Регистратор
	|			ИЗ
	|				ДанныеКРасчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОбъектУчета,
	|	ПервоначальныеСведения.ПорядокУчетаБУ   КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведения.ПорядокУчетаНУ   КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюУУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			(ОсновноеСредство, Организация) В
	|				(ВЫБРАТЬ
	|					втОбъектыУчета.ОбъектУчета,
	|					втОбъектыУчета.Организация
	|				ИЗ
	|					втОбъектыУчета)) КАК ПервоначальныеСведения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервоначальныеСведения.НематериальныйАктив КАК ОбъектУчета,
	|	НЕОПРЕДЕЛЕНО   КАК ПорядокУчетаБУ,
	|	НЕОПРЕДЕЛЕНО   КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуБУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВРеглУчете,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуУУ <> ДАТАВРЕМЯ(1, 1, 1) КАК ОтражатьВУпрУчете
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(
	|			,
	|			(НематериальныйАктив, Организация) В
	|				(ВЫБРАТЬ
	|					втОбъектыУчета.ОбъектУчета,
	|					втОбъектыУчета.Организация
	|				ИЗ
	|					втОбъектыУчета)) КАК ПервоначальныеСведения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКРасчету.Регистратор               КАК Регистратор,
	|	ДанныеКРасчету.Период                    КАК Период,
	|	ПрочиеРасходы.Организация                КАК Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение              КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов             КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов          КАК АналитикаРасходов,
	
	// Должны присутствовать все ресурсы регистра Прочие расходы
	|	СУММА(ПрочиеРасходы.Сумма)               КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаУпр)            КАК СуммаУпр,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаРегл)           КАК СуммаРегл,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница)   КАК ПостояннаяРазница,
	|	СУММА(ПрочиеРасходы.ВременнаяРазница)    КАК ВременнаяРазница
	|ПОМЕСТИТЬ РасходыПоДокументам
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрочиеРасходы КАК ПрочиеРасходы
	|		ПО (ПрочиеРасходы.Организация = ДанныеКРасчету.Организация)
	|			И (ПрочиеРасходы.НаправлениеДеятельности = ДанныеКРасчету.НаправлениеДеятельности)
	|			И (ПрочиеРасходы.АналитикаРасходов = ДанныеКРасчету.АналитикаКапитализацииРасходов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеКРасчету.Регистратор,
	|	ДанныеКРасчету.Период,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ПрочиеРасходы.Сумма) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаУпр) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаБезНДС) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.СуммаРегл) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.ПостояннаяРазница) <> 0
	|		ИЛИ СУММА(ПрочиеРасходы.ВременнаяРазница) <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ДокументРаспределенияНДС                                КАК ДокументРаспределенияНДС,
	|	&ПериодРаспределенияНДС                                  КАК ПериодРаспределенияНДС,
	|	ДанныеКРасчету.Организация                               КАК Организация,
	|	ДанныеКРасчету.Подразделение                             КАК Подразделение,
	|	ДанныеКРасчету.ВидОбъектовУчета                          КАК ВидОбъектовУчета,
	|	ДанныеКРасчету.Регистратор                               КАК Регистратор,
	|	ДанныеКРасчету.Период                                    КАК Период,
	|	ДанныеКРасчету.ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ДанныеКРасчету.ФактическаяСтоимость                      КАК ФактическаяСтоимость,
	|	ДанныеКРасчету.ВариантПримененияЦелевогоФинансирования   КАК ВариантПримененияЦелевогоФинансирования,
	|	ДанныеКРасчету.ГруппаФинансовогоУчета                    КАК ГруппаФинансовогоУчета,
	|	ДанныеКРасчету.ВидАналитикиКапитализацииРасходов         КАК ВидАналитикиКапитализацииРасходов,
	|	ДанныеКРасчету.ОтражатьВРеглУчете                        КАК ОтражатьВРеглУчете,
	|	ДанныеКРасчету.ОтражатьВУпрУчете                         КАК ОтражатьВУпрУчете,
	|	УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи КАК ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
	|ИЗ
	|	ДанныеКРасчету КАК ДанныеКРасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&НачалоМесяца,
	|				Организация В
	|					(ВЫБРАТЬ
	|						ДанныеКРасчету.Организация
	|					ИЗ
	|						ДанныеКРасчету)) КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизаций.Организация = ДанныеКРасчету.Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область РаспределениеНДС_2_2

Процедура ВключитьВСтоимостьВНАРезультатРаспределенияНДС_2_2(ТаблицаВнеоборотныхАктивов, РезультатРаспределения, ТаблицыДляДвижений, Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнеоборотныеАктивы.Организация,
	|	ВнеоборотныеАктивы.Объект
	|ПОМЕСТИТЬ Отбор
	|ИЗ
	|	&ВнеоборотныеАктивы КАК ВнеоборотныеАктивы
	|;
	|
	|///////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОС.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМА.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПервоначальныеСведенияНМА.Коэффициент КАК Коэффициент,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, НематериальныйАктив) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПервоначальныеСведенияОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОС.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведенияОС.КодПоОКОФ КАК КодПоОКОФ,
	|	ПервоначальныеСведенияОС.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ,
	|	ПервоначальныеСведенияОС.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОС.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И (Организация, ОсновноеСредство) В (
	|					ВЫБРАТЬ 
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ 
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И (Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И (Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Объект 
	|					ИЗ
	|						Отбор КАК Т)
	|	) КАК ПервоначальныеСведенияОС
	|;
	|";
	
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ТаблицаВнеоборотныхАктивов);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(Реквизиты.ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПараметрыАмортизацииОС    = РезультатЗапроса[1].Выгрузить();
	ПервоначальныеСведенияНМА = РезультатЗапроса[2].Выгрузить();
	ПервоначальныеСведенияОС  = РезультатЗапроса[3].Выгрузить();
	ПервоначальныеСведенияОСНалоговыйУчет = РезультатЗапроса[4].Выгрузить();
	ПервоначальныеСведенияНМАНалоговыйУчет = РезультатЗапроса[5].Выгрузить();
	
	ТаблицыДляДвижений.Вставить("ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет", 
		ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ПараметрыАмортизацииОС));
		
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ПервоначальныеСведенияОС));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияОСНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияОСНалоговыйУчет));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ПервоначальныеСведенияНМА));
	
	ТаблицыДляДвижений.Вставить("ТаблицаПервоначальныеСведенияНМАНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияНМАНалоговыйУчет));
	
КонецПроцедуры

Функция ТаблицаПервоначальныеСведенияНМА(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияНМАНалоговыйУчет)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаНМА.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ПервоначальныеСведенияНМАНалоговыйУчет.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ПервоначальныеСведенияНМАНалоговыйУчет.Найти(СтрокаНМА.АналитикаАктивовПассивов, "НематериальныйАктив");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПервоначальныеСведенияНМАНалоговыйУчет.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОС(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ПервоначальныеСведенияОСНалоговыйУчет)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ПервоначальныеСведенияОСНалоговыйУчет.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ПервоначальныеСведенияОСНалоговыйУчет.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ПервоначальныеСведенияОСНалоговыйУчет.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОС(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюНеОблагаетсяНДС");
	ТаблицыИсточники.Вставить("ПартииНДСКРаспределениюОблагаетсяЕНВД");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
					ИЛИ СтрокаОС.НалогообложениеНДСПартии = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				// Уже в расходах
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаАктивовПассивов, "ОсновноеСредство");
			КонецЕсли;
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТаблицаОтражениеДокументов(ДокументСсылка, Организация, ДатаОтражения)

	ТаблицаОтражениеДокументов = Новый ТаблицаЗначений;
	ТаблицаОтражениеДокументов.Колонки.Добавить("Документ", Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(ДокументСсылка))));
	ТаблицаОтражениеДокументов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("ДатаОтражения", Новый ОписаниеТипов("Дата"));
	ТаблицаОтражениеДокументов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	НоваяСтрока = ТаблицаОтражениеДокументов.Добавить();
	НоваяСтрока.Документ = ДокументСсылка;
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.ДатаОтражения = НачалоДня(ДатаОтражения);
	НоваяСтрока.Период = НачалоДня(ДатаОтражения);

	Возврат ТаблицаОтражениеДокументов;
	
КонецФункции

Процедура ДобавитьВРегистрНовыеЗаписи(Регистратор, ИмяРегистра, НовыеЗаписи, ВидИсточника)

	НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	
	ИсходныеЗаписи = Новый Массив;
	Для Сч = -НаборЗаписей.Количество() + 1 По 0 Цикл
		Если НаборЗаписей[-Сч].ВидИсточника = ВидИсточника Тогда
			НаборЗаписей.Удалить(-Сч);
		КонецЕсли; 
	КонецЦикла; 
	
	Для Каждого СтрокаТаблицыИсточник Из НовыеЗаписи Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицыИсточник);
		НоваяЗапись.ВидИсточника = ВидИсточника;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ВедетсяУчетПлатежейВПлатон()

	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Таблица
	|ГДЕ
	|	Таблица.ЗарегистрированоВРеестреСистемыПлатон
	|	И НЕ Таблица.ПометкаУдаления";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = НЕ Результат.Пустой();
	
	Возврат Результат;

КонецФункции

Процедура ПриЗаписиВРегистрМестонахождениеОС(Объект)

	Если НЕ ЗначениеЗаполнено(Объект.Отбор.Регистратор.Значение)
		ИЛИ ТипЗнч(Объект.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
		ИЛИ ТипЗнч(Объект.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
		Возврат;
	КонецЕсли;
	
	Местонахождение = РегистрыСведений.МестонахождениеОСБухгалтерскийУчет.СоздатьНаборЗаписей();
	Местонахождение.Отбор.Регистратор.Установить(Объект.Отбор.Регистратор.Значение);
	
	Для каждого ДанныеСтроки Из Объект Цикл
		Если ДанныеСтроки.ОтражатьВРеглУчете Тогда
			ЗаполнитьЗначенияСвойств(Местонахождение.Добавить(), ДанныеСтроки);
		КонецЕсли; 
	КонецЦикла; 

	Местонахождение.Записать();
	
КонецПроцедуры

Процедура ПриЗаписиВРегистрПараметрыАмортизацииОСБУ(Объект)

	Отбор = Объект.Отбор;
	
	Если НЕ ЗначениеЗаполнено(Отбор.Регистратор.Значение)
		ИЛИ ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
		ИЛИ ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписейНУ = Неопределено;
	
	НаборЗаписейБУ = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписейБУ.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	
	Если ТипЗнч(Отбор.Регистратор.Значение) <> Тип("ДокументСсылка.СписаниеОС2_4") Тогда
		НаборЗаписейНУ = РегистрыСведений.ПараметрыАмортизацииОСНалоговыйУчет.СоздатьНаборЗаписей();
		НаборЗаписейНУ.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	КонецЕсли; 
	
	Для каждого ДанныеСтроки Из Объект Цикл
		
		НоваяЗапись = НаборЗаписейБУ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
		НоваяЗапись.СрокПолезногоИспользования = ДанныеСтроки.СрокПолезногоИспользованияБУ;
		НоваяЗапись.КоэффициентАмортизации = ДанныеСтроки.КоэффициентАмортизацииБУ;
		
		Если НаборЗаписейНУ <> Неопределено Тогда
			НоваяЗапись = НаборЗаписейНУ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
			НоваяЗапись.СрокПолезногоИспользования = ДанныеСтроки.СрокПолезногоИспользованияНУ;
			НоваяЗапись.КоэффициентАмортизации = ДанныеСтроки.КоэффициентАмортизацииБУ;
		КонецЕсли; 
		
	КонецЦикла; 
	
	НаборЗаписейБУ.Записать();
	
	Если НаборЗаписейНУ <> Неопределено Тогда
		НаборЗаписейНУ.Записать();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписиВРегистрПорядокУчетаОСБУ(Объект)
	
	Отбор = Объект.Отбор;

	Если НЕ ЗначениеЗаполнено(Отбор.Регистратор.Значение)
		ИЛИ ТипЗнч(Отбор.Регистратор.Значение) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеБУ = Неопределено;
	НачислениеНУ = Неопределено;
	СостоянияОСОрганизаций = Неопределено;
	СпособыОтраженияРасходов = Неопределено;
	
	ТипРегистратора = ТипЗнч(Отбор.Регистратор.Значение);
	
	Если ТипРегистратора <> Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4") 
		И ТипРегистратора <> Тип("ДокументСсылка.ПоступлениеАрендованныхОС") 
		И ТипРегистратора <> Тип("ДокументСсылка.ВыбытиеАрендованныхОС")
		И ТипРегистратора <> Тип("ДокументСсылка.ПоступлениеПредметовЛизинга") Тогда
		НачислениеБУ = РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
		НачислениеБУ.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
		
		НачислениеНУ = РегистрыСведений.НачислениеАмортизацииОСНалоговыйУчет.СоздатьНаборЗаписей();
		НачислениеНУ.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	КонецЕсли; 
	
	Если ТипРегистратора = Тип("ДокументСсылка.ПринятиеКУчетуОС2_4") 
		ИЛИ ТипРегистратора = Тип("ДокументСсылка.ВозвратОСОтАрендатора2_4")
		ИЛИ ТипРегистратора = Тип("ДокументСсылка.ПередачаОСАрендатору2_4")
		ИЛИ ТипРегистратора = Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4")
		ИЛИ ТипРегистратора = Тип("ДокументСсылка.СписаниеОС2_4")
		ИЛИ ТипРегистратора = Тип("ДокументСсылка.РазукомплектацияОС") Тогда
		СостоянияОСОрганизаций = РегистрыСведений.СостоянияОСОрганизаций.СоздатьНаборЗаписей();
		СостоянияОСОрганизаций.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	КонецЕсли; 
	
	Если ТипРегистратора <> Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
		И  ТипРегистратора <> Тип("ДокументСсылка.АмортизацияОС2_4")
		И ТипРегистратора <> Тип("ДокументСсылка.ПоступлениеАрендованныхОС")
		И ТипРегистратора <> Тип("ДокументСсылка.ВыбытиеАрендованныхОС")
		И ТипРегистратора <> Тип("ДокументСсылка.ПоступлениеПредметовЛизинга") Тогда
		СпособыОтраженияРасходов = РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
		СпособыОтраженияРасходов.Отбор.Регистратор.Установить(Отбор.Регистратор.Значение);
	КонецЕсли; 
	
	ДатаНачалаУчета = ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	Для каждого ДанныеСтроки Из Объект Цикл
		
		Если ДанныеСтроки.Период < ДатаНачалаУчета Тогда
			Продолжить;
		КонецЕсли;
		
		Если НачислениеБУ <> Неопределено Тогда
			НоваяЗапись = НачислениеБУ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
			НоваяЗапись.НачислятьАмортизацию = ДанныеСтроки.НачислятьАмортизациюБУ;
		КонецЕсли;
		
		Если НачислениеНУ <> Неопределено Тогда
			НоваяЗапись = НачислениеНУ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
			НоваяЗапись.НачислятьАмортизацию = ДанныеСтроки.НачислятьАмортизациюНУ;
		КонецЕсли;
		
		Если СостоянияОСОрганизаций <> Неопределено Тогда
			НоваяЗапись = СостоянияОСОрганизаций.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
			НоваяЗапись.ДатаСостояния = ДанныеСтроки.Период;
		КонецЕсли;
			
		Если СпособыОтраженияРасходов <> Неопределено Тогда
			НоваяЗапись = СпособыОтраженияРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеСтроки);
			НоваяЗапись.СпособОтраженияРасходовЗаданДокументом = ЗначениеЗаполнено(ДанныеСтроки.СпособОтраженияРасходов);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НачислениеБУ <> Неопределено Тогда
		НачислениеБУ.Записать();
	КонецЕсли; 
	Если НачислениеНУ <> Неопределено Тогда
		НачислениеНУ.Записать();
	КонецЕсли; 
	Если СостоянияОСОрганизаций <> Неопределено Тогда
		СостоянияОСОрганизаций.Записать();
	КонецЕсли; 
	Если СпособыОтраженияРасходов <> Неопределено Тогда
		СпособыОтраженияРасходов.Записать();
	КонецЕсли; 
	
КонецПроцедуры

Функция МаксимальнаяДатаДокументовВерсии22()

	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("АмортизацияНМА");
	СписокДокументов.Добавить("АмортизацияОС");
	СписокДокументов.Добавить("ВводОстатковВнеоборотныхАктивов");
	СписокДокументов.Добавить("ВозвратОСОтАрендатора");
	СписокДокументов.Добавить("ИзменениеПараметровНМА");
	СписокДокументов.Добавить("ИзменениеПараметровОС");
	СписокДокументов.Добавить("ИзменениеСостоянияОС");
	СписокДокументов.Добавить("МодернизацияОС");
	СписокДокументов.Добавить("ПередачаОСАрендатору");
	СписокДокументов.Добавить("ПеремещениеОС");
	СписокДокументов.Добавить("ПереоценкаНМА");
	СписокДокументов.Добавить("ПереоценкаОС");
	СписокДокументов.Добавить("ПодготовкаКПередачеНМА");
	СписокДокументов.Добавить("ПодготовкаКПередачеОС");
	СписокДокументов.Добавить("ПоступлениеАрендованныхОС");
	СписокДокументов.Добавить("ПоступлениеПредметовЛизинга");
	СписокДокументов.Добавить("ПринятиеКУчетуНМА");
	СписокДокументов.Добавить("ПринятиеКУчетуОС");
	СписокДокументов.Добавить("СписаниеНМА");
	СписокДокументов.Добавить("СписаниеОС");
	
	СписокИДДокументов = Новый Массив;
	Для каждого ИмяДокумента Из СписокДокументов Цикл
		СписокИДДокументов.Добавить(ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ." + ИмяДокумента));
	КонецЦикла; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(РеестрДокументов.ДатаДокументаИБ), ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|ГДЕ
	|	РеестрДокументов.ТипСсылки В(&СписокИДДокументов)
	|	И НЕ РеестрДокументов.ПометкаУдаления
	|	И (РеестрДокументов.ДатаДокументаИБ < &ДатаНачалаУчета
	|			ИЛИ &ДатаНачалаУчета = ДАТАВРЕМЯ(1, 1, 1))";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокИДДокументов", СписокИДДокументов);
	Запрос.УстановитьПараметр("ДатаНачалаУчета", ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат '000101010000';
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Период;
	
КонецФункции

Процедура ДополнитьТекстЗапросаПриЗаписиВРегистрДляЦелейУСН(ИмяРегистра, МенеджерВременныхТаблиц, ТекстЗапроса)
	
	// Дополним временные таблицы данными по организациям на УСН, для последующей актуализации данных, при необходимости:
	УчетУСНСервер.ДополнитьМенеджерВременныхТаблицДаннымиПоОрганизациямНаУСНДоходыМинусРасходы(МенеджерВременныхТаблиц);
	
	ТекстАктуализацииРасходовПриУСН = УчетУСНСервер.ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра(ИмяРегистра+"ЗаданияКЗакрытиюМесяца");
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "#ТаблицаИзмененийРегистра", ИмяРегистра+"Изменение");
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "&ДополнительныеУсловия", "ИСТИНА");
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "Регистратор", "Документ");
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстАктуализацииРасходовПриУСН;

КонецПроцедуры

// Вызывается для отчета "РеестрДоговоровЛизинга".
// 
// Параметры:
//	Расшифровка - Расшифровка - Расшифровка отчета
//	АдресДанныхРасшифровки - Строка - Адрес временного хранилища данных расшифровки
//	КомпоновщикНастроек - КомпоновщикНастроек - Компоновщик настроек отчета.
//
// Возвращаемое значение:
//	ПараметрыРасшифровки - Структура - Параметры расшифровки. 
//									   Если особая расшифровка не требуется, то возвращает Неопределено.
//
Функция ПараметрыРасшифровкиРеестраДоговоровЛизинга(Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек)
	
	ПараметрыРасшифровки = Неопределено;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	
	ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ПользовательскиеОтборы = ПользовательскиеНастройки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
	ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
	ПользовательскиеОтборы.ИдентификаторПользовательскойНастройки = "Отбор";
	
	СписокВидовСубконто = Новый СписокЗначений;
	
	ПоляГруппировки = Новый Структура;
	ОтчетыУТВызовСервераПереопределяемый.ПолучитьЗначенияПолей(ПоляГруппировки, ДанныеРасшифровки.Элементы, Расшифровка);
	
	ТекущееПоле = Новый Структура;
	ОтчетыУТВызовСервераПереопределяемый.ПолучитьЗначениеПоля(ТекущееПоле, ДанныеРасшифровки.Элементы[Расшифровка]);
	Для каждого КлючИЗначение Из ТекущееПоле Цикл
		
		Если СтрНайти(КлючИЗначение.Ключ, "Расчеты") > 0 И ПоляГруппировки.Свойство("Договор") Тогда
			
			СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
			СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
			
			Если ПоляГруппировки.Свойство("Контрагент") Тогда
				Контрагент = ПоляГруппировки["Контрагент"];
			Иначе
				Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоляГруппировки["Договор"], "Контрагент");
			КонецЕсли; 
			
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
				ПользовательскиеОтборы, Новый ПолеКомпоновкиДанных("Субконто1"), Контрагент, ВидСравненияКомпоновкиДанных.Равно);
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
				ПользовательскиеОтборы, Новый ПолеКомпоновкиДанных("Субконто2"), ПоляГруппировки["Договор"], ВидСравненияКомпоновкиДанных.Равно);
			
		ИначеЕсли СтрНайти(КлючИЗначение.Ключ, "ПредметЛизинга") > 0 И ПоляГруппировки.Свойство("Договор") Тогда
			
			СписокОС = Новый СписокЗначений;
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ПервоначальныеСведенияОС.ОсновноеСредство
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОС
			|ГДЕ
			|	ПервоначальныеСведенияОС.ДоговорЛизинга = &Договор
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоговорыЛизинга.Ссылка
			|ИЗ
			|	Справочник.ДоговорыЛизинга КАК ДоговорыЛизинга
			|ГДЕ
			|	ДоговорыЛизинга.Ссылка = &Договор
			|	И ДоговорыЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)";
			Запрос.УстановитьПараметр("Договор", ПоляГруппировки["Договор"]);
			Пакет = Запрос.ВыполнитьПакет();
			Выборка = Пакет[0].Выбрать();
			Пока Выборка.Следующий() Цикл
				СписокОС.Добавить(Выборка.ОсновноеСредство);
			КонецЦикла;
			
			Если ПоляГруппировки.Свойство("Контрагент") Тогда
				Контрагент = ПоляГруппировки["Контрагент"];
			Иначе
				Контрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПоляГруппировки["Договор"], "Контрагент");
			КонецЕсли; 
			
			Если Пакет[1].Пустой() Тогда
				СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
					ПользовательскиеОтборы, Новый ПолеКомпоновкиДанных("Субконто1"), СписокОС, ВидСравненияКомпоновкиДанных.ВСписке);
			Иначе
				СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
					ПользовательскиеОтборы, Новый ПолеКомпоновкиДанных("Субконто1"), Контрагент, ВидСравненияКомпоновкиДанных.Равно);
				СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
					ПользовательскиеОтборы, Новый ПолеКомпоновкиДанных("Субконто2"), СписокОС, ВидСравненияКомпоновкиДанных.ВСписке);
			КонецЕсли;
			
		Иначе
			// Не требуется расшифровка через АнализСубконто
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("СписокВидовСубконто", СписокВидовСубконто);
	
	ИдентификаторПараметраПериод = 
		КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту(
			ДанныеРасшифровки.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")));
	КонецПериода = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПараметраПериод);
	ДополнительныеСвойства.Вставить("КонецПериода",  КонецПериода.Значение.Дата);
	
	ДополнительныеСвойства.Вставить("ПоказательБУ",       Истина);
	ДополнительныеСвойства.Вставить("ПоСубсчетам",        Истина);
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("СформироватьПриОткрытии",   Истина);
	ПараметрыРасшифровки.Вставить("РежимРасшифровки",          Истина);
	ПараметрыРасшифровки.Вставить("ВидРасшифровки",            2);
	ПараметрыРасшифровки.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
	
	Возврат ПараметрыРасшифровки;
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника.
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыНМАПоОтборуБУ(Параметры)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК СостоянияНМАОрганизацийСрезПоследних
	|		ПО Активы.Ссылка = СостоянияНМАОрганизацийСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(СостоянияНМАОрганизацийСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&БУСостояние))";
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУСостояние, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.НематериальныеАктивы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника.
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыОСПоОтборуБУ(Параметры)
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУПодразделение, БУСостояние, БУГруппаОС, БУАмортизационнаяГруппа, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК СостоянияОСОрганизацийСрезПоследних
	|		ПО Активы.Ссылка = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУПодразделение
	|			ИЛИ ЕСТЬNULL(МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) В (&БУПодразделение))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(СостоянияОСОрганизацийСрезПоследних.Состояние,ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&БУСостояние))
	|	И (НЕ &ТребуетсяБУГруппаОС
	|			ИЛИ Активы.ГруппаОС В (&БУГруппаОС))
	|	И (НЕ &ТребуетсяБУАмортизационнаяГруппа
	|			ИЛИ Активы.АмортизационнаяГруппа В (&БУАмортизационнаяГруппа))";
	
	Если Параметры.Свойство("Отбор")
		И Параметры.Отбор.Свойство("ВидНалога") Тогда
		
		ТекстЗапроса = ТекстЗапроса 
			+ "И " + ВнеоборотныеАктивыЛокализация.УсловияОтбораПоВидуНалога("Активы");
			
		ПоляОтбора.Вставить("ВидНалога", Параметры.Отбор.ВидНалога);
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.ОбъектыЭксплуатации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Новый ФиксированныйМассив(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецФункции


Функция ЕстьНедвижимоеИмущество(СписокОС, ГруппаОС)

	// Если в справочнике не установлен признак НедвижимоеИмущество и пустая группа ОС,
	// то ОС является недвижимым, если в документе выбрана группа недвижимого имущества,
	// т.к. при проведнии документа этот признак будет установлен 
	// (сценарий когда в справочнике не заполняют реквизиты, а указывают их при принятии к учету).
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (ОбъектыЭксплуатации.НедвижимоеИмущество
	|			ИЛИ ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|				И &ЭтоНедвижимоеИмущество)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("ЭтоНедвижимоеИмущество", ВнеоборотныеАктивыКлиентСерверЛокализация.ЭтоНедвижимоеИмущество(ГруппаОС));
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();

КонецФункции

Процедура СформироватьЗаданиеАмортизацияОС(ДокументСсылка, ДанныеТаблиц)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(ДокументСсылка);
	
	НачислениеАмортизацииЗаданоДокументом = 
		(ТипОбъекта = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов")
			ИЛИ ТипОбъекта = Тип("ДокументСсылка.ПринятиеКУчетуОС"));
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("НачислениеАмортизацииОСБухгалтерскийУчет");
	СписокТаблиц.Добавить("НачислениеАмортизацииОСНалоговыйУчет");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСБухгалтерскийУчет");
	СписокТаблиц.Добавить("ПараметрыАмортизацииОСНалоговыйУчет");
	СписокТаблиц.Добавить("НаработкиОбъектовЭксплуатации");
	СписокТаблиц.Добавить("МестонахождениеОСБухгалтерскийУчет");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет");
	
	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, "ОсновноеСредство");
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация       КАК Организация,
	|	ИзмененныеДанные.ОсновноеСредство  КАК ОсновноеСредство,
	|	ИзмененныеДанные.Документ          КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ВводОстатковВнеоборотныхАктивов.Дата
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Период
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
	|	ПО ВводОстатковВнеоборотныхАктивов.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.ОсновноеСредство,
	|	ИзмененныеДанные.Документ
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ВводОстатковВнеоборотныхАктивов.Дата
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) < &ДатаНачалаУчета24
	|	ИЛИ &ДатаНачалаУчета24 = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство";
	
	Если НачислениеАмортизацииЗаданоДокументом Тогда
		
		Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("НачислениеАмортизацииОСБухгалтерскийУчет") <> Неопределено Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииБУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииНУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
			|	
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииБУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
			|			И (НачислениеАмортизации.Регистратор = ИзмененныеДанные.Документ)
			|			И (НачислениеАмортизации.Активность)
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииНУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
			|			И (НачислениеАмортизации.Регистратор = ИзмененныеДанные.Документ)
			|			И (НачислениеАмортизации.Активность)
			|	
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация";
			
		КонецЕсли; 
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизации.Организация КАК Организация
		|ПОМЕСТИТЬ НачислениеАмортизацииБУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачислениеАмортизацииОС.Организация КАК Организация,
		|		НачислениеАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
		|		МАКСИМУМ(НачислениеАмортизацииОС.Период) КАК Период
		|	ИЗ
		|		ИзмененныеДанные КАК ИзмененныеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС КАК ПеремещениеОС
		|			ПО ПеремещениеОС.Ссылка = ИзмененныеДанные.Документ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизацииОС
		|			ПО (НачислениеАмортизацииОС.Организация = ИзмененныеДанные.Организация)
		|				И (НачислениеАмортизацииОС.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
		|				И (ЕСТЬNULL(ПеремещениеОС.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
		|						И НачислениеАмортизацииОС.Период <= ИзмененныеДанные.Период
		|					ИЛИ ЕСТЬNULL(ПеремещениеОС.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
		|						И ПеремещениеОС.Организация = ИзмененныеДанные.Организация
		|						И НачислениеАмортизацииОС.Период < ИзмененныеДанные.Период
		|					ИЛИ ЕСТЬNULL(ПеремещениеОС.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
		|						И ПеремещениеОС.ОрганизацияПолучатель = ИзмененныеДанные.Организация
		|						И НачислениеАмортизацииОС.Период <= ИзмененныеДанные.Период)
		|		ГДЕ
		|			ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.ИзменениеСостоянияОС)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизацииОС.Организация,
		|		НачислениеАмортизацииОС.ОсновноеСредство
		|	) КАК НачислениеАмортизацииПоследние
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет КАК НачислениеАмортизации
		|		ПО (НачислениеАмортизации.Организация = НачислениеАмортизацииПоследние.Организация)
		|			И (НачислениеАмортизации.ОсновноеСредство = НачислениеАмортизацииПоследние.ОсновноеСредство)
		|			И (НачислениеАмортизации.Период = НачислениеАмортизацииПоследние.Период)
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеАмортизации.Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИзмененныеДанные.Организация
		|ИЗ
		|	ИзмененныеДанные КАК ИзмененныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеСостоянияОС КАК ИзменениеСостоянияОС
		|		ПО ИзменениеСостоянияОС.Ссылка = ИзмененныеДанные.Документ
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ИзменениеСостоянияОС)
		|	И ИзменениеСостоянияОС.ВлияетНаНачислениеАмортизации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизации.Организация КАК Организация
		|ПОМЕСТИТЬ НачислениеАмортизацииНУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		НачислениеАмортизации.ОсновноеСредство КАК ОсновноеСредство,
		|		МАКСИМУМ(НачислениеАмортизации.Период) КАК Период
		|	ИЗ
		|		ИзмененныеДанные КАК ИзмененныеДанные
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
		|			ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
		|				И (НачислениеАмортизации.Период <= ИзмененныеДанные.Период)
		|				И (НачислениеАмортизации.ОсновноеСредство = ИзмененныеДанные.ОсновноеСредство)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		НачислениеАмортизации.ОсновноеСредство
		|	) КАК НачислениеАмортизацииПоследние
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет КАК НачислениеАмортизации
		|		ПО (НачислениеАмортизации.Организация = НачислениеАмортизацииПоследние.Организация)
		|			И (НачислениеАмортизации.ОсновноеСредство = НачислениеАмортизацииПоследние.ОсновноеСредство)
		|			И (НачислениеАмортизации.Период = НачислениеАмортизацииПоследние.Период)
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеАмортизации.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	0 КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.НаработкаОбъектовЭксплуатации)
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ) 
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|		ПО (НачислениеАмортизацииБУ.Организация = ИзмененныеДанные.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ
	|		ПО (НачислениеАмортизацииНУ.Организация = ИзмененныеДанные.Организация)
	|ГДЕ
	|	НЕ НачислениеАмортизацииБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ НачислениеАмортизацииНУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеАмортизацииБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеАмортизацииНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКРасчетуАмортизацииОС.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СформироватьЗаданиеАмортизацияНМА(ДокументСсылка, ДанныеТаблиц)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(ДокументСсылка);
	
	НачислениеАмортизацииЗаданоДокументом = 
		(ТипОбъекта = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов")
			ИЛИ ТипОбъекта = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4")
			ИЛИ ТипОбъекта = Тип("ДокументСсылка.ПринятиеКУчетуНМА"));
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ВыработкаНМА");
	СписокТаблиц.Добавить("ПервоначальныеСведенияНМАБухгалтерскийУчет");
	СписокТаблиц.Добавить("ПервоначальныеСведенияНМАНалоговыйУчет");
	СписокТаблиц.Добавить("СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет");
	СписокТаблиц.Добавить("СостоянияНМАОрганизаций");
	
	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц, "НематериальныйАктив");
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.НематериальныйАктив КАК НематериальныйАктив,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ВводОстатковВнеоборотныхАктивов.Дата
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Период
	|ПОМЕСТИТЬ ИзмененныеДанные
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
	|	ПО ВводОстатковВнеоборотныхАктивов.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) <> ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.НематериальныйАктив,
	|	ИзмененныеДанные.Документ
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ВводОстатковВнеоборотныхАктивов.Дата
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) < &ДатаНачалаУчета24
	|	ИЛИ &ДатаНачалаУчета24 = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив";
	
	Если НачислениеАмортизацииЗаданоДокументом Тогда
		
		Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("ПервоначальныеСведенияНМАБухгалтерскийУчет") <> Неопределено Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииБУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведенияНМАБухгалтерскийУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииНУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
			|	
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииБУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
			|			И (НачислениеАмортизации.Регистратор = ИзмененныеДанные.Документ)
			|			И (НачислениеАмортизации.Активность)
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ИзмененныеДанные.Организация КАК Организация
			|ПОМЕСТИТЬ НачислениеАмортизацииНУ
			|ИЗ
			|	ИзмененныеДанные КАК ИзмененныеДанные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизации
			|		ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
			|			И (НачислениеАмортизации.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
			|			И (НачислениеАмортизации.Регистратор = ИзмененныеДанные.Документ)
			|			И (НачислениеАмортизации.Активность)
			|	
			|ГДЕ
			|	НачислениеАмортизации.НачислятьАмортизацию
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация";
			
		КонецЕсли; 
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизации.Организация КАК Организация
		|ПОМЕСТИТЬ НачислениеАмортизацииБУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачислениеАмортизацииНМА.Организация КАК Организация,
		|		НачислениеАмортизацииНМА.НематериальныйАктив КАК НематериальныйАктив,
		|		МАКСИМУМ(НачислениеАмортизацииНМА.Период) КАК Период
		|	ИЗ
		|		ИзмененныеДанные КАК ИзмененныеДанные
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизацииНМА
		|			ПО (НачислениеАмортизацииНМА.Организация = ИзмененныеДанные.Организация)
		|				И (НачислениеАмортизацииНМА.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
		|				И (НачислениеАмортизацииНМА.Период <= ИзмененныеДанные.Период)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизацииНМА.Организация,
		|		НачислениеАмортизацииНМА.НематериальныйАктив
		|	) КАК НачислениеАмортизацииПоследние
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизации
		|		ПО (НачислениеАмортизации.Организация = НачислениеАмортизацииПоследние.Организация)
		|			И (НачислениеАмортизации.НематериальныйАктив = НачислениеАмортизацииПоследние.НематериальныйАктив)
		|			И (НачислениеАмортизации.Период = НачислениеАмортизацииПоследние.Период)
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеАмортизации.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеАмортизации.Организация КАК Организация
		|ПОМЕСТИТЬ НачислениеАмортизацииНУ
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачислениеАмортизации.Организация КАК Организация,
		|		НачислениеАмортизации.НематериальныйАктив КАК НематериальныйАктив,
		|		МАКСИМУМ(НачислениеАмортизации.Период) КАК Период
		|	ИЗ
		|		ИзмененныеДанные КАК ИзмененныеДанные
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизации
		|			ПО (НачислениеАмортизации.Организация = ИзмененныеДанные.Организация)
		|				И (НачислениеАмортизации.Период <= ИзмененныеДанные.Период)
		|				И (НачислениеАмортизации.НематериальныйАктив = ИзмененныеДанные.НематериальныйАктив)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НачислениеАмортизации.Организация,
		|		НачислениеАмортизации.НематериальныйАктив
		|	) КАК НачислениеАмортизацииПоследние
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК НачислениеАмортизации
		|		ПО (НачислениеАмортизации.Организация = НачислениеАмортизацииПоследние.Организация)
		|			И (НачислениеАмортизации.НематериальныйАктив = НачислениеАмортизацииПоследние.НематериальныйАктив)
		|			И (НачислениеАмортизации.Период = НачислениеАмортизацииПоследние.Период)
		|ГДЕ
		|	НачислениеАмортизации.НачислятьАмортизацию
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеАмортизации.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ,
	|	0 КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВыработкаНМА)
	|					ТОГДА НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ) 
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ИзмененныеДанные.Период, МЕСЯЦ), МЕСЯЦ, 1)
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	ИзмененныеДанные КАК ИзмененныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|		ПО (НачислениеАмортизацииБУ.Организация = ИзмененныеДанные.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ
	|		ПО (НачислениеАмортизацииНУ.Организация = ИзмененныеДанные.Организация)
	|ГДЕ
	|	НЕ НачислениеАмортизацииБУ.Организация ЕСТЬ NULL
	|		ИЛИ НЕ НачислениеАмортизацииНУ.Организация ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеАмортизацииБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачислениеАмортизацииНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИзмененныеДанные";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Операция", Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииНМА);
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РегистрыСведений.ЗаданияКРасчетуАмортизацииНМА.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса.Выбрать());
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СформироватьЗаданиеПризнаниеВНУЛизинговыхПлатежей(ДанныеТаблиц, ОпределитьПериод = Ложь, ЭтоИзменениеУчетнойПолитики = Ложь) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЛизинг")
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Возврат;
	КонецЕсли;
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПервоначальныеСведенияОСБухгалтерскийУчет_Лизинг");
	СписокТаблиц.Добавить("УчетнаяПолитикаОрганизаций_Лизинг");
	СписокТаблиц.Добавить("ПриобретениеУслугПоЛизингу");
	
	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц);
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаВеденияРеглУчета
	|						И &ДатаНачалаВеденияРеглУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &ДатаНачалаВеденияРеглУчета
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов24.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ПринятиеКУчетуОС)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ИзмененныеДанные.Период, МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
	|	ПО ВводОстатковВнеоборотныхАктивов.Ссылка = ИзмененныеДанные.Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатковВнеоборотныхАктивов24
	|	ПО ВводОстатковВнеоборотныхАктивов24.Ссылка = ИзмененныеДанные.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЭтоИзменениеУчетнойПолитики Тогда
			
			ПараметрыУчетнойПолитики = РегистрыСведений.УчетнаяПолитикаОрганизаций.ПараметрыУчетнойПолитики(Выборка.Организация, Выборка.Месяц);
			Если ПараметрыУчетнойПолитики = Неопределено 
				ИЛИ НЕ ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли; 
			
		Если ОпределитьПериод Тогда
			ПериодЗадания = УчетОСВызовСервера.СледующийПериодПризнанияВНУЛизинговыхПлатежей(Выборка.Организация, Выборка.Месяц);
		Иначе
			ПериодЗадания = Выборка.Месяц;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПериодЗадания) Тогда
			
			РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписьРегистра(
				НачалоМесяца(ПериодЗадания), 
				Выборка.Документ, 
				Выборка.Организация, 
				Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеЛизинговыхПлатежей);
				
		КонецЕсли; 
				
	КонецЦикла; 
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

// Дата прекращения действия льгот введенных законом №249-ФЗ.
// 
// Возвращаемое значение:
//  Дата - Дата прекращения льгот.
//
Функция ДатаПрекращенияДействияЛьготПлатон() Экспорт

	Возврат '201901010000';

КонецФункции

Процедура ДополнитьТекстыЗапросовПриЗаписиДвиженийРаспределенияВзаиморасчетов(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Изменения.Период, МЕСЯЦ)                 КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.ЗаказПоставщику)
	|ГДЕ
	|	Изменения.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Изменения.Период, МЕСЯЦ)                 КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
	|ГДЕ
	|	Изменения.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры

Процедура СформироватьЗаданияПриЗаписиДвиженийРаспределенияВзаиморасчетов(РезультатЗапроса, НомерЗапроса, МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц = Новый Структура;
	ДанныеТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ДанныеТаблиц.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	РасчетИмущественныхНалоговУП.СформироватьЗаданиеКРасчетуТранспортногоНалога(Неопределено, ДанныеТаблиц, Истина);
	
	//-- Локализация	
	
КонецПроцедуры

Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщиками(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Изменения.Месяц                                        КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Документ                                     КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.ОбъектРасчетов)
	|ГДЕ
	|	Изменения.ОбъектРасчетов ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Изменения.Месяц                                        КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Документ                                     КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Документ)
	|ГДЕ
	|	РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры

Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщиками(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	//-- Локализация	
	
КонецПроцедуры

Процедура ДополнитьТекстыЗапросовПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(Запрос, ТекстыЗапросов) Экспорт

	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Изменения.Период                                       КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение
	|ИЗ
	|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.РасчетныйДокумент)
	|ГДЕ
	|	Изменения.РасчетныйДокумент ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Изменения.Период                                       КАК Период,
	|	РасходыНаПлатон.Ссылка.Организация                     КАК Организация,
	|	РасходыНаПлатон.ОсновноеСредство                       КАК ОсновноеСредство,
	|	ИСТИНА                                                 КАК ОтражатьВРеглУчете,
	|	ЛОЖЬ                                                   КАК ОтражатьВУпрУчете,
	|	Изменения.Регистратор                                  КАК Документ
	|ИЗ
	|	РасчетыСПоставщикамиПоДокументамИзменения КАК Изменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК РасходыНаПлатон
	|		ПО (РасходыНаПлатон.Ссылка = Изменения.Регистратор)
	|ГДЕ
	|	Изменения.Регистратор ССЫЛКА Документ.ОтчетОператораСистемыПлатон
	|	И РасходыНаПлатон.Ссылка.Дата < &ДатаПрекращенияДействияЛьготПлатон";
		
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДатаПрекращенияДействияЛьготПлатон", ДатаПрекращенияДействияЛьготПлатон());
	
	//-- Локализация	
	
КонецПроцедуры
 
Процедура СформироватьЗаданияПриЗаписиРегистраРасчетыСПоставщикамиПоДокументам(РезультатЗапроса, НомерЗапроса, СтруктураВременныеТаблицы) Экспорт
	
	//++ Локализация
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПлатежейВПлатон")
		ИЛИ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса[НомерЗапроса].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("РасчетыСПоставщикамиПоДокументам_ЗаданияКРасчетуТранспортногоНалогаИзменение", Выборка.Количество > 0);

	//-- Локализация	
	
КонецПроцедуры

Функция ЕстьПрисоединенныеФайлы(ТипВладелецФайла) Экспорт

	ЕстьПрисоединенныеФайлы = Ложь;
	
	//++ Локализация
	
	ЕстьПрисоединенныеФайлы =
		ТипВладелецФайла = Тип("ДокументСсылка.ВозвратОСОтАрендатора2_4")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ВыбытиеАрендованныхОС")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИнвентаризацияНМА")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИнвентаризацияОС")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ИзменениеСпособаОтраженияИмущественныхНалогов")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ОтменаРегистрацииЗемельныхУчастков")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ОтменаРегистрацииТранспортныхСредств")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПередачаОСАрендатору2_4")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПоступлениеАрендованныхОС")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.ПоступлениеПредметовЛизинга")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.РегистрацияЗемельныхУчастков")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество")
		ИЛИ ТипВладелецФайла = Тип("ДокументСсылка.РегистрацияТранспортныхСредств");
	
	//-- Локализация

	Возврат ЕстьПрисоединенныеФайлы;
	
КонецФункции
 
#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "ВнеоборотныеАктивыЛокализация.РегламентированныйУчетВНА_ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.4.8.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1aea0b78-1b99-4d99-af47-8c7d3d2938d0");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ВнеоборотныеАктивыЛокализация.РегламентированныйУчетВНА_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "";
	Обработчик.Комментарий = НСтр("ru = 'Устанавливает константу ""Регламентированный учет ВНА""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Константы.РегламентированныйУчетВНА.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Константы.РегламентированныйУчетВНА.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

КонецПроцедуры
#КонецОбласти
//++ Локализация

Функция УсловияОтбораПоВидуНалога(ИмяТаблицыОС) Экспорт

	ТекстУсловия =
	"(&ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество),
	|					ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И НЕ СправочникОбъектыЭксплуатации.ГруппаОС В (
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки),
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|				И ((&ДатаСведений < ДАТАВРЕМЯ(2019, 1, 1)
	|						И НЕ СправочникОбъектыЭксплуатации.АмортизационнаяГруппа В (
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПерваяГруппа),
	|									ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВтораяГруппа)))
	|					ИЛИ &ДатаСведений >= ДАТАВРЕМЯ(2019, 1, 1)
	|						И СправочникОбъектыЭксплуатации.НедвижимоеИмущество)
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства), 
	|															ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МашиныИОборудование))
	|			ИЛИ &ВидНалога В (ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог),
	|								ЗНАЧЕНИЕ(Перечисление.ВидыИмущественныхНалогов.ПустаяСсылка))
	|				И СправочникОбъектыЭксплуатации.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)))";
	
	ТекстУсловия = СтрЗаменить(ТекстУсловия, "СправочникОбъектыЭксплуатации", ИмяТаблицыОС);
	
	Возврат ТекстУсловия;

КонецФункции

Функция ЗаголовокФормыВыбораОСПоВидуНалога(ВидНалога, ДатаСведений) Экспорт

	Если ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		Если ДатаСведений >= '201901010000' Тогда
			Заголовок = НСтр("ru = 'Недвижимое имущество'");
		Иначе
			Заголовок = НСтр("ru = 'Основные средства, облагаемые налогом на имущество'");
		КонецЕсли;
		
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		Заголовок = НСтр("ru = 'Основные средства, облагаемые транспортным налогом'");
	ИначеЕсли ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		Заголовок = НСтр("ru = 'Основные средства, облагаемые земельным налогом'");
	Иначе
		Заголовок = НСтр("ru = 'Основные средства, облагаемые имущественными налогами'");
	КонецЕсли; 

	Возврат Заголовок;
	
КонецФункции
 
//-- Локализация

#КонецОбласти
