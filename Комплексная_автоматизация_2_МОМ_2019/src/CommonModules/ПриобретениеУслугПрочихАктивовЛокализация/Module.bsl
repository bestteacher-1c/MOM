
#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	//++ Локализация
	//++ НЕ УТ
	РеглУчетПроведениеСервер.ОтразитьПорядокОтраженияПрочихОпераций(ДополнительныеСвойства, Отказ);
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Объект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	//++ НЕ УТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС14";
	КомандаПечати.Идентификатор = "ОС14";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме оборудования (ОС-14)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//-- НЕ УТ
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АвансовыйОтчет",
			НСтр("ru='Авансовый отчет'"),
			АвансовыйОтчетЛокализация.СформироватьПечатнуюФормуАвансовогоОтчетаСтараяВерсия(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	//-- Локализация
КонецПроцедуры


//++ Локализация
//++ НЕ УТ

// Функция получает данные для формирования печатной формы ОС-14
//
Функция ПолучитьДанныеДляПечатнойФормыОС14(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка;";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеУслугПрочихАктивов.Ссылка КАК Ссылка,
	|	ПриобретениеУслугПрочихАктивов.Номер КАК Номер,
	|	ПриобретениеУслугПрочихАктивов.Дата КАК Дата,
	|	ПриобретениеУслугПрочихАктивов.Дата КАК ДатаДокумента,
	|	ПриобретениеУслугПрочихАктивов.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПриобретениеУслугПрочихАктивов.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПриобретениеУслугПрочихАктивов.Контрагент КАК Поставщик,
	|	ПриобретениеУслугПрочихАктивов.Организация КАК Организация,
	|	ПриобретениеУслугПрочихАктивов.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПриобретениеУслугПрочихАктивов.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПриобретениеУслугПрочихАктивов.Организация.Префикс КАК Префикс,
	|	ПриобретениеУслугПрочихАктивов.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеУслугПрочихАктивов.Валюта КАК Валюта,
	|	ПриобретениеУслугПрочихАктивов.Руководитель.ФизическоеЛицо КАК Руководитель,
	|	ПриобретениеУслугПрочихАктивов.ГлавныйБухгалтер.ФизическоеЛицо КАК ГлавныйБухгалтер,
	|	ПриобретениеУслугПрочихАктивов.Руководитель.Должность КАК РуководительДолжность
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ПриобретениеУслугПрочихАктивов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПриобретениеУслугПрочихАктивов.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТоваров.ОС.НаименованиеПолное, """") КАК ОборудованиеНаименование,
	|	"""" КАК ХарактеристикаНаименование,
	|	1 КАК Количество,
	|	ТаблицаТоваров.Сумма КАК СтоимостьЗаЕдиницу,
	|	ТаблицаТоваров.Сумма КАК СтоимостьВсего
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		ПакетРезультатов[0],
		ПакетРезультатов[1]);
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПересчитыватьВВалютуРегл);
	
	Если ПересчитыватьВВалютуРегл Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
			|		ПО РасчетыСПоставщиками.Регистратор = ДанныеДокументов.Ссылка
			|ГДЕ
			|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
			|	И РасчетыСПоставщиками.Активность";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСПоставщиками(КонецРасчета, МассивАналитикУчетаПоПартнерам);
				Исключение
					ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютеРегл.РассчитатьСуммыДокументовВВалютеРегл(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов КАК ОС,
	|	СУММА(ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.СтатьяРасходов.РасходыНаОбъектыЭксплуатации
	|	И (ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|			ИЛИ НЕ &ПересчитыватьВВалютуРегл)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0))
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|		ПО ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|			И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаДокумента.СтатьяРасходов.РасходыНаОбъектыЭксплуатации
	|	И ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов";
	
	Запрос.Выполнить();
	
КонецПроцедуры
//-- НЕ УТ
//-- Локализация
#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
#Область ТекстПоступлениеУслуг    // (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	ТекстПоступлениеУслуг = "
	|ВЫБРАТЬ // Поступление услуг (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК Сумма,
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр
	|	КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление услуг"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО                 
	|		Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО 
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	)
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И ТИПЗНАЧЕНИЯ(Строки.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|";
#КонецОбласти
	
#Область ТекстПоступлениеПрочее   // (Дт <ХХ.ХХ> :: Кт <60.1, 76> )
	
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы".
	ТекстПоступлениеПрочее = "
	|ВЫБРАТЬ // Поступление на прочие активы (Дт <ХХ.ХХ> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК Сумма,
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр
	|	КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на прочие активы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	)
	|";
	
	ТекстПоступлениеПрочееНаСтатьиПрочихАктивов = "
	|ВЫБРАТЬ // Поступление на прочие активы (Дт <ХХ.ХХ> :: Кт <60.1, 76> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК Сумма,
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр
	|	КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.СчетУчета КАК СчетДт,
	|
	|	Строки.Субконто1 КАК СубконтоДт1,
	|	Строки.Субконто2 КАК СубконтоДт2,
	|	Строки.Субконто3 КАК СубконтоДт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Операция.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Операция.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на прочие активы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	И ТИПЗНАЧЕНИЯ(Строки.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов) 
	|";

	
#КонецОбласти

#Область ТекстПоступлениеУслугНДС // (Дт <19.ХХ> :: Кт <60.ХХ, 76.ХХ, 71>)
	ТекстПоступлениеУслугНДС = "
	|ВЫБРАТЬ // НДС при поступлении по рег. НДСПредъявленный (Дт <19.ХХ> :: Кт <60.ХХ, 76.ХХ, 71>) @НДСпредъявленный
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(НДСПредъявленный.НДС) КАК Сумма,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	НДСПредъявленный.ВидДеятельностиНДС                                    КАК АналитикаУчетаДт,
	|	НДСПредъявленный.ВидЦенности                                           КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                               КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)                 КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, НДСПредъявленный.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	ВЫБОР КОГДА ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) ТОГДА
	|			Строки.АналитикаРасходов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета)
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		ВЫБОР КОГДА Операция.ВалютаВзаиморасчетов = &ВалютаРеглУчета ТОГДА
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		Операция.ПодотчетноеЛицо
	|	ИНАЧЕ
	|		Операция.Контрагент
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СУММА(Строки.СуммаНДСВзаиморасчетов) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС при поступлении"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = Строки.Ссылка
	|		И НДСПредъявленный.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО
	|		Строки.СтатьяРасходов = Статьи.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО 
	|	Расчеты.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО ДокументыКОтражению.Ссылка = ВводСобственныхСредств.Ссылка
	|		И НДСПредъявленный.СчетФактура = ВводСобственныхСредств.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Контрагент,
	|	Операция.Договор,
	|	Операция.ХозяйственнаяОперация,
	|	Операция.ВалютаВзаиморасчетов,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.ПодотчетноеЛицо,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, НДСПредъявленный.НаправлениеДеятельности),
	|	НДСПредъявленный.ВидЦенности,
	|	Строки.АналитикаРасходов,
	|	Строки.Количество,
	|	Статьи.ВариантРаспределенияРасходовРегл,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.НаправлениеДеятельности
	|";
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстПоступлениеУслуг);
	ТекстыОтражения.Добавить(ТекстПоступлениеПрочее);
	ТекстыОтражения.Добавить(ТекстПоступлениеПрочееНаСтатьиПрочихАктивов);
	ТекстыОтражения.Добавить(ТекстПоступлениеУслугНДС);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры
//++ Локализация
//++ НЕ УТ

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период			КАК Дата,
	|	&Организация	КАК Организация,
	|	&Ссылка			КАК Документ,
	|	""""			КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|		И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		Документы.ПриобретениеУслугПрочихАктивов.ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		Документы.ПриобретениеУслугПрочихАктивов.ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ
//-- Локализация

#КонецОбласти

#КонецОбласти
