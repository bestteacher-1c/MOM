
//++ НЕ УТ
#Область ДвижениеДенежныхДокументов

// Создает поступление денежных документов по списку выбранных ДД
//
// Параметры:
//	ХозОперация - ПеречислениеСсылка.ХозяйственныеОперации - хоз. операция документа
//	Список - ТаблицаФормы - список денежных документов для поступления.
//
Процедура СоздатьПоступлениеДенежныхДокументов(ХозОперация, Список) Экспорт
	
	ТекущиеДанные = Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыОснования = Новый Структура();
	
	Если Список.ВыделенныеСтроки.Количество() = 1 Тогда
		
		Если ТипЗнч(Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		МассивДД = Новый Массив;
		МассивДД.Добавить(ТекущиеДанные.ДенежныйДокумент);
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				ТекущиеДанные.Организация);
		ПараметрыОснования.Вставить("Подразделение",			ТекущиеДанные.Подразделение);
		ПараметрыОснования.Вставить("МОЛ",						ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("Валюта",					ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ВалютаВзаиморасчетов",		ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		
		ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
		
	Иначе
		
		ОтПоставщика = ХозОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика");
		
		НаПроверку = Новый Структура;
		НаПроверку.Вставить("Организация",	 НСтр("ru = 'Организация'"));
		НаПроверку.Вставить("Подразделение", НСтр("ru = 'Подразделение'"));
		НаПроверку.Вставить("МОЛ",			 НСтр("ru = 'МОЛ'"));
		Если ОтПоставщика Тогда
			НаПроверку.Вставить("Валюта", НСтр("ru = 'Валюта'"));
		КонецЕсли;
		
		Проверка = Новый Структура;
		Для Каждого ИмяРекв Из НаПроверку Цикл
			Проверка.Вставить(ИмяРекв.Ключ, Новый Массив);
			Проверка.Вставить(ИмяРекв.Ключ + "Отказ", Ложь);
		КонецЦикла;
		
		МассивДД = Новый Массив;
		Для Каждого ТекСтрока Из Список.ВыделенныеСтроки Цикл
			
			Если ТипЗнч(ТекСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ПроверитьДублиРеквизитовДляДД(Проверка, ИмяРекв.Ключ, Список.ДанныеСтроки(ТекСтрока)[ИмяРекв.Ключ]);
			КонецЦикла;
			
			МассивДД.Добавить(Список.ДанныеСтроки(ТекСтрока).ДенежныйДокумент);
			
		КонецЦикла;
		
		Если МассивДД.Количество() = 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		ОчиститьСообщения();
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				Проверка.Организация[0]);
		ПараметрыОснования.Вставить("Подразделение",			Проверка.Подразделение[0]);
		ПараметрыОснования.Вставить("МОЛ",						Проверка.МОЛ[0]);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		Если ОтПоставщика Тогда
			ПараметрыОснования.Вставить("Валюта",				Проверка.Валюта[0]);
			ПараметрыОснования.Вставить("ВалютаВзаиморасчетов",	Проверка.Валюта[0]);
		КонецЕсли;
		
		Если СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Тогда
			
			// В результате проверки обнаружены ошибки
			ТекстСообщения = НСтр("ru='Поступление денежных документов будет создано с указанием значений %1 из строки, на которой установлен курсор'");
			ТекстРеквизитов = "";
			ВсегоРеквизитов = НаПроверку.Количество();
			ТекущийРеквизит = 1;
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ЗнакПрепинания = ?(ВсегоРеквизитов = ТекущийРеквизит, " " + НСтр("ru = 'и ""'"), ", """); ТекущийРеквизит = ТекущийРеквизит + 1;
				ТекстРеквизитов = ТекстРеквизитов + ?(ПустаяСтрока(ТекстРеквизитов), """", ЗнакПрепинания) + ИмяРекв.Значение + """";
			КонецЦикла;
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ТекстРеквизитов);
			
			// Сообщаем о найденных дублях, но документ создаем, т.к. это поступление
			Оповещение = Новый ОписаниеОповещения("СоздатьДокументПоступленияДД", ДенежныеСредстваКлиент, ПараметрыОснования);
			ПоказатьПредупреждение(Оповещение, ТекстСообщения);
			
		Иначе
			
			СоздатьДокументПоступленияДД(ПараметрыОснования);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Создает выбытие денежных документов по списку выбранных ДД
//
// Параметры:
//	ХозОперация - ПеречислениеСсылка.ХозяйственныеОперации - хоз. операция документа
//	Список - ТаблицаФормы - список денежных документов для выбытия / перемещения.
//
Процедура СоздатьВыбытиеДенежныхДокументов(ХозОперация, Список) Экспорт
	
	ТекущиеДанные = Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыОснования = Новый Структура();
	
	Если Список.ВыделенныеСтроки.Количество() = 1 Тогда
		
		Если ТипЗнч(Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		МассивДД = Новый Массив;
		МассивДД.Добавить(ТекущиеДанные.ДенежныйДокумент);
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация", ХозОперация);
		ПараметрыОснования.Вставить("Организация",           ТекущиеДанные.Организация);
		ПараметрыОснования.Вставить("Подразделение",         ТекущиеДанные.Подразделение);
		ПараметрыОснования.Вставить("МОЛОтправитель",        ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("МОЛ",                   ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("Валюта",                ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ДенежныеДокументы",     МассивДД);
		
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
	Иначе
		
		ВозвратПоставщику = (ХозОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
		
		НаПроверку = Новый Структура;
		НаПроверку.Вставить("Организация",   НСтр("ru = 'Организация'"));
		НаПроверку.Вставить("Подразделение", НСтр("ru = 'Подразделение'"));
		НаПроверку.Вставить("МОЛ",           НСтр("ru = 'МОЛ'"));
		Если ВозвратПоставщику Тогда
			НаПроверку.Вставить("Валюта", НСтр("ru = 'Валюта'"));
		КонецЕсли;
		
		Проверка = Новый Структура;
		Для Каждого ИмяРекв Из НаПроверку Цикл
			Проверка.Вставить(ИмяРекв.Ключ, Новый Массив);
			Проверка.Вставить(ИмяРекв.Ключ + "Отказ", Ложь);
		КонецЦикла;
		
		МассивДД = Новый Массив;
		Для Каждого ТекСтрока Из Список.ВыделенныеСтроки Цикл
			
			Если ТипЗнч(ТекСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ПроверитьДублиРеквизитовДляДД(Проверка, ИмяРекв.Ключ, Список.ДанныеСтроки(ТекСтрока)[ИмяРекв.Ключ]);
			КонецЦикла;
			
			МассивДД.Добавить(Список.ДанныеСтроки(ТекСтрока).ДенежныйДокумент);
		КонецЦикла;
		
		Если МассивДД.Количество() = 0 Тогда
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		ОчиститьСообщения();
		
		Если СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Тогда
			ТекстСообщения = НСтр("ru='Документ не может быть создан.'"); // В результате проверки обнаружены ошибки
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация", ХозОперация);
		ПараметрыОснования.Вставить("Организация",           Проверка.Организация[0]);
		ПараметрыОснования.Вставить("Подразделение",         Проверка.Подразделение[0]);
		ПараметрыОснования.Вставить("МОЛОтправитель",        Проверка.МОЛ[0]);
		ПараметрыОснования.Вставить("МОЛ",                   Проверка.МОЛ[0]);
		Если ВозвратПоставщику Тогда
			ПараметрыОснования.Вставить("Валюта", Проверка.Валюта[0]);
		КонецЕсли;
		
		ПараметрыОснования.Вставить("ДенежныеДокументы", МассивДД);
		
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
	КонецЕсли;
	
КонецПроцедуры

// Создает документ поступления денежных документов по подготовленным параметрам
//
// Параметры:
//	ПараметрыОснования - Структура - параметры создания документа.
//
Процедура СоздатьДокументПоступленияДД(ПараметрыОснования) Экспорт
	
	ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
		Новый Структура("Основание", ПараметрыОснования));
	
КонецПроцедуры

// Выводит сообщения об ошибках при вводе документов движения денежных документов
//
// Параметры:
// 	Проверка - Структура - Результаты проверки дублей реквизитов.
//
// Возвращаемое значение:
// Булево - Истина, если отказ от ввода на основании.
//
Функция СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Экспорт
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных остатков денежных документов отличается поле ""%Поле%""'");
	
	Для Каждого Реквизит Из НаПроверку Цикл
		Если Проверка[Реквизит.Ключ + "Отказ"] = Истина Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрЗаменить(ТекстСообщения, "%Поле%", Реквизит.Значение), , , , Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

Процедура ПроверитьДублиРеквизитовДляДД(Проверка, Имя, Значение)
	
	Если Проверка[Имя + "Отказ"] = Истина Тогда
		// Ранее уже были найдены ошибки
	ИначеЕсли Проверка[Имя].Количество() > 0 И Проверка[Имя].Найти(Значение) = Неопределено Тогда
		// Обнаружены дубли реквизитов
		Проверка.Вставить(Имя + "Отказ", Истина);
	ИначеЕсли Проверка[Имя].Найти(Значение) = Неопределено Тогда
		// Сохраним проверенное значение реквизита
		Проверка[Имя].Добавить(Значение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

#Область ВводНаОсновании

// Создает документ оплаты по одной или нескольким заявкам на расход денежных средств.
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются документы
//	ИмяДокумента - Строка - имя документа в метаданных, который будет создан на основании заявок.
//
Процедура СоздатьДокументОплатыНаОснованииЗаявокНаРасходДС(МассивСсылок, ИмяДокумента) Экспорт
	
	ФормаОплаты = "";
	Если ИмяДокумента = "СписаниеБезналичныхДенежныхСредств" Тогда
		ФормаОплаты = "Безналичная";
	ИначеЕсли ИмяДокумента = "РасходныйКассовыйОрдер" Тогда
		ФормаОплаты = "Наличная";
	КонецЕсли;
	
	ОчиститьСообщения();
	
	РаспределениеОплаты = Неопределено;
	Если ДенежныеСредстваВызовСервера.СформироватьДанныеЗаполненияОплаты(МассивСсылок, ФормаОплаты, РаспределениеОплаты) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументОснование",                     МассивСсылок);
		ДополнительныеПараметры.Вставить("НесколькоЗаявокНаРасходованиеСредств",  МассивСсылок.Количество() > 1);
		ДополнительныеПараметры.Вставить("ИмяДокумента",                          ИмяДокумента);
		ДополнительныеПараметры.Вставить("ФормаОплаты",                           ФормаОплаты);
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораБанковскогоСчетаКассы", ЭтотОбъект, ДополнительныеПараметры);
		
		Если РаспределениеОплаты.Количество() > 1 Тогда
			ДополнительныеПараметры.Вставить("ЗакрыватьПриВыборе", Истина);
			ОткрытьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.РаспределениеОплаты", ДополнительныеПараметры,,,,,
				Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли РаспределениеОплаты.Количество() = 1 Тогда
			ВыполнитьОбработкуОповещения(Оповещение,
				Новый Структура("БанковскийСчетКасса, Сумма", РаспределениеОплаты[0].БанковскийСчетКасса, РаспределениеОплаты[0].Сумма));
		Иначе
			ВыполнитьОбработкуОповещения(Оповещение, Новый Структура("БанковскийСчетКасса, Сумма", Неопределено, 0));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПослеВыбораБанковскогоСчетаКассы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФормы = "Документ." + ДополнительныеПараметры.ИмяДокумента + ".ФормаОбъекта";
		ДополнительныеПараметры.Вставить("БанковскийСчетКасса", Результат.БанковскийСчетКасса);
		ДополнительныеПараметры.Вставить("Сумма", Результат.Сумма);
		ОткрытьФорму(ИмяФормы, Новый Структура("Основание", ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

// Создает платежные документы на основании выделенных строк графика платежей
//
// Параметры:
//    ЭлементФормы - ТаблицаФормы - Элемент с выделенными строками графика оплаты
//    ТипДокумента - Строка - Тип создаваемого документа. Если не задан, определяется автоматически.
//
Процедура ОплатитьСтрокиГрафика(ЭлементФормы, ТипДокумента = "") Экспорт
	
	СтрокиГрафика = ЭлементФормы.ВыделенныеСтроки;
	Если СтрокиГрафика.Количество() Тогда
		Результат = ДенежныеСредстваВызовСервера.ОплатитьСтрокиГрафика(СтрокиГрафика, ТипДокумента);
		ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат);
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму помощника создания, если создано несколько документов, либо форму одного документа.
//
// Параметры:
//    ЭлементФормы - ТаблицаФормы - Элемент с выделенными строками графика оплаты
//    Результат - Структура - Результат создания документов оплаты.
//
Процедура ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат) Экспорт
	
	Если Результат.ОткрыватьФормуПомощника Тогда
		//++ НЕ УТ
		Если Результат.Свойство("ТребуетсяКонтрольГОЗ") Тогда
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("ТребуетсяКонтрольГОЗ", Истина);
			СтруктураПараметры.Вставить("АдресСтрокГрафика", Результат.АдресСтрокГрафика);
			
			ОткрытьФорму("ОбщаяФорма.ПомощникФормированияПлатежныхДокументов",
				СтруктураПараметры,
				ЭлементФормы,,,,
				Новый ОписаниеОповещения("ОплатаСтрокГрафикаЗавершение", ЭтотОбъект, ЭлементФормы),
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
		//-- НЕ УТ
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ЭлементФормы", ЭлементФормы);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииСозданияПлатежныхДокументов", ЭтотОбъект, ДополнительныеПараметры);
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
			ПараметрыОжидания.Вставить("ТекстСообщения", НСтр("ru = 'Создание платежных документов...'"));
			ПараметрыОжидания.Вставить("ВыводитьПрогрессВыполнения", Истина);
			
			ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат.ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
		//++ НЕ УТ
		КонецЕсли;
		//-- НЕ УТ
	Иначе
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("Основание", Результат.ДокументКСозданию.ДанныеЗаполнения);
		
		ОткрытьФорму("Документ." + Результат.ДокументКСозданию.ТипДокумента + ".ФормаОбъекта",
			СтруктураПараметры,
			ЭлементФормы);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗавершенииСозданияПлатежныхДокументов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ОткрытьФорму("ОбщаяФорма.ПомощникФормированияПлатежныхДокументов",,
			ДополнительныеПараметры.ЭлементФормы,,,,
			Новый ОписаниеОповещения("ОплатаСтрокГрафикаЗавершение", ЭтотОбъект, ДополнительныеПараметры.ЭлементФормы),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОплатаСтрокГрафикаЗавершение(Результат, ЭлементФормы) Экспорт
	
	Если Результат <> Неопределено И Результат Тогда
		ЭлементФормы.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФайлами

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанк(Форма) Экспорт
	
	Обработчик = Новый ОписаниеОповещения("ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение", ЭтотОбъект, Форма);
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Переход к файлам возможен только после записи данных.
			|Данные будут записаны.'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(Обработчик, КодВозвратаДиалога.Пропустить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение(Ответ, Форма) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Форма.Записать();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Форма.Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ДляПередачиВБанк", Истина);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		Форма,
		Истина,
		Форма.Окно);
	
КонецПроцедуры

#КонецОбласти