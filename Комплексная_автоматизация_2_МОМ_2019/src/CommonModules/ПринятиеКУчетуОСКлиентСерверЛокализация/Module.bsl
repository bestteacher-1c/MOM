////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьВспомогательныеРеквизиты(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.СлужебныеПараметрыФормы.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи", Форма.СлужебныеПараметрыФормы.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи);
	ВспомогательныеРеквизиты.Вставить("ТребуетсяНастройкаОтраженияРасходовПоНалогам", Форма.СлужебныеПараметрыФормы.ТребуетсяНастройкаОтраженияРасходовПоНалогам);
	ВспомогательныеРеквизиты.Вставить("РаздельныйУчетТоваров", Форма.СлужебныеПараметрыФормы.РаздельныйУчетТоваров);
	ВспомогательныеРеквизиты.Вставить("ИспользоватьРеглУчет", Форма.СлужебныеПараметрыФормы.ИспользоватьРеглУчет);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыПринятияКУчетуОС(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС) Экспорт

	//++ Локализация
	
	ДоступныПараметрыАмортизацииБУ = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
										ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
										ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.ПустаяСсылка"))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
									И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
									
	//
	ДоступныПараметрыАмортизацииНУ = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
										ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка")
											И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы))
									И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
									И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
									
	//								
	АмортизацияБУДоступна = (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
								ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
								ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
								ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"))
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
							
	//								
	ДоступноОтражениеРасходовБУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"));
			
	ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена"));
	
	//
	ПредопределенныйПорядокУчетаНУ = 
		(Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации")
			И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
							
	//
	СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете И НЕ ДоступноОтражениеРасходовБУ И НЕ ДоступноОтражениеРасходовНУ;
		
	//
	ПоНаработкеБУ = Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
					ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега");
					
	ПоНаработке = ПараметрыПринятияКУчетуОС.ПоНаработке ИЛИ ПоНаработкеБУ;
						
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииБУ", ДоступныПараметрыАмортизацииБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовБУ",    ДоступноОтражениеРасходовБУ);
	ПараметрыПринятияКУчетуОС.Вставить("ДоступноОтражениеРасходовНУ",    ДоступноОтражениеРасходовНУ);
	ПараметрыПринятияКУчетуОС.Вставить("ПредопределенныйПорядокУчетаНУ", ПредопределенныйПорядокУчетаНУ);
	ПараметрыПринятияКУчетуОС.Вставить("АмортизацияБУДоступна",          АмортизацияБУДоступна);
	ПараметрыПринятияКУчетуОС.Вставить("СтатьяРасходовУУОбязательна",    СтатьяРасходовУУОбязательна);
	ПараметрыПринятияКУчетуОС.Вставить("ПоНаработке",                    ПоНаработке);
	ПараметрыПринятияКУчетуОС.Вставить("ПоНаработкеБУ",                  ПоНаработкеБУ);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыПринятияКУчетуОС, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ДоступныНастройкиРеглУчета = (Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
	
	#Область СтраницаОсновное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") Тогда
			
			Элементы.ДокументОснование.Заголовок = НСтр("ru = 'Инвентаризация'");
			Элементы.ДокументОснование.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ИнвентаризацияОС");
			
		ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") Тогда
			
			Элементы.ДокументОснование.Заголовок = НСтр("ru = 'Поступление'");
			Элементы.ДокументОснование.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.ПоступлениеПредметовЛизинга");
			
		КонецЕсли; 
		
		ЭлементСпискаЛизинг = Элементы.СпособПоступления.СписокВыбора.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга"));
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
			И ЭлементСпискаЛизинг = Неопределено Тогда
			Элементы.СпособПоступления.СписокВыбора.Вставить(6, ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга"));
		ИначеЕсли Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
			И ЭлементСпискаЛизинг <> Неопределено Тогда
			Элементы.СпособПоступления.СписокВыбора.Удалить(ЭлементСпискаЛизинг);
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеВидно = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется")
						ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.ПустаяСсылка"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ГруппаОС.СписокВыбора,
			Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),
			ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),,
			11);
	
	КонецЕсли;
	
	#КонецОбласти

	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.РасширеннаяСтоимостьРегл = 
				Объект.ОтражатьВРеглУчете
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
					И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") 
						ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
						ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
					И Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль;
					
		СтоимостьНУЛизинг = 
				Объект.ОтражатьВРеглУчете
					И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
					И Форма.СлужебныеПараметрыФормы.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
					И Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль;
					
		Если НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = Истина;
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = НЕ ВспомогательныеРеквизиты.ВалютыСовпадают;
		
			Элементы.ОССтоимостьУУ.Видимость = Ложь;
			Элементы.ОССтоимостьБУ.Видимость = Ложь;
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = Ложь;
			Элементы.ОССтоимостьПР.Видимость = Ложь;
			Элементы.ОССтоимостьВР.Видимость = Ложь;
			Элементы.ОСГруппаРасширеннаяСтоимостьРегл.Видимость = Ложь;
			
		ИначеЕсли Форма.РасширеннаяСтоимостьРегл ИЛИ СтоимостьНУЛизинг Тогда	
			
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = Истина;
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = Объект.ОтражатьВУпрУчете;
			
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = Ложь;
			Элементы.ОССтоимостьУУ.Видимость = Ложь;
			Элементы.ОССтоимостьБУ.Видимость = Ложь;
			Элементы.ОСГруппаРасширеннаяСтоимостьРегл.Видимость = Истина;
			
		ИначеЕсли Объект.ОтражатьВРеглУчете И Объект.ОтражатьВУпрУчете Тогда	
			
			Элементы.ОССтоимостьУУ.Видимость = Истина;
			Элементы.ОССтоимостьБУ.Видимость = Истина;
		
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = Ложь;
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = Ложь;
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = Ложь;
			Элементы.ОСГруппаРасширеннаяСтоимостьРегл.Видимость = Ложь;
			
		Иначе
			
			Элементы.ОССтоимостьБУ_Отдельно.Видимость = Объект.ОтражатьВРеглУчете;
			Элементы.ОССтоимостьУУ_Отдельно.Видимость = Объект.ОтражатьВУпрУчете;
			
			Элементы.ОССтоимостьУУ.Видимость = Ложь;
			Элементы.ОССтоимостьБУ.Видимость = Ложь;
			Элементы.ОССтоимостьБУ_Расширенная.Видимость = Ложь;
			Элементы.ОССтоимостьПР.Видимость = Ложь;
			Элементы.ОССтоимостьВР.Видимость = Ложь;
			Элементы.ОСГруппаРасширеннаяСтоимостьРегл.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ОССтоимостьПР.Видимость = Форма.РасширеннаяСтоимостьРегл;
		Элементы.ОССтоимостьВР.Видимость = Форма.РасширеннаяСтоимостьРегл;
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.ПорядокУчетаНУ.Видимость
			И НЕ ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ Тогда
			
			СписокВыбораНУ = Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),, 
				0);
				
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),, 
				0);
			
			НеПолныйВариантПримененияЦФ = (Объект.ВариантПримененияЦелевогоФинансирования 
												<> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				НеПолныйВариантПримененияЦФ, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"),, 
				1);
			
			Если СписокВыбораНУ.НайтиПоЗначению(Объект.ПорядокУчетаНУ) = Неопределено И НЕ ОбновитьВсе Тогда
				Объект.ПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
			КонецЕсли;
				
			Причина = "";
			Форма.РекомендуемыйПорядокУчетаНУ = СписокВыбораНУ.Получить(0).Значение;
				
			Если Форма.Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") Тогда
				Причина = НСтр("ru = 'Указана группа ОС ""Земельные участки""'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы");
			ИначеЕсли ЗначениеЗаполнено(Форма.Объект.СрокИспользованияБУ) И Форма.Объект.СрокИспользованияБУ <= 12 И НеПолныйВариантПримененияЦФ Тогда
				Причина = НСтр("ru = 'Срок полезного использования не превышает 12 месяцев'");
				Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету");
			Иначе
				Для каждого СтрокаОС Из Форма.Объект.ОС Цикл
					Если ЗначениеЗаполнено(СтрокаОС.СтоимостьБУ) И СтрокаОС.СтоимостьБУ <= 100000 И НеПолныйВариантПримененияЦФ Тогда
						Причина = НСтр("ru = 'Первоначальная стоимость не превышает 100 000 руб.'");
						Форма.РекомендуемыйПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету");
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			МассивСтрок = Новый Массив;
			Если ЗначениеЗаполнено(Причина) И Форма.Объект.ПорядокУчетаНУ <> Форма.РекомендуемыйПорядокУчетаНУ Тогда
				МассивСтрок.Добавить(Причина);
				МассивСтрок.Добавить("," + " ");
				МассивСтрок.Добавить(НСтр("ru = 'рекомендуется установить значение'"));
				МассивСтрок.Добавить(" ");
				МассивСтрок.Добавить(Новый ФорматированнаяСтрока(Строка(Форма.РекомендуемыйПорядокУчетаНУ),,,, "УстановкаПорядкаУчетаНУ"));
				МассивСтрок.Добавить(".");
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Истина;
			Иначе
				Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			КонецЕсли;
			
			Форма.УстановитьПорядокУчетаНУ = Новый ФорматированнаяСтрока(МассивСтрок);
			
		Иначе
			
			Форма.Элементы.ГруппаУстановкаПараметраУчетаНУ.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
	
		Элементы.ПорядокУчетаНУ.РежимВыбораИзСписка = НЕ ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Объект.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаУчетУУ.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
		Элементы.ГруппаУчетОбщее.ОтображатьЗаголовок = ДоступныНастройкиРеглУчета;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
		
		//
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ОтражатьВУпрУчете 
			И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету") Тогда
			
			Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.Заголовок = 
				?(ДоступныНастройкиРеглУчета, НСтр("ru = 'Отражение расходов (управленческий учет)'"), НСтр("ru = 'Амортизация'"));
		Иначе	
			Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.Заголовок = 
				?(ДоступныНастройкиРеглУчета, НСтр("ru = 'Амортизация (управленческий учет)'"), НСтр("ru = 'Амортизация'"));
		КонецЕсли; 
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ 
			И ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский и налоговый учет)'");
		ИначеЕсли ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (налоговый учет)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский учет)'");
		КонецЕсли; 
		Элементы.ГруппаОтражениеРасходовПоАмортизацииРегл.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ ОбновитьВсе Тогда
		
		ДокументНаОснованииИнвентаризации = 
			(Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
				И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
				И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
				
		Элементы.СтраницаОтражениеРасходов.Заголовок = ?(
			ДокументНаОснованииИнвентаризации,
			НСтр("ru='Отражение доходов и расходов'"),
			НСтр("ru='Отражение расходов'"));
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна 
			ИЛИ ЗначениеЗаполнено(Объект.СтатьяРасходовУУ) Тогда
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
			
		ИначеЕсли НЕ ПараметрыПринятияКУчетуОС.СтатьяРасходовУУОбязательна Тогда
			Если ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ 
				И ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским и налоговым учетом'");
			ИначеЕсли ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с налоговым учетом'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаОтражениеРасходовПоАмортизацииУпр.ОтображатьЗаголовок = 
			ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации
			ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации");
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") Тогда
			
			ЗаголовокГруппы = НСтр("ru = 'Земельный налог'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по земельному налогу'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по земельному налогу'");
			
		ИначеЕсли Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование") Тогда
			
			ЗаголовокГруппы = НСтр("ru = 'Налог на имущество'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по налогу на имущество'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по налогу на имущество'");
			
		ИначеЕсли НЕ ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
			И (Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование")) Тогда
				
			ЗаголовокГруппы = НСтр("ru = 'Транспортный налог'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по транспортному налогу'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по транспортному налогу'");
			
		Иначе
			
			ЗаголовокГруппы = НСтр("ru = 'Имущественные налоги'");
			ПодсказкаНалогСтатья = НСтр("ru = 'Статья расходов, по которой отражаются расходы по имущественным налогам'");
			ПодсказкаНалогАналитика = НСтр("ru = 'Объект аналитики расходов по имущественным налогам'");
			
		КонецЕсли;
		
		Элементы.ГруппаОтражениеРасходовПоНалогам.Заголовок = ЗаголовокГруппы;
		Элементы.СтатьяРасходовНалог.Подсказка = ПодсказкаНалогСтатья;
		Элементы.АналитикаРасходовНалог.Подсказка = ПодсказкаНалогАналитика;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриИзмененииРеквизитов(Объект, ВспомогательныеРеквизиты, СписокРеквизитов) Экспорт
	
	//++ Локализация
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("ОтражатьВРеглУчете") <> Неопределено Тогда
		
		Если Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
			ИЛИ НЕ Объект.ОтражатьВРеглУчете Тогда
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
			СписокРеквизитов.Добавить("ВариантПримененияЦелевогоФинансирования");
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВариантПримененияЦелевогоФинансирования") <> Неопределено Тогда
	
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
				СписокРеквизитов.Добавить("ПорядокУчетаБУ");
			КонецЕсли; 
			
			Если Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
				СписокРеквизитов.Добавить("ПорядокУчетаУУ");
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли;
		
		Если Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется") Тогда
			Объект.ЦелевоеФинансирование.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ВключитьАмортизационнуюПремиюВСоставРасходов") <> Неопределено Тогда
		Если Объект.ВключитьАмортизационнуюПремиюВСоставРасходов Тогда
			
			Если Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ТретьяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ЧетвертаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ПятаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ШестаяГруппа")
				ИЛИ Объект.АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.СедьмаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 30;
			ИначеЕсли Объект.АмортизационнаяГруппа <> ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа") Тогда
				Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 10;
			КонецЕсли;
			
		Иначе
			Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0;
		КонецЕсли;
		СписокРеквизитов.Добавить("ПроцентКапитальныхВложенийВключаемыхВРасходыНУ");
	КонецЕсли; 
	
	Если СписокРеквизитов.Найти("Дата") <> Неопределено
		ИЛИ СписокРеквизитов.Найти("Организация") <> Неопределено Тогда
		
		Если ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена") Тогда
			
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества");
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		ИначеЕсли НЕ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы
			И Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества") Тогда
			
			Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена") Тогда
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
			Иначе
				Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			КонецЕсли; 
			
			СписокРеквизитов.Добавить("ПорядокУчетаНУ");
			
		КонецЕсли; 
	КонецЕсли;
	
	Если СписокРеквизитов.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга");
			СписокРеквизитов.Добавить("СпособПоступления");
		ИначеЕсли Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга") Тогда
			Объект.СпособПоступления = ПредопределенноеЗначение("Перечисление.СпособыПоступленияАктивов.ПриобретениеЗаПлату");
			СписокРеквизитов.Добавить("СпособПоступления");
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Функция ПрименяетсяФактическаяСтоимость(Объект) Экспорт

	Результат = Ложь;
	
	//++ Локализация
	Результат =
		Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
		ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена");
	
	//-- Локализация

	Возврат Результат;
	
КонецФункции
 
#КонецОбласти
