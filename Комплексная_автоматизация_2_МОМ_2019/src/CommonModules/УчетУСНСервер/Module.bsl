
#Область ПрограммныйИнтерфейс

// Процедура формирования движений по регистру "КУДиР".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДоходКУДиР(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаКУДиР = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКнигаУчетаДоходовИРасходов;
	
	Если Отказ ИЛИ ТаблицаКУДиР.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.КнигаУчетаДоходовИРасходов;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаКУДиР);
	
КонецПроцедуры 

// Процедура формирования движений по регистру "РасходыПриУСН".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьПрочиеРасходыПриУСН(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаРасходыПриУСН = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасходыПриУСН;
	
	Если Отказ ИЛИ ТаблицаРасходыПриУСН.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.РасходыПриУСН;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаРасходыПриУСН);
	
КонецПроцедуры

// Процедура формирования движений по регистру "РасходыПриУСНМатериалы".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьРасходыПриУСНМатериалы(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаРасходыПриУСН= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасходыПриУСНМатериалы;
	
	Если Отказ ИЛИ ТаблицаРасходыПриУСН.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.РасходыПриУСНМатериалы;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаРасходыПриУСН);
	
КонецПроцедуры

// Процедура формирования движений по регистру "РасходыПриУСНТовары".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьРасходыПриУСНТовары(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаРасходыПриУСН= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасходыПриУСНТовары;
	
	Если Отказ ИЛИ ТаблицаРасходыПриУСН.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.РасходыПриУСНТовары;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаРасходыПриУСН);
	
КонецПроцедуры

// Процедура формирования движений по регистру "РасходыПриУСНОСиНМА".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьРасходыПриУСНОСиНМА(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаРасходыПриУСН= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРасходыПриУСНОСиНМА;
	
	Если Отказ ИЛИ ТаблицаРасходыПриУСН.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.РасходыПриУСНОСиНМА;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаРасходыПриУСН);
	
КонецПроцедуры

// Процедура формирования движений по регистру "КУДиР Раздел 2".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьРаздел2КУДиР(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаКУДиР = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКнигаУчетаДоходовИРасходовРаздел2;
	
	Если Отказ ИЛИ ТаблицаКУДиР.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.КнигаУчетаДоходовИРасходовРаздел2;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаКУДиР);	
	
КонецПроцедуры

// Функция возвращает структура параметров первичного документа
//
// Возвращаемое значение:
//	Структура:
//		- НомерВходящегоДокумента - строка, номер указанный в документе пользователем;
//		- Номер - строка, номер заданный системой при вводе документа;
//		- ДатаВходящегоДокумента - дата, дата указанная в документе пользователем;
//		- Дата - ДатаИВремя - дата и время, заданное системой при вводе документа.
//
Функция ПараметрыПервичногоДокумента() Экспорт
	
	ПараметрыПервичногоДокумента = Новый Структура;
	ПараметрыПервичногоДокумента.Вставить("НомерВходящегоДокумента", "");
	ПараметрыПервичногоДокумента.Вставить("Номер", "");
	ПараметрыПервичногоДокумента.Вставить("ДатаВходящегоДокумента", Дата(1,1,1));
	ПараметрыПервичногоДокумента.Вставить("Дата", Дата(1,1,1));
	Возврат ПараметрыПервичногоДокумента;
	
КонецФункции

// Процедура формирует движения по регистру "КУДиР", при выполнении регламентной операции "РасчетТранспортногоНалога",
// вызывается из модуля объекта документа "РегламентнаяОперация".
//
// Параметры:
//	ТаблицаПлатон - ТаблицаЗначений - таблица расходов по Платону
//		(см. функцию РасчетИмущественныхНалоговПереопределяемый.ТаблицыРасчетНалога);
//	Реквизиты  - ТаблицаЗначений - таблица реквизитов
//		(см. функцию РегламентнаяОперация.ТекстЗапросаРасчетИмущественныхНалогов);
//	ДокументОбъект - ДокументОбъект.РегламентнаяОперация - проводимый документ регламентной операции,
//		в рамках которой выполняется отражение расходов в УСН;
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура СформироватьДвиженияОтражениеРасходовПоИмущественнымНалогам(ТаблицаПлатон, Реквизиты, ДокументОбъект, Отказ) Экспорт

	Если Реквизиты.Количество() = 0 Тогда
		Возврат;
	Иначе
		Реквизиты = Реквизиты[0];
	КонецЕсли;
	
	Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаПлатон.Количество() > 0 Тогда
	
		ДокументОбъект.Движения.КнигаУчетаДоходовИРасходов.Записывать = Истина;
	
		Для Каждого СтрокаТаблицы Из ТаблицаПлатон Цикл
			
			Если СтрокаТаблицы.СуммаНУДт = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ШаблонСодержания = НСтр("ru = 'Признаны в расходах НУ платежи в систему ""Платон"" по транспортному средству ""%1""'");
			Содержание = СтрШаблон(ШаблонСодержания, СтрокаТаблицы.ОсновноеСредство);
			
			ЗаписьКУДиР = ДокументОбъект.Движения.КнигаУчетаДоходовИРасходов.Добавить();
			
			ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, Реквизиты);
			
			ЗаписьКУДиР.Активность = Истина;
			ЗаписьКУДиР.Содержание = Содержание;
			ЗаписьКУДиР.ДокументВозникновенияДоходовРасходов = Реквизиты.Регистратор;
			ЗаписьКУДиР.РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента(Реквизиты.Регистратор);
			ЗаписьКУДиР.Графа6 = СтрокаТаблицы.СуммаНУДт;
			ЗаписьКУДиР.Графа7 = СтрокаТаблицы.СуммаНУДт;
			
		КонецЦикла;
	
	КонецЕсли;

КонецПроцедуры

// Возвращает реквизиты первичного документа для занесения в графу 2 КУДиР.
//	Параметры:
//		Документ - ДокументОбъект - документ, для которого делаются движения КУДиР;
//		ТЧ - ТабличнаяЧасть объекта - табличная часть, где содержатся данные о номере и дате первичного документа;
//		Строка - Число - номер строки табличной части документа, где содержатся данные о номере и дате первичного документа;
//		УказыватьВид - Булево - признак необходимости указывать в результате синоним документа (например "Реализация товаров и услуг №1 от 01.01.2001").
//			Значение по умолчанию - Ложь;
//
//	Возвращаемое значение:
//		Строка - строка вида "Реализация товаров и услуг №1 от 01.01.2001" или "№1 от 01.01.2001", в зависимости от признака УказыватьВид.
//
Функция РеквизитыПервичногоДокумента(Документ, Параметры = Неопределено, УказыватьВид = Ложь) Экспорт
	
	// Если номера и даты не заполнены - значит нам по ссылке необходимо получить полные реквизиты документа,
	//	для этого обратимся к регистру сведений "ДанныеПервичныхДокументов":
	Если Параметры = Неопределено Тогда
		
		Параметры = ПараметрыПервичногоДокумента();
			
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеПервичныхДокументов.Номер КАК НомерВходящегоДокумента,
		               |	ДанныеПервичныхДокументов.Дата КАК ДатаВходящегоДокумента,
		               |	ДанныеПервичныхДокументов.ДатаРегистратора КАК Дата,
		               |	ДанныеПервичныхДокументов.НомерРегистратора КАК Номер
		               |ИЗ
		               |	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		               |ГДЕ
		               |	ДанныеПервичныхДокументов.Документ = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Документ);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Параметры, Результат);
		Иначе
			ЗаполнитьЗначенияСвойств(Параметры, ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Номер, Дата"));
		КонецЕсли;
		
	КонецЕсли;
	
	// Если дата и номер первичного документа не указаны или не заполнены, используем дату и номер регистрации.
	НомерВходящегоДокумента = ?(ЗначениеЗаполнено(Параметры.НомерВходящегоДокумента), Параметры.НомерВходящегоДокумента,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Параметры.Номер, Истина, Истина));
	ДатаВходящегоДокумента = ?(ЗначениеЗаполнено(Параметры.ДатаВходящегоДокумента), Параметры.ДатаВходящегоДокумента,
		Параметры.Дата);
	
	ВидНаПечать	= ?(УказыватьВид, Строка(ТипЗнч(Документ)) + " " + НСтр("ru = 'от'") + " ", "");
	
	Возврат СтрШаблон(НСтр("ru = '%1%2, № %3'"), ВидНаПечать, Формат(ДатаВходящегоДокумента, "ДЛФ=D"), НомерВходящегоДокумента);
	
КонецФункции

Функция СодержаниеДохода(ХозяйственнаяОперация, ИнформацияОПлатеже = Неопределено, Контрагент = Неопределено, ТипДенежныхСредств = Неопределено) Экспорт
	
	Содержание = Строка(ХозяйственнаяОперация);
	
	МассивОперацийСКлиентом = Новый Массив;
	МассивОперацийСКлиентом.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	МассивОперацийСКлиентом.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
	МассивОперацийСКлиентом.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	
	НаименованиеКонтрагента = ?(ЗначениеЗаполнено(Контрагент), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "НаименованиеПолное"), "");
	
	Если ЗначениеЗаполнено(НаименованиеКонтрагента) И МассивОперацийСКлиентом.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		Если ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
			Содержание = НСтр("ru = 'Поступление безналичной оплаты от ""%1""'");
		ИначеЕсли ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
			Содержание = НСтр("ru = 'Поступление оплаты наличными от ""%1""'");
		Иначе
			Содержание = Содержание + " " + """%1""";
		КонецЕсли;
		Содержание = СтрШаблон(Содержание, НаименованиеКонтрагента);
	КонецЕсли;
	
	МассивОперацийВозвратаСКлиентом = Новый Массив;
	МассивОперацийВозвратаСКлиентом.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОперацийВозвратаСКлиентом.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	Если ЗначениеЗаполнено(НаименованиеКонтрагента) И МассивОперацийВозвратаСКлиентом.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		Если ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда
			Содержание = НСтр("ru = 'Возврат безналичной оплаты клиенту ""%1""'");
		ИначеЕсли ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда
			Содержание = НСтр("ru = 'Возврат оплаты наличными клиенту ""%1""'");
		Иначе
			Содержание = Содержание + " " + """%1""";
		КонецЕсли;
		Содержание = СтрШаблон(Содержание, НаименованиеКонтрагента);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Содержание) Тогда
		Содержание = Содержание + ".";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОПлатеже) Тогда
		Содержание = Содержание + Символы.ПС + ИнформацияОПлатеже;
	КонецЕсли;
	
	Возврат Содержание;
	
КонецФункции

Функция СторноКУДиРПоТекущимЗаписямДокумента(СторнируемыйДокумент, ДополнительныйОтбор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходов.Период КАК Период,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента КАК ДатаНомер,
	|	КнигаУчетаДоходовИРасходов.Содержание КАК Содержание,
	|	-КнигаУчетаДоходовИРасходов.Графа4 КАК Графа4,
	|	-КнигаУчетаДоходовИРасходов.Графа5 КАК Графа5,
	|	-КнигаУчетаДоходовИРасходов.Графа6 КАК Графа6,
	|	-КнигаУчетаДоходовИРасходов.Графа7 КАК Графа7,
	|	-КнигаУчетаДоходовИРасходов.НДС КАК НДС,
	|	-КнигаУчетаДоходовИРасходов.ДоходЕНВД КАК ДоходЕНВД,
	|	-КнигаУчетаДоходовИРасходов.РасходЕНВД КАК РасходЕНВД,
	|	КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходов.ВидРасходов КАК ВидРасходов,
	|	КнигаУчетаДоходовИРасходов.Статья КАК Статья,
	|	КнигаУчетаДоходовИРасходов.Партия КАК Партия
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Регистратор = &Документ";
	
	Запрос.УстановитьПараметр("Документ", СторнируемыйДокумент);
	
	Если ДополнительныйОтбор <> Неопределено Тогда
		МассивДобавляемыхСтрок = Новый Массив;
		МассивДобавляемыхСтрок.Добавить(Запрос.Текст);
		Для каждого ПараметрОтбора Из ДополнительныйОтбор Цикл
			МассивДобавляемыхСтрок.Добавить("КнигаУчетаДоходовИРасходов." + ПараметрОтбора.Ключ + " = &" + ПараметрОтбора.Ключ);
			Запрос.УстановитьПараметр(ПараметрОтбора.Ключ, ПараметрОтбора.Значение);
		КонецЦикла;
		Запрос.Текст = СтрСоединить(МассивДобавляемыхСтрок, Символы.ПС + Символы.Таб + "И ");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	МассивВозврата = Новый Массив;
	
	Если Не Результат.Пустой() Тогда
		
		МассивКолонок = Новый Массив;
		Для каждого Колонка Из Результат.Колонки Цикл
			МассивКолонок.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураЗаписи = Новый Структура(СтрСоединить(МассивКолонок, ","));
			ЗаполнитьЗначенияСвойств(СтруктураЗаписи, Выборка);
			МассивВозврата.Добавить(СтруктураЗаписи);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивВозврата;
	
КонецФункции

// Дата, с которой требуется формировать раздел V "Уплаченный торговый сбор" Книги учета доходов и расходов.
//
Функция ДатаНачалаФормирования5РазделаКУДиР() Экспорт
	
	// Приказ Минфина РФ от 07.12.2016 N 227н.
	Возврат Дата(2018, 1, 1);
	
КонецФункции

#Область АктуальностьДанныхУСН

// Возвращает периоды с которого для операций УСН закрытия месяца данные становятся неактуальными.
// Параметры
//	КонецРасчета - Дата - ищутся записи, сделанные раньше этой даты;
//	СписокОрганизаций - Массив - СправочникСсылка.Организации - ищутся записи, сделанные по переданным организациям;
//								Если значение не заполнено - отбор не учитывается.
// Возвращаемое значение:
//	Структура - содержащая даты начала расчета для каждой из операций УСН, если данные актуальные возвращает КонецРасчета + 1:
//		* НачалоРасчетаПризнаниеРасходовПриУСН - Дата - дата начала расчета, с которой данные по операции признания расходов становятся не актуальными;
//		* НачалоРасчетаСторноДоходовКУДиР - Дата - дата начала расчета, с которой данные по операции сторно записей КУДиР при ЕНВД становятся не актуальными;
//		* НачалоРасчетаНалогаУСН - Дата - дата начала расчета, с которой данные по операции расчета налога УСН становятся не актуальными.
//
Функция НачалоРасчетаОперацийПоУСН(КонецРасчета, СписокОрганизаций = Неопределено) Экспорт
	
	Если СписокОрганизаций = Неопределено Тогда
		СписокОрганизаций = Новый Массив;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизаций.Период КАК НачалоПериода,
	|	УчетнаяПолитикаОрганизаций.Организация КАК Организация,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСН,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы,
	|	МИНИМУМ(ЕстьNULL(УчетнаяПолитикаОрганизацийСледующиеПериоды.Период, ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1))) КАК КонецПериода
	|ПОМЕСТИТЬ ОрганизацииНаУСН
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизацийСледующиеПериоды
	|		ПО УчетнаяПолитикаОрганизаций.Период < УчетнаяПолитикаОрганизацийСледующиеПериоды.Период
	|			И УчетнаяПолитикаОрганизаций.Организация = УчетнаяПолитикаОрганизацийСледующиеПериоды.Организация
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.Период <= &КонецРасчета
	|	И (УчетнаяПолитикаОрганизаций.Организация В (&СписокОрганизаций)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И УчетнаяПолитикаОрганизаций.ПрименяетсяУСН
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетнаяПолитикаОрганизаций.Организация,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСН,
	|	УчетнаяПолитикаОрганизаций.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НачалоПериода,
	|	КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаданияКЗакрытиюМесяца.Месяц,
	|	ЗаданияКЗакрытиюМесяца.Операция
	|ПОМЕСТИТЬ НеЗаполненныеДатыРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияКЗакрытиюМесяца КАК ЗаданияКЗакрытиюМесяца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрганизацииНаУСН КАК УчетныеПолитикиОрганизаций
	|		ПО ЗаданияКЗакрытиюМесяца.Организация = УчетныеПолитикиОрганизаций.Организация
	|			И ЗаданияКЗакрытиюМесяца.Месяц >= УчетныеПолитикиОрганизаций.НачалоПериода
	|			И ЗаданияКЗакрытиюМесяца.Месяц < УчетныеПолитикиОрганизаций.КонецПериода
	|			И (ЗаданияКЗакрытиюМесяца.Операция В (ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН), ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиР), ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)))
	|ГДЕ
	|	(ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН)
	|				И УчетныеПолитикиОрганизаций.ПрименяетсяУСНДоходыМинусРасходы
	|			ИЛИ ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиР)
	|			ИЛИ ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)) 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаПризнаниеРасходовПриУСН,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиР)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаСторноДоходовКУДиР,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаНалогаУСН
	|ИЗ
	|	НеЗаполненныеДатыРасчета КАК НеЗаполненныеДатыРасчета";
	
	Запрос.УстановитьПараметр("КонецРасчета", КонецМесяца(КонецРасчета));
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(СписокОрганизаций));
	
	ЗаданияКРасчету = Запрос.Выполнить();
	ДатыНачалаРасчета = ЗаданияКРасчету.Выбрать();
	
	СтруктураВозврата = Новый Структура("НачалоРасчетаПризнаниеРасходовПриУСН, НачалоРасчетаСторноДоходовКУДиР, НачалоРасчетаНалогаУСН");
	
	Если ДатыНачалаРасчета.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ДатыНачалаРасчета);
	КонецЕсли;
	
	Для каждого НачалоРасчета Из СтруктураВозврата Цикл
		Если Не ЗначениеЗаполнено(НачалоРасчета.Значение) Тогда
			СтруктураВозврата.Вставить(НачалоРасчета.Ключ, КонецМесяца(КонецРасчета) + 1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Процедура вызывается из методов регламентных операций для записи в регистр сведений "ЗаданияКЗакрытиюМесяца"
//	данных о необходимости пересчета признания расходов (если изменяются организации с объектом налогообложения "Доходы минус расходы").
// Параметры:
//	Период - Дата - период пересчета;
//	СписокОрганизаций - Массив - СправочникСсылка.Организации - массив организаций, для которых запущена процедура пересчета.
//	ТолькоРасходы - Булево - Признак выборки подходящих организаций:
//		если Истина - будут выбираться организации на УСН, с объектом налогообложения "Доходы минус расходы",
//		если Ложь - будут выбираться организации на УСН вне зависимости от объекта налогообложения, значение по умолчанию - Истина;
//	КоличествоОбработанныхЭлементов - Число - Количество данных, обработанных данной процедурой (см. общий модуль "Производительность").
//
Процедура ОбновитьЗаданияКЗакрытиюМесяцаПриВыполненииРеглОперации(Период, СписокОрганизаций, ТолькоРасходы = Истина, КоличествоОбработанныхЭлементов = 0) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация,
	|	&Период,
	|	НЕОПРЕДЕЛЕНО КАК Документ
	|ПОМЕСТИТЬ КонтрольныеДанныеПоУСНДоходыМинусРасходы
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА &ТолькоДоходыМинусРасходы
	|						ТОГДА ПрименяетсяУСНДоходыМинусРасходы
	|					ИНАЧЕ ПрименяетсяУСН
	|				КОНЕЦ) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ТолькоДоходыМинусРасходы", ТолькоРасходы);
	
	Запрос.Выполнить();
	
	Операция = ?(ТолькоРасходы, Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН,
		Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиР);
	ОбновитьЗаданияКЗакрытиюМесяца(Запрос.МенеджерВременныхТаблиц, Операция, КоличествоОбработанныхЭлементов);
	
КонецПроцедуры

// Процедура записывает в регистр сведений "ЗаданияКЗакрытиюМесяца" данные о необходимости пересчета регл. операций по УСН,
// при отсутствии в регистре записей в этом периоде.
//	Параметры:
//		ВременнаяТаблица - МенеджерВременныхТаблиц - содержит таблицу:
//				* КонтрольныеДанныеПоУСНДоходыМинусРасходы - временная таблица с колонками:
//					** Организация - СправочникСсылка.Организации - организация для которой необходимо обновить данные пересчета;
//					** Документ - ДокументСсылка - документ, который вызвал необходимость обновления данных пересчета;
//					** Период - Дата - новая дата, на которую необходимо установить данные пересчета;
//					** Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - операция для которой устанавливаем новые данные пересчета;
//		Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - тип операции закрытия месяца, для которой происходит обновление
//					(в данном модуле актуален только для ПризнаниеРасходовПриУСН, РасчетНалогаУСН и СторноДоходовКУДиР);
//		КоличествоОбработанныхЭлементов - Число - Количество данных, обработанных данной процедурой (см. общий модуль "Производительность").
//
Процедура ОбновитьЗаданияКЗакрытиюМесяца(ВременнаяТаблица, Операция, КоличествоОбработанныхЭлементов = 0) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Операция", Операция);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблица;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация КАК Организация,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Документ КАК Документ,
	|	НАЧАЛОПЕРИОДА(КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период, МЕСЯЦ) КАК Месяц,
	|	&Операция КАК Операция
	|ИЗ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы КАК КонтрольныеДанныеПоУСНДоходыМинусРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Константы.ИспользоватьРеглУчет
	|			И НАЧАЛОПЕРИОДА(КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период, МЕСЯЦ) >= Константы.ДатаНачалаВеденияРеглУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКЗакрытиюМесяца КАК ЗаданияКЗакрытиюМесяца
	|		ПО КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация = ЗаданияКЗакрытиюМесяца.Организация
	|			И (ЗаданияКЗакрытиюМесяца.Операция = &Операция)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Документ,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период
	|
	|ИМЕЮЩИЕ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период < МИНИМУМ(ЕСТЬNULL(ЗаданияКЗакрытиюМесяца.Месяц, ДАТАВРЕМЯ(2099, 1, 1)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтрольныеДанныеПоУСНДоходыМинусРасходы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
		НаборЗаписей.НомерЗадания = ЗакрытиеМесяцаСервер.ТекущийНомерЗадания();
		НаборЗаписей.Записать();
		КоличествоОбработанныхЭлементов = КоличествоОбработанныхЭлементов + 1;
	КонецЦикла;
КонецПроцедуры

// Возвращает признак записи движений по регистру механизмом признания расходов.
//
// Параметры:
//	НаборЗаписей - НаборЗаписей - набор записей регистра.
//
// Возвращаемое значение:
//	Булево - Истина, если движения записываются регламентной операцией признания расходов.
//
Функция ДвиженияЗаписываютсяПризнаниемРасходов(НаборЗаписей) Экспорт
	
	Возврат НаборЗаписей.ДополнительныеСвойства.Свойство(ИмяСлужебногоДополнительногоСвойстваОбъекта());
	
КонецФункции

// Дополняет временные таблицы для проведения, таблицей ВТДанныеПоОрганизациямНаУСНДоходыМинусРасходы, где содержатся
// данные по организациям
//	на УСН доходы минус расходы. Поля временной таблицы:
//		Организация - СправочникСсылка.Организации - организация, которая находится по данным учетной политики на УСН доходы минус расходы;
//		НачалоПериода - Дата - Дата начала действия соответствующей учетной политики организации;
//		КонецПериода - Дата - Дата окончания действия соответствующей учетной политики организации.
//	Используется при актуализации данных по признанию расходов в целях УСН, см. ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра.
//
//	Параметры:
//		МенеджерВременныхТаблиц - менеджер временных таблиц.
//
Процедура ДополнитьМенеджерВременныхТаблицДаннымиПоОрганизациямНаУСНДоходыМинусРасходы(МенеджерВременныхТаблиц) Экспорт
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТДанныеПоОрганизациямНаУСНДоходыМинусРасходы") <> Неопределено Тогда
		// Требуемая временная таблица уже создана.
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОрганизацииНаУСНДоходыМинусРасходы.Организация КАК Организация,
	|	ОрганизацииНаУСНДоходыМинусРасходы.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ОстальныеОрганизации.Период, ДАТАВРЕМЯ(2120, 1, 1))) КАК КонецПериода
	|ПОМЕСТИТЬ ВТДанныеПоОрганизациямНаУСНДоходыМинусРасходы
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОрганизацииНаУСНДоходыМинусРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОстальныеОрганизации
	|		ПО ОрганизацииНаУСНДоходыМинусРасходы.Организация = ОстальныеОрганизации.Организация
	|			И ОрганизацииНаУСНДоходыМинусРасходы.Период < ОстальныеОрганизации.Период
	|			И (НЕ ОстальныеОрганизации.ПрименяетсяУСНДоходыМинусРасходы)
	|ГДЕ
	|	ОрганизацииНаУСНДоходыМинусРасходы.ПрименяетсяУСНДоходыМинусРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ОрганизацииНаУСНДоходыМинусРасходы.Организация,
	|	ОрганизацииНаУСНДоходыМинусРасходы.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция вызывается из набора записей регистра накопления для записи в регистр сведений "ЗаданияКЗакрытиюМесяца"
//	данных о необходимости пересчета признания расходов (если в данных регистра есть организации с объектом налогообложения "Доходы минус расходы").
// Параметры:
//	ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий - Строка - имя временной таблицы, куда помещать данные для записи в регистр заданий,
//		если не задана - временная таблица не создается, считается, что текст запроса создается для последующего его объединения;
// Возвращаемое значение:
//	Строка - текст запроса, для последующего его обработку в модуле менеджера набора записей регистра. Запрос содержит в себе:
//	1) проверки по умолчанию: Организация находится на УСН с объектом налогообложения доходы минус расходы;
//	2) дополнительные условия для проверки, свойственные тому регистру, из модуля которого вызвана текущая функция.
//
Функция ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра(ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий = "") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) КАК Месяц,
	|	ТаблицаИзменений.Регистратор КАК Документ,
	|	ТаблицаИзменений.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН) КАК Операция
	|//СозданиеВременнойТаблицы
	|ИЗ
	|	#ТаблицаИзмененийРегистра КАК ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Константы.ИспользоватьРеглУчет
	|			И НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) >= Константы.ДатаНачалаВеденияРеглУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПоОрганизациямНаУСНДоходыМинусРасходы КАК ОрганизацииНаУСНДоходыМинусРасходы
	|		ПО (ОрганизацииНаУСНДоходыМинусРасходы.Организация = ТаблицаИзменений.Организация)
	|			И (ТаблицаИзменений.Период >= ОрганизацииНаУСНДоходыМинусРасходы.НачалоПериода)
	|			И (ТаблицаИзменений.Период < ОрганизацииНаУСНДоходыМинусРасходы.КонецПериода)
	|ГДЕ
	|	НЕ ОрганизацииНаУСНДоходыМинусРасходы.Организация ЕСТЬ NULL
	|	И &ДополнительныеУсловия";
	
	ТекстСозданияВТ = ?(ЗначениеЗаполнено(ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий), "ПОМЕСТИТЬ " + ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий, "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СозданиеВременнойТаблицы", ТекстСозданияВТ);
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецОбласти

#Область НалоговыйПериод

// Определяет, что не требуется сдавать отчетность и уплачивать налог за переданный период (год)
// по причине регистрации организации в декабре этого года (п. 2 статьи 55 НК РФ).
//
// Параметры:
//  Организация   	- СправочникСсылка.Организации - проверяемая организация
//  Период        	- Дата - проверяемый период
//	ДатаРегистрации - Дата - дата регистрации организации.
//
// Возвращаемое значение:
//   Булево   - Если ИСТИНА, это пропущенный период
//              (организация зарегистрирована в декабре переданного года, и для нее актуальны требования п.2 статьи 55
//              НК РФ).
//
Функция НалоговыйПериодПропущен(Организация, Период, ДатаРегистрации = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) ИЛИ НЕ ЗначениеЗаполнено(Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПропущенныйПериод = ИнтерфейсыВзаимодействияБРО.ПропущенныйНалоговыйПериод(
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре,
		Организация,
		ДатаРегистрации);
	
	Возврат ПропущенныйПериод <> Неопределено И (Год(ПропущенныйПериод) = Год(Период));
	
КонецФункции

// Определяет, что переданный период находится в пределах расширенного первого налогового периода -
// с даты регистрации в декабре по конец следующего года после регистрации (п. 2 статьи 55 НК РФ).
//
// Параметры:
//  Организация   	- СправочникСсылка.Организации - проверяемая организация
//  Период        	- Дата - проверяемый период (в пределах расширенного налогового периода)
//	ДатаРегистрации - Дата - дата регистрации организации.
//
// Возвращаемое значение:
//   Булево   - Если ИСТИНА, это расширенный период
//             (организация зарегистрирована в декабре переданного или прошлого года,
//              и для нее актуальны требования п.2 статьи 55 НК РФ).
//
Функция НалоговыйПериодРасширен(Организация, Период, ДатаРегистрации = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) ИЛИ НЕ ЗначениеЗаполнено(Период) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НалоговыйПериод = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(Организация,
		Период, Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре, , ДатаРегистрации);
	
	Возврат НалоговыйПериод.Начало < НалоговыйПериод.Период;
	
КонецФункции

#КонецОбласти

// Описывает контекст, в котором выполняется расчет налога УСН - организацию, период и т.п.
//
// Параметры:
//  Организация      - СправочникСсылка.Организации - налогоплательщик.
//  ПериодРасчета    - Дата - дата из последнего квартала отчетного периода, за который рассчитывается налог.
//
// Возвращаемое значение:
//  Структура    - состав см. в теле функции
//  Неопределено - расчет не имеет смысла: в указанный период организация еще не зарегистрирована, или не применяет УСН,
//                 или же налог в данном периоде не исчисляется в силу п. 2 статьи 55 НК РФ.
//
Функция НовыйКонтекстРасчетаНалога(Организация, ПериодРасчета) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КонецОтчетногоПериода = КонецКвартала(ПериодРасчета);
	
	Если НЕ УчетнаяПолитика.ПрименяетсяУСН(Организация, КонецОтчетногоПериода) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДатаРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ДатаРегистрации");
	
	НалоговыйПериод = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(Организация,
		КонецОтчетногоПериода,
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре, ,
		ДатаРегистрации);
		
	Если КонецОтчетногоПериода < НалоговыйПериод.Начало
		ИЛИ НалоговыйПериодПропущен(Организация, КонецОтчетногоПериода, ДатаРегистрации) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КонтекстРасчета = Новый Структура;
	
	КонтекстРасчета.Вставить("Организация", Организация);
	КонтекстРасчета.Вставить("Период",      ПериодРасчета);
	
	КонтекстРасчета.Вставить("НачалоНалоговогоПериода", НалоговыйПериод.Начало);
	КонтекстРасчета.Вставить("КонецОтчетногоПериода",   КонецОтчетногоПериода);
	КонтекстРасчета.Вставить("НачалоГода",              НалоговыйПериод.Период);
	
	// Если организация зарегистрирована в текущем году, не имеет смысла рассчитывать налог с начала года.
	НачалоПериодаРасчета = Макс(НалоговыйПериод.Период, НалоговыйПериод.Начало);
	
	ЭтоПервыйОтчетныйПериод      = НачалоКвартала(КонецОтчетногоПериода) = НачалоКвартала(НачалоПериодаРасчета);
	ЭтоЗавершающийОтчетныйПериод = КонецОтчетногоПериода = КонецКвартала(НалоговыйПериод.Конец);
	
	КонтекстРасчета.Вставить("ЭтоПервыйОтчетныйПериод",      ЭтоПервыйОтчетныйПериод);
	КонтекстРасчета.Вставить("ЭтоЗавершающийОтчетныйПериод", ЭтоЗавершающийОтчетныйПериод);
	
	КонтекстРасчета.Вставить("ПрименяетсяУСНДоходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, КонецОтчетногоПериода));
	КонтекстРасчета.Вставить("ПрименяетсяУСНДоходыМинусРасходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, КонецОтчетногоПериода));
	КонтекстРасчета.Вставить("СтавкаНалогаУСН",
		УчетнаяПолитика.СтавкаНалогаУСН(Организация, КонецОтчетногоПериода));
	
	// Необходимо учесть, что торговый сбор в 1 квартале уплачивается за квартал, относящийся к предыдущему налоговому периоду.
	КонтекстРасчета.Вставить("ПлательщикТорговогоСбораЗаПериод",
		УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(
			Организация,
			НачалоГода(ДобавитьМесяц(КонецОтчетногоПериода, -3)),
			КонецОтчетногоПериода));
	
	Возврат КонтекстРасчета;
	
КонецФункции

// Описывает контекст выполнения ежеквартальных регламентных операций для УСН с объектом "доходы-расходы":
// организацию, период и т.п.
//
// Параметры:
//  Организация      - СправочникСсылка.Организации - налогоплательщик.
//  Период           - Дата - дата из квартала, в котором выполняется регламентная операция.
//
// Возвращаемое значение:
//  Структура    - состав см. в теле функции
//  Неопределено - расчет не имеет смысла: в указанный период организация еще не зарегистрирована,
//                 или не применяет УСН с объектом "доходы минус расходы",
//                 или же переданный квартал не является завершенным отчетным/налоговым периодом в силу п. 2 статьи 55
//                 НК РФ.
//
Функция НовыйКонтекстРегламентнойОперации(Организация, Период) Экспорт
	
	КонецПериода = КонецКвартала(Период);
	
	Если НЕ УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, КонецПериода) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДатаРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ДатаРегистрации");
	
	НалоговыйПериод = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(Организация,
		КонецПериода,
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре, ,
		ДатаРегистрации);
		
	Если КонецПериода < НалоговыйПериод.Начало
		ИЛИ НалоговыйПериодПропущен(Организация, КонецПериода, ДатаРегистрации) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НачалоПериода = НачалоКвартала(Период);
	Если НачалоГода(Период) = НачалоКвартала(Период) Тогда
		// Операции первого квартала выполняются с начала налогового периода.
		// Начало налогового периода и начало квартала могут не совпадать - см.ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод().
		НачалоПериода = Мин(НачалоПериода, НалоговыйПериод.Начало);
	КонецЕсли;
	
	КонтекстОперации = Новый Структура;
	
	КонтекстОперации.Вставить("Организация",   Организация);
	КонтекстОперации.Вставить("Период",        Период);
	КонтекстОперации.Вставить("НачалоПериода", НачалоПериода);
	КонтекстОперации.Вставить("КонецПериода",  КонецПериода);
	
	Возврат КонтекстОперации;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ДополнитьПараметрамиПоУмолчанию(Параметры) Экспорт
	
	Если Параметры.Свойство("ТипОперации") И Параметры.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН Тогда
		Параметры.Вставить("ВалютаРегл", ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
		Параметры.Вставить("СчетаМатериалов", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
		Параметры.Вставить("ИсключающиесяХозОперацииПрочиеРасходы", ИсключающиесяХозОперацииВПрочихРасходах());
		Параметры.Вставить("ИсключающиесяХозОперацииСебестоимости", ИсключающиесяХозОперацииВСебестоимости());
		Параметры.Вставить("ИсключающиесяРегистраторыСебестоимости", ИсключающиесяРегистраторыСебестоимости());
		Параметры.Вставить("ИсключающиесяДокументыПоступленияСебестоимости", ИсключающиесяДокументыПоступленияСебестоимости());
		Параметры.Вставить("ИсключающиесяДокументыПартийСебестоимости", ИсключающиесяДокументыПартийСебестоимости());
		Параметры.Вставить("ХозОперацииСписанияТоваров", ХозОперацииСписанияТоваров());
		Параметры.Вставить("ХозОперацииСписанияМатериалов", ХозОперацииСписанияМатериалов());
		Параметры.Вставить("ХозОперацииСписанияОСНМА", ХозОперацииСписанияОСНМА());
		Параметры.Вставить("СтатьиЗарплатыИНалогов", СтатьиЗарплатыИНалогов());
		Параметры.Вставить("ТипыНалоговНДФЛ", ТипыНалоговНДФЛ());
		ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы = ?(Параметры.Свойство("Организация") И Параметры.Свойство("НачДата"),
			ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы(Параметры.Организация, Параметры.НачДата), '00010101');
		НачДата = ?(Параметры.Свойство("НачДата"), Параметры.НачДата, ТекущаяДатаСеанса());
		ДатаНачалаАнализаОплатыНалогов = Макс(ДобавитьМесяц(НачДата, -12),
			Константы.ДатаНачалаВеденияРеглУчета.Получить(), ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы);
		Параметры.Вставить("ДатаНачалаАнализаОплатыНалогов", ДатаНачалаАнализаОплатыНалогов);
	Иначе
		Параметры.Вставить("НачДатаАнализаОРП", Макс(ДобавитьМесяц(Параметры.НачДата, -3), Константы.ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах.Получить()));
	КонецЕсли;
	Если Не Параметры.Свойство("НачГраница") И Параметры.Свойство("НачДата") Тогда
		Параметры.Вставить("НачГраница", Параметры.НачДата);
	КонецЕсли;
	Если Не Параметры.Свойство("КонГраница") И Параметры.Свойство("КонДата") Тогда
		Параметры.Вставить("КонГраница", Параметры.КонДата);
	КонецЕсли;
	
КонецПроцедуры

// Очищает движения служебных регистров УСН за указанный период по указанной организации.
//	Параметры:
//		ПараметрыЗапроса - Структура - содержит:
//			* НачалоПериода - дата - начало периода, в рамках которого будут очищаться движения регистров;
//			* КонецПериода - дата - конец периода, в рамках которого будут очищаться движения регистров;
//			* Организация - СправочникСсылка.Организации  - будут очищаться движения только для данной организации;
//			* ТипОперации - ПеречислениеСсылка.ТипыРегламентныхОпераций - в зависимости от переданной операции очищает либо движения по всем регистрам, либо только по КУДиР со сторно ЕНВД.
//
Процедура ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(ПараметрыЗапроса, КоличествоОбработанныхДанных = 0) Экспорт
	
	#Область ЗапросКУдаляемымРегистраторам
	
	МассивРегистровДляОчистки = Новый Массив;
	Если ПараметрыЗапроса.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН Тогда
		МассивРегистровДляОчистки.Добавить("РасходыПриУСН");
		МассивРегистровДляОчистки.Добавить("РасходыПриУСНМатериалы");
		МассивРегистровДляОчистки.Добавить("РасходыПриУСНОСиНМА");
		МассивРегистровДляОчистки.Добавить("РасходыПриУСНТовары");
	КонецЕсли;
	МассивРегистровДляОчистки.Добавить("КнигаУчетаДоходовИРасходов");
	
	СтруктураДополнительныхУсловийНаРегистр = Новый Структура;
	СтруктураДополнительныхУсловийНаРегистр.Вставить("КнигаУчетаДоходовИРасходов");
	МассивДополнительныхУсловий = Новый Массив;
	Если ПараметрыЗапроса.ТипОперации.Пустая() Тогда
		// Если пустой тип операции - отменяем движения операции сторнирования, поэтому поставим условие на сторнирование:
		МассивДополнительныхУсловий.Добавить("ТаблицаДляОчистки.Графа5 < 0");
		Если ПараметрыЗапроса.НачДата >= Константы.ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах.Получить() Тогда
			МассивДополнительныхУсловий.Добавить("ТаблицаДляОчистки.Регистратор <> ТаблицаДляОчистки.ДокументВозникновенияДоходовРасходов");
		Иначе
			// С отрицательным доходом делают движения возврат оплаты клиенту, поставим условие чтобы они не попадали в выборку:
			МассивДополнительныхУсловий.Добавить("Не ТаблицаДляОчистки.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств");
			МассивДополнительныхУсловий.Добавить("Не ТаблицаДляОчистки.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер");
		КонецЕсли;
	Иначе
		// Если тип операции - признание расходов, то ограничение только на то, что это расход.
		МассивДополнительныхУсловий.Добавить("(ТаблицаДляОчистки.Графа6 <> 0 ИЛИ ТаблицаДляОчистки.Графа7 <> 0)");
	КонецЕсли;
	МассивДополнительныхУсловий.Добавить("Не ТаблицаДляОчистки.Регистратор ССЫЛКА Документ.ЗаписьКУДиР");
	СтруктураДополнительныхУсловийНаРегистр.КнигаУчетаДоходовИРасходов = МассивДополнительныхУсловий;
	
	ОтступДополнительногоУсловияКРегистру = Символы.ПС + Символы.Таб + "И ";
	
	Запрос = ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, Новый МенеджерВременныхТаблиц);
	
	ШаблонЗапросаКРегистру = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДляОчистки.Регистратор,
	|	""%ИмяРегистра"" КАК ВидРегистра
	|	%СтрокаСозданияВиртуальнойТаблицы
	|ИЗ
	|	РегистрНакопления.%ИмяРегистра КАК ТаблицаДляОчистки
	|ГДЕ
	|	ТаблицаДляОчистки.Период >= &НачДата
	|	И ТаблицаДляОчистки.Период <= &КонДата
	|	И ТаблицаДляОчистки.Организация = &Организация
	|	И НЕ ТИПЗНАЧЕНИЯ(ТаблицаДляОчистки.Регистратор) = ТИП(Документ.КорректировкаРегистров)
	|	И НЕ (ТИПЗНАЧЕНИЯ(ТаблицаДляОчистки.Регистратор) = ТИП(Документ.ВводОстатков)
	|		И ТаблицаДляОчистки.ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент)";
	
	Для каждого РегистрДляОчистки Из МассивРегистровДляОчистки Цикл
		ТекстЗапросаКРегистру = ШаблонЗапросаКРегистру;
		СтрокаСозданияВиртуальнойТаблицы = ?(МассивРегистровДляОчистки.Получить(0) = РегистрДляОчистки, "ПОМЕСТИТЬ УдаляемыеРегистраторы", "");
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%СтрокаСозданияВиртуальнойТаблицы", СтрокаСозданияВиртуальнойТаблицы);
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%ИмяРегистра", РегистрДляОчистки);
		Если РегистрДляОчистки = "КнигаУчетаДоходовИРасходов" Тогда
			ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "ДокументВозникновенияРасходов", "ДокументВозникновенияДоходовРасходов");
		КонецЕсли;
		МассивДопУсловий = Неопределено;
		Если СтруктураДополнительныхУсловийНаРегистр.Свойство(РегистрДляОчистки, МассивДопУсловий) Тогда
			Для каждого ДополнительноеУсловие Из МассивДопУсловий Цикл
				ТекстЗапросаКРегистру = ТекстЗапросаКРегистру + ОтступДополнительногоУсловияКРегистру + ДополнительноеУсловие;
			КонецЦикла;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ?(Запрос.Текст = "", "", ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()) + ТекстЗапросаКРегистру;
	КонецЦикла;
	
	#КонецОбласти
	
	#Область НеудаляемыеДвиженияДокументов
	
	ШаблонЗапросаКРегистру = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНеудаляемыхЗаписей.*
	|ИЗ
	|	УдаляемыеРегистраторы КАК УдаляемыеРегистраторы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.%ИмяРегистра КАК ТаблицаНеудаляемыхЗаписей
	|		ПО УдаляемыеРегистраторы.Регистратор = ТаблицаНеудаляемыхЗаписей.Регистратор
	|			И УдаляемыеРегистраторы.ВидРегистра = ""%ИмяРегистра""
	|ГДЕ
	|	&НачДата > ТаблицаНеудаляемыхЗаписей.Период
	|		ИЛИ &КонДата < ТаблицаНеудаляемыхЗаписей.Период
	|		ИЛИ ТаблицаНеудаляемыхЗаписей.Организация <> &Организация
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНеудаляемыхЗаписей.Регистратор";
	
	Для каждого РегистрДляОчистки Из МассивРегистровДляОчистки Цикл
		
		Если РегистрДляОчистки = "КнигаУчетаДоходовИРасходов" Тогда
			// Для книги учета доходов и расходов мы должны оставить записи сделанные только в качестве доходов.
			ТекстЗапросаКРегистру =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаписиДоходов.Период КАК Период,
			|	ЗаписиДоходов.Регистратор КАК Регистратор,
			|	ЗаписиДоходов.НомерСтроки КАК НомерСтроки,
			|	ЗаписиДоходов.Активность КАК Активность,
			|	ЗаписиДоходов.Организация КАК Организация,
			|	ЗаписиДоходов.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
			|	ЗаписиДоходов.ВидРасходов КАК ВидРасходов,
			|	ЗаписиДоходов.Статья КАК Статья,
			|	ЗаписиДоходов.Графа4 КАК Графа4,
			|	ЗаписиДоходов.Графа5 КАК Графа5,
			|	ЗаписиДоходов.Графа6 КАК Графа6,
			|	ЗаписиДоходов.Графа7 КАК Графа7,
			|	ЗаписиДоходов.НДС КАК НДС,
			|	ЗаписиДоходов.ДоходЕНВД КАК ДоходЕНВД,
			|	ЗаписиДоходов.РасходЕНВД КАК РасходЕНВД,
			|	ЗаписиДоходов.Содержание КАК Содержание,
			|	ЗаписиДоходов.РеквизитыПервичногоДокумента КАК РеквизитыПервичногоДокумента,
			|	ЗаписиДоходов.Партия КАК Партия
			|ИЗ
			|	УдаляемыеРегистраторы КАК УдаляемыеРегистраторы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК ЗаписиДоходов
			|		ПО УдаляемыеРегистраторы.Регистратор = ЗаписиДоходов.Регистратор
			|			И УдаляемыеРегистраторы.ВидРегистра = ""%ИмяРегистра""
			|ГДЕ
			|	&НачДата > ЗаписиДоходов.Период
			|		ИЛИ &КонДата < ЗаписиДоходов.Период
			|		ИЛИ ЗаписиДоходов.Организация <> &Организация
			|		ИЛИ &ДополнительноеУсловиеПоРегистру
			|
			|УПОРЯДОЧИТЬ ПО
			|	Регистратор";
			Если ПараметрыЗапроса.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН Тогда
				ДополнительноеУсловиеПоРегистру = "ЗаписиДоходов.Графа5 < 0";
			Иначе
				ДополнительноеУсловиеПоРегистру = "ЗаписиДоходов.Графа6 <> 0 ИЛИ ЗаписиДоходов.Графа7 <> 0";
				Если ПараметрыЗапроса.НачДата >= Константы.ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах.Получить() Тогда
					ДополнительноеУсловиеПоРегистру = ДополнительноеУсловиеПоРегистру + Символы.ПС + Символы.Таб + Символы.Таб +
						"ИЛИ ЗаписиДоходов.Регистратор = ЗаписиДоходов.ДокументВозникновенияДоходовРасходов";
				Иначе
					ДополнительноеУсловиеПоРегистру = ДополнительноеУсловиеПоРегистру + Символы.ПС + Символы.Таб + Символы.Таб +
						"ИЛИ ЗаписиДоходов.Графа5 > 0 ИЛИ ЗаписиДоходов.Графа5 = 0 И ЗаписиДоходов.ДоходЕНВД > 0";
				КонецЕсли;
			КонецЕсли;
			ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "&ДополнительноеУсловиеПоРегистру", ДополнительноеУсловиеПоРегистру);
		Иначе
			ТекстЗапросаКРегистру = ШаблонЗапросаКРегистру;
		КонецЕсли;
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%ИмяРегистра", РегистрДляОчистки);
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстЗапросаКРегистру;
		
	КонецЦикла;
	
	#КонецОбласти
	
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдаляемыеРегистраторы.Регистратор КАК Регистратор,
	|	УдаляемыеРегистраторы.ВидРегистра КАК ВидРегистра
	|ИЗ
	|	УдаляемыеРегистраторы КАК УдаляемыеРегистраторы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор
	|ИТОГИ ПО
	|	ВидРегистра";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаРегистраДляОчистки = Результат.Получить(МассивРегистровДляОчистки.Количество() + 1).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистраДляОчистки.Следующий() Цикл
		
		ВыборкаДанныхДляОчистки = ВыборкаРегистраДляОчистки.Выбрать();
		ИндексРегистраВМассиве = МассивРегистровДляОчистки.Найти(ВыборкаРегистраДляОчистки.ВидРегистра);
		ВыборкаСохраняемыхДанныхРегистра = Результат.Получить(ИндексРегистраВМассиве + 1).Выбрать();
		ЕстьСохраняемыеДанные = ВыборкаСохраняемыхДанныхРегистра.Следующий();
		
		Пока ВыборкаДанныхДляОчистки.Следующий() Цикл
		
			НаборЗаписей = РегистрыНакопления[ВыборкаДанныхДляОчистки.ВидРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДанныхДляОчистки.Регистратор);
			
			Пока ЕстьСохраняемыеДанные И ВыборкаСохраняемыхДанныхРегистра.Регистратор = ВыборкаДанныхДляОчистки.Регистратор Цикл
				СтрокаЗаписи = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаЗаписи, ВыборкаСохраняемыхДанныхРегистра);
				ЕстьСохраняемыеДанные = ВыборкаСохраняемыхДанныхРегистра.Следующий();
			КонецЦикла;
			
			НаборЗаписей.Записать();
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ПризнаниеРасходов

Функция ТекстЗапросаЗаполненияРасходов() Экспорт
	
	ЗапросыВременныхТаблиц = Новый Массив;
	
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОстатковПриСтаромМетодеХраненияДопРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОстатков());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОпределенияМатериалов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаСоответствияДокументовВозникновенияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПартийРеализацийБезПереходаПраваСобственности());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоСебестоимостиПредварительная());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоСебестоимости());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПрочихРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоЗарплатеИНалогам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоКредитамИЛизингу());
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатамНоваяАрхитектураРасчетов());
	Иначе
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатам());
	КонецЕсли;
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатамПодотчетникам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатамЗарплатыИНалогов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамВозникновенияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамСписанияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамОплатыРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаТаблицыРегистраторовРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаТаблицыНачальнойТаблицы());
	
	Возврат СтрСоединить(ЗапросыВременныхТаблиц, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

Функция ТекстЗапросаВыборкиДокументовДляЗаполненияРасходов() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРегистраторов.ДокументВозникновенияРасходов,
	|	ТаблицаРегистраторов.Партия,
	|	ТаблицаРегистраторов.Регистратор КАК Регистратор,
	|	ТаблицаРегистраторов.СуммаОплаты КАК СуммаОплаты,
	|	ТаблицаРегистраторов.СуммаОтгрузки,
	|	ТаблицаРегистраторов.ВидОперации,
	|	ТаблицаРегистраторов.ВидРасходов,
	|	ТаблицаРегистраторов.ЭлементРасходов,
	|	ТаблицаРегистраторов.СтатьяРасходов,
	|	ТаблицаРегистраторов.Период КАК Период,
	|	ТаблицаРегистраторов.ДатаОплаты КАК ДатаОплаты,
	|	ТаблицаРегистраторов.ХозяйственнаяОперация,
	|	ТаблицаРегистраторов.Организация,
	|	ТаблицаРегистраторов.НДС,
	|	ТаблицаРегистраторов.СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА 1
	|		КОГДА ТаблицаРегистраторов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|			ТОГДА 2
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|			ТОГДА 3
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПорядокВидаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН
	|				И ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 1
	|		КОГДА ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН
	|				И ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА 2
	|		КОГДА ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 3
	|		КОГДА ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА 4
	|		ИНАЧЕ 10
	|	КОНЕЦ КАК ПорядокСтатьиРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаРегистраторов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).РеквизитДопУпорядочивания, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДопПорядокСтатьиРасходов,
	|	ТаблицаРегистраторов.ВидДеятельности,
	|	ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.НомерРегистратора, ВЫРАЗИТЬ(ТаблицаРегистраторов.Регистратор КАК Документ.КорректировкаРегистров).Номер) КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ВЫРАЗИТЬ(ТаблицаРегистраторов.Регистратор КАК Документ.КорректировкаРегистров).Дата) КАК Дата,
	|	ЕСТЬNULL(Контрагенты.НаименованиеПолное, ТаблицаРегистраторов.Контрагент) КАК НаименованиеКонтрагента,
	|	ТаблицаРегистраторов.Договор КАК Договор
	|ИЗ
	|	ТаблицаРегистраторовРасходов КАК ТаблицаРегистраторов
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО ТаблицаРегистраторов.Регистратор = ДанныеПервичныхДокументов.Документ
	|		И ТаблицаРегистраторов.Организация = ДанныеПервичныхДокументов.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|	ПО Контрагенты.Ссылка = ТаблицаРегистраторов.Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ДатаОплаты,
	|	ПорядокВидаРасходов,
	|	ПорядокСтатьиРасходов,
	|	ДопПорядокСтатьиРасходов
	|ИТОГИ
	|	СРЕДНЕЕ(СуммаОплаты)
	|ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Процедура выполняет последовательно:
//	Признание расходов - см. метод ПризнатьРасходы;
//	Отражение расходов - см. метод ОтразитьРасходыКУДиР;
//
// Параметры:
//	Параметры - Структура:
//					НачалоПериода - Дата - дата, начиная с которой будут анализироваться данные инф. базы;
//					КонецПериода - Дата - дата, на конец которой будут анализироваться данные инф. базы;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные инф. базы;
//	АдресХранилища - строка.
Процедура ПризнатьИОтразитьРасходыКУДиР(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	
	НомерЗадания = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
	Операция = Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН;
	ОперацииДляВыполнения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН);	
	ПериодРегламентнойОперации = КонецМесяца(НачалоКвартала(Параметры.КонДата));
	
	Пока ПериодРегламентнойОперации <= Параметры.КонДата И Не Отказ Цикл
		
		ДанныеКПризнаниюРасходовЗаМесяц = ДанныеКРасчету(НомерЗадания, Операция, Параметры.Организация,
			НачалоМесяца(ПериодРегламентнойОперации), ПериодРегламентнойОперации, Отказ);	
			
		Если Не Отказ Тогда
			Документы.РегламентнаяОперация.РассчитатьРегламентныеОперации(
				ПериодРегламентнойОперации, ОперацииДляВыполнения, Параметры.Организация, Отказ);
		КонецЕсли;
		
		ЗафиксироватьРасчет(НомерЗадания, Операция, Параметры.Организация,
			Дата(1,1,1), ПериодРегламентнойОперации, ДанныеКПризнаниюРасходовЗаМесяц, Отказ);
		
		ПериодРегламентнойОперации = КонецМесяца(ПериодРегламентнойОперации + 1);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ВызватьИсключение(НСтр("ru = 'Признание расходов в книгу учета доходов и расходов не выполнено (см. журнал регистрации).'"));
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет анализ данных оперативных регистров и документов, все найденные расходы заносятся в
// соответствующие регистры УСН
//		с регистраторами, которые были регистраторами у оперативных регистров;
//
// Параметры:
//	ПараметрыРасчета - Структура, см. функцию ЗаполнитьСтруктуруШапкиДокумента менеджера документа "РегламентнаяОперация":
//					НачДата - Дата - дата, начиная с которой будут анализироваться данные инф. базы;
//					КонДата - Дата - дата, на конец которой будут анализироваться данные инф. базы;
//					НачГраница - Граница - граница, начиная с которой будут анализироваться данные инф. базы;
//					КонГраница - Граница - граница, на конец которой будут анализироваться данные инф. базы;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные инф. базы;
Процедура ПризнатьРасходы(ПараметрыРасчета, Движения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВходящиеДанные = ВходящиеДанныеПоОперации(Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН);
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, НСтр("ru = 'Признание расходов для целей УСН.'"));
	
	КлючеваяОперация = "УчетПоУСН.ПризнаниеРасходов";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	КоличествоОбработанныхДанных = 0;
	
	// Очистим движения тех документов, которые делали движения за указанный период.
	ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(ПараметрыРасчета, КоличествоОбработанныхДанных);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных, "ОчиститьДвиженияРегистровУСНЗаУказанныйПериод");
	КоличествоОбработанныхДанных = 0;
	
	// Получим исходные данные на основании регистров оперативного учета.
	ВременныеТаблицыДляПризнанияРасходов = ВременныеТаблицыДляЗаполненияРасходов(ПараметрыРасчета);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ВременныеТаблицыДляЗаполненияРасходов");
	
	КоэффициентОтнесенияРасходовКПрочейДеятельности = КоэффициентОтнесенияРасходовКПрочейДеятельности(ПараметрыРасчета);
	
	// На основании исходных данных оперативных регистров заполним служебные регистры расходов при УСН.
	ЗаполнитьРегистрыРасходовУСН(ВременныеТаблицыДляПризнанияРасходов, КоэффициентОтнесенияРасходовКПрочейДеятельности, Движения, КоличествоОбработанныхДанных);
		
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных);
	
КонецПроцедуры

// Процедура выполняет анализ регистров УСН, если условия признания расходов соблюдены, расходы списываются и заносятся
// в регистры КУДиР и КУДиР Раздел 2.
//
// Параметры:
//	ПараметрыРасчета - Структура, см. функцию ЗаполнитьСтруктуруШапкиДокумента менеджера документа "РегламентнаяОперация":
//					КонДата - Дата - дата, на конец которой будут анализироваться данные регистров УСН;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные регистров УСН;
//					Ссылка - ДокументСсылка.РегламентнаяОперация - документ регламентной операции в который будут записываться движения;
//	Движения - движения документа "РегламентнаяОперация";
//	Отказ - булево - переменная, влияющая на отказ от проведения документа "РегламентнаяОперация".
Процедура ОтразитьРасходыКУДиР(ПараметрыРасчета, Движения, Отказ) Экспорт
	
	КлючеваяОперация = "УчетПоУСН.ОтражениеПризнанныхРасходовВКУДиР";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	
	УстановитьСлужебноеСвойствоДляРегистровУСН(Движения);
	
	ВыборкаПризнанныхРасходовПоАмортизации = ПризнанныеРасходыПоАмортизации(ПараметрыРасчета).Выбрать();
	
	ЗаполнитьКУДиР2ПризнаннымиРасходами(ВыборкаПризнанныхРасходовПоАмортизации, Движения);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Движения.КнигаУчетаДоходовИРасходовРаздел2.Количество());
	
КонецПроцедуры

Процедура УстановитьСлужебноеСвойствоДляРегистровУСН(Движения) Экспорт
	
	Движения.КнигаУчетаДоходовИРасходов.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.КнигаУчетаДоходовИРасходовРаздел2.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСН.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНМатериалы.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНОСиНМА.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНТовары.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СторноДоходов

Функция ТекстЗапросаСторноДоходов() Экспорт
	
	ЗапросыВременныхТаблиц = Новый Массив;
	
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаСписанийДляСторноДоходов());
	Если Не ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаДоходовДляАнализаНеобходимостиСторно());
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРегистраторовДоходов());
	Иначе
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаДоходовДляАнализаНеобходимостиСторноНоваяАрхитектураРасчетов());
		ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРегистраторовДоходовНоваяАрхитектураРасчетов());
	КонецЕсли;
	// Получение таблиц, для сторно оплат по розничным продажам:
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПлатежиОтБанка());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРозничныеПродажиВлияющиеНаДоходы());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРозничныеПродажиТребующиеСторнирования());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРозничныеПродажиТребующиеСторнированияСПлатежами());
	
	Возврат СтрСоединить(ЗапросыВременныхТаблиц, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

Функция ТекстЗапросаВыборкиДокументовДляЗаполненияСторно() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаРегистраторовДоходов.Период КАК Период,
	|	ТаблицаРегистраторовДоходов.Регистратор КАК Регистратор,
	|	КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|	ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов = Неопределено
	|		ТОГДА КнигаУчетаДоходовИРасходов.Содержание
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Содержание,
	|	ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов = Неопределено
	|		ТОГДА КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК РеквизитыПервичногоДокумента,
	|	ТаблицаРегистраторовДоходов.Организация КАК Организация,
	|	0 КАК Графа4,
	|	-ТаблицаРегистраторовДоходов.СуммаНДС КАК НДС,
	|	-ТаблицаРегистраторовДоходов.СуммаУСН КАК Графа5,
	|	ТаблицаРегистраторовДоходов.СуммаЕНВД КАК ДоходЕНВД,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.НомерРегистратора, ВЫРАЗИТЬ(ТаблицаРегистраторовДоходов.Регистратор КАК Документ.КорректировкаРегистров).Номер) КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ВЫРАЗИТЬ(ТаблицаРегистраторовДоходов.Регистратор КАК Документ.КорректировкаРегистров).Дата) КАК Дата,
	|	ТаблицаРегистраторовДоходов.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаРегистраторовДоходов КАК ТаблицаРегистраторовДоходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|	ПО ТаблицаРегистраторовДоходов.Организация = КнигаУчетаДоходовИРасходов.Организация
	|	И ТаблицаРегистраторовДоходов.ДокументВозникновенияДоходов = КнигаУчетаДоходовИРасходов.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО ТаблицаРегистраторовДоходов.Регистратор = ДанныеПервичныхДокументов.Документ
	|		И ТаблицаРегистраторовДоходов.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Графа5 <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРегистраторовДоходов.Период
	|ИТОГИ ПО
	|	Регистратор";
	
КонецФункции

Функция ТекстЗапросаВыборкиДокументовДляЗаполненияСторноОРП() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ПлатежиОтБанка.Период КАК Период,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.Регистратор КАК Регистратор,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.Организация КАК Организация,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.НДС КАК НДС,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.Сумма КАК Сумма,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.СуммаЕНВД КАК СуммаЕНВД,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.СуммаКомиссии КАК СуммаКомиссии,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.УчтеноЕНВД КАК УчтеноЕНВД,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.НеПризнано КАК НеПризнано,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.ДоходВсего КАК ДоходВсего,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.Признано КАК Признано,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.Контрагент КАК Контрагент,
	|	РозничныеПродажиТребующиеСторнированияСПлатежами.СуммаОплатыПлатежнымиКартами КАК СуммаОплатыПлатежнымиКартами,
	|	ПлатежиОтБанка.Регистратор КАК Платеж,
	|	ПлатежиОтБанка.Сумма КАК СуммаОплаты
	|ИЗ
	|	РозничныеПродажиТребующиеСторнированияСПлатежами КАК РозничныеПродажиТребующиеСторнированияСПлатежами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлатежиОтБанка КАК ПлатежиОтБанка
	|		ПО (ПлатежиОтБанка.Организация = РозничныеПродажиТребующиеСторнированияСПлатежами.Организация)
	|			И (ПлатежиОтБанка.Контрагент = РозничныеПродажиТребующиеСторнированияСПлатежами.Контрагент)
	|			И (ПлатежиОтБанка.Период > РозничныеПродажиТребующиеСторнированияСПлатежами.Период)
	|ИТОГИ
	|	СРЕДНЕЕ(СуммаЕНВД),
	|	СРЕДНЕЕ(УчтеноЕНВД),
	|	СРЕДНЕЕ(ДоходВсего),
	|	СРЕДНЕЕ(Признано),
	|	СРЕДНЕЕ(НеПризнано)
	|ПО
	|	Регистратор";
	
КонецФункции

// Процедура выполняет сторнирование доходов по деятельности ЕНВД в КУДиР, ранее записанными приходом ДС.
Процедура СторноДоходовКУДиР(Параметры, АдресХранилища = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	
	КлючеваяОперация = "УчетПоУСН.СторноДоходовКУДиР";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	КоличествоОбработанныхДанных = 0;
	
	НомерЗадания = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
	Операция = Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиР;
	
	ВходящиеДанные = ВходящиеДанныеПоОперации(Операция);
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, НСтр("ru = 'Сторно доходов книги учета доходов и расходов.'"));
	
	ДанныеКСторнированиюДоходовЗаМесяц = ДанныеКРасчету(НомерЗадания, Операция, Параметры.Организация,
		Параметры.НачДата, Параметры.КонДата, Отказ);
		
	Если Отказ Тогда
		ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 0);
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипОперации", Перечисления.ТипыРегламентныхОпераций.ПустаяСсылка());
	
	// Очистим движения тех документов, которые делали движения за указанный период.
	ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(Параметры, КоличествоОбработанныхДанных);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных, "ОчиститьДвиженияРегистровУСНЗаУказанныйПериод");
	КоличествоОбработанныхДанных = 0;
	
	// Получим исходные данные на основании регистров оперативного учета.
	ВременныеТаблицыДляЗаполненияСторно = ВременныеТаблицыДляЗаполненияСторно(Параметры);
	
	ОценкаПроизводительности.ЗафиксироватьЗамерДлительнойОперации(ОписаниеЗамера, 1, "ДанныеКРасчету");
	
	СторнироватьОтраженныеДоходы(ВременныеТаблицыДляЗаполненияСторно, КоличествоОбработанныхДанных);
	
	ЗафиксироватьРасчет(НомерЗадания, Операция, Параметры.Организация,
		Параметры.НачДата, Параметры.КонДата, ДанныеКСторнированиюДоходовЗаМесяц, Отказ);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Выполняет обработку установки даты начала признания доходов новым методом:
// - начиная с даты начала для регистра "КнигаУчетаДоходовИРасходов":
//		для документов "Приходный кассовый ордер" с операциями "ПоступлениеДенежныхСредствИзКассыККМ" или "ПоступлениеДенежныхСредствИзДругойКассы" удаляет движения;
//		для документов "Отчет о розничных продажах" добавляет движения.
//
Процедура ОбработкаУстановкиДатыНачалаПризнанияДоходовНовымМетодом(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Структура;
	Результат.Вставить("ОбработаноПКО", 0);
	Результат.Вставить("ОбработаноОРП", 0);
	
	НачатьТранзакцию();
	Попытка
		Запрос = Новый Запрос;
		МассивТекстовЗапроса = Новый Массив;
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОрганизацииНаУСН.Организация КАК Организация,
		|	ОрганизацииНаУСН.Период КАК НачалоПериода,
		|	МИНИМУМ(ЕСТЬNULL(ОстальныеОрганизации.Период, ДАТАВРЕМЯ(2120, 1, 1))) КАК КонецПериода
		|ПОМЕСТИТЬ ВТДанныеПоОрганизациямНаУСН
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОрганизацииНаУСН
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК ОстальныеОрганизации
		|		ПО ОрганизацииНаУСН.Организация = ОстальныеОрганизации.Организация
		|			И ОрганизацииНаУСН.Период < ОстальныеОрганизации.Период
		|			И (НЕ ОстальныеОрганизации.ПрименяетсяУСН)
		|ГДЕ
		|	ОрганизацииНаУСН.ПрименяетсяУСН
		|
		|СГРУППИРОВАТЬ ПО
		|	ОрганизацииНаУСН.Организация,
		|	ОрганизацииНаУСН.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КнигаУчетаДоходовИРасходов.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
		|	ПО ПриходныйКассовыйОрдер.Ссылка = КнигаУчетаДоходовИРасходов.Регистратор
		|		И (ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ)
		|		ИЛИ (ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы)
		|		И ПриходныйКассовыйОрдер.КассаОтправитель ССЫЛКА Справочник.КассыККМ))
		|ГДЕ
		|	КнигаУчетаДоходовИРасходов.Период >= &ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетОРозничныхПродажах.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеПоОрганизациямНаУСН КАК ОрганизациямНаУСН
		|	ПО ОрганизациямНаУСН.Организация = ОтчетОРозничныхПродажах.Организация
	|			И ОтчетОРозничныхПродажах.Дата >= ОрганизациямНаУСН.НачалоПериода
	|			И ОтчетОРозничныхПродажах.Дата < ОрганизациямНаУСН.КонецПериода
		|ГДЕ
		|	ОтчетОРозничныхПродажах.Дата >= &ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах";
		МассивТекстовЗапроса.Добавить(ТекстЗапроса);
		Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
		
		Запрос.УстановитьПараметр("ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах", Параметры.ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ВыборкаПКО = РезультатЗапроса[1].Выбрать();
		ВыборкаОРП = РезультатЗапроса[2].Выбрать();

		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.КнигаУчетаДоходовИРасходов.НаборЗаписей");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[1];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		
		Блокировка.Заблокировать();
		
		Пока ВыборкаПКО.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПКО.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			
		КонецЦикла;

		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.КнигаУчетаДоходовИРасходов.НаборЗаписей");
		ЭлементБлокировки.ИсточникДанных = РезультатЗапроса[2];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		
		Блокировка.Заблокировать();
		
		Пока ВыборкаОРП.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаОРП.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			
			ДопСвойства = Новый Структура;
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаОРП.Регистратор, ДопСвойства);
			Документы.ОтчетОРозничныхПродажах.ИнициализироватьДанныеДокумента(ВыборкаОРП.Регистратор, ДопСвойства, "КнигаУчетаДоходовИРасходов");
			ТаблицаДанных = ДопСвойства.ТаблицыДляДвижений["ТаблицаКнигаУчетаДоходовИРасходов"];
			НаборЗаписей.Загрузить(ТаблицаДанных);
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		Результат.ОбработаноПКО = ВыборкаПКО.Количество();
		Результат.ОбработаноОРП = ВыборкаОРП.Количество();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось изменить движения по регистру КУДиР по причине: %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Установка даты начала признания доходов новым методом.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
				
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеРегламентированнойОтчетности

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2009Кв1(ПоказателиОтчета) Экспорт
	
	// Раздел 1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010005003", Истина, Ложь);
	
	// Раздел 2
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	// Раздел 2.1
	
	// признак налогоплательщика
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010203", Истина, Ложь);
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210012003", Истина, Ложь);
	
	// расходы, уменьшающие налог
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014303", Истина, Ложь);
	
	// Раздел 2.2
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021303", Истина, Ложь);
	
	// расходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026303", Истина, Ложь);
	
	// убытки прошлых лет
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220023003", Истина, Ложь);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2015Кв1(ПоказателиОтчета) Экспорт

	// Раздел 2.1.1
	
	// признак налогоплательщика
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110010203", Истина, Ложь);
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011303", Истина, Ложь);
	
	// ставки налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012303", Истина, Ложь);
	
	// расходы, уменьшающие налог
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014303", Истина, Ложь);
	
	// Раздел 2.1.2
	
	// доходы ТС
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011303", Истина, Ложь);
	
	// расходы, уменьшающие налог по ТС
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014303", Истина, Ложь);
	
	// Уплаченный торговый сбор
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015303", Истина, Ложь);
	
	// Раздел 2.2
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021303", Истина, Ложь);
	
	// расходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026303", Истина, Ложь);
	
	// убытки прошлых лет
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220023003", Истина, Ложь);

КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2009Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "ЮридическоеФизическоеЛицо");
	
	РеквизитыОрганизации.Вставить("РегистрацияВНалоговомОргане", Справочники.Организации.РегистрацияВНалоговомОргане(ПараметрыОтчета.Организация));
	
	Ставка = Контейнер.Раздел2.П000020020103;
	Раздел1 = Контейнер.Раздел1;
	Раздел2 = Контейнер.Раздел2;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамОрганизация",           ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("парамНачалоГода",            НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, , Организация = &парамОрганизация) КАК КнигаУчетаДоходовИРасходовОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Доходы = 0;
	Расходы = 0;
	Пока Выборка.Следующий() Цикл
		Доходы = Доходы + ?(Выборка.Графа5Оборот = Null, 0, Выборка.Графа5Оборот);
		Расходы = Расходы + ?(Выборка.Графа7Оборот = Null, 0, Выборка.Графа7Оборот);
	КонецЦикла;
	
	ПрименяетсяУСНДоходы = Ложь;
	
	// Учтем возможные сценарии:
	// 1. Единственная запись в учетной политике организации введена не с начала отчетного года.
	// 2. В течение года организация утратила право на применение УСН.	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НЕ УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходы
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&парамКонецОтчетногоПериода,
	|			Организация = &парамОрганизация
	|				И ПрименяетсяУСН) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ПрименяетсяУСНДоходы = ВыборкаДетальныеЗаписи.ПрименяетсяУСНДоходы;	
	КонецЕсли;
	
	Если ПрименяетсяУСНДоходы Тогда // Объект налогообложения "Доходы"
		
		Раздел2.П000020021003 = Доходы;
		Раздел2.П000020022003 = 0;
		
		ВзносыПФ = 0;
		
		Если Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) >= 2013 Тогда
			
			// Взносы и иные выплаты, уменьшающие сумму налога, с 2013 г. отражаются в 4 разделе документа "ЗаписьКУДиР".
			
			ДатаНачалоГода = НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
			ДатаКонецГода  = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
			
			ЭтоИПБезРаботников = Ложь;
			
			Если РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				
				// Для ИП - проверим, производились ли выплаты работникам и прочим физлицам (письмо Минфина РФ от 21 мая 2013 г. N 03-11-11/17926).
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ХозрасчетныйОбороты.Организация КАК Организация
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоГода, &КонецОтчетногоПериода, , Счет = &СчетЗарплаты, , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
				|ГДЕ
				|	ХозрасчетныйОбороты.СуммаОборотКт <> 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОбороты.Организация
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(
				|			&НачалоГода,
				|			&КонецОтчетногоПериода,
				|			,
				|			Счет В (&СчетаВзносов),
				|			&ВидСубконтоВидыПлатежей,
				|			Организация = &Организация
				|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),
				|			,
				|			) КАК ХозрасчетныйОбороты
				|ГДЕ
				|	ХозрасчетныйОбороты.СуммаОборотКт <> 0"
				;
				
				Запрос.УстановитьПараметр("Организация",             ПараметрыОтчета.Организация);
				Запрос.УстановитьПараметр("НачалоГода",              ДатаНачалоГода);
				Запрос.УстановитьПараметр("КонецОтчетногоПериода",   ДатаКонецГода);
				Запрос.УстановитьПараметр("СчетЗарплаты",            ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
				Запрос.УстановитьПараметр("ВидСубконтоВидыПлатежей", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
				
				СчетаВзносов = Новый Массив;
				СчетаВзносов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
				СчетаВзносов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
				
				Запрос.УстановитьПараметр("СчетаВзносов", СчетаВзносов);
				
				Результат = Запрос.Выполнить();
				
				ЭтоИПБезРаботников = Результат.Пустой();
				
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Организация",           ПараметрыОтчета.Организация);
			Запрос.УстановитьПараметр("НачалоГода",            ДатаНачалоГода);
			Запрос.УстановитьПараметр("КонецОтчетногоПериода", ДатаКонецГода);
			Запрос.УстановитьПараметр("ЭтоИПБезРаботников",    ЭтоИПБезРаботников);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(УменьшениеНалога.ПФР + УменьшениеНалога.ФОМС + ВЫБОР
			|				КОГДА &ЭтоИПБезРаботников
			|					ТОГДА 0
			|				ИНАЧЕ УменьшениеНалога.ФСС + УменьшениеНалога.ФСС_НС + УменьшениеНалога.Больничные + УменьшениеНалога.ДобровольноеСтрахование
			|			КОНЕЦ), 0) КАК СуммаКУменьшениюНалога
			|ИЗ
			|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
			|ГДЕ
			|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоГода И &КонецОтчетногоПериода
			|	И УменьшениеНалога.Ссылка.Организация = &Организация
			|	И УменьшениеНалога.Ссылка.Проведен";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ВзносыПФ = Выборка.СуммаКУменьшениюНалога;
			
			Строка080 = Доходы * Ставка / 100;
			Если ЭтоИПБезРаботников Тогда
				// Для ИП, не производивших выплаты работникам и прочим физлицам, ограничение в 50% не действует (Письмо Минфина от
				// 02.04.2013 N 03-11-09/10547).
				ВзносыПФ = Мин(Строка080, ВзносыПФ);
			Иначе
				ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
			КонецЕсли;
			
		Иначе
			// до 2012 года включительно - старый порядок заполнения
			НачДатаОплаты = НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета) + 15*86400;
			КонДатаОплаты = КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета) + 15*86400;
			
			Счета = Новый Массив;
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
			
			Если ПараметрыОтчета.мДатаКонцаПериодаОтчета > '20100101' Тогда
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("парамОрганизация", 	ПараметрыОтчета.Организация);
			Запрос.УстановитьПараметр("парамНачалоГода", 	НачДатаОплаты);
			Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонДатаОплаты);
			Запрос.УстановитьПараметр("Счета", Счета);
			Запрос.Текст =                                     
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&парамНачалоГода,
			|			&парамКонецОтчетногоПериода,
			|			,
			|			,
			|			Счет В (&Счета),
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
			|			Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
			|				И Организация = &парамОрганизация) КАК ХозрасчетныйОстаткиИОбороты";
			
			Выборка = Запрос.Выполнить().Выбрать();
			ВзносыПФ = 0;
			Пока Выборка.Следующий() Цикл
				ВзносыПФ = ВзносыПФ + ?(Выборка.СуммаНачальныйОстатокДт = Null, 0, Выборка.СуммаНачальныйОстатокДт);
				ВзносыПФ = ВзносыПФ + ?(Выборка.СуммаОборотДт = Null, 0, Выборка.СуммаОборотДт);
				ВзносыПФ = ВзносыПФ - ?(Выборка.СуммаКонечныйОстатокДт = Null, 0, Выборка.СуммаКонечныйОстатокДт);
			КонецЦикла;
			
			Строка080 = Доходы * Ставка / 100;
			ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
			
			// взносы по стоимости страхового года
			Счета = Новый Массив;
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_Страх_СтраховойГод);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_Нак_СтраховойГод);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод);
			
			Запрос.УстановитьПараметр("Счета", Счета);
			Запрос.Текст =                                     
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&парамНачалоГода,
			|			&парамКонецОтчетногоПериода,
			|			,
			|			,
			|			Счет В (&Счета),
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
			|			Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
			|				И Организация = &парамОрганизация) КАК ХозрасчетныйОстаткиИОбороты";
			
			Выборка = Запрос.Выполнить().Выбрать();
			ИПВзносыПФ = 0;
			Пока Выборка.Следующий() Цикл
				ИПВзносыПФ = ИПВзносыПФ + ?(Выборка.СуммаНачальныйОстатокДт = Null, 0, Выборка.СуммаНачальныйОстатокДт);
				ИПВзносыПФ = ИПВзносыПФ + ?(Выборка.СуммаОборотДт = Null, 0, Выборка.СуммаОборотДт);
				ИПВзносыПФ = ИПВзносыПФ - ?(Выборка.СуммаКонечныйОстатокДт = Null, 0, Выборка.СуммаКонечныйОстатокДт);
			КонецЦикла;
			
			Если ИПВзносыПФ <> 0 Тогда
				ВзносыПФ = ВзносыПФ + ИПВзносыПФ;
				Если ПараметрыОтчета.мДатаКонцаПериодаОтчета > '20120101' Тогда					
					ВзносыПФ = Мин(Строка080, ВзносыПФ);
				Иначе
					ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
				КонецЕсли;					
			КонецЕсли;
			
		КонецЕсли;
		
		Раздел2.П000020028003 = ВзносыПФ;
		
	Иначе // Объект налогообложения "Доходы минус расходы"
		
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация,
		НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
		
		СуммаНеПеренесенныхУбытков       = УбыткиПрошлыхЛет.ПеренесенныеУбытки;
		УбытокОтУплатыМинимальногоНалога = УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
		
		НалоговаяБазаТекПериод  = Доходы - Расходы - УбытокОтУплатыМинимальногоНалога;
		УменьшениеНалоговойБазы = ?(НалоговаяБазаТекПериод > 0, Мин(НалоговаяБазаТекПериод, СуммаНеПеренесенныхУбытков), 0);
		
		Раздел2.П000020021003 = Доходы;
		Раздел2.П000020022003 = Расходы + УбытокОтУплатыМинимальногоНалога;
		Раздел2.П000020023003 = УменьшениеНалоговойБазы;
		Раздел2.П000020028003 = 0;
		
	КонецЕсли;
	
	// заполним авансовые платежи
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",  ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоГода",   НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, -3)));
	
	Запрос.УстановитьПараметр("СчетОтраженияНалога",  ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД); // Дт 99.01.1
	Запрос.УстановитьПараметр("СчетНачисленияНалога", ПланыСчетов.Хозрасчетный.ЕНприУСН); // Кт 68.12
	
	ВидыПлатежей = Новый Массив;
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	Запрос.УстановитьПараметр("ВидыПлатежейВГосБюджет", ВидыПлатежей);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК АвансовыйПлатеж,
	|	КВАРТАЛ(ХозрасчетныйОборотыДтКт.Период) КАК НомерКвартала
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоГода,
	|			&КонецПериода,
	|			Квартал,
	|			СчетДт = &СчетОтраженияНалога,
	|			,
	|			СчетКт = &СчетНачисленияНалога,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			Организация = &Организация
	|				И СубконтоКт1 В (&ВидыПлатежейВГосБюджет)) КАК ХозрасчетныйОборотыДтКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	;
	
	АвансовыеПлатежи = Запрос.Выполнить().Выгрузить();
	
	ПлатежиНарастающимИтогом = 0;
	
	Для НомерКвартала = 1 По 3 Цикл
		
		СтрокаПлатежа = АвансовыеПлатежи.Найти(НомерКвартала, "НомерКвартала");
		Если СтрокаПлатежа <> Неопределено Тогда
			ПлатежиНарастающимИтогом = ПлатежиНарастающимИтогом + СтрокаПлатежа.АвансовыйПлатеж;
		КонецЕсли;
		
		НомерГрафы = "П00001000"+ (НомерКвартала + 2) + "003";
		Раздел1[НомерГрафы] = ПлатежиНарастающимИтогом;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПериода       = НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	КонецПериода        = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	КонецПериодаГраница = Новый Граница(КонецПериода, ВидГраницы.Включая);
	
	ПрименяетсяУСНДоходы = УчетнаяПолитика.ПрименяетсяУСНДоходы(ПараметрыОтчета.Организация, КонецПериода);
	
	// Необходимо учесть, что торговый сбор в 1 квартале уплачивается за квартал, относящийся к предыдущему налоговому периоду.
	ПлательщикТорговогоСбора = УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(ПараметрыОтчета.Организация, ДобавитьМесяц(НачалоПериода, -12), КонецПериода);
	УменьшатьНалогНаТорговыйСбор = ПрименяетсяУСНДоходы И ПлательщикТорговогоСбора;
	
	ИПИспользуетТрудНаемныхРаботников = Ложь;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(ПараметрыОтчета.Организация, ИПИспользуетТрудНаемныхРаботников, ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	ЭтоИПБезВыплатФизлицам = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) И НЕ ИПИспользуетТрудНаемныхРаботников;
	
	// периоды и ставки налога для поквартальных расчетов
	ДанныеПериодов = Новый ТаблицаЗначений;
	ДанныеПериодов.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	ДанныеПериодов.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ДанныеПериодов.Колонки.Добавить("СтавкаНалога",  ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	
	Если ПрименяетсяУСНДоходы Тогда
		// ставка налога общая для всей декларации
		СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, КонецПериода);
		Контейнер.Раздел21["П000210012003"] = СтавкаИзУП;
	КонецЕсли;
	
	Для НомерКвартала = 1 По 4 Цикл
		
		ДатаНачалаКвартала = НачалоКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
		СтрокаПериода = ДанныеПериодов.Добавить();
		СтрокаПериода.НомерКвартала = НомерКвартала;
		СтрокаПериода.Период        = ДатаНачалаКвартала;
		
		Если ПрименяетсяУСНДоходы Тогда
			СтрокаПериода.СтавкаНалога = Контейнер.Раздел21["П000210012003"];
		Иначе
			// ставки налога задаются для каждого из отчетных периодов
			ДатаОкончанияКвартала = КонецКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
			СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, ДатаОкончанияКвартала);
			ИмяЯчейки = "П000220026" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел22[ИмяЯчейки] = СтавкаИзУП;
			СтрокаПериода.СтавкаНалога    = СтавкаИзУП;
		КонецЕсли;
		
	КонецЦикла;
	
	// показатели налоговой базы по данным ИБ
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",        КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", КонецПериодаГраница);
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДанныеПериодов",      ДанныеПериодов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПериодов.Период КАК Период,
	|	ДанныеПериодов.НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ДанныеПериодов КАК ДанныеПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ) КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7, 
	|	0 КАК ДоходыТорговыйСбор, 
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Графа5
	|ПОМЕСТИТЬ КнигаУчетаДоходовИРасходов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериодаГраница, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала,
	|	ВТ_Периоды.Период КАК Период,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа5, 0) КАК Доходы,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.ДоходТорговыйСбор, 0) КАК ДоходыТорговыйСбор,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа7, 0) КАК Расходы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|	ПО 
	|		ВТ_Периоды.Период = КнигаУчетаДоходовИРасходов.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если ПрименяетсяУСНДоходы Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ) КАК Период,
		|	ЛОЖЬ,
		|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
		|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
		|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
		|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
		|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
		|	СУММА(УменьшениеНалога.ДобровольноеСтрахование) КАК ДобровольноеСтрахование
		|ПОМЕСТИТЬ ВТ_Раздел4Обороты
		|ИЗ
		|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
		|ГДЕ
		|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И УменьшениеНалога.Ссылка.Организация = &Организация
		|	И УменьшениеНалога.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
		|	ВТ_Периоды.Период,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ПФР, 0)) КАК ПФР,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС, 0)) КАК ФСС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФОМС, 0)) КАК ФОМС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС_НС, 0)) КАК ФСС_НС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.Больничные, 0)) КАК Больничные,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ДобровольноеСтрахование, 0)) КАК ДобровольноеСтрахование
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Раздел4Обороты КАК ВТ_Раздел4Обороты
		|		ПО ВТ_Периоды.Период = ВТ_Раздел4Обороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.НомерКвартала,
		|	ВТ_Периоды.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерКвартала"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		Если УменьшатьНалогНаТорговыйСбор Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
			|	ВТ_Периоды.Период,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ПФР, 0)) КАК ПФР,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС, 0)) КАК ФСС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФОМС, 0)) КАК ФОМС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС_НС, 0)) КАК ФСС_НС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.Больничные, 0)) КАК Больничные,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ДобровольноеСтрахование, 0)) КАК ДобровольноеСтрахование
			|ИЗ
			|	ВТ_Периоды КАК ВТ_Периоды
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Раздел4Обороты КАК ВТ_Раздел4Обороты
			|		ПО ВТ_Периоды.Период = ВТ_Раздел4Обороты.Период
			|			И (ВТ_Раздел4Обороты.ДеятельностьНаТорговомСборе)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Периоды.НомерКвартала,
			|	ВТ_Периоды.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерКвартала"
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапросаНалоговаяБаза = Запрос.ВыполнитьПакет();
	
	УбыткиПрошлыхЛет = Неопределено;
	Если НЕ ПрименяетсяУСНДоходы Тогда
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация, НачалоПериода, КонецПериода);
	КонецЕсли;
	
	УплаченныйТорговыйСбор = Неопределено;
	Если УменьшатьНалогНаТорговыйСбор Тогда
		УплаченныйТорговыйСбор = УплаченныйТорговыйСборПоКварталамНарастающимИтогом(
			ПараметрыОтчета.Организация,
			НачалоПериода,
			НачалоПериода,
			КонецПериода);
	КонецЕсли;
	
	// заполнение показателей отчета
	
	ИтогоДоходы  = 0;
	ИтогоРасходы = 0;
	ИтогоРасходыУменьшающиеНалог = 0;
	
	ИтогоДоходыТС                  = 0;
	ИтогоРасходыУменьшающиеНалогТС = 0;
	
	ТаблицаДоходыРасходы = РезультатЗапросаНалоговаяБаза[2].Выгрузить();
	
	Если ПрименяетсяУСНДоходы Тогда // объект налогообложения "доходы"
		
		РазрядностьОкругления = РазрядностьОкругленияПоказателейПриРасчетеНалога(КонецПериода);
		
		ЗаполняемыйРаздел = Контейнер.Раздел21;
		
		КоэффМаксУменьшенияНалога = ?(ЭтоИПБезВыплатФизлицам, 1, 0.5);
		ЗаполняемыйРаздел["П000210010203"] = ?(ЭтоИПБезВыплатФизлицам, "2", "1");
		
		ТаблицаРасходыУменьшающиеНалог = РезультатЗапросаНалоговаяБаза[4].Выгрузить();
		
		ТаблицаРасходыУменьшающиеНалогТС = Неопределено;
		Если УменьшатьНалогНаТорговыйСбор Тогда
			ТаблицаРасходыУменьшающиеНалогТС = РезультатЗапросаНалоговаяБаза[5].Выгрузить();
		КонецЕсли;
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			ИтогоДоходы   = ИтогоДоходы + СтрокаДоходов.Доходы;
			ИтогоДоходыТС = ИтогоДоходыТС + СтрокаДоходов.ДоходыТорговыйСбор;
			
			СтрокаРасходовУменьшающихНалог = ТаблицаРасходыУменьшающиеНалог[СтрокаПериода.НомерКвартала-1];
			ИтогоРасходыУменьшающиеНалог   = ИтогоРасходыУменьшающиеНалог
				+ СтрокаРасходовУменьшающихНалог.ПФР + СтрокаРасходовУменьшающихНалог.ФОМС
				+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалог.ФСС + СтрокаРасходовУменьшающихНалог.ФСС_НС
				+ СтрокаРасходовУменьшающихНалог.Больничные + СтрокаРасходовУменьшающихНалог.ДобровольноеСтрахование);
			
			НалоговаяБаза = Окр(ИтогоДоходы, РазрядностьОкругления);
			НалогОтБазы = Окр(ИтогоДоходы*СтрокаПериода.СтавкаНалога/100, РазрядностьОкругления);
			УменьшениеНалога = Мин(Окр(НалогОтБазы*КоэффМаксУменьшенияНалога, РазрядностьОкругления), ИтогоРасходыУменьшающиеНалог);
			
			// Плательщики торгового сбора могут уменьшить налог на уплаченный торговый сбор.
			// Уменьшение налога в соответствии с п. 8 статьи 346.21 НК определяется в рамках показателей по деятельности на
			// торговом сборе. В соответствии письмом ФНС от 14 августа 2015 г. N ГД-4-3/14386@ суммы вычитаемого из налога
			// торгового сбора добавляются к строкам 140-143.
			Если УменьшатьНалогНаТорговыйСбор Тогда
				
				СтрокаРасходовУменьшающихНалогТС = ТаблицаРасходыУменьшающиеНалогТС[СтрокаПериода.НомерКвартала-1];
				СтрокаУплаченногоТорговогоСбора  = УплаченныйТорговыйСбор[СтрокаПериода.НомерКвартала - 1];
				
				ИтогоРасходыУменьшающиеНалогТС   = ИтогоРасходыУменьшающиеНалогТС
					+ СтрокаРасходовУменьшающихНалогТС.ПФР + СтрокаРасходовУменьшающихНалогТС.ФОМС
					+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалогТС.ФСС + СтрокаРасходовУменьшающихНалогТС.ФСС_НС
						+ СтрокаРасходовУменьшающихНалогТС.Больничные + СтрокаРасходовУменьшающихНалогТС.ДобровольноеСтрахование);
				
				НалоговаяБазаТС    = Окр(ИтогоДоходыТС, РазрядностьОкругления);
				НалогОтБазыТС      = Окр(НалоговаяБазаТС*СтрокаПериода.СтавкаНалога/100, РазрядностьОкругления);
				УменьшениеНалогаТС = Мин(Окр(НалогОтБазыТС*КоэффМаксУменьшенияНалога, РазрядностьОкругления), ИтогоРасходыУменьшающиеНалогТС);
				НалогТСКУплате     = НалогОтБазыТС - УменьшениеНалогаТС;
				
				ТорговыйСборУплаченоНачислено = СтрокаУплаченногоТорговогоСбора.УплаченоСНачалаГода;
				ТорговыйСборВычитаемый = Мин(НалогТСКУплате, ТорговыйСборУплаченоНачислено);
				
				// добавляем вычитаемый торговый сбор к показателю строки 14х
				УменьшениеНалога = Мин(УменьшениеНалога + ТорговыйСборВычитаемый, НалогОтБазы);
				
			КонецЕсли;
			
			ЗаполняемыйРаздел["П000210011" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000210014" + ИдКвартала + "03"] = УменьшениеНалога;
			
		КонецЦикла;
		
	Иначе // объект налогообложения "доходы минус расходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел22;
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходовРасходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			
			ИтогоДоходы  = ИтогоДоходы + СтрокаДоходовРасходов.Доходы;
			ИтогоРасходы = ИтогоРасходы + СтрокаДоходовРасходов.Расходы;
			
			// в последнем квартале года учтем перенесенные убытки прошлых лет
			Если СтрокаПериода.НомерКвартала = 4 Тогда
				ИтогоРасходы = ИтогоРасходы + УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
				НалоговаяБаза  = ИтогоДоходы - ИтогоРасходы;
				УменьшениеНалоговойБазы = Макс(0, Мин(НалоговаяБаза, УбыткиПрошлыхЛет.ПеренесенныеУбытки));
				ЗаполняемыйРаздел["П000220023003"] = УменьшениеНалоговойБазы;
			КонецЕсли;
			
			ЗаполняемыйРаздел["П000220021" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000220022" + ИдКвартала + "03"] = ИтогоРасходы;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер) Экспорт

	// Замер длительности автозаполнения: начало
	ВремяНачалаОперации = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;

	НачалоГода              = НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	НачалоНалоговогоПериода = ПараметрыОтчета.ДатаНачалаРасширенногоПериодаОтчета; // Для зарегистрированных в декабре при подаче декларации за следующий год - дата регистрации.
	КонецПериода            = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	КонецПериодаГраница     = Новый Граница(КонецПериода, ВидГраницы.Включая);
	
	ПрименяетсяУСНДоходы = УчетнаяПолитика.ПрименяетсяУСНДоходы(ПараметрыОтчета.Организация, КонецПериода);
	
	// Необходимо учесть, что торговый сбор в 1 квартале уплачивается за квартал, относящийся к предыдущему налоговому периоду.
	УменьшатьНалогНаТорговыйСбор = ПрименяетсяУСНДоходы
		И УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(
			ПараметрыОтчета.Организация,
			ДобавитьМесяц(НачалоГода, -12),
			КонецПериода);
	
	ИПИспользуетТрудНаемныхРаботников = Ложь;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(ПараметрыОтчета.Организация, ИПИспользуетТрудНаемныхРаботников, ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	ЭтоИПБезВыплатФизлицам = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) И НЕ ИПИспользуетТрудНаемныхРаботников;

	// периоды и ставки налога для поквартальных расчетов
	ДанныеПериодов = Новый ТаблицаЗначений;
	ДанныеПериодов.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	ДанныеПериодов.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ДанныеПериодов.Колонки.Добавить("СтавкаНалога",  ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	
	Для НомерКвартала = 1 По 4 Цикл
		
		ДатаНачалаКвартала = НачалоКвартала(ДобавитьМесяц(НачалоГода, (НомерКвартала-1)*3));
		СтрокаПериода = ДанныеПериодов.Добавить();
		СтрокаПериода.НомерКвартала = НомерКвартала;
		СтрокаПериода.Период        = ДатаНачалаКвартала;
		
		// ставки налога задаются для каждого из отчетных периодов
		ДатаОкончанияКвартала = КонецКвартала(ДобавитьМесяц(НачалоГода, (НомерКвартала-1)*3));
		СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, ДатаОкончанияКвартала);
		СтрокаПериода.СтавкаНалога = СтавкаИзУП;
		
		Если ПрименяетсяУСНДоходы Тогда
			ИмяЯчейки = "П002110012" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел21[ИмяЯчейки] = СтавкаИзУП;
		Иначе
			ИмяЯчейки = "П000220026" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел22[ИмяЯчейки] = СтавкаИзУП;
		КонецЕсли;
		
	КонецЦикла;
	
	// Показатели налоговой базы по данным ИБ
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПериода",        КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", КонецПериодаГраница);
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДанныеПериодов",      ДанныеПериодов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПериодов.Период КАК Период,
	|	ДанныеПериодов.НомерКвартала КАК НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ДанныеПериодов КАК ДанныеПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовОбороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ)
	|	КОНЕЦ КАК Период,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот) КАК Доходы,
	|	СУММА(0) КАК ДоходыТорговыйСбор,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот) КАК Расходы
	|ПОМЕСТИТЬ ВТ_ДоходыИРасходыОбороты
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериодаГраница, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовОбороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	ВТ_Периоды.Период КАК Период,
	|	ЕСТЬNULL(ВТ_ДоходыИРасходыОбороты.Доходы, 0) КАК Доходы,
	|	ЕСТЬNULL(ВТ_ДоходыИРасходыОбороты.ДоходыТорговыйСбор, 0) КАК ДоходыТорговыйСбор,
	|	ЕСТЬNULL(ВТ_ДоходыИРасходыОбороты.Расходы, 0) КАК Расходы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходыИРасходыОбороты КАК ВТ_ДоходыИРасходыОбороты
	|		ПО ВТ_Периоды.Период = ВТ_ДоходыИРасходыОбороты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Периоды.НомерКвартала"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если ПрименяетсяУСНДоходы Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ГОД(КнигаРаздел4.Ссылка.Дата) < ГОД(&КонецПериода)
		|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаРаздел4.Ссылка.Дата, КВАРТАЛ)
		|	КОНЕЦ КАК Период,
		|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
		|	СУММА(КнигаРаздел4.ПФР) КАК ПФР,
		|	СУММА(КнигаРаздел4.ФСС) КАК ФСС,
		|	СУММА(КнигаРаздел4.ФОМС) КАК ФОМС,
		|	СУММА(КнигаРаздел4.ФСС_НС) КАК ФСС_НС,
		|	СУММА(КнигаРаздел4.Больничные) КАК Больничные,
		|	СУММА(КнигаРаздел4.ДобровольноеСтрахование) КАК ДобровольноеСтрахование
		|ПОМЕСТИТЬ ВТ_Раздел4Обороты
		|ИЗ
		|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК КнигаРаздел4
		|ГДЕ
		|	КнигаРаздел4.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И КнигаРаздел4.Ссылка.Организация = &Организация
		|	И КнигаРаздел4.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ГОД(КнигаРаздел4.Ссылка.Дата) < ГОД(&КонецПериода)
		|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаРаздел4.Ссылка.Дата, КВАРТАЛ)
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
		|	ВТ_Периоды.Период КАК Период,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ПФР, 0)) КАК ПФР,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС, 0)) КАК ФСС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФОМС, 0)) КАК ФОМС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС_НС, 0)) КАК ФСС_НС,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.Больничные, 0)) КАК Больничные,
		|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ДобровольноеСтрахование, 0)) КАК ДобровольноеСтрахование
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Раздел4Обороты КАК ВТ_Раздел4Обороты
		|		ПО ВТ_Периоды.Период = ВТ_Раздел4Обороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.НомерКвартала,
		|	ВТ_Периоды.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерКвартала"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		Если УменьшатьНалогНаТорговыйСбор Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
			|	ВТ_Периоды.Период,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ПФР, 0)) КАК ПФР,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС, 0)) КАК ФСС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФОМС, 0)) КАК ФОМС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ФСС_НС, 0)) КАК ФСС_НС,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.Больничные, 0)) КАК Больничные,
			|	СУММА(ЕСТЬNULL(ВТ_Раздел4Обороты.ДобровольноеСтрахование, 0)) КАК ДобровольноеСтрахование
			|ИЗ
			|	ВТ_Периоды КАК ВТ_Периоды
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Раздел4Обороты КАК ВТ_Раздел4Обороты
			|		ПО ВТ_Периоды.Период = ВТ_Раздел4Обороты.Период
			|			И (ВТ_Раздел4Обороты.ДеятельностьНаТорговомСборе)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Периоды.НомерКвартала,
			|	ВТ_Периоды.Период
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерКвартала"
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапросаНалоговаяБаза = Запрос.ВыполнитьПакет();

	УбыткиПрошлыхЛет = Неопределено;
	Если НЕ ПрименяетсяУСНДоходы Тогда
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация, НачалоГода, КонецПериода);
	КонецЕсли;
	
	УплаченныйТорговыйСбор = Неопределено;
	Если УменьшатьНалогНаТорговыйСбор Тогда
		УплаченныйТорговыйСбор = УплаченныйТорговыйСборПоКварталамНарастающимИтогом(ПараметрыОтчета.Организация,
			НачалоГода, НачалоНалоговогоПериода, КонецПериода);
	КонецЕсли;
	
	// заполнение показателей отчета
	
	ИтогоДоходы  = 0;
	ИтогоРасходы = 0;
	ИтогоРасходыУменьшающиеНалог = 0;
	
	ИтогоДоходыТС                  = 0;
	ИтогоРасходыУменьшающиеНалогТС = 0;
	
	ТаблицаДоходыРасходы = РезультатЗапросаНалоговаяБаза[2].Выгрузить();
	
	Если ПрименяетсяУСНДоходы Тогда // объект налогообложения "доходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел21;
		
		КоэффМаксУменьшенияНалога = ?(ЭтоИПБезВыплатФизлицам, 1, 0.5);
		ЗаполняемыйРаздел["П002110010203"] = ?(ЭтоИПБезВыплатФизлицам, "2", "1");
		
		ТаблицаРасходыУменьшающиеНалог = РезультатЗапросаНалоговаяБаза[4].Выгрузить();
		
		ТаблицаРасходыУменьшающиеНалогТС = Неопределено;
		Если УменьшатьНалогНаТорговыйСбор Тогда
			ТаблицаРасходыУменьшающиеНалогТС = РезультатЗапросаНалоговаяБаза[5].Выгрузить();
		КонецЕсли;
				
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			ИтогоДоходы   = ИтогоДоходы + СтрокаДоходов.Доходы;
			ИтогоДоходыТС = ИтогоДоходыТС + СтрокаДоходов.ДоходыТорговыйСбор;
			
			СтрокаРасходовУменьшающихНалог = ТаблицаРасходыУменьшающиеНалог[СтрокаПериода.НомерКвартала-1];
			ИтогоРасходыУменьшающиеНалог   = ИтогоРасходыУменьшающиеНалог
				+ СтрокаРасходовУменьшающихНалог.ПФР + СтрокаРасходовУменьшающихНалог.ФОМС
				+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалог.ФСС + СтрокаРасходовУменьшающихНалог.ФСС_НС
					+ СтрокаРасходовУменьшающихНалог.Больничные + СтрокаРасходовУменьшающихНалог.ДобровольноеСтрахование);
			
			НалоговаяБаза    = Окр(ИтогоДоходы, 0);
			НалогОтБазы      = Окр(НалоговаяБаза*СтрокаПериода.СтавкаНалога/100, 0);
			УменьшениеНалога = Мин(Окр(НалогОтБазы*КоэффМаксУменьшенияНалога, 0), ИтогоРасходыУменьшающиеНалог);
			
			// Плательщики торгового сбора могут уменьшить налог на уплаченный торговый сбор.
			// Уменьшение налога в соответствии с п. 8 статьи 346.21 НК определяется в рамках показателей по деятельности на
			// торговом сборе. В соответствии письмом ФНС от 14 августа 2015 г. N ГД-4-3/14386@ суммы вычитаемого из налога
			// торгового сбора добавляются к строкам 140-143.
			Если УменьшатьНалогНаТорговыйСбор Тогда
				
				СтрокаРасходовУменьшающихНалогТС = ТаблицаРасходыУменьшающиеНалогТС[СтрокаПериода.НомерКвартала-1];
				СтрокаУплаченногоТорговогоСбора  = УплаченныйТорговыйСбор[СтрокаПериода.НомерКвартала - 1];
				
				ИтогоРасходыУменьшающиеНалогТС   = ИтогоРасходыУменьшающиеНалогТС
					+ СтрокаРасходовУменьшающихНалогТС.ПФР + СтрокаРасходовУменьшающихНалогТС.ФОМС
					+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалогТС.ФСС + СтрокаРасходовУменьшающихНалогТС.ФСС_НС
						+ СтрокаРасходовУменьшающихНалогТС.Больничные + СтрокаРасходовУменьшающихНалогТС.ДобровольноеСтрахование);
				
				НалоговаяБазаТС    = Окр(ИтогоДоходыТС, 0);
				НалогОтБазыТС      = Окр(НалоговаяБазаТС*СтрокаПериода.СтавкаНалога/100, 0);
				УменьшениеНалогаТС = Мин(Окр(НалогОтБазыТС*КоэффМаксУменьшенияНалога, 0), ИтогоРасходыУменьшающиеНалогТС);
				
				ТорговыйСборУплачено = СтрокаУплаченногоТорговогоСбора.УплаченоСНачалаГода;
				
				ЗаполняемыйРаздел["П002120011" + ИдКвартала + "03"] = ИтогоДоходыТС;
				ЗаполняемыйРаздел["П002120014" + ИдКвартала + "03"] = УменьшениеНалогаТС;
				ЗаполняемыйРаздел["П002120015" + ИдКвартала + "03"] = ТорговыйСборУплачено;
				
			КонецЕсли;
			
			ЗаполняемыйРаздел["П002110011" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П002110014" + ИдКвартала + "03"] = УменьшениеНалога;
			
		КонецЦикла;
		
	Иначе // объект налогообложения "доходы минус расходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел22;
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходовРасходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
		
			ИтогоДоходы  = ИтогоДоходы + СтрокаДоходовРасходов.Доходы;
			ИтогоРасходы = ИтогоРасходы + СтрокаДоходовРасходов.Расходы;
			
			// в последнем квартала года учтем перенесенные убытки прошлых лет
			Если СтрокаПериода.НомерКвартала = 4 Тогда
				ИтогоРасходы = ИтогоРасходы + УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
				НалоговаяБаза  = ИтогоДоходы - ИтогоРасходы;
				УменьшениеНалоговойБазы = Макс(0, Мин(НалоговаяБаза, УбыткиПрошлыхЛет.ПеренесенныеУбытки));
				ЗаполняемыйРаздел["П000220023003"] = УменьшениеНалоговойБазы;
			КонецЕсли;
			
			ЗаполняемыйРаздел["П000220021" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000220022" + ИдКвартала + "03"] = ИтогоРасходы;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Замер длительности автозаполнения: окончание
	ВремяОкончанияОперации = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Длительность = ВремяОкончанияОперации - ВремяНачалаОперации;
	ИмяСобытия = СтрШаблон(
		НСтр("ru = 'Заполнение регламентированных отчетов.Декларация по УСН за %1 год'", ОбщегоНазначения.КодОсновногоЯзыка()), // строка записывается в ИБ),
		Формат(Год(КонецПериода), "ЧГ=0"));
	
	ЗаписьЖурналаРегистрации(ИмяСобытия,
							 УровеньЖурналаРегистрации.Информация,
							 Метаданные.Отчеты.РегламентированныйОтчетУСН.Формы.ФормаОтчета2014Кв1,
							 ,
							 СтрШаблон(НСтр("ru = 'Результат операции (%1 мс)'", ОбщегоНазначения.КодОсновногоЯзыка()), Длительность),
							 РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	
КонецПроцедуры

Функция УплаченныйТорговыйСборПоКварталамНарастающимИтогом(Организация, Период, НачалоПериода, КонецПериода)
	
	Если Период >= ДатаНачалаФормирования5РазделаКУДиР() Тогда
		// Уплаченный торговый сбор определяем по данным V раздела КУДиР
		Возврат УплаченныйТорговыйСборПоКварталамНарастающимИтогомПоДаннымКУДиР(Организация, НачалоПериода, КонецПериода);
	Иначе
		// По данным бухгалтерского учета
		Возврат УплаченныйТорговыйСборПоКварталамНарастающимИтогомПоДаннымБухгалтерскогоУчета(Организация, НачалоПериода, КонецПериода);
	КонецЕсли;
	
КонецФункции

Функция УплаченныйТорговыйСборПоКварталамНарастающимИтогомПоДаннымКУДиР(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода",   НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",    КонецПериода);
	Запрос.УстановитьПараметр("Организация",     Организация);
	Запрос.УстановитьПараметр("ТаблицаПериодов", НоваяТаблицаКварталов(НачалоПериода, КонецПериода));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПериодов.Период КАК Период,
	|	ТаблицаПериодов.НомерКвартала КАК НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата, КВАРТАЛ)
	|	КОНЕЦ КАК Период,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел5Обороты.СуммаТорговогоСбора) КАК СуммаТорговогоСбора
	|ПОМЕСТИТЬ ВТ_УплатаТорговогоСбораПоКварталам
	|ИЗ
	|	Документ.ЗаписьКУДиР.УплаченныйТорговыйСбор КАК КнигаУчетаДоходовИРасходовРаздел5Обороты
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период, КВАРТАЛ)
	|	КОНЕЦ,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел5Обороты.СуммаРеглОборот)
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Квартал,
	|			Организация = &Организация
	|				И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И СтатьяДоходовРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ТорговыйСбор)) КАК КнигаУчетаДоходовИРасходовРаздел5Обороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	СУММА(ЕСТЬNULL(ВТ_УплатаТорговогоСбораПоКварталам.СуммаТорговогоСбора, 0)) КАК УплаченныйТорговыйСбор
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УплатаТорговогоСбораПоКварталам КАК ВТ_УплатаТорговогоСбораПоКварталам
	|		ПО ВТ_Периоды.Период = ВТ_УплатаТорговогоСбораПоКварталам.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	НомерКвартала
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Колонки.Добавить("УплаченоСНачалаГода");
	
	УплаченоСНачалаГода = 0;
	
	Для каждого СтрокаРезультат Из ТаблицаРезультат Цикл
		УплаченоСНачалаГода = УплаченоСНачалаГода + СтрокаРезультат.УплаченныйТорговыйСбор;
		СтрокаРезультат.УплаченоСНачалаГода = УплаченоСНачалаГода;
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция УплаченныйТорговыйСборПоКварталамНарастающимИтогомПоДаннымБухгалтерскогоУчета(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода",         НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",          КонецПериода);
	Запрос.УстановитьПараметр("Организация",           Организация);
	Запрос.УстановитьПараметр("ВидыНалоговыхПлатежей", ВидыНалоговыхПлатежей());
	Запрос.УстановитьПараметр("ТаблицаПериодов",       НоваяТаблицаКварталов(НачалоПериода, КонецПериода));
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	
	Запрос.УстановитьПараметр("СчетаУчетаДенежныхСредств", Счета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПериодов.Период КАК Период,
	|	ТаблицаПериодов.НомерКвартала КАК НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ГОД(ХозрасчетныйОборотыДтКт.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, КВАРТАЛ)
	|	КОНЕЦ КАК Период,
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ТорговыйСборУплачено
	|ПОМЕСТИТЬ ВТ_УплатаТорговогоСбораПоКварталам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Квартал,
	|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговыйСбор),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			СчетКт В (&СчетаУчетаДенежныхСредств) И НЕ СчетКт.Забалансовый,
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&ВидыНалоговыхПлатежей)) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ГОД(ХозрасчетныйОборотыДтКт.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК Период,
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	ЕСТЬNULL(ВТ_УплатаТорговогоСбораПоКварталам.ТорговыйСборУплачено, 0) КАК ТорговыйСборУплачено
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УплатаТорговогоСбораПоКварталам КАК ВТ_УплатаТорговогоСбораПоКварталам
	|		ПО ВТ_Периоды.Период = ВТ_УплатаТорговогоСбораПоКварталам.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Колонки.Добавить("УплаченоСНачалаГода");
	
	УплаченоСНачалаГода = 0;
	
	Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл
		УплаченоСНачалаГода = УплаченоСНачалаГода + СтрокаРезультат.ТорговыйСборУплачено;
		СтрокаРезультат.УплаченоСНачалаГода = УплаченоСНачалаГода;
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция НоваяТаблицаКварталов(НачалоПериода, КонецПериода)
	
	// Приводим период к границам квартала
	НачальнаяДата = НачалоКвартала(НачалоПериода);
	КонечнаяДата  = КонецКвартала(КонецПериода);
	
	Периоды = Новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	Периоды.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	ТекущийПериод = НачальнаяДата;
	
	Пока ТекущийПериод < КонечнаяДата Цикл
		
		НоваяСтрока = Периоды.Добавить();
		НоваяСтрока.Период        = ТекущийПериод;
		НоваяСтрока.НомерКвартала = Цел((Месяц(ТекущийПериод) - 1) / 3 + 1);
		
		ТекущийПериод = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(ТекущийПериод, Перечисления.Периодичность.Квартал);
		
	КонецЦикла;
	
	Возврат Периоды;
	
КонецФункции

#КонецОбласти

#Область НачислениеНалога

// Процедура, вызывающая регламентную операцию по начислению налога УСН.
// Параметры:
//	Параметры - Структура:
//					КонецПериода - дата, по которую необходимо начислить налог УСН;
//					Организация - СправочникСсылка.Организация - организация, для которой необходимо начислить налог УСН;
//	АдресХранилища - строка.
Процедура НачислитьНалогУСН(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	
	НомерЗадания = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
	Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаУСН;
	ОперацииДляВыполнения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаУСН);
	
	ДанныеКРасчетуНалогаЗаМесяц = ДанныеКРасчету(НомерЗадания, Операция, Параметры.Организация,
		НачалоКвартала(Параметры.КонДата), КонецКвартала(Параметры.КонДата), Отказ);
		
	Если Не Отказ Тогда
		Документы.РегламентнаяОперация.РассчитатьРегламентныеОперации(Параметры.КонДата, ОперацииДляВыполнения, Параметры.Организация, Отказ);
	КонецЕсли;
	
	ЗафиксироватьРасчет(НомерЗадания, Операция, Параметры.Организация,
		НачалоКвартала(Параметры.КонДата), КонецКвартала(Параметры.КонДата), ДанныеКРасчетуНалогаЗаМесяц, Отказ);
	
	Если Отказ Тогда
		ВызватьИсключение(НСтр("ru = 'Начисление налога по УСН не выполнено (см. журнал регистрации).'"));
	КонецЕсли;
	
КонецПроцедуры

// Рассчитывает налог УСН по данным информационной базы и возвращает данные
// для отражения начисленного налога в проводках и во вспомогательных регистрах для справки-расчета.
//
// Параметры:
//  КонтекстРасчета      - Структура - контекст, в котором выполняется расчет (организация, период и т.п.),
//                                     см. НовыйКонтекстРасчета().
//
// Возвращаемое значение:
//  Структура    - содержит таблицы для отражения начисленного налога в бухучете и для формирования справки-расчета:
//                  * ТаблицаПроводок       - см. НоваяТаблицаНачисленияНалога()
//                  * ТаблицаСправкиРасчета - см. НоваяТаблицаСправкиРасчетаНалога().
//
Функция ПодготовитьРасчетНалога(КонтекстРасчета) Экспорт
	
	ТаблицаПроводок       = НоваяТаблицаНачисленияНалога();
	ТаблицаСправкиРасчета = НоваяТаблицаСправкиРасчетаНалога();
	
	Если КонтекстРасчета.ПрименяетсяУСНДоходы Тогда
		РассчитатьНалогУСНОбъектДоходы(КонтекстРасчета, ТаблицаПроводок, ТаблицаСправкиРасчета);
	Иначе
		РассчитатьНалогУСНОбъектДоходыМинусРасходы(КонтекстРасчета, ТаблицаПроводок, ТаблицаСправкиРасчета);
	КонецЕсли;
	
	ТаблицыУпрРегистров = РасходыПоНалогу(КонтекстРасчета, ТаблицаСправкиРасчета);
	
	РезультатРасчета = Новый Структура();
	РезультатРасчета.Вставить("ТаблицаПроводок", ТаблицаПроводок);
	РезультатРасчета.Вставить("ТаблицаСправкиРасчета", ТаблицаСправкиРасчета);
	РезультатРасчета.Вставить("ТаблицаПрочиеАктивыПассивы", ТаблицыУпрРегистров.ПрочиеАктивыПассивы);
	РезультатРасчета.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", ТаблицыУпрРегистров.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	
	Возврат РезультатРасчета;
	
КонецФункции

// Определяет сумму отраженных в бухгалтерском учете (начисленных) платежей по налогу УСН за указанный период.
//
// Параметры:
//  Организация      - СправочникСсылка.Организации - налогоплательщик.
//  НачалоПериода    - Дата и время - начало анализируемого периода.
//  КонецПериода     - Дата и время - окончание анализируемого периода.
//
// Возвращаемое значение:
//  Число - сумма начисленного налога (авансовых платежей).
//
Функция НачисленныйНалогЗаПериод(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат 0;
	КонецЕсли;
	
	Если КонецПериода < НачалоПериода Тогда
		Возврат 0;
	КонецЕсли;
	
	СчетОтраженияНалога  = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД; // Дт 99.01.1
	СчетНачисленияНалога = ПланыСчетов.Хозрасчетный.ЕНприУСН;             // Кт 68.12
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",          Организация);
	Запрос.УстановитьПараметр("НачалоПериода",        Новый Граница(НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода",         Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетНачисленияНалога", СчетНачисленияНалога);
	Запрос.УстановитьПараметр("СчетОтраженияНалога",  СчетОтраженияНалога);
	Запрос.УстановитьПараметр("ВидыПлатежей",         ВидыНалоговыхПлатежей());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			СчетДт = &СчетОтраженияНалога,
	|			,
	|			СчетКт = &СчетНачисленияНалога,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			Организация = &Организация
	|				И СубконтоКт1 В (&ВидыПлатежей)) КАК ХозрасчетныйОборотыДтКт";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Сумма, 0);
	
КонецФункции

Процедура РассчитатьНалогУСНОбъектДоходы(КонтекстРасчета, ТаблицаПроводок, ТаблицаСправкиРасчета)
	
	СчетНачисленияНалога = ПланыСчетов.Хозрасчетный.ЕНприУСН;			  // Кт 68.12
	СчетОтраженияНалога  = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД; // Дт 99.01.1
	
	РазрядностьОкругленияПоказателей = РазрядностьОкругленияПоказателейПриРасчетеНалога(КонтекстРасчета.Период);
	
	ЕстьРаботники = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(КонтекстРасчета.Организация)
		ИЛИ РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(КонтекстРасчета.Организация);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   КонтекстРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", КонтекстРасчета.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонтекстРасчета.КонецОтчетногоПериода);
	Запрос.УстановитьПараметр("ЕстьРаботники", ЕстьРаботники);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Доходы,
	|	0 КАК ДоходыТорговыйСбор
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Раздел4Обороты.ПФР + Раздел4Обороты.ФОМС + ВЫБОР
	|		КОГДА &ЕстьРаботники
	|			ТОГДА Раздел4Обороты.ФСС + Раздел4Обороты.ФСС_НС + Раздел4Обороты.Больничные + Раздел4Обороты.ДобровольноеСтрахование
	|		ИНАЧЕ 0
	|	КОНЕЦ), 0) КАК РасходыУменьшающиеНалог,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе
	|ПОМЕСТИТЬ ВТ_Раздел4
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК Раздел4Обороты
	|ГДЕ
	|	Раздел4Обороты.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Раздел4Обороты.Ссылка.Организация = &Организация
	|	И Раздел4Обороты.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВТ_Раздел4.РасходыУменьшающиеНалог), 0) КАК РасходыУменьшающиеНалог
	|ИЗ
	|	ВТ_Раздел4 КАК ВТ_Раздел4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВТ_Раздел4.РасходыУменьшающиеНалог), 0) КАК РасходыУменьшающиеНалог
	|ИЗ
	|	ВТ_Раздел4 КАК ВТ_Раздел4
	|ГДЕ
	|	ВТ_Раздел4.ДеятельностьНаТорговомСборе"
	;
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	
	// расчет налога
	Доходы						 = 0;
	ДоходыТорговыйСбор           = 0;
	РасходыУменьшающиеНалог		 = 0;
	ИсчисленоЗаПредыдущиеПериоды = 0;
	МаксПроцентУменьшенияНалога  = ?(ЕстьРаботники, 50, 100);
	
	ВыборкаНалоговаяБаза = Результат[0].Выбрать();
	Если ВыборкаНалоговаяБаза.Следующий() Тогда
		Доходы = Окр(ВыборкаНалоговаяБаза.Доходы, РазрядностьОкругленияПоказателей);
		
		Если КонтекстРасчета.ПлательщикТорговогоСбораЗаПериод Тогда
			ДоходыТорговыйСбор = Окр(ВыборкаНалоговаяБаза.ДоходыТорговыйСбор, РазрядностьОкругленияПоказателей);
		КонецЕсли;
	КонецЕсли;
	
	ВыборкаУменьшениеНалога = Результат[2].Выбрать();
	Если ВыборкаУменьшениеНалога.Следующий() Тогда
		РасходыУменьшающиеНалог = Окр(ВыборкаУменьшениеНалога.РасходыУменьшающиеНалог, РазрядностьОкругленияПоказателей);
	КонецЕсли;
	
	Если НЕ КонтекстРасчета.ЭтоПервыйОтчетныйПериод Тогда
		КонецПредыдущегоКвартала = НачалоКвартала(КонтекстРасчета.КонецОтчетногоПериода) - 1;
		
		ИсчисленоЗаПредыдущиеПериоды = НачисленныйНалогЗаПериод(КонтекстРасчета.Организация,
			КонтекстРасчета.НачалоНалоговогоПериода, КонецПредыдущегоКвартала);
	КонецЕсли;
	
	НалогСНачалаГодаВсего = Окр(Доходы * КонтекстРасчета.СтавкаНалогаУСН / 100, РазрядностьОкругленияПоказателей);
	УменьшениеНалога = Мин(РасходыУменьшающиеНалог,  Окр(НалогСНачалаГодаВсего * МаксПроцентУменьшенияНалога / 100, РазрядностьОкругленияПоказателей));
	
	НалогСначалаГодаИсчисленный = НалогСНачалаГодаВсего - УменьшениеНалога;
	
	ТорговыйСборУплаченоВсего = 0;
	ТорговыйСборКВычету       = 0;
	
	// Рассчитаем налог отдельно по деятельности на торговом сборе, если она есть
	Если КонтекстРасчета.ПлательщикТорговогоСбораЗаПериод Тогда
		РасходыУменьшающиеНалогТС = 0;
		
		ВыборкаУменьшениеНалогаТС = Результат[3].Выбрать();
		Если ВыборкаУменьшениеНалогаТС.Следующий() Тогда
			РасходыУменьшающиеНалогТС = Окр(ВыборкаУменьшениеНалогаТС.РасходыУменьшающиеНалог, РазрядностьОкругленияПоказателей);
		КонецЕсли;
		
		НалогТСВсего = Окр(ДоходыТорговыйСбор * КонтекстРасчета.СтавкаНалогаУСН / 100, РазрядностьОкругленияПоказателей);
		УменьшениеНалогаТС = Мин(РасходыУменьшающиеНалогТС,
			Окр(НалогТСВсего * МаксПроцентУменьшенияНалога / 100, РазрядностьОкругленияПоказателей));
		
		НалогТСКУплате = НалогТСВсего - УменьшениеНалогаТС;
		
		ТорговыйСборУплаченоВсего = УплаченныйТорговыйСбор(КонтекстРасчета.Организация,
			КонтекстРасчета.НачалоНалоговогоПериода, КонтекстРасчета.КонецОтчетногоПериода);
		ТорговыйСборКВычету = Мин(НалогТСКУплате, ТорговыйСборУплаченоВсего);
		
		// Запись Справки-расчета в части налога по деятельности на торговом сборе
		СтрокаСправки = ТаблицаСправкиРасчета.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаСправки, КонтекстРасчета);
		
		СтрокаСправки.ПериодРасчета                = КонтекстРасчета.Период;
		СтрокаСправки.ОбъектНалогообложения        = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		СтрокаСправки.ДеятельностьНаТорговомСборе  = Истина;
		СтрокаСправки.Доходы                       = ДоходыТорговыйСбор;
		СтрокаСправки.НалоговаяБаза                = ДоходыТорговыйСбор;
		СтрокаСправки.НалогВсего                   = НалогТСВсего;
		СтрокаСправки.РасходыУменьшающиеНалог      = РасходыУменьшающиеНалогТС;
		СтрокаСправки.ПроцентУменьшенияНалога      = МаксПроцентУменьшенияНалога;
		СтрокаСправки.УменьшениеНалогаФакт         = УменьшениеНалогаТС;
		СтрокаСправки.НалогИсчисленныйВсего        = НалогТСКУплате;
		СтрокаСправки.УплаченныйТорговыйСбор       = ТорговыйСборУплаченоВсего;
		СтрокаСправки.ТорговыйСборУменьшающийНалог = ТорговыйСборКВычету;
		СтрокаСправки.АвансовыеПлатежи             = 0;
		СтрокаСправки.НалогКУплате                 = 0;
		
	КонецЕсли;
	
	ТорговыйСборВычитаемыйИзНалога = Мин(НалогСначалаГодаИсчисленный, ТорговыйСборКВычету);
	НалогСначалаГодаИсчисленный    = НалогСначалаГодаИсчисленный - ТорговыйСборВычитаемыйИзНалога;
	НалогКУплате = Окр(НалогСначалаГодаИсчисленный - ИсчисленоЗаПредыдущиеПериоды, 0);
	
	// Данные для проводки по начислению налога
	// (проводку формируем только при ненулевом налоге).
	Если НалогКУплате <> 0 Тогда
		
		СтрокаПроводки = ТаблицаПроводок.Добавить();
		
		СтрокаПроводки.СчетДт					= СчетОтраженияНалога;
		СтрокаПроводки.СчетКт					= СчетНачисленияНалога;
		СтрокаПроводки.ПрибылиИУбытки			= Перечисления.ПрибылиИУбытки.НалогНаПрибыль;
		СтрокаПроводки.ВидыПлатежейВГосБюджет	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаПроводки.Сумма					= НалогКУплате;
		СтрокаПроводки.Содержание				= СодержаниеПроводкиНачислениеНалогаУСН(КонтекстРасчета, НалогКУплате);
		
	КонецЕсли;
	
	// Запись справки-расчета по налогу
	СтрокаСправки = ТаблицаСправкиРасчета.Добавить();
	
	ЗаполнитьЗначенияСвойств(СтрокаСправки, КонтекстРасчета);
	
	СтрокаСправки.ПериодРасчета                = КонтекстРасчета.Период;
	СтрокаСправки.ОбъектНалогообложения        = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
	СтрокаСправки.ДеятельностьНаТорговомСборе  = Ложь;
	СтрокаСправки.Доходы                       = Доходы;
	СтрокаСправки.НалоговаяБаза                = Доходы;
	СтрокаСправки.НалогВсего                   = НалогСНачалаГодаВсего;
	СтрокаСправки.РасходыУменьшающиеНалог      = РасходыУменьшающиеНалог;
	СтрокаСправки.ПроцентУменьшенияНалога      = МаксПроцентУменьшенияНалога;
	СтрокаСправки.УменьшениеНалогаФакт         = УменьшениеНалога;
	СтрокаСправки.УплаченныйТорговыйСбор       = ТорговыйСборУплаченоВсего;
	СтрокаСправки.ТорговыйСборУменьшающийНалог = ТорговыйСборВычитаемыйИзНалога;
	СтрокаСправки.НалогИсчисленныйВсего        = НалогСначалаГодаИсчисленный;
	СтрокаСправки.АвансовыеПлатежи             = ИсчисленоЗаПредыдущиеПериоды;
	СтрокаСправки.НалогКУплате                 = НалогКУплате;
	
КонецПроцедуры

Процедура РассчитатьНалогУСНОбъектДоходыМинусРасходы(КонтекстРасчета, ТаблицаПроводок, ТаблицаСправкаРасчет)
	
	СчетОтраженияНалога  = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД; // Дт 99.01.1
	СчетНачисленияНалога = ПланыСчетов.Хозрасчетный.ЕНприУСН;             // Кт 68.12
	
	РазрядностьОкругленияПоказателей = РазрядностьОкругленияПоказателейПриРасчетеНалога(КонтекстРасчета.Период);
	
	НалоговыеКаникулы = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(КонтекстРасчета.Организация)
		И УчетнаяПолитикаПереопределяемый.НалоговыеКаникулыУСН(КонтекстРасчета.Организация, КонтекстРасчета.КонецОтчетногоПериода);
	
	// Расчет налога
	
	Доходы                       = 0;
	Расходы                      = 0;
	ИсчисленоЗаПредыдущиеПериоды = 0;
	
	ПеренесенныеУбытки               = 0;
	УбытокОтУплатыМинимальногоНалога = 0;
	УчтенныеУбытки                   = 0;
	
	МинимальныйНалог    = 0;
	ЭтоМинимальныйНалог = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   КонтекстРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", КонтекстРасчета.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонтекстРасчета.КонецОтчетногоПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Доходы,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Расходы
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты"
	;
	
	ВыборкаНалоговаяБаза = Запрос.Выполнить().Выбрать();
	Если ВыборкаНалоговаяБаза.Следующий() Тогда
		Доходы  = ?(ЗначениеЗаполнено(ВыборкаНалоговаяБаза.Доходы), ВыборкаНалоговаяБаза.Доходы, 0);
		Доходы  = Окр(Доходы, РазрядностьОкругленияПоказателей);
		
		Расходы = ?(ЗначениеЗаполнено(ВыборкаНалоговаяБаза.Расходы), ВыборкаНалоговаяБаза.Расходы, 0);
		// Округление расходов производится после учета в их составе убытка от уплаты минимального налога.
	КонецЕсли;
	
	// Перенесенные на текущий период убытки прошлых лет учитываются только при расчете налога по итогам года.
	Если КонтекстРасчета.ЭтоЗавершающийОтчетныйПериод Тогда
		Убытки = ПеренесенныеУбыткиПрошлыхЛет(КонтекстРасчета.Организация,
			КонтекстРасчета.НачалоГода, КонтекстРасчета.КонецОтчетногоПериода);
		ПеренесенныеУбытки = Окр(Убытки.ПеренесенныеУбытки, РазрядностьОкругленияПоказателей);
		УбытокОтУплатыМинимальногоНалога = Убытки.УбытокОтУплатыМинимальногоНалога;
	КонецЕсли;
	
	Если НЕ КонтекстРасчета.ЭтоПервыйОтчетныйПериод Тогда
		КонецПредыдущегоКвартала = НачалоКвартала(КонтекстРасчета.КонецОтчетногоПериода) - 1;
		
		ИсчисленоЗаПредыдущиеПериоды = НачисленныйНалогЗаПериод(КонтекстРасчета.Организация,
			КонтекстРасчета.НачалоНалоговогоПериода, КонецПредыдущегоКвартала);
	КонецЕсли;
	
	// Увеличиваем расходы на сумму разницы между уплаченным в прошлых периодах минимальным налогом и рассчитанным в общем порядке.
	Расходы = Окр(Расходы + УбытокОтУплатыМинимальногоНалога, РазрядностьОкругленияПоказателей);
	
	НалоговаяБаза = Макс(Доходы - Расходы, 0);
	Если КонтекстРасчета.ЭтоЗавершающийОтчетныйПериод Тогда
		УчтенныеУбытки = Мин(НалоговаяБаза, ПеренесенныеУбытки);
		НалоговаяБаза  = НалоговаяБаза - УчтенныеУбытки;
		МинимальныйНалог = ?(НалоговыеКаникулы,
							0,                     // для ИП на налоговых каникулах минимальный налог не рассчитывается
							Окр(Доходы / 100, 0)); // 1% от доходов за год
	КонецЕсли;
	
	НалогСНачалаГода = Окр(НалоговаяБаза * КонтекстРасчета.СтавкаНалогаУСН / 100, 0);
	НалогКУплате     = Окр(НалогСначалаГода - ИсчисленоЗаПредыдущиеПериоды, 0);
	
	// Если налог, рассчитанный в общем порядке по итогам года, меньше минимального налога
	// - требуется исчислить минимальный налог (1% от доходов).
	// Минимальный налог уменьшается на сумму исчисленных авансовых платежей за 9 месяцев (с учетом сумм "к уменьшению")
	// и уплачивается только в случае, если получившаяся разница положительная.
	Если КонтекстРасчета.ЭтоЗавершающийОтчетныйПериод И МинимальныйНалог > НалогСНачалаГода Тогда
		НалогКУплате = Окр(МинимальныйНалог - ИсчисленоЗаПредыдущиеПериоды, 0);
		ЭтоМинимальныйНалог = НалогКУплате > 0;
	КонецЕсли;
	
	// Данные для проводки по начислению налога
	// (проводку формируем только при ненулевом налоге).
	Если НалогКУплате <> 0 Тогда
		
		СтрокаПроводки = ТаблицаПроводок.Добавить();
		
		СтрокаПроводки.СчетДт					= СчетОтраженияНалога;
		СтрокаПроводки.СчетКт					= СчетНачисленияНалога;
		СтрокаПроводки.ПрибылиИУбытки			= Перечисления.ПрибылиИУбытки.НалогНаПрибыль;
		СтрокаПроводки.ВидыПлатежейВГосБюджет	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаПроводки.Сумма					= НалогКУплате;
		СтрокаПроводки.Содержание				= СодержаниеПроводкиНачислениеНалогаУСН(КонтекстРасчета, НалогКУплате, ЭтоМинимальныйНалог);
		
	КонецЕсли;
	
	// Данные для справки-расчета
	СтрокаСправки = ТаблицаСправкаРасчет.Добавить();
	
	ЗаполнитьЗначенияСвойств(СтрокаСправки, КонтекстРасчета);
	
	СтрокаСправки.ПериодРасчета			= КонтекстРасчета.Период;
	СтрокаСправки.ОбъектНалогообложения	= Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы;
	СтрокаСправки.Доходы				= Доходы;
	СтрокаСправки.Расходы				= Расходы;
	СтрокаСправки.ПеренесенныеУбытки	= УчтенныеУбытки;
	СтрокаСправки.НалоговаяБаза			= НалоговаяБаза;
	СтрокаСправки.НалогВсего			= НалогСНачалаГода;
	СтрокаСправки.НалогИсчисленныйВсего	= НалогСНачалаГода;
	СтрокаСправки.МинимальныйНалог		= МинимальныйНалог;
	СтрокаСправки.АвансовыеПлатежи		= ИсчисленоЗаПредыдущиеПериоды;
	СтрокаСправки.НалогКУплате			= НалогКУплате;
	
КонецПроцедуры

Функция НоваяТаблицаНачисленияНалога()

	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("СчетДт",                 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Результат.Колонки.Добавить("СчетКт",                 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Результат.Колонки.Добавить("ПрибылиИУбытки",         Новый ОписаниеТипов("ПеречислениеСсылка.ПрибылиИУбытки"));
	Результат.Колонки.Добавить("ВидыПлатежейВГосБюджет", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	Результат.Колонки.Добавить("Сумма",                  ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	Результат.Колонки.Добавить("Содержание",             ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат Результат;

КонецФункции

Функция НоваяТаблицаСправкиРасчетаНалога()
	
	ТипСтандартнаяСумма                = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	ТипСтандартнаяСуммаНеотрицательная = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля(ДопустимыйЗнак.Неотрицательный);
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("ПериодРасчета", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	Результат.Колонки.Добавить("ОбъектНалогообложения",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"));
	Результат.Колонки.Добавить("ДеятельностьНаТорговомСборе", Новый ОписаниеТипов("Булево"));
	
	Результат.Колонки.Добавить("Доходы",                       ТипСтандартнаяСумма);
	Результат.Колонки.Добавить("Расходы",                      ТипСтандартнаяСумма);
	Результат.Колонки.Добавить("ПеренесенныеУбытки",           ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("НалоговаяБаза",                ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("СтавкаНалогаУСН",
		ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	Результат.Колонки.Добавить("НалогВсего",                   ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("РасходыУменьшающиеНалог",      ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("УплаченныйТорговыйСбор",       ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("ТорговыйСборУменьшающийНалог", ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("ПроцентУменьшенияНалога",
		ОбщегоНазначения.ОписаниеТипаЧисло(3, 0, ДопустимыйЗнак.Неотрицательный));
	Результат.Колонки.Добавить("УменьшениеНалогаФакт",         ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("НалогИсчисленныйВсего",        ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("МинимальныйНалог",             ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("АвансовыеПлатежи",             ТипСтандартнаяСуммаНеотрицательная);
	Результат.Колонки.Добавить("НалогКУплате",                 ТипСтандартнаяСумма);
	
	Возврат Результат;
	
КонецФункции

Функция СодержаниеПроводкиНачислениеНалогаУСН(Реквизиты, НалогКУплате = 0, ЭтоМинимальныйНалог = Ложь)
	
	Содержание = "";
	
	ПредставлениеПериода = ?(Реквизиты.ЭтоЗавершающийОтчетныйПериод,
		ПредставлениеПериода(Реквизиты.НачалоГода, Реквизиты.КонецОтчетногоПериода, "ФП=Истина"),
		ПредставлениеПериода(НачалоКвартала(Реквизиты.КонецОтчетногоПериода), Реквизиты.КонецОтчетногоПериода, "ФП=Истина"));
	
	Если НалогКУплате >= 0 Тогда
		Если Реквизиты.ЭтоЗавершающийОтчетныйПериод Тогда
			ВидНалога = ?(ЭтоМинимальныйНалог, НСтр("ru = 'минимальный налог'"), НСтр("ru = 'налог'"));
			Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Начислен %1, уплачиваемый в связи с применением УСН, за %2'"), ВидНалога, ПредставлениеПериода);
		Иначе
			Содержание = НСтр("ru = 'Начислен авансовый платеж по налогу, уплачиваемому в связи с применением УСН, за %1'");
			Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Содержание, ПредставлениеПериода);
		КонецЕсли;
	Иначе
		ВидПлатежа = ?(Реквизиты.ЭтоЗавершающийОтчетныйПериод,
			НСтр("ru = 'Налог, уплачиваемый в связи с применением УСН'"),
			НСтр("ru = 'Авансовый платеж по налогу, уплачиваемому в связи с применением УСН'"));
		Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1, к уменьшению за %2'"), ВидПлатежа, ПредставлениеПериода);
	КонецЕсли;
	
	Возврат Содержание;
	
КонецФункции

// Функция вызывается из модуля документа РегламентнаяОперация, служит для записи таблиц в движения документа. (см. функцию ПодготовитьТаблицыНачисленияНалогаУСН)
// Параметры:
//	ТаблицаПроводок - ТаблицаЗначений (см. ПодготовитьТаблицыНачисленияНалогаУСН);
//	ТаблицаСправкиРасчета - ТаблицаЗначений (см. ПодготовитьТаблицыНачисленияНалогаУСН);
//	ТаблицаРеквизитов - ТаблицаЗначений (см. модуль менеджера Документы.РегламентнаяОперация.ПодготовитьПараметрыНачисленияНалогаУСН);
//	Движения - движения документа "РегламентнаяОперация";
//	Отказ - Булево - переменная, влияющая на отказ от проведения документа "РегламентнаяОперация".
Процедура СформироватьДвиженияНачислениеНалогаУСН(ДанныеРасчета, ТаблицаРеквизитов, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыНачисленияНалогаУСН(ДанныеРасчета.ТаблицаПроводок, ДанныеРасчета.ТаблицаСправкиРасчета, ТаблицаРеквизитов);
	
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	// проводка по начислению налога
	Для каждого СтрокаПроводки Из Параметры.Проводки Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		ЗаполнитьЗначенияСвойств(Проводка, Реквизиты);
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаПроводки);
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрибылиИУбытки", СтрокаПроводки.ПрибылиИУбытки);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", СтрокаПроводки.ВидыПлатежейВГосБюджет);
		
		Движения.Хозрасчетный.Записывать = Истина;
		
	КонецЦикла;
	
	// данные для справки-расчета
	ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(Движения, Параметры.СправкаРасчет, Параметры.Реквизиты, "РасчетНалогаУСН");
	
	Если ДанныеРасчета.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ДанныеРасчета.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	КонецЕсли;
	
	Если ДанныеРасчета.ТаблицаПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ПрочиеАктивыПассивы.Загрузить(ДанныеРасчета.ТаблицаПрочиеАктивыПассивы);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыНачисленияНалогаУСН(ТаблицаПроводок, ТаблицаСправкиРасчета, ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"      // <Дата> - период движений - дата документа
		+ "Регистратор," // <ДокументСсылка.РегламентнаяОперация> - документ-регистратор движений
		+ "Организация"; // <СправочникСсылка.Организации> - организация
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Проводки
	
	СписокОбязательныхКолонок = ""
		+ "СчетДт,"					// <ПланСчетовСсылка.Хозрасчетный> - счет дебета
		+ "СчетКт,"					// <ПланСчетовСсылка.Хозрасчетный> - счет кредита
		+ "ПрибылиИУбытки,"			// <ПеречислениеСсылка.ПрибылиИУбытки> - субконто счета дебета
		+ "ВидыПлатежейВГосБюджет,"	// <ПеречислениеСсылка.ВидыПлатежейВГосБюджет> - субконто кредита
		+ "Сумма,"					// <Число, 15, 2> - сумма проводки
		+ "Содержание";				// <Строка, 150> - содержание проводки
	
	Параметры.Вставить("Проводки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаПроводок, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.СправкаРасчет
	
	СписокОбязательныхКолонок = ""
		+ "ПериодРасчета,"				// <Дата> - период расчета (конец квартала)
		+ "ОбъектНалогообложения,"		// <ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН> - объект налогообложения
		+ "ДеятельностьНаТорговомСборе,"// <Булево> - если Ложь, запись по налогу УСН в целом; если Истина - запись по налогу от деятельности на торговом сборе
		+ "Доходы,"						// <<Число, 15, 2>> - сумма доходов за период (с начала года)
		+ "Расходы,"					// <<Число, 15, 2>> - сумма расходов за период (с начала года)
		+ "ПеренесенныеУбытки,"			// <<Число, 15, 2>> - сумма убытков, перенесенных на текущий налоговый период и уменьшающих налоговую базу
		+ "НалоговаяБаза,"				// <<Число, 15, 2>> - налоговая база с начала года
		+ "СтавкаНалогаУСН,"			// <<Число, 5, 2>> - ставка налога УСН
		+ "НалогВсего,"					// <<Число, 15, 2>> - сумма налога, рассчитанного от налоговой базы и ставки с начала года
		+ "РасходыУменьшающиеНалог,"	// <<Число, 15, 2>> - сумма расходов, уменьшающих налог при УСН-доходы (с начала года)
		+ "ПроцентУменьшенияНалога,"	// <<Число, 3, 0>> - максимально допустимый процент уменьшения налога на расходы по взносам, больничным и т.п. при УСН-Доходы
		+ "УменьшениеНалогаФакт,"		// <<Число, 15, 2>> - сумма, на которую фактически уменьшен налог (при УСН-доходы) с учетом процента ограничения
		+ "УплаченныйТорговыйСбор,"       // <Число, 15, 2> - сумма уплаченного в течение периода торгового сбора (в пределах исчисленного)
		+ "ТорговыйСборУменьшающийНалог," // <Число, 15, 2> - сумма торгового сбора, на которую можно уменьшить налог в дополнение к расходам по взносам, больничным и т.п.
		+ "НалогИсчисленныйВсего,"		// <<Число, 15, 2>> - сумма фактически исчисленного налога с начала года по текущий квартал включительно
		+ "МинимальныйНалог,"			// <<Число, 15, 2>> - сумма минимального налога (при УСН доходы-расходы) по итогам налогового периода
		+ "АвансовыеПлатежи,"			// <Число, 15, 2> - сумма начисленных в предыдущих кварталах (с начала года) авансовых платежей по налогу
		+ "НалогКУплате";				// <Число, 15, 2> - сумма налога (авансового платежа), начисленного к уплате в текущем периоде
	
	Параметры.Вставить("СправкаРасчет", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСправкиРасчета, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция РасходыПоНалогу(Реквизиты, СправкаРасчет)
	
	ПрочиеАктивыПассивы = РегистрыНакопления.ПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияДоходыРасходыПрочиеАктивыПассивы = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация,
	|	СправкаРасчет.ПериодРасчета,
	|	СправкаРасчет.ОбъектНалогообложения,
	|	СправкаРасчет.НалогКУплате,
	|	СправкаРасчет.МинимальныйНалог,
	|	СправкаРасчет.АвансовыеПлатежи,
	|	&Период
	|ПОМЕСТИТЬ ДанныеРасчетаНалога
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	СправкаРасчет.НалогКУплате <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ДанныеРасчетаНалога.Период,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА ДанныеРасчетаНалога.ОбъектНалогообложения = ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.Доходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы)
	|		КОГДА ДанныеРасчетаНалога.НалогКУплате = ДанныеРасчетаНалога.МинимальныйНалог - ДанныеРасчетаНалога.АвансовыеПлатежи
	|				И ДанныеРасчетаНалога.НалогКУплате > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы)
	|	КОНЕЦ КАК Аналитика,
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициентПересчетаВУпр КАК Сумма,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ДанныеРасчетаНалога.Период,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки),
	|	ЗНАЧЕНИЕ(Справочник.ПрочиеАктивыПассивы.ПустаяСсылка),
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициентПересчетаВУпр,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ДанныеРасчетаНалога.Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНалогаНаПрибыль) КАК ХозяйственнаяОперация,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА ДанныеРасчетаНалога.ОбъектНалогообложения = ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.Доходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы)
	|		КОГДА ДанныеРасчетаНалога.НалогКУплате = ДанныеРасчетаНалога.МинимальныйНалог - ДанныеРасчетаНалога.АвансовыеПлатежи
	|				И ДанныеРасчетаНалога.НалогКУплате > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы)
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК КорСтатья,
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициентПересчетаВУпр КАК Сумма,
	|	ДанныеРасчетаНалога.НалогКУплате КАК СуммаРегл
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога";
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КоэффициентПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ВалютаРегл, ВалютаУпр, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВУпр", КоэффициентПересчетаВУпр);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПрочиеАктивыПассивы = Результат[1].Выбрать();
	ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы = Результат[2].Выбрать();
	
	Пока ВыборкаПрочиеАктивыПассивы.Следующий() Цикл
		
		Запись = ПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаПрочиеАктивыПассивы);
		
	КонецЦикла;
	
	Пока ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы.Следующий() Цикл
		
		Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы);
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ПрочиеАктивыПассивы", ПрочиеАктивыПассивы);
	Результат.Вставить("ДвиженияДоходыРасходыПрочиеАктивыПассивы", ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	
	Возврат Результат;
	
КонецФункции

Функция УплаченныйТорговыйСбор(Организация, НачалоПериода, КонецПериода)
	
	СуммаУплаченногоСбора = 0;
	
	Если КонецПериода >= ДатаНачалаФормирования5РазделаКУДиР() Тогда
		// Уплаченный торговый сбор определяем по данным V раздела КУДиР
		СуммаУплаченногоСбора = УплаченныйТорговыйСборПоДанным5РазделаКУДиР(Организация, НачалоПериода, КонецПериода);
	Иначе
		// По данным бухгалтерского учета
		СуммаУплаченногоСбора = УплаченныйТорговыйСборПоДаннымБухгалтерскогоУчета(Организация, НачалоПериода, КонецПериода);
	КонецЕсли;
	
	Возврат СуммаУплаченногоСбора;
	
КонецФункции

Функция УплаченныйТорговыйСборПоДанным5РазделаКУДиР(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовРаздел5Обороты.СуммаТорговогоСбора КАК СуммаТорговогоСбора
	|ПОМЕСТИТЬ УплатаТорговогоСбора
	|ИЗ
	|	Документ.ЗаписьКУДиР.УплаченныйТорговыйСбор КАК КнигаУчетаДоходовИРасходовРаздел5Обороты
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовРаздел5Обороты.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовРаздел5Обороты.СуммаРеглОборот
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|				И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				И СтатьяДоходовРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ТорговыйСбор)) КАК КнигаУчетаДоходовИРасходовРаздел5Обороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(УплатаТорговогоСбора.СуммаТорговогоСбора), 0) КАК СуммаТорговогоСбора
	|ИЗ УплатаТорговогоСбора"
	;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СуммаТорговогоСбора;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция УплаченныйТорговыйСборПоДаннымБухгалтерскогоУчета(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидыНалоговыхПлатежей", ВидыНалоговыхПлатежей());
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	
	Запрос.УстановитьПараметр("СчетаУчетаДенежныхСредств", Счета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаТорговогоСбора
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговыйСбор),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			СчетКт В (&СчетаУчетаДенежныхСредств) И НЕ СчетКт.Забалансовый,
	|			,
	|			Организация = &Организация
	|				И СубконтоДт1 В (&ВидыНалоговыхПлатежей)) КАК ХозрасчетныйОборотыДтКт"
	;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.СуммаТорговогоСбора;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СторноДоходов

Процедура СторнироватьОтраженныеДоходы(ВременныеТаблицы, КоличествоОбработанныхДанных = 0)
	
	ВыборкаДокументовСторнирования = ВыборкаДокументовДляЗаполненияСторно(ВременныеТаблицы);
	
	Пока ВыборкаДокументовСторнирования.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
		НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокументовСторнирования.Регистратор);
			
		Если НЕ ЗначениеЗаполнено(НаборЗаписей.Отбор.Регистратор.Значение) Тогда
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Сторно доходов по ЕНВД при УСН.Не выполнена запись доходов в регистр КУДиР.'", ОбщегоНазначения.КодОсновногоЯзыка()),  // строка записывается в ИБ
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов,
				ВыборкаДокументовСторнирования.Регистратор,
				НСтр("ru = 'Документ, сторнирующий доходы, не является регистратором для служебного регистра УСН.'", ОбщегоНазначения.КодОсновногоЯзыка()), // строка записывается в ИБ
				РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
									 
			Продолжить;
			
		КонецЕсли;
			
		Выборка = ВыборкаДокументовСторнирования.Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ЗаписьСторно = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьСторно, Выборка);
			
			ДополнительнаяИнформация = "";
			Если Выборка.ДоходЕНВД > 0 Тогда
				ДополнительнаяИнформация = НСтр("ru = 'Не признаны доходы, по причине реализации по деятельности ЕНВД.'");
			Иначе
				ДополнительнаяИнформация = НСтр("ru = 'Не признаны доходы в части реализации комиссионного товара.'");
			КонецЕсли;
			ЗаписьСторно.Содержание = СодержаниеДохода(Выборка.ХозяйственнаяОперация, ДополнительнаяИнформация);
			ЗаписьСторно.РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента(Выборка.Регистратор, Выборка);
			
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
		
		КонецЦикла;
		
		НаборЗаписей.Записать(Ложь);
		
	КонецЦикла;
	
	ВыборкаДокументовСторнирования = ВыборкаДокументовДляЗаполненияСторноОРП(ВременныеТаблицы);
	ПлатежиБанка = Новый Соответствие;
	
	Пока ВыборкаДокументовСторнирования.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
		НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокументовСторнирования.Регистратор);
			
		Если НЕ ЗначениеЗаполнено(НаборЗаписей.Отбор.Регистратор.Значение) Тогда
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Сторно доходов по ЕНВД при УСН.Не выполнена запись доходов в регистр КУДиР.'", ОбщегоНазначения.КодОсновногоЯзыка()),  // строка записывается в ИБ
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов,
				ВыборкаДокументовСторнирования.Регистратор,
				НСтр("ru = 'Документ, сторнирующий доходы, не является регистратором для служебного регистра УСН.'", ОбщегоНазначения.КодОсновногоЯзыка()), // строка записывается в ИБ
				РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
									 
			Продолжить;
			
		КонецЕсли;
			
		Выборка = ВыборкаДокументовСторнирования.Выбрать();
		КСторнированию = ?(ВыборкаДокументовСторнирования.СуммаЕНВД > 0, ВыборкаДокументовСторнирования.СуммаЕНВД - ВыборкаДокументовСторнирования.УчтеноЕНВД,
			ВыборкаДокументовСторнирования.ДоходВсего - ВыборкаДокументовСторнирования.НеПризнано);
		
		Пока Выборка.Следующий() Цикл
			
			ОстатокПлатежа = ПлатежиБанка.Получить(Выборка.Платеж);
			ОстатокПлатежа = ?(ОстатокПлатежа = Неопределено, Выборка.СуммаОплаты, ОстатокПлатежа);
			Если ОстатокПлатежа = Неопределено Тогда
				ПлатежиБанка.Вставить(Выборка.СуммаОплаты);
			КонецЕсли;
			Если ОстатокПлатежа = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаписьСторно = НаборЗаписей.Добавить();
			
			ЗаписьСторно.Период = Выборка.Период;
			ЗаписьСторно.Регистратор = Выборка.Регистратор;
			ЗаписьСторно.Организация = Выборка.Организация;
			ЗаписьСторно.ДокументВозникновенияДоходовРасходов = Выборка.Платеж;
			ТекущаяСуммаСторнирования = Мин(КСторнированию, Выборка.СуммаОплатыПлатежнымиКартами, Выборка.СуммаОплаты);
			ЗаписьСторно.Графа5 = - ТекущаяСуммаСторнирования;
			КСторнированию = КСторнированию - ТекущаяСуммаСторнирования;
			Если ВыборкаДокументовСторнирования.СуммаЕНВД > 0 Тогда
				ЗаписьСторно.ДоходЕНВД = ТекущаяСуммаСторнирования;
			КонецЕсли;
			
			ПлатежиБанка.Вставить(Выборка.Платеж, ОстатокПлатежа - ТекущаяСуммаСторнирования);
			
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
		
		КонецЦикла;
		
		НаборЗаписей.Записать(Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТребуетсяСторноДоходовКУДиР(Параметры) Экспорт
	
	ВременныеТаблицыДляЗаполненияСторно = ВременныеТаблицыДляЗаполненияСторно(Параметры);
	ТаблицаРегистраторовДоходов = ВременныеТаблицыДляЗаполненияСторно.Таблицы.Найти("ТаблицаРегистраторовДоходов");
	
	Если ТаблицаРегистраторовДоходов = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Не ТаблицаРегистраторовДоходов.ПолучитьДанные().Пустой();
	КонецЕсли;
	
КонецФункции

#Область Запросы

Функция ВременныеТаблицыДляЗаполненияСторно(Параметры)
	
	ВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	
	СтруктураПараметровЗапроса = Параметры;
	Если Параметры.Свойство("Организация") Тогда
		СтруктураПараметровЗапроса.Вставить("МассивОрганизаций", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.Организация));
	КонецЕсли;
	ДополнитьПараметрамиПоУмолчанию(СтруктураПараметровЗапроса);
	Запрос = ИнициализироватьЗапросПоПараметрам(СтруктураПараметровЗапроса, ВременныеТаблицы);
	
	Запрос.Текст = ТекстЗапросаСторноДоходов();
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ТекстЗапросаСписанийДляСторноДоходов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор КАК Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам КАК Аналитика,
	|	Аналитика.Организация КАК Организация,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК НДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) КАК ВидДеятельности,
	|	ИСТИНА КАК ПризнаватьДоходамиПриУСН,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ СписанияВлияющиеНаДоходы
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	Аналитика.Организация В (&МассивОрганизаций)
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачДата И &КонДата
	|	И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам,
	|	Аналитика.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам,
	|	Аналитика.Организация КАК Организация,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл),
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|	ЛОЖЬ,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	Аналитика.Организация В (&МассивОрганизаций)
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачДата И &КонДата
	|	И (ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам,
	|	Аналитика.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Аналитика,
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДоходовДляАнализаНеобходимостиСторно()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентамиПоДокументам.Период КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентамиПоДокументам.ПредоплатаРегл <> 0
	|			ТОГДА РасчетыСКлиентамиПоДокументам.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентамиПоДокументам.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентамиПоДокументам.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.РасчетныйДокумент ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентамиПоДокументам.РасчетныйДокумент
	|	КОНЕЦ КАК РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентамиПоДокументам.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.АналитикаУчетаПоПартнерам ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам
	|	КОНЕЦ КАК Аналитика,
	|	Аналитика.Организация КАК Организация,
	|	РасчетыСКлиентамиПоДокументам.ЗаказКлиента КАК ЗаказКлиента,
	|	ЕСТЬNULL(Взаимозачеты.ДолгРегл, РасчетыСКлиентамиПоДокументам.ДолгРегл) КАК Сумма
	|ПОМЕСТИТЬ ДоходыДляПроверкиНаСторно
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Взаимозачеты
	|		ПО (РасчетыСКлиентамиПоДокументам.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности)
	|			И (РасчетыСКлиентамиПоДокументам.ПредоплатаРегл <> 0)
	|			И (РасчетыСКлиентамиПоДокументам.Регистратор = Взаимозачеты.Регистратор)
	|			И (РасчетыСКлиентамиПоДокументам.РасчетныйДокумент <> Взаимозачеты.РасчетныйДокумент)
	|ГДЕ
	|	Аналитика.Организация В (&МассивОрганизаций)
	|	И РасчетыСКлиентамиПоДокументам.Период МЕЖДУ &НачДата И &КонДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент,
	|	Аналитика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРегистраторовДоходов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентамиПоДокументам.Период КАК Период,
	|	РасчетыСКлиентамиПоДокументам.Регистратор КАК Регистратор,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент КАК ДокументВозникновенияДоходов,
	|	СписанияВлияющиеНаДоходы.Организация КАК Организация,
	|	СписанияВлияющиеНаДоходы.ХозяйственнаяОперация,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА НЕ СписанияВлияющиеНаДоходы.ПризнаватьДоходамиПриУСН И СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|				ТОГДА СписанияВлияющиеНаДоходы.НДС
	|			КОГДА НЕ СписанияВлияющиеНаДоходы.ПризнаватьДоходамиПриУСН И СписанияВлияющиеНаДоходы.Сумма > РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|				ТОГДА СписанияВлияющиеНаДоходы.НДС * РасчетыСКлиентамиПоДокументам.ПредоплатаРегл / СписанияВлияющиеНаДоходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА СписанияВлияющиеНаДоходы.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) И СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|				ТОГДА СписанияВлияющиеНаДоходы.Сумма
	|			КОГДА СписанияВлияющиеНаДоходы.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) И СписанияВлияющиеНаДоходы.Сумма > РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|				ТОГДА РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЕНВД,
	|	СРЕДНЕЕ(ВЫБОР КОГДА СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентамиПоДокументам.ПредоплатаРегл
	|				ТОГДА СписанияВлияющиеНаДоходы.Сумма
	|				ИНАЧЕ РасчетыСКлиентамиПоДокументам.ПредоплатаРегл КОНЕЦ) КАК СуммаУСН
	|ПОМЕСТИТЬ ТаблицаРегистраторовДоходов
	|ИЗ
	|	СписанияВлияющиеНаДоходы КАК СписанияВлияющиеНаДоходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ПО СписанияВлияющиеНаДоходы.Регистратор = РасчетыСКлиентамиПоДокументам.Регистратор
	|			И СписанияВлияющиеНаДоходы.Аналитика = РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам
	|			И СписанияВлияющиеНаДоходы.Период = РасчетыСКлиентамиПоДокументам.Период
	|			И НЕ СписанияВлияющиеНаДоходы.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			И (РасчетыСКлиентамиПоДокументам.Регистратор <> РасчетыСКлиентамиПоДокументам.РасчетныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	РасчетыСКлиентамиПоДокументам.Регистратор,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|	СписанияВлияющиеНаДоходы.Организация,
	|	СписанияВлияющиеНаДоходы.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходыДляПроверкиНаСторно.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|				ТОГДА ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|							ТОГДА (ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл)
	|							ИНАЧЕ ДоходыДляПроверкиНаСторно.Сумма * (ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) / ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл КОНЕЦ
	|			ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					И ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					И ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл > ДоходыДляПроверкиНаСторно.Сумма
	|				ТОГДА ДоходыДляПроверкиНаСторно.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|					ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|					ИЛИ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|							ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|							ИНАЧЕ ДоходыДляПроверкиНаСторно.Сумма КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|ИЗ
	|	ДоходыДляПроверкиНаСторно КАК ДоходыДляПроверкиНаСторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО ДоходыДляПроверкиНаСторно.РасчетныйДокумент = ВыручкаИСебестоимостьПродаж.Регистратор
	|			И ДоходыДляПроверкиНаСторно.Аналитика = ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам
	|			И (ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыДляПроверкиНаСторно.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументВозникновенияДоходов,
	|	Организация";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыборкаДокументовДляЗаполненияСторно(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = ТекстЗапросаВыборкиДокументовДляЗаполненияСторно();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Функция ВыборкаДокументовДляЗаполненияСторноОРП(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = ТекстЗапросаВыборкиДокументовДляЗаполненияСторноОРП();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Функция ТекстЗапросаДоходовДляАнализаНеобходимостиСторноНоваяАрхитектураРасчетов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентами.Период КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0
	|			ТОГДА РасчетыСКлиентами.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентами.ДокументРегистратор
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.РасчетныйДокумент ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентами.РасчетныйДокумент
	|	КОНЕЦ КАК РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.АналитикаУчетаПоПартнерам ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ РасчетыСКлиентами.АналитикаУчетаПоПартнерам
	|	КОНЕЦ КАК Аналитика,
	|	Аналитика.Организация КАК Организация,
	|	РасчетыСКлиентами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов КАК ОбъектРасчетовДоговор,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента) ТОГДА РасчетыСКлиентами.ПредоплатаРегл ИНАЧЕ РасчетыСКлиентами.ДолгРегл КОНЕЦ + ЕСТЬNULL(Взаимозачеты.ДолгРегл, 0)) КАК Сумма
	|ПОМЕСТИТЬ ДоходыДляПроверкиНаСторно
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК Взаимозачеты
	|		ПО (РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности)
	|			И (РасчетыСКлиентами.ПредоплатаРегл <> 0)
	|			И (РасчетыСКлиентами.ДокументРегистратор = Взаимозачеты.ДокументРегистратор)
	|			И (РасчетыСКлиентами.РасчетныйДокумент <> Взаимозачеты.РасчетныйДокумент)
	|ГДЕ
	|	Аналитика.Организация В (&МассивОрганизаций)
	|	И РасчетыСКлиентами.Период МЕЖДУ &НачДата И &КонДата
	|	И РасчетыСКлиентами.РасчетныйДокумент <> РасчетыСКлиентами.ДокументРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Период,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0
	|			ТОГДА РасчетыСКлиентами.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентами.ДокументРегистратор
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.РасчетныйДокумент ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСКлиентами.РасчетныйДокумент
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ДокументРегистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|				И РасчетыСКлиентами.ПредоплатаРегл <> 0 И НЕ Взаимозачеты.АналитикаУчетаПоПартнерам ЕСТЬ NULL
	|			ТОГДА Взаимозачеты.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ РасчетыСКлиентами.АналитикаУчетаПоПартнерам
	|	КОНЕЦ,
	|	Аналитика.Организация,
	|	РасчетыСКлиентами.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент,
	|	Аналитика";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРегистраторовДоходовНоваяАрхитектураРасчетов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентами.Период КАК Период,
	|	РасчетыСКлиентами.Регистратор КАК Регистратор,
	|	РасчетыСКлиентами.РасчетныйДокумент КАК ДокументВозникновенияДоходов,
	|	СписанияВлияющиеНаДоходы.Организация КАК Организация,
	|	СписанияВлияющиеНаДоходы.ХозяйственнаяОперация,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА НЕ СписанияВлияющиеНаДоходы.ПризнаватьДоходамиПриУСН И СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентами.Сумма
	|				ТОГДА СписанияВлияющиеНаДоходы.НДС
	|			КОГДА НЕ СписанияВлияющиеНаДоходы.ПризнаватьДоходамиПриУСН И СписанияВлияющиеНаДоходы.Сумма > РасчетыСКлиентами.Сумма
	|				ТОГДА СписанияВлияющиеНаДоходы.НДС * РасчетыСКлиентами.Сумма / СписанияВлияющиеНаДоходы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА СписанияВлияющиеНаДоходы.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) И СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентами.Сумма
	|				ТОГДА СписанияВлияющиеНаДоходы.Сумма
	|			КОГДА СписанияВлияющиеНаДоходы.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) И СписанияВлияющиеНаДоходы.Сумма > РасчетыСКлиентами.Сумма
	|				ТОГДА РасчетыСКлиентами.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЕНВД,
	|	СРЕДНЕЕ(ВЫБОР КОГДА СписанияВлияющиеНаДоходы.Сумма <= РасчетыСКлиентами.Сумма
	|				ТОГДА СписанияВлияющиеНаДоходы.Сумма
	|				ИНАЧЕ РасчетыСКлиентами.Сумма КОНЕЦ) КАК СуммаУСН
	|ПОМЕСТИТЬ ТаблицаРегистраторовДоходов
	|ИЗ
	|	СписанияВлияющиеНаДоходы КАК СписанияВлияющиеНаДоходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоходыДляПроверкиНаСторно КАК РасчетыСКлиентами
	|		ПО СписанияВлияющиеНаДоходы.Регистратор = РасчетыСКлиентами.Регистратор
	|			И СписанияВлияющиеНаДоходы.Аналитика = РасчетыСКлиентами.Аналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.Регистратор,
	|	РасчетыСКлиентами.РасчетныйДокумент,
	|	СписанияВлияющиеНаДоходы.Организация,
	|	СписанияВлияющиеНаДоходы.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходыДляПроверкиНаСторно.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|				ТОГДА ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|							ТОГДА (ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл)
	|							ИНАЧЕ ДоходыДляПроверкиНаСторно.Сумма * (ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) / ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл КОНЕЦ
	|			ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ОбъектРасчетовДоговор
	|					И ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|			КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ОбъектРасчетовДоговор
	|					И ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл > ДоходыДляПроверкиНаСторно.Сумма
	|				ТОГДА ДоходыДляПроверкиНаСторно.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|					ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|					ИЛИ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ОбъектРасчетовДоговор
	|				ТОГДА ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл <= ДоходыДляПроверкиНаСторно.Сумма
	|							ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл
	|							ИНАЧЕ ДоходыДляПроверкиНаСторно.Сумма КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|ИЗ
	|	ДоходыДляПроверкиНаСторно КАК ДоходыДляПроверкиНаСторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО ДоходыДляПроверкиНаСторно.РасчетныйДокумент = ВыручкаИСебестоимостьПродаж.Регистратор
	|			И ДоходыДляПроверкиНаСторно.Аналитика = ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам
	|			И (ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|				ИЛИ ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					И ДоходыДляПроверкиНаСторно.ОбъектРасчетовДоговор)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыДляПроверкиНаСторно.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Организация,
	|	ВыручкаИСебестоимостьПродаж.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументВозникновенияДоходов,
	|	Организация";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПлатежиОтБанка()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежиОтБанка.Регистратор КАК Регистратор,
	|	ПлатежиОтБанка.Организация КАК Организация,
	|	ПлатежиОтБанка.Период КАК Период,
	|	ПлатежиОтБанка.СуммаРегл КАК Сумма,
	|	ПлатежиОтБанка.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ПлатежиОтБанка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваВПути КАК ПлатежиОтБанка
	|ГДЕ
	|	ПлатежиОтБанка.Период МЕЖДУ &НачДата И &КонДата
	|	И ПлатежиОтБанка.Организация В (&МассивОрганизаций)
	|	И ПлатежиОтБанка.ВидПереводаДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)
	|	И ПлатежиОтБанка.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ ПлатежиОтБанка.Регистратор ССЫЛКА Документ.РасчетКурсовыхРазниц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРозничныеПродажиВлияющиеНаДоходы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор КАК Регистратор,
	|	Аналитика.Организация КАК Организация,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК НДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл ИНАЧЕ 0 КОНЕЦ) КАК СуммаЕНВД,
	|	СУММА(ВЫБОР КОГДА ВыручкаИСебестоимостьПродаж.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИЛИ ВыручкаИСебестоимостьПродаж.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл ИНАЧЕ 0 КОНЕЦ) КАК СуммаКомиссии
	|ПОМЕСТИТЬ РозничныеПродажиВлияющиеНаДоходы
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1 ПлатежиОтБанка.Регистратор КАК Регистратор
	|			ИЗ ПлатежиОтБанка КАК ПлатежиОтБанка) КАК ПлатежиОтБанка
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Аналитика.Организация В(&МассивОрганизаций)
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачДатаАнализаОРП И &КонДата
	|	И ВыручкаИСебестоимостьПродаж.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	Аналитика.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Регистратор,
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРозничныеПродажиТребующиеСторнирования()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РозничныеПродажиВлияющиеНаДоходы.Период,
	|	РозничныеПродажиВлияющиеНаДоходы.Регистратор,
	|	РозничныеПродажиВлияющиеНаДоходы.Организация,
	|	РозничныеПродажиВлияющиеНаДоходы.НДС,
	|	РозничныеПродажиВлияющиеНаДоходы.Сумма,
	|	РозничныеПродажиВлияющиеНаДоходы.СуммаЕНВД,
	|	РозничныеПродажиВлияющиеНаДоходы.СуммаКомиссии,
	|	СУММА(ЕСТЬNULL(УчтенныеДоходы.ДоходЕНВД, 0)) КАК УчтеноЕНВД,
	|	СУММА(ЕСТЬNULL(УчтенныеДоходы.Графа4 - УчтенныеДоходы.Графа5, 0)) КАК НеПризнано,
	|	СУММА(ЕСТЬNULL(УчтенныеДоходы.Графа4, 0)) КАК ДоходВсего,
	|	СУММА(ЕСТЬNULL(УчтенныеДоходы.Графа5, 0)) КАК Признано
	|ПОМЕСТИТЬ РозничныеПродажиТребующиеСторнирования
	|ИЗ
	|	РозничныеПродажиВлияющиеНаДоходы КАК РозничныеПродажиВлияющиеНаДоходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК УчтенныеДоходы
	|		ПО РозничныеПродажиВлияющиеНаДоходы.Организация = УчтенныеДоходы.Организация
	|			И РозничныеПродажиВлияющиеНаДоходы.Регистратор = УчтенныеДоходы.Регистратор
	|			И (УчтенныеДоходы.Период МЕЖДУ &НачДатаАнализаОРП И &КонДата)
	|СГРУППИРОВАТЬ ПО
	|	РозничныеПродажиВлияющиеНаДоходы.Период,
	|	РозничныеПродажиВлияющиеНаДоходы.Регистратор,
	|	РозничныеПродажиВлияющиеНаДоходы.Организация,
	|	РозничныеПродажиВлияющиеНаДоходы.НДС,
	|	РозничныеПродажиВлияющиеНаДоходы.Сумма,
	|	РозничныеПродажиВлияющиеНаДоходы.СуммаЕНВД,
	|	РозничныеПродажиВлияющиеНаДоходы.СуммаКомиссии
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(УчтенныеДоходы.ДоходЕНВД, 0)) < РозничныеПродажиВлияющиеНаДоходы.СуммаЕНВД
	|	ИЛИ СУММА(ЕСТЬNULL(УчтенныеДоходы.Графа4 - УчтенныеДоходы.Графа5, 0)) < РозничныеПродажиВлияющиеНаДоходы.СуммаКомиссии И РозничныеПродажиВлияющиеНаДоходы.СуммаЕНВД = 0";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРозничныеПродажиТребующиеСторнированияСПлатежами()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РозничныеПродажиТребующиеСторнирования.Период КАК Период,
	|	РозничныеПродажиТребующиеСторнирования.Регистратор КАК Регистратор,
	|	РозничныеПродажиТребующиеСторнирования.Организация КАК Организация,
	|	РозничныеПродажиТребующиеСторнирования.НДС КАК НДС,
	|	РозничныеПродажиТребующиеСторнирования.Сумма КАК Сумма,
	|	РозничныеПродажиТребующиеСторнирования.СуммаЕНВД КАК СуммаЕНВД,
	|	РозничныеПродажиТребующиеСторнирования.СуммаКомиссии КАК СуммаКомиссии,
	|	РозничныеПродажиТребующиеСторнирования.УчтеноЕНВД КАК УчтеноЕНВД,
	|	РозничныеПродажиТребующиеСторнирования.НеПризнано КАК НеПризнано,
	|	РозничныеПродажиТребующиеСторнирования.ДоходВсего КАК ДоходВсего,
	|	РозничныеПродажиТребующиеСторнирования.Признано КАК Признано,
	|	ПродажиВСчетПлатежейОтБанка.Контрагент КАК Контрагент,
	|	СУММА(ПродажиВСчетПлатежейОтБанка.СуммаРегл) КАК СуммаОплатыПлатежнымиКартами
	|ПОМЕСТИТЬ РозничныеПродажиТребующиеСторнированияСПлатежами
	|ИЗ
	|	РозничныеПродажиТребующиеСторнирования КАК РозничныеПродажиТребующиеСторнирования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВПути КАК ПродажиВСчетПлатежейОтБанка
	|		ПО РозничныеПродажиТребующиеСторнирования.Организация = ПродажиВСчетПлатежейОтБанка.Организация
	|			И РозничныеПродажиТребующиеСторнирования.Регистратор = ПродажиВСчетПлатежейОтБанка.Регистратор
	|			И (ПродажиВСчетПлатежейОтБанка.Период МЕЖДУ &НачДатаАнализаОРП И &КонДата)
	|			И (ПродажиВСчетПлатежейОтБанка.ВидПереводаДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу))
	|			И (ПродажиВСчетПлатежейОтБанка.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|
	|СГРУППИРОВАТЬ ПО
	|	РозничныеПродажиТребующиеСторнирования.Период,
	|	РозничныеПродажиТребующиеСторнирования.Регистратор,
	|	РозничныеПродажиТребующиеСторнирования.Организация,
	|	РозничныеПродажиТребующиеСторнирования.НДС,
	|	РозничныеПродажиТребующиеСторнирования.Сумма,
	|	РозничныеПродажиТребующиеСторнирования.СуммаЕНВД,
	|	РозничныеПродажиТребующиеСторнирования.СуммаКомиссии,
	|	РозничныеПродажиТребующиеСторнирования.УчтеноЕНВД,
	|	РозничныеПродажиТребующиеСторнирования.НеПризнано,
	|	РозничныеПродажиТребующиеСторнирования.ДоходВсего,
	|	РозничныеПродажиТребующиеСторнирования.Признано,
	|	ПродажиВСчетПлатежейОтБанка.Контрагент";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПризнаниеРасходов

#Область ЗаполнениеРегистровПоДаннымВыборки

Процедура ЗаполнитьРегистрыРасходовУСН(ИсходныеДанные, КоэффициентОтнесенияРасходовКПрочейДеятельности, Движения, КоличествоОбработанныхДанных = 0)
	
	ВидыДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат;
	ВидыРасходов = Перечисления.ВидыРасходовУСН;
	Результат = ВыборкаДокументовДляЗаполненияРасходов(ИсходныеДанные);
	ВыборкаДокументов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОстатков = ВыборкаТаблицыОстатков(ИсходныеДанные);
	ВыборкаСуммыОплатПоДокументам = ВыборкаСуммОплат(ИсходныеДанные);
	
	НаборЗаписейКУДиР = Движения.КнигаУчетаДоходовИРасходов;
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Если ВыборкаДокументов.СуммаОплаты > 0 Тогда
			// Это документ оплаты, найдем общую сумму оплаты по этому документу...
			СтруктураПоиска = Новый Структура("ДокументОплаты", ВыборкаДокументов.Регистратор);
			Если ВыборкаСуммыОплатПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
				СуммаОплатыПоДокументу = ВыборкаСуммыОплатПоДокументам.Сумма;
			Иначе
				ВыборкаСуммыОплатПоДокументам.Сбросить();
				СуммаОплатыПоДокументу = ?(ВыборкаСуммыОплатПоДокументам.НайтиСледующий(СтруктураПоиска), ВыборкаСуммыОплатПоДокументам.Сумма, 0);
			КонецЕсли;
		КонецЕсли;
		
		ДвиженияДокумента = Новый Структура;
		
		Выборка = ВыборкаДокументов.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаОстатка = СтрокаОстаткаПоПараметрамВыборки(ТаблицаОстатков, Выборка);
			
			РасходыВсего = 0;
			РасходыУСН = 0;
			РасходыЕНВД = 0;
			Содержание = СодержаниеРасхода(Выборка, Выборка.ВидРасходов);
			
			КоэффициентЕНВД = 0;
			Если КоэффициентОтнесенияРасходовКПрочейДеятельности <> Неопределено И Выборка.ПризнаватьРасходамиПриУСН Тогда
				КоэффициентЕНВД = ?(Выборка.ВидДеятельности = ВидыДеятельности.ОсобыйПорядокНалогообложения, 1, 0);
				Если Выборка.ВидДеятельности = ВидыДеятельности.РаспределяемыеЗатраты Тогда
					КоэффициентЕНВД = КоэффициентОтнесенияРасходовКПрочейДеятельности;
				КонецЕсли;
			КонецЕсли;
			
			НаборЗаписей = НаборЗаписейРегистраПоВидуРасходов(ДвиженияДокумента, СтрокаОстатка.ВидРасходов, Выборка.Регистратор, Выборка.ДокументВозникновенияРасходов);
			Если НаборЗаписей = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ВсегоКПризнанию = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.РасходыВсего;
			
			#Область ОплатаРасходов
			
			Если Выборка.ВидОперации = "Аванс" ИЛИ Выборка.ВидОперации = "Оплата" ИЛИ Выборка.ВидОперации = "АвансБезРазбивкиПоДокументам"
					ИЛИ Выборка.ВидОперации = "ОплатаБезРазбивкиПоДокументам" Тогда
				
				ОсталосьОплатитьПоТекущейВыборке = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.СуммаОплаты;
				
				Если (ОсталосьОплатитьПоТекущейВыборке > 0 ИЛИ Выборка.ВидРасходов = ВидыРасходов.Лизинг
					ИЛИ Выборка.ВидРасходов = ВидыРасходов.Кредиты) И СуммаОплатыПоДокументу > 0 Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, НДС, СуммаОплаты");
					Если Выборка.ВидРасходов = ВидыРасходов.Лизинг ИЛИ Выборка.ВидРасходов = ВидыРасходов.Кредиты Тогда
						НоваяЗапись.СуммаОплаты = Мин(Выборка.СуммаОплаты, СуммаОплатыПоДокументу);
					Иначе
						НоваяЗапись.СуммаОплаты = Мин(Выборка.СуммаОплаты, СуммаОплатыПоДокументу, ОсталосьОплатитьПоТекущейВыборке);
					КонецЕсли;
					
					СуммаОплатыПоДокументу = СуммаОплатыПоДокументу - НоваяЗапись.СуммаОплаты;
					
					ОтгруженоНоНеПризнано = ВсегоКПризнанию;
					Если ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						ОтгруженоНоНеПризнано = ?(СтрокаОстатка.СуммаОтгрузки - СтрокаОстатка.РасходыВсего > 0, СтрокаОстатка.СуммаОтгрузки - СтрокаОстатка.РасходыВсего, 0);
					КонецЕсли;
					
					Если Не ВидыРасходов.ПризнаетсяКакОСНМА(Выборка.ВидРасходов) И Выборка.Период <= Выборка.ДатаОплаты Тогда
						
						ПризнаваемаяСумма = Мин(НоваяЗапись.СуммаОплаты, ВсегоКПризнанию);
						СуммаНеПризнания = ?(Не Выборка.ПризнаватьРасходамиПриУСН, ПризнаваемаяСумма, 0);
						СуммаНеПризнанияЕНВД = Окр(ПризнаваемаяСумма * КоэффициентЕНВД, 2);
						СуммаПризнания = ПризнаваемаяСумма - СуммаНеПризнания - СуммаНеПризнанияЕНВД;
						СуммаПризнания = Мин(СуммаПризнания, ОтгруженоНоНеПризнано, ВсегоКПризнанию);
						
						РасходыВсего = СуммаПризнания + СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						РасходыУСН = СуммаПризнания;
						РасходыЕНВД = СуммаНеПризнанияЕНВД;
						НоваяЗапись.Признано = РасходыУСН;
						НоваяЗапись.НеПризнано = СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						
					КонецЕсли;
					СтрокаОстатка.СуммаОплаты =  СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
					
				КонецЕсли;
				
			КонецЕсли;
			
			#КонецОбласти
			
			#Область СписаниеРасходов
			
			Если Выборка.ВидОперации = "Списание" Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
				
				СуммаНеПризнания = ?(Не Выборка.ПризнаватьРасходамиПриУСН, Выборка.СуммаОтгрузки, 0);
				СуммаНеПризнанияЕНВД = Окр(Выборка.СуммаОтгрузки * КоэффициентЕНВД, 2);
				СуммаПризнания = Выборка.СуммаОтгрузки - СуммаНеПризнания - СуммаНеПризнанияЕНВД;
				
				Если Выборка.ВидРасходов <> СтрокаОстатка.ВидРасходов Тогда
					
					// Реклассификация расходов
					НоваяЗапись.ВидРасходов = СтрокаОстатка.ВидРасходов;
					
					// Оплату переносим когда расходы признаются (а ранее были не признаны):
					ПереносимаяСуммаОплаты = 0;
					Если СуммаПризнания > 0 И ВсегоКПризнанию = 0 Тогда
						ПереносимаяСуммаОплаты = Мин(СтрокаОстатка.СуммаОплаты, Выборка.СуммаОтгрузки);
					КонецЕсли;
					// Оплату переносим когда оплат больше не будет:
					ОсталосьОплатить = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.СуммаОплаты;
					Если ОсталосьОплатить < Выборка.СуммаОтгрузки Тогда
						ПереносимаяСуммаОплаты = Выборка.СуммаОтгрузки - ОсталосьОплатить;
					КонецЕсли;
					
					// Для товаров, оплату переносим когда расходы признаются, но суммы по оплаченным расходам еще не признаны:
					Если ВидыРасходов.ВидыРасходовТовары().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ПереносимаяСуммаОплаты = 0 Тогда
						ПризнанныеПодтвержденные = СтрокаОстатка.СуммаОтгрузки - (СтрокаОстатка.РасходыВсего - СтрокаОстатка.Признано);
						ПризнанныеПодтвержденные = ?(ПризнанныеПодтвержденные > 0, ПризнанныеПодтвержденные, 0);
						НеПодтвержденнаяОплата = СтрокаОстатка.СуммаОплаты - ПризнанныеПодтвержденные;
						НеПодтвержденнаяОплата = ?(НеПодтвержденнаяОплата > 0, НеПодтвержденнаяОплата, 0);
						ПереносимаяСуммаОплаты = Мин(НеПодтвержденнаяОплата, Выборка.СуммаОтгрузки);
					КонецЕсли;
					
					СодержаниеНеПризнания = СтрЗаменить(СодержаниеРасхода(Выборка, СтрокаОстатка.ВидРасходов), НСтр("ru = 'Признаны'"), НСтр("ru = 'Не признаны'"));
					ПереносимыйНДС = ?(СтрокаОстатка.СуммаРасходов = 0, 0, Выборка.СуммаОтгрузки * СтрокаОстатка.НДС / СтрокаОстатка.СуммаРасходов);
					
					// Уменьшаем текущие записи регистра
					НоваяЗапись.СуммаРасходов = -Выборка.СуммаОтгрузки;
					НоваяЗапись.НДС = -ПереносимыйНДС;
					НоваяЗапись.СуммаОплаты = -ПереносимаяСуммаОплаты;
					Если ВидыРасходов.ВидыРасходовОСНМА().Найти(СтрокаОстатка.ВидРасходов) = Неопределено Тогда
						// Для материалов и товаров обнуляем сумму отгрузки
						НоваяЗапись.СуммаОтгрузки = 0;
					КонецЕсли;
					
					// Был товар, стал ОС/НМА:
					Если ВидыРасходов.ВидыРасходовТовары().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовОСНМА().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.НеПризнано = ?(НоваяЗапись.Признано = 0 И СтрокаОстатка.РасходыВсего = СтрокаОстатка.СуммаРасходов, НоваяЗапись.СуммаРасходов, 0);
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с товаров на ОС/НМА'");
						
					КонецЕсли;
					
					// Был материал, стал ОС/НМА:
					Если ВидыРасходов.ВидыРасходовМатериалы().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовОСНМА().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.Признано = ?(СтрокаОстатка.Признано > 0, НоваяЗапись.СуммаОплаты, 0);
						НоваяЗапись.НеПризнано = ?(НоваяЗапись.Признано = 0 И СтрокаОстатка.РасходыВсего = СтрокаОстатка.СуммаРасходов, НоваяЗапись.СуммаРасходов, 0);
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с материалов на ОС/НМА'");
						
					КонецЕсли;
					
					// Был товар, стал материал:
					Если ВидыРасходов.ВидыРасходовТовары().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовМатериалы().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.НеПризнано = ?(НоваяЗапись.Признано = 0 И СтрокаОстатка.РасходыВсего = СтрокаОстатка.СуммаРасходов, НоваяЗапись.СуммаРасходов, 0);
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с товаров на материалы'");
						
					КонецЕсли;
					
					// Был материал, стал товар:
					Если ВидыРасходов.ВидыРасходовМатериалы().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.Признано = ?(СтрокаОстатка.Признано > 0, НоваяЗапись.СуммаОплаты, 0);
						НоваяЗапись.НеПризнано = ?(НоваяЗапись.Признано = 0 И СтрокаОстатка.РасходыВсего = СтрокаОстатка.СуммаРасходов, НоваяЗапись.СуммаРасходов, 0);
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с материалов на товары'");
						
					КонецЕсли;
					
					// Был ОС/НМА, стал товар:
					Если ВидыРасходов.ВидыРасходовОСНМА().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.Признано = НоваяЗапись.СуммаОплаты;
						НоваяЗапись.НеПризнано = 0;
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с ОС/НМА на товары'");
						
					КонецЕсли;
					
					// Был ОС/НМА, стал материал:
					Если ВидыРасходов.ВидыРасходовОСНМА().Найти(СтрокаОстатка.ВидРасходов) <> Неопределено И ВидыРасходов.ВидыРасходовМатериалы().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НоваяЗапись.Признано = НоваяЗапись.СуммаОплаты;
						НоваяЗапись.НеПризнано = 0;
						СодержаниеНеПризнания = СодержаниеНеПризнания + " " + НСтр("ru = 'Причина непризнания: реклассификация с ОС/НМА на материалы'");
						
					КонецЕсли;
					
					Если НоваяЗапись.Признано <> 0 ИЛИ НоваяЗапись.НеПризнано <> 0 Тогда
						// Делаем запись сторно признанных расходов
						ЗаписьНеПризнанияКУДиР = НаборЗаписейКУДиР.Добавить();
						ЗаполнитьЗначенияСвойств(ЗаписьНеПризнанияКУДиР, Выборка);
						ЗаписьНеПризнанияКУДиР.Регистратор = НаборЗаписейКУДиР.Отбор.Регистратор.Значение;
						ЗаписьНеПризнанияКУДиР.ДокументВозникновенияДоходовРасходов = Выборка.ДокументВозникновенияРасходов;
						ЗаписьНеПризнанияКУДиР.ВидРасходов = СтрокаОстатка.ВидРасходов;
						ЗаписьНеПризнанияКУДиР.Статья = Выборка.СтатьяРасходов;
						ЗаписьНеПризнанияКУДиР.Графа6 = НоваяЗапись.Признано + НоваяЗапись.НеПризнано;
						ЗаписьНеПризнанияКУДиР.РасходЕНВД = НоваяЗапись.НеПризнано;
						ЗаписьНеПризнанияКУДиР.НДС = ?(СтрокаОстатка.СуммаРасходов = 0, 0, (НоваяЗапись.Признано + НоваяЗапись.НеПризнано) * СтрокаОстатка.НДС / СтрокаОстатка.СуммаРасходов);
						ЗаписьНеПризнанияКУДиР.Графа7 = НоваяЗапись.Признано;
						ЗаписьНеПризнанияКУДиР.Содержание = СодержаниеНеПризнания;
						ЗаписьНеПризнанияКУДиР.РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента(Выборка.Регистратор, Выборка);
						СтрокаОстатка.РасходыВсего = СтрокаОстатка.РасходыВсего + НоваяЗапись.Признано + НоваяЗапись.НеПризнано;
						СтрокаОстатка.Признано = СтрокаОстатка.Признано + НоваяЗапись.Признано;
						СтрокаОстатка.НеПризнано = СтрокаОстатка.НеПризнано + НоваяЗапись.НеПризнано;
					КонецЕсли;
					
					СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
					СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
					СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
					
					// Добавляем запись в новый регистр
					НаборЗаписейРеклассификации = НаборЗаписейРегистраПоВидуРасходов(ДвиженияДокумента, Выборка.ВидРасходов, Выборка.Регистратор, Выборка.ДокументВозникновенияРасходов);
					Если НаборЗаписейРеклассификации = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					НоваяЗапись = НаборЗаписейРеклассификации.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
					НоваяЗапись.СуммаРасходов = Выборка.СуммаОтгрузки;
					НоваяЗапись.НДС = ПереносимыйНДС;
					НоваяЗапись.СуммаОплаты = ПереносимаяСуммаОплаты;
					
					Если ВидыРасходов.ВидыРасходовОСНМА().Найти(Выборка.ВидРасходов) = Неопределено Тогда
						// Для материалов и товаров заполняем суммы признания и не признания:
						
						СуммаПризнания = Мин(НоваяЗапись.СуммаОтгрузки, НоваяЗапись.СуммаРасходов, НоваяЗапись.СуммаОплаты);
						СуммаПризнания = ?(СуммаПризнания - СуммаНеПризнания - СуммаНеПризнанияЕНВД > 0, СуммаПризнания - СуммаНеПризнания - СуммаНеПризнанияЕНВД, 0);
						
						НоваяЗапись.НеПризнано = СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						НоваяЗапись.Признано = СуммаПризнания;
						
						РасходыВсего = СуммаПризнания + СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						РасходыУСН = СуммаПризнания;
						РасходыЕНВД = СуммаНеПризнанияЕНВД;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если Выборка.ВидРасходов = СтрокаОстатка.ВидРасходов Тогда
					
					// Обычный расход
					
					// ОС/НМА:
					Если ВидыРасходов.ВидыРасходовОСНМА().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						// Заносится просто как расход без дополнительных признаний, если только нет реклассификации с пустого элемента на заполненный:
						Если СтрокаОстатка.ЭлементРасходов <> Выборка.ЭлементРасходов Тогда
							
							// Уменьшаем текущие записи регистра
							ОсталосьКСписанию = СтрокаОстатка.СуммаРасходов - (СтрокаОстатка.СуммаОтгрузки + Выборка.СуммаОтгрузки);
							ПризнанныеПодтвержденные = СтрокаОстатка.СуммаОтгрузки - (СтрокаОстатка.РасходыВсего - СтрокаОстатка.Признано);
							ПризнанныеПодтвержденные = ?(ПризнанныеПодтвержденные > 0, ПризнанныеПодтвержденные, 0);
							ПереносимаяСуммаОплаты = Мин(СтрокаОстатка.СуммаОплаты - (ОсталосьКСписанию + ПризнанныеПодтвержденные), Выборка.СуммаОтгрузки);
							Если ПереносимаяСуммаОплаты < 0 Тогда
								ПереносимаяСуммаОплаты = 0;
							КонецЕсли;
							
							НоваяЗапись.ЭлементРасходов = СтрокаОстатка.ЭлементРасходов;
							НоваяЗапись.СуммаРасходов = -Выборка.СуммаОтгрузки;
							НоваяЗапись.НДС = ?(СтрокаОстатка.СуммаРасходов = 0, 0, НоваяЗапись.СуммаРасходов * СтрокаОстатка.НДС / СтрокаОстатка.СуммаРасходов);
							НоваяЗапись.СуммаОплаты = -ПереносимаяСуммаОплаты;
							
							// Добавляем запись в новый регистр
							НаборЗаписейРеклассификации = НаборЗаписейРегистраПоВидуРасходов(ДвиженияДокумента, Выборка.ВидРасходов, Выборка.Регистратор, Выборка.ДокументВозникновенияРасходов);
							Если НаборЗаписейРеклассификации = Неопределено Тогда
								Продолжить;
							КонецЕсли;
							
							ЗаписьРеклассификации = НаборЗаписейРеклассификации.Добавить();
							ЗаполнитьЗначенияСвойств(ЗаписьРеклассификации, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
							ЗаписьРеклассификации.СуммаРасходов = Выборка.СуммаОтгрузки;
							ЗаписьРеклассификации.НДС = ?(СтрокаОстатка.СуммаРасходов = 0, 0, ЗаписьРеклассификации.СуммаРасходов * СтрокаОстатка.НДС / СтрокаОстатка.СуммаРасходов);
							ЗаписьРеклассификации.СуммаОплаты = ПереносимаяСуммаОплаты;
							
							СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
							СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
							СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
							
						КонецЕсли;
						
					КонецЕсли;
					
					// Товары:
					Если ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						ОплаченоНоНеПризнано = ?(СтрокаОстатка.СуммаОплаты - СтрокаОстатка.СуммаОтгрузки > 0, СтрокаОстатка.СуммаОплаты - СтрокаОстатка.СуммаОтгрузки, 0);
						НеПодтвержденныйЕНВД = СтрокаОстатка.РасходыВсего - СтрокаОстатка.СуммаОтгрузки;
						
						СуммаПризнания = Мин(СуммаПризнания, ОплаченоНоНеПризнано);
						Если СтрокаОстатка.РасходыВсего - СтрокаОстатка.Признано > Мин(СтрокаОстатка.СуммаОплаты, СтрокаОстатка.СуммаОтгрузки) И НеПодтвержденныйЕНВД > 0 Тогда
							СуммаНеПризнанияЕНВД = СуммаНеПризнанияЕНВД - Выборка.СуммаОтгрузки;
						КонецЕсли;
						
						Если СуммаНеПризнанияЕНВД <> 0 Или СуммаНеПризнания + СуммаПризнания <> 0 Тогда
							
							РасходыВсего = Мин(СуммаПризнания + СуммаНеПризнания + СуммаНеПризнанияЕНВД, ВсегоКПризнанию);
							РасходыУСН = СуммаПризнания;
							РасходыЕНВД = СуммаНеПризнанияЕНВД;
							НоваяЗапись.Признано = РасходыУСН;
							НоваяЗапись.НеПризнано = СуммаНеПризнания + СуммаНеПризнанияЕНВД;
							
						КонецЕсли;
						СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки + Выборка.СуммаОтгрузки;
						
					КонецЕсли;
					
					// Материалы:
					Если ВидыРасходов.ВидыРасходовМатериалы().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
						
						НеПодтвержденныеОтгрузки = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.СуммаОтгрузки;
						СписаноНеНаУСН = СтрокаОстатка.РасходыВсего - СтрокаОстатка.Признано;
						
						Если СписаноНеНаУСН > Мин(СтрокаОстатка.СуммаОплаты, СтрокаОстатка.СуммаОтгрузки) И НеПодтвержденныеОтгрузки > 0 Тогда
							СуммаНеПризнанияЕНВД = СуммаНеПризнанияЕНВД - Выборка.СуммаОтгрузки;
						КонецЕсли;
						
						Если ВсегоКПризнанию < СуммаНеПризнания + СуммаНеПризнанияЕНВД И СуммаНеПризнания + СуммаНеПризнанияЕНВД > 0 Тогда
							СуммаПризнания = - СуммаНеПризнания - СуммаНеПризнанияЕНВД + ВсегоКПризнанию;
						ИначеЕсли ВсегоКПризнанию > 0 ИЛИ СписаноНеНаУСН > Мин(СтрокаОстатка.СуммаОплаты, СтрокаОстатка.СуммаОтгрузки) Тогда
							СуммаПризнания = Мин(СтрокаОстатка.СуммаОплаты - СтрокаОстатка.Признано, СуммаПризнания);
						Иначе
							СуммаПризнания = 0;
						КонецЕсли;
						
						РасходыВсего = СуммаПризнания + СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						РасходыУСН = СуммаПризнания;
						РасходыЕНВД = СуммаНеПризнанияЕНВД;
						НоваяЗапись.Признано = РасходыУСН;
						НоваяЗапись.НеПризнано = СуммаНеПризнания + СуммаНеПризнанияЕНВД;
						СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки + Выборка.СуммаОтгрузки;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			#КонецОбласти
			
			#Область ВозвратСписанияРасходов
			
			Если Выборка.ВидОперации = "ВозвратКлиента" Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты");
				// Вид расходов определяется на основании остатков, так как там содержится информация о первоначальной классификации расхода, а не фактической:
				НоваяЗапись.ВидРасходов = СтрокаОстатка.ВидРасходов;
				
				Если СтрокаОстатка.РасходыВсего = СтрокаОстатка.СуммаРасходов И СтрокаОстатка.ТипОстатка = "Возврат" Тогда
					// Данные по расходу уже были списаны со служебного регистра. Необходимо вернуть данные по расходу обратно.
					НаборЗаписейРасходов = Движения[ИмяРегистраПоВидуРасходов(СтрокаОстатка.ВидРасходов)];
					ЗаписьРасхода = НаборЗаписейРасходов.ДобавитьРасход();
					ЗаписьРасхода.Период = НачалоМесяца(Выборка.Период);
					ЗаполнитьЗначенияСвойств(ЗаписьРасхода, СтрокаОстатка);
					ЗаписьРасхода.СуммаРасходов = - СтрокаОстатка.СуммаРасходов;
					ЗаписьРасхода.СуммаОплаты = - СтрокаОстатка.СуммаОплаты;
					ЗаписьРасхода.СуммаОтгрузки = - СтрокаОстатка.СуммаОтгрузки;
					ЗаписьРасхода.НДС = - СтрокаОстатка.НДС;
					ЗаписьРасхода.Признано = - СтрокаОстатка.Признано;
					ЗаписьРасхода.НеПризнано = - СтрокаОстатка.НеПризнано;
					ЗаписьРасхода.Регистратор = НаборЗаписейКУДиР.Отбор.Регистратор.Значение;
					ЗаписьРасхода.Организация = Выборка.Организация;
				КонецЕсли;
				
				Если ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
					
					Если СтрокаОстатка.Признано > 0 Тогда
						
						РасходыВсего = Макс(Выборка.СуммаОтгрузки, -СтрокаОстатка.Признано);
						РасходыЕНВД = Окр(РасходыВсего * КоэффициентЕНВД, 2);
						РасходыУСН = РасходыВсего - РасходыЕНВД;
						
						НоваяЗапись.Признано = РасходыУСН;
						НоваяЗапись.НеПризнано = РасходыЕНВД;
						
					КонецЕсли;
					
				КонецЕсли;
				
				СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки + НоваяЗапись.СуммаОтгрузки;
				
			КонецЕсли;
			
			#КонецОбласти
			
			#Область ВозникновениеРасходов
			
			Если Выборка.ВидОперации = "Приход" Или Выборка.ВидОперации = "ДопРасходы"
				Или Выборка.ВидОперации = "РасходПриОплате" Или Выборка.ВидОперации = "Амортизация" Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				Разрядность = ?(ТипыНалоговНДФЛ().Найти(Выборка.СтатьяРасходов) = Неопределено, 2, 0);
				НоваяЗапись.СуммаРасходов = Окр(Выборка.СуммаРасходов, Разрядность);
				НоваяЗапись.НДС = Окр(Выборка.НДС, Разрядность);
				
				Если Выборка.ВидОперации = "РасходПриОплате" Тогда
					
					НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов;
					СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
					
				КонецЕсли;
					
				СуммаНеПризнания = ?(Не Выборка.ПризнаватьРасходамиПриУСН, НоваяЗапись.СуммаРасходов, 0);
				СуммаНеПризнанияЕНВД = Окр(НоваяЗапись.СуммаРасходов * КоэффициентЕНВД, 2);
				СуммаПризнания = 0;
				ВсегоКПризнанию = СтрокаОстатка.СуммаОплаты - СуммаНеПризнания - СуммаНеПризнанияЕНВД - СтрокаОстатка.РасходыВсего;
				Если ВидыРасходов.ПризнаетсяПоОплате(Выборка.ВидРасходов) И ВсегоКПризнанию > 0 Тогда
					СуммаПризнания = Мин(ВсегоКПризнанию, НоваяЗапись.СуммаРасходов); // Сумма расходов может быть меньше остатка, так как там хранится общая сумма (без разбивки по хоз. операциям)
				КонецЕсли;
				
				НоваяЗапись.НеПризнано = СуммаНеПризнания + СуммаНеПризнанияЕНВД;
				НоваяЗапись.Признано = СуммаПризнания;
				
				РасходыВсего = СуммаПризнания + СуммаНеПризнания + СуммаНеПризнанияЕНВД;
				РасходыУСН = СуммаПризнания;
				РасходыЕНВД = СуммаНеПризнанияЕНВД;
				
				Если Выборка.ВидРасходов = ВидыРасходов.Лизинг ИЛИ Выборка.ВидРасходов = ВидыРасходов.Кредиты Тогда
					СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
				КонецЕсли;
				
			КонецЕсли;
			
			#КонецОбласти
			
			#Область ВозвратРасходов
			
			Если Выборка.ВидОперации = "ВозвратПоставщику" Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
				НоваяЗапись.СуммаРасходов = -Выборка.СуммаРасходов;
				НоваяЗапись.СуммаОплаты = -Мин(Выборка.СуммаРасходов, СтрокаОстатка.СуммаОплаты);
				НоваяЗапись.НДС = -НоваяЗапись.НДС;
				
				Если ВсегоКПризнанию < Выборка.СуммаРасходов Тогда
					
					НоваяЗапись.НеПризнано = -Мин(СтрокаОстатка.НеПризнано, Выборка.СуммаРасходов - ВсегоКПризнанию);
					НоваяЗапись.Признано = -Мин(СтрокаОстатка.Признано, Выборка.СуммаРасходов - ВсегоКПризнанию + НоваяЗапись.НеПризнано);
					
					РасходыВсего = НоваяЗапись.Признано + НоваяЗапись.НеПризнано;
					РасходыУСН = НоваяЗапись.Признано;
					РасходыЕНВД = НоваяЗапись.НеПризнано;
					
				КонецЕсли;
				
				СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
				СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
				СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
				
			КонецЕсли;
			
			#КонецОбласти
			
			Если СтрокаОстатка.ТипОстатка = "СтарыйМетод" Тогда
				НоваяЗапись.ВидРасходов = Перечисления.ВидыРасходовУСН.ПустаяСсылка();
				Если НоваяЗапись.Партия <> Неопределено Тогда
					// Партия уже будет не заполнена если используется не рекомендуемый метод оценки товаров
					НоваяЗапись.ДокументВозникновенияРасходов = НоваяЗапись.Партия;
				КонецЕсли;
				НоваяЗапись.Партия = Неопределено;
			КонецЕсли;
			
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
			
			Если РасходыВсего <> 0 Или РасходыУСН <> 0 Или РасходыЕНВД <> 0 Тогда
				ЗаписьКУДиР = НаборЗаписейКУДиР.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, Выборка);
				ЗаписьКУДиР.Регистратор = НаборЗаписейКУДиР.Отбор.Регистратор.Значение;
				ЗаписьКУДиР.ДокументВозникновенияДоходовРасходов = Выборка.ДокументВозникновенияРасходов;
				ЗаписьКУДиР.Статья = Выборка.СтатьяРасходов;
				ЗаписьКУДиР.Графа6 = РасходыВсего;
				ЗаписьКУДиР.Графа7 = РасходыУСН;
				ЗаписьКУДиР.РасходЕНВД = РасходыЕНВД;
				ЗаписьКУДиР.НДС = ?(СтрокаОстатка.СуммаРасходов = 0, 0, ЗаписьКУДиР.Графа6 * СтрокаОстатка.НДС / СтрокаОстатка.СуммаРасходов);
				Если РасходыУСН <= 0 Тогда
					Содержание = СтрЗаменить(Содержание, НСтр("ru = 'Признаны'"), НСтр("ru = 'Не признаны'"));
				КонецЕсли;
				ЗаписьКУДиР.Содержание = Содержание;
				ЗаписьКУДиР.РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента(Выборка.Регистратор, Выборка);
				Если СтрокаОстатка.ВидРасходов = НоваяЗапись.ВидРасходов Тогда
					СтрокаОстатка.РасходыВсего = СтрокаОстатка.РасходыВсего + ЗаписьКУДиР.Графа6;
					СтрокаОстатка.Признано = СтрокаОстатка.Признано + ЗаписьКУДиР.Графа7;
					СтрокаОстатка.НеПризнано = СтрокаОстатка.НеПризнано + РасходыВсего - РасходыУСН;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Для каждого ВидРегистра Из ДвиженияДокумента Цикл
			Если ВидРегистра.Значение.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ВидРегистра.Значение.Записать(Ложь);
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		
		ИмяРегистра = ИмяРегистраПоВидуРасходов(СтрокаОстатка.ВидРасходов);
		Если ИмяРегистра <> "РасходыПриУСНОСиНМА" И СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаОплаты И СтрокаОстатка.СуммаРасходов <> 0
			И ?(ИмяРегистра = "РасходыПриУСН", Истина, СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаОтгрузки) Тогда
			НаборЗаписейРасходов = Движения[ИмяРегистра];
			ЗаписьРасхода = НаборЗаписейРасходов.ДобавитьРасход();
			ЗаписьРасхода.Период = НаборЗаписейКУДиР.Отбор.Регистратор.Значение.Дата;
			ЗаполнитьЗначенияСвойств(ЗаписьРасхода, СтрокаОстатка);
			ЗаписьРасхода.Регистратор = НаборЗаписейКУДиР.Отбор.Регистратор.Значение;
			ЗаписьРасхода.Организация = НаборЗаписейКУДиР.Отбор.Регистратор.Значение.Организация;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКУДиР2ПризнаннымиРасходами(ВыборкаРасходовКПризнанию, Движения)
	
	ПорядокУчета = Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ;
	ВидыДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат;
	ОплатыКРаспределению = Новый Соответствие;
	
	Пока ВыборкаРасходовКПризнанию.Следующий() Цикл
		
		Если ВыборкаРасходовКПризнанию.ПорядокУчета <> ПорядокУчета.ВключитьВСоставАмортизируемогоИмущества
			И ВыборкаРасходовКПризнанию.Период < НачалоМесяца(ВыборкаРасходовКПризнанию.КонДата) Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаОплаты = ВыборкаРасходовКПризнанию.СуммаОплаты;
		Если ВыборкаРасходовКПризнанию.ПервоначальнаяСуммаОплаты > 0 И ВыборкаРасходовКПризнанию.ДатаОплаты < ВыборкаРасходовКПризнанию.ДатаВозникновения Тогда
			ОсталосьРаспределить = ОплатыКРаспределению.Получить(ВыборкаРасходовКПризнанию.ДокументВозникновенияРасходов);
			Если ОсталосьРаспределить = Неопределено Тогда
				ОсталосьРаспределить = ВыборкаРасходовКПризнанию.ПервоначальнаяСуммаОплаты;
			ИначеЕсли ОсталосьРаспределить = 0 Тогда
				Продолжить;
			КонецЕсли;
			СуммаОплаты = Мин(СуммаОплаты, ОсталосьРаспределить);
			ОсталосьРаспределить = ОсталосьРаспределить - СуммаОплаты;
			ОплатыКРаспределению.Вставить(ВыборкаРасходовКПризнанию.ДокументВозникновенияРасходов, ОсталосьРаспределить);
		КонецЕсли;
		
		Если ВыборкаРасходовКПризнанию.ПорядокУчета = ПорядокУчета.ВключитьВСоставАмортизируемогоИмущества Тогда
			
			СуммаПризнания = Окр(СуммаОплаты / ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде, 2);
		
			ОстатокПослеВычетаОкругленнойСуммыПризнания = СуммаОплаты 
				- СуммаПризнания * ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде;
			// В конце года могут остаться копейки (за счет округления признания), учтем их вместе с последним платежом:
			Если ВыборкаРасходовКПризнанию.Период = КонецГода(ВыборкаРасходовКПризнанию.Период)
				И ОстатокПослеВычетаОкругленнойСуммыПризнания <> 0 Тогда
					СуммаПризнания = СуммаПризнания + ОстатокПослеВычетаОкругленнойСуммыПризнания;
			КонецЕсли;
				
		Иначе
			
			СуммаПризнания = СуммаОплаты;
			
		КонецЕсли;
		
		ЗаписьРасхода = Движения.РасходыПриУСНОСиНМА.ДобавитьРасход();
		
		ЗаполнитьЗначенияСвойств(ЗаписьРасхода, ВыборкаРасходовКПризнанию);
		
		ЗаписьРасхода.СуммаРасходов = СуммаПризнания;
		ЗаписьРасхода.СуммаОплаты = СуммаПризнания;
		ЗаписьРасхода.НДС = ЗаписьРасхода.СуммаРасходов * ВыборкаРасходовКПризнанию.НДС / ВыборкаРасходовКПризнанию.СуммаРасходов;
		
		Если ВыборкаРасходовКПризнанию.ПорядокУчета = ПорядокУчета.ВключитьВСоставАмортизируемогоИмущества
			И ВыборкаРасходовКПризнанию.ВидДеятельности <> ВидыДеятельности.ОсобыйПорядокНалогообложения
			И ВыборкаРасходовКПризнанию.ПризнаватьРасходамиПриУСН Тогда
			
			ЗаписьКУДиР = Движения.КнигаУчетаДоходовИРасходовРаздел2.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, ВыборкаРасходовКПризнанию);
			
			Если ВыборкаРасходовКПризнанию.Период = КонецГода(ВыборкаРасходовКПризнанию.Период) Тогда
				ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод = СуммаОплаты;
			Иначе
				КварталовПрошло = Месяц(ВыборкаРасходовКПризнанию.Период) / 3 - (4 - ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде);
				ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод = СуммаПризнания * КварталовПрошло;
			КонецЕсли;
			ЗаписьКУДиР.Графа13_СуммаРасходовЗаКвартал = СуммаПризнания;
			ЗаписьКУДиР.Графа15_ОстатокРасходов = СуммаОплаты - ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод;
			ЗаписьКУДиР.Графа11_ДоляРасходовЗаКвартал = Окр(100 / ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде, 2);
			
		КонецЕсли;
		
		ЗаписьПризнания = Движения.РасходыПриУСНОСиНМА.ДобавитьПриход();
		
		ЗаполнитьЗначенияСвойств(ЗаписьПризнания, ВыборкаРасходовКПризнанию, , "СуммаРасходов,СуммаОплаты,НДС");
		
		Если ВыборкаРасходовКПризнанию.ПорядокУчета <> ПорядокУчета.СтоимостьНеВключаетсяВРасходы
			И ВыборкаРасходовКПризнанию.ПризнаватьРасходамиПриУСН Тогда
			
			ЗаписьКУДиР = Движения.КнигаУчетаДоходовИРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, ВыборкаРасходовКПризнанию);
			ЗаписьКУДиР.ДокументВозникновенияДоходовРасходов = ВыборкаРасходовКПризнанию.ДокументВозникновенияРасходов;
			Если ВыборкаРасходовКПризнанию.ПорядокУчета = ПорядокУчета.ВключениеВРасходыПриПринятииКУчету Тогда
				// В "Статью" запишем элемент расходов, для того, чтобы в отчете по расходам данные по признанию могли быть
				// сопоставлены с конкретным ОС/НМА:
				ЗаписьКУДиР.Статья = ВыборкаРасходовКПризнанию.ЭлементРасходов;
			КонецЕсли;
			ЗаписьКУДиР.Графа6 = СуммаПризнания;
			ЗаписьКУДиР.НДС = ЗаписьРасхода.НДС;
			ЗаписьКУДиР.Графа7 = ?(ВыборкаРасходовКПризнанию.ВидДеятельности <> ВидыДеятельности.ОсобыйПорядокНалогообложения, СуммаПризнания, 0);
			ЗаписьКУДиР.РасходЕНВД = ?(ВыборкаРасходовКПризнанию.ВидДеятельности = ВидыДеятельности.ОсобыйПорядокНалогообложения, СуммаПризнания, 0);
			Если ВыборкаРасходовКПризнанию.ВидРасходов = Перечисления.ВидыРасходовУСН.ОС Тогда
				ЗаписьКУДиР.Содержание = НСтр("ru = 'Признание расходов на приобретение основного средства'");
			Иначе
				ЗаписьКУДиР.Содержание = НСтр("ru = 'Признание расходов на приобретение нематериального актива'");
			КонецЕсли;
			ЗаписьКУДиР.Содержание = ЗаписьКУДиР.Содержание + " " + СтрШаблон(НСтр("ru = '""%1"" (дата оплаты: %2).'"),
					Строка(ВыборкаРасходовКПризнанию.ЭлементРасходов), Формат(ВыборкаРасходовКПризнанию.ДатаОплаты, "ДЛФ=D"));
			ЗаписьКУДиР.РеквизитыПервичногоДокумента = СтрШаблон(НСтр("ru = '%1, № %2'"),
					Формат(ВыборкаРасходовКПризнанию.Период, "ДЛФ=D"), ВыборкаРасходовКПризнанию.Номер);
			
			ЗаписьРасхода.Признано = ЗаписьКУДиР.Графа7;
			ЗаписьРасхода.НеПризнано = ЗаписьКУДиР.РасходЕНВД;
			ЗаписьПризнания.Признано = ЗаписьКУДиР.Графа7;
			ЗаписьПризнания.НеПризнано = ЗаписьКУДиР.РасходЕНВД;
		Иначе
			ЗаписьРасхода.НеПризнано = СуммаПризнания;
			ЗаписьПризнания.НеПризнано = СуммаПризнания;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

Функция ПризнанныеРасходыПоАмортизации(ПараметрыЗапроса)
	
	Запрос = ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, Новый МенеджерВременныхТаблиц);
	Запрос.УстановитьПараметр("ДатаРегистрацииОрганизации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗапроса.Организация, "ДатаРегистрации"));
	
	МассивТекстовЗапроса = Новый Массив;
	
	#Область ПервоначальныеСведения
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияБУ.НематериальныйАктив КАК ЭлементРасходов,
	|	ПервоначальныеСведенияБУ.Период КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияБУ.СрокПолезногоИспользования,
	|	ЕСТЬNULL(ПервоначальныеСведенияНУ.ПорядокУчетаНУ, ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества)) КАК ПорядокУчета,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН 
	|ПОМЕСТИТЬ ПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК ПервоначальныеСведенияБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет КАК ПервоначальныеСведенияНУ
	|		ПО ПервоначальныеСведенияБУ.НематериальныйАктив = ПервоначальныеСведенияНУ.НематериальныйАктив
	|			И ПервоначальныеСведенияБУ.Регистратор = ПервоначальныеСведенияНУ.Регистратор
	|			И ПервоначальныеСведенияБУ.Организация = ПервоначальныеСведенияНУ.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет КАК СпособыОтраженияРасходов
	|		ПО ПервоначальныеСведенияБУ.НематериальныйАктив = СпособыОтраженияРасходов.НематериальныйАктив
	|			И ПервоначальныеСведенияБУ.Регистратор = СпособыОтраженияРасходов.Регистратор
	|			И ПервоначальныеСведенияБУ.Организация = СпособыОтраженияРасходов.Организация
	|ГДЕ
	|	ПервоначальныеСведенияБУ.Организация = &Организация
	|	И ПервоначальныеСведенияБУ.Период <= &КонДата
	|	И (ПервоначальныеСведенияБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|			ИЛИ ПервоначальныеСведенияБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияБУ.ОсновноеСредство,
	|	ПервоначальныеСведенияБУ.Период,
	|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимость,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ЕСТЬNULL(ПервоначальныеСведенияНУ.ПорядокВключенияСтоимостиВСоставРасходов, ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества)) КАК ПорядокУчета,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет КАК ПервоначальныеСведенияНУ
	|		ПО ПервоначальныеСведенияБУ.ОсновноеСредство = ПервоначальныеСведенияНУ.ОсновноеСредство
	|			И ПервоначальныеСведенияБУ.Регистратор = ПервоначальныеСведенияНУ.Регистратор
	|			И ПервоначальныеСведенияБУ.Организация = ПервоначальныеСведенияНУ.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК СпособыОтраженияРасходов
	|		ПО ПервоначальныеСведенияБУ.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|			И ПервоначальныеСведенияБУ.Регистратор = СпособыОтраженияРасходов.Регистратор
	|			И ПервоначальныеСведенияБУ.Организация = СпособыОтраженияРасходов.Организация
	|ГДЕ
	|	ПервоначальныеСведенияБУ.Организация = &Организация
	|	И ПервоначальныеСведенияБУ.Период <= &КонДата
	|	И (ПервоначальныеСведенияБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|			ИЛИ ПервоначальныеСведенияБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.НематериальныйАктив,
	|	ПервоначальныеСведения.ДатаПринятияКУчетуБУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведения.ФактическийСрокИспользованияДо2009,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведения.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества)
	|		КОГДА ПервоначальныеСведения.ПорядокУчетаНУ = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы)
	|	КОНЕЦ КАК ПорядокУчета,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет КАК СпособыОтраженияРасходов
	|		ПО ПервоначальныеСведения.НематериальныйАктив = СпособыОтраженияРасходов.НематериальныйАктив
	|			И ПервоначальныеСведения.Регистратор = СпособыОтраженияРасходов.Регистратор
	|			И ПервоначальныеСведения.Организация = СпособыОтраженияРасходов.Организация
	|ГДЕ
	|	ПервоначальныеСведения.Организация = &Организация
	|	И ПервоначальныеСведения.Период <= &КонДата
	|	И (ПервоначальныеСведения.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА2_4
	|			ИЛИ ПервоначальныеСведения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.ОсновноеСредство,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимостьБУ,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ПервоначальныеСведения.ПорядокУчетаНУ КАК ПорядокУчета,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности,
	|	ЕСТЬNULL(СпособыОтраженияРасходов.СтатьяРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет КАК СпособыОтраженияРасходов
	|		ПО ПервоначальныеСведения.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
	|			И ПервоначальныеСведения.Регистратор = СпособыОтраженияРасходов.Регистратор
	|			И ПервоначальныеСведения.Организация = СпособыОтраженияРасходов.Организация
	|ГДЕ
	|	ПервоначальныеСведения.Организация = &Организация
	|	И ПервоначальныеСведения.Период <= &КонДата
	|	И (ПервоначальныеСведения.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4
	|			ИЛИ ПервоначальныеСведения.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4)";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ПринимаемыеРасходы
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПриУСНОСиНМА.ЭлементРасходов КАК ЭлементРасходов,
	|	РасходыПриУСНОСиНМА.Организация КАК Организация,
	|	РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	РасходыПриУСНОСиНМА.ВидРасходов,
	|	ПервоначальныеСведения.ДатаПринятияКУчету,
	|	ПервоначальныеСведения.ПорядокУчета,
	|	ПервоначальныеСведения.ВидДеятельности,
	|	ПервоначальныеСведения.ПризнаватьРасходамиПриУСН,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимость,
	|	ПервоначальныеСведения.СрокПолезногоИспользования,
	|	МАКСИМУМ(РасходыПриУСНРасходы.Период) КАК Период,
	|	СУММА(РасходыПриУСНРасходы.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(РасходыПриУСНРасходы.НДС) КАК НДС,
	|	СУММА(РасходыПриУСНРасходы.СуммаОплаты) КАК СуммаОплаты,
	|	НАЧАЛОПЕРИОДА(ПервоначальныеСведения.ДатаПринятияКУчету, ГОД) = &НачГода 
	|		ИЛИ КОНЕЦПЕРИОДА(&ДатаРегистрацииОрганизации, Месяц) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачГода, Год, -1), Год) КАК АнализОплатЗаПредыдущиеГода
	|ПОМЕСТИТЬ ПринимаемыеРасходы
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНОСиНМА.Остатки(&КонГраница, Организация = &Организация И ЭлементРасходов <> Неопределено) КАК РасходыПриУСНОСиНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО РасходыПриУСНОСиНМА.ЭлементРасходов = ПервоначальныеСведения.ЭлементРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНОСиНМА КАК РасходыПриУСНРасходы
	|		ПО РасходыПриУСНОСиНМА.Организация = РасходыПриУСНРасходы.Организация
	|			И РасходыПриУСНОСиНМА.ЭлементРасходов = РасходыПриУСНРасходы.ЭлементРасходов
	|			И РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов = РасходыПриУСНРасходы.ДокументВозникновенияРасходов
	|			И РасходыПриУСНОСиНМА.ВидРасходов = РасходыПриУСНРасходы.ВидРасходов
	|			И РасходыПриУСНРасходы.Период <= &КонДата
	|			И РасходыПриУСНРасходы.СуммаРасходов > 0
	|			И РасходыПриУСНРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ГДЕ
	|	РасходыПриУСНОСиНМА.СуммаОплатыОстаток > 0 И РасходыПриУСНОСиНМА.СуммаРасходовОстаток > 0
	|	И (ПервоначальныеСведения.ПорядокУчета <> ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества)
	|		ИЛИ КОНЕЦПЕРИОДА(&КонДата, Квартал) = &КонДата И КОНЕЦПЕРИОДА(&ДатаРегистрацииОрганизации, Месяц) <> КОНЕЦПЕРИОДА(&КонДата, Год))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПриУСНОСиНМА.ЭлементРасходов,
	|	РасходыПриУСНОСиНМА.Организация,
	|	РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов,
	|	РасходыПриУСНОСиНМА.ВидРасходов,
	|	ПервоначальныеСведения.ДатаПринятияКУчету,
	|	ПервоначальныеСведения.ПорядокУчета,
	|	ПервоначальныеСведения.ВидДеятельности,
	|	ПервоначальныеСведения.ПризнаватьРасходамиПриУСН,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимость,
	|	ПервоначальныеСведения.СрокПолезногоИспользования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасходыПриУСНОСиНМА.Организация,
	|	РасходыПриУСНОСиНМА.ЭлементРасходов,
	|	РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов,
	|	РасходыПриУСНОСиНМА.ВидРасходов";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область Оплаты
	МассивТекстовЗапросаОплат = Новый Массив;
	
	// Оплаты за ОС/НМА, сразу определенные по конкретному элементу расходов и учитывающиеся в регистре с заполненным элементом расходов. Анализируем за весь период.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету,
	|	ВЫБОР КОГДА РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1) ТОГДА РасходыПриУСНОплаты.Период ИНАЧЕ РасходыПриУСНОплаты.ДатаОплаты КОНЕЦ КАК ДатаОплаты,
	|	РасходыПриУСНОплаты.Период КАК Период,
	|	КВАРТАЛ(ВЫБОР
	|				КОГДА &НачГода > РасходыПриУСНОплаты.ДатаОплаты И &НачГода > РасходыПриУСНОплаты.Период И &НачГода > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА &НачГода
	|				КОГДА РасходыПриУСНОплаты.ДатаОплаты > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА РасходыПриУСНОплаты.ДатаОплаты
	|				КОГДА РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.ДатаПринятияКУчету И РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА РасходыПриУСНОплаты.Период
	|				ИНАЧЕ ПринимаемыеРасходы.ДатаПринятияКУчету
	|			КОНЕЦ) КАК НомерКварталаПериодаОплаты,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты
	|ПОМЕСТИТЬ Оплаты
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНОСиНМА КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И ПринимаемыеРасходы.ЭлементРасходов = РасходыПриУСНОплаты.ЭлементРасходов
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.ВидРасходов = РасходыПриУСНОплаты.ВидРасходов
	|			И ПринимаемыеРасходы.СуммаОплаты = 0
	|ГДЕ
	|	(ПринимаемыеРасходы.АнализОплатЗаПредыдущиеГода И РасходыПриУСНОплаты.Период <= &КонДата
	|		ИЛИ РасходыПриУСНОплаты.Период МЕЖДУ &НачГода И &КонДата)
	|	И РасходыПриУСНОплаты.СуммаОплаты > 0
	|	И РасходыПриУСНОплаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	МассивТекстовЗапросаОплат.Добавить(ТекстЗапроса);
	
	// Оплаты за ОС/НМА, сразу определенные как ОС/НМА, но без конкретизации по элементу расходов. Анализируем только тот период, который был до конкретизации по элементу расходов.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету,
	|	ВЫБОР КОГДА РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1) ТОГДА РасходыПриУСНОплаты.Период ИНАЧЕ РасходыПриУСНОплаты.ДатаОплаты КОНЕЦ КАК ДатаОплаты,
	|	РасходыПриУСНОплаты.Период КАК Период,
	|	КВАРТАЛ(ВЫБОР
	|				КОГДА &НачГода > РасходыПриУСНОплаты.ДатаОплаты И &НачГода > РасходыПриУСНОплаты.Период И &НачГода > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА &НачГода
	|				КОГДА РасходыПриУСНОплаты.ДатаОплаты > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА РасходыПриУСНОплаты.ДатаОплаты
	|				КОГДА РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.ДатаПринятияКУчету И РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА РасходыПриУСНОплаты.Период
	|				ИНАЧЕ ПринимаемыеРасходы.ДатаПринятияКУчету
	|			КОНЕЦ) КАК НомерКварталаПериодаОплаты,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты
	|
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНОСиНМА КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И РасходыПриУСНОплаты.ЭлементРасходов = Неопределено
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|			И ПринимаемыеРасходы.СуммаОплаты > 0
	|			И РасходыПриУСНОплаты.Период < ПринимаемыеРасходы.Период
	|ГДЕ
	|	(ПринимаемыеРасходы.АнализОплатЗаПредыдущиеГода И РасходыПриУСНОплаты.Период <= &КонДата
	|		ИЛИ РасходыПриУСНОплаты.Период МЕЖДУ &НачГода И &КонДата)
	|	И РасходыПриУСНОплаты.СуммаОплаты > 0
	|	И РасходыПриУСНОплаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	МассивТекстовЗапросаОплат.Добавить(ТекстЗапроса);
	
	// Оплаты за ОС/НМА, сразу определенные как ОС/НМА, но без конкретизации по элементу расходов. Анализируем период, после конкретизации по элементу расходов.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету,
	|	ВЫБОР КОГДА РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1) ТОГДА РасходыПриУСНОплаты.Период ИНАЧЕ РасходыПриУСНОплаты.ДатаОплаты КОНЕЦ КАК ДатаОплаты,
	|	РасходыПриУСНОплаты.Период КАК Период,
	|	КВАРТАЛ(ВЫБОР
	|				КОГДА &НачГода > РасходыПриУСНОплаты.ДатаОплаты И &НачГода > РасходыПриУСНОплаты.Период И &НачГода > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА &НачГода
	|				КОГДА РасходыПриУСНОплаты.ДатаОплаты > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА РасходыПриУСНОплаты.ДатаОплаты
	|				КОГДА РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.ДатаПринятияКУчету И РасходыПриУСНОплаты.ДатаОплаты = ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА РасходыПриУСНОплаты.Период
	|				ИНАЧЕ ПринимаемыеРасходы.ДатаПринятияКУчету
	|			КОНЕЦ) КАК НомерКварталаПериодаОплаты,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты
	|
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНОСиНМА КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И ПринимаемыеРасходы.ЭлементРасходов = РасходыПриУСНОплаты.ЭлементРасходов
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.ВидРасходов = РасходыПриУСНОплаты.ВидРасходов
	|			И ПринимаемыеРасходы.СуммаОплаты > 0
	|			И РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.Период
	|ГДЕ
	|	(ПринимаемыеРасходы.АнализОплатЗаПредыдущиеГода И РасходыПриУСНОплаты.Период <= &КонДата
	|		ИЛИ РасходыПриУСНОплаты.Период МЕЖДУ &НачГода И &КонДата)
	|	И РасходыПриУСНОплаты.СуммаОплаты > 0
	|	И РасходыПриУСНОплаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	МассивТекстовЗапросаОплат.Добавить(ТекстЗапроса);
	
	// Оплаты за ОС/НМА, сразу определенные как материалы, без конкретизации по элементу расходов. Анализируем только тот период, который был до конкретизации по элементу расходов.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету,
	|	РасходыПриУСНОплаты.Период КАК ДатаОплаты,
	|	РасходыПриУСНОплаты.Период КАК Период,
	|	КВАРТАЛ(ВЫБОР
	|				КОГДА &НачГода > РасходыПриУСНОплаты.Период И &НачГода > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА &НачГода
	|				КОГДА РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА РасходыПриУСНОплаты.Период
	|				ИНАЧЕ ПринимаемыеРасходы.ДатаПринятияКУчету
	|			КОНЕЦ) КАК НомерКварталаПериодаОплаты,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты
	|
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНМатериалы КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.СуммаОплаты > 0
	|			И РасходыПриУСНОплаты.Период < ПринимаемыеРасходы.Период
	|ГДЕ
	|	(ПринимаемыеРасходы.АнализОплатЗаПредыдущиеГода И РасходыПриУСНОплаты.Период <= &КонДата
	|		ИЛИ РасходыПриУСНОплаты.Период МЕЖДУ &НачГода И &КонДата)
	|	И РасходыПриУСНОплаты.СуммаОплаты > 0
	|	И РасходыПриУСНОплаты.СуммаРасходов = 0
	|	И РасходыПриУСНОплаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)";
	МассивТекстовЗапросаОплат.Добавить(ТекстЗапроса);
	
	// Оплаты за ОС/НМА, сразу определенные как товары, без конкретизации по элементу расходов. Анализируем только тот период, который был до конкретизации по элементу расходов.
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету,
	|	РасходыПриУСНОплаты.Период КАК ДатаОплаты,
	|	РасходыПриУСНОплаты.Период КАК Период,
	|	КВАРТАЛ(ВЫБОР
	|				КОГДА &НачГода > РасходыПриУСНОплаты.Период И &НачГода > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА &НачГода
	|				КОГДА РасходыПриУСНОплаты.Период > ПринимаемыеРасходы.ДатаПринятияКУчету
	|				ТОГДА РасходыПриУСНОплаты.Период
	|				ИНАЧЕ ПринимаемыеРасходы.ДатаПринятияКУчету
	|			КОНЕЦ) КАК НомерКварталаПериодаОплаты,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты
	|
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНТовары КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.СуммаОплаты > 0
	|			И РасходыПриУСНОплаты.Период < ПринимаемыеРасходы.Период
	|ГДЕ
	|	(ПринимаемыеРасходы.АнализОплатЗаПредыдущиеГода И РасходыПриУСНОплаты.Период <= &КонДата
	|		ИЛИ РасходыПриУСНОплаты.Период МЕЖДУ &НачГода И &КонДата)
	|	И РасходыПриУСНОплаты.СуммаОплаты > 0
	|	И РасходыПриУСНОплаты.СуммаРасходов = 0
	|	И РасходыПриУСНОплаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПринимаемыеРасходы.Организация,
	|	ПринимаемыеРасходы.ЭлементРасходов,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов";
	МассивТекстовЗапросаОплат.Добавить(ТекстЗапроса);
	
	МассивТекстовЗапроса.Добавить(СтрСоединить(МассивТекстовЗапросаОплат, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()));
	
	#КонецОбласти
	
	#Область ВыборкаДанных
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПринимаемыеРасходы.ЭлементРасходов КАК ЭлементРасходов,
	|	ПринимаемыеРасходы.Организация КАК Организация,
	|	ПринимаемыеРасходы.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ПринимаемыеРасходы.ВидРасходов КАК ВидРасходов,
	|	ПринимаемыеРасходы.ДатаПринятияКУчету КАК Графа3_ДатаВводаВЭксплуатацию,
	|	ПринимаемыеРасходы.ПорядокУчета КАК ПорядокУчета,
	|	ПринимаемыеРасходы.ВидДеятельности КАК ВидДеятельности,
	|	ПринимаемыеРасходы.ПризнаватьРасходамиПриУСН КАК ПризнаватьРасходамиПриУСН,
	|	ПринимаемыеРасходы.Период КАК ДатаВозникновения,
	|	ПринимаемыеРасходы.СуммаРасходов КАК СуммаРасходов,
	|	ПринимаемыеРасходы.НДС КАК НДС,
	|	ПринимаемыеРасходы.СуммаОплаты КАК ПервоначальнаяСуммаОплаты,
	|	РасходыПриУСНОплаты.ДатаОплаты КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ПринимаемыеРасходы.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества)
	|			ТОГДА КОНЕЦПЕРИОДА(&КонДата, КВАРТАЛ)
	|		КОГДА ПринимаемыеРасходы.ДатаПринятияКУчету > ПринимаемыеРасходы.Период
	|				И ПринимаемыеРасходы.ДатаПринятияКУчету > РасходыПриУСНОплаты.Период
	|			ТОГДА ПринимаемыеРасходы.ДатаПринятияКУчету
	|		КОГДА ПринимаемыеРасходы.Период > РасходыПриУСНОплаты.Период
	|			ТОГДА КОНЕЦПЕРИОДА(ПринимаемыеРасходы.Период, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(РасходыПриУСНОплаты.Период, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	5 - РасходыПриУСНОплаты.НомерКварталаПериодаОплаты КАК Графа9_КолКварталовВНалПериоде,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК Графа5_ПервоначальнаяСтоимость,
	|	РасходыПриУСНОплаты.СуммаОплаты КАК СуммаОплаты,
	|	100 КАК Графа10_ДоляРасходовЗаНалПериод,
	|	&Ссылка КАК Регистратор,
	|	&ТипОперации КАК ТипОперации,
	|	&КонДата КАК КонДата,
	|	&Номер КАК Номер
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Оплаты КАК РасходыПриУСНОплаты
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСНОплаты.Организация
	|			И ПринимаемыеРасходы.ЭлементРасходов = РасходыПриУСНОплаты.ЭлементРасходов
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСНОплаты.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.ВидРасходов = РасходыПриУСНОплаты.ВидРасходов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция ВременныеТаблицыДляЗаполненияРасходов(Параметры)
	
	ВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	
	СтруктураПараметровЗапроса = Параметры;
	ДополнитьПараметрамиПоУмолчанию(СтруктураПараметровЗапроса);
	
	Запрос = ИнициализироватьЗапросПоПараметрам(СтруктураПараметровЗапроса, ВременныеТаблицы);
	
	Запрос.Текст = ТекстЗапросаЗаполненияРасходов();
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ТекстЗапросаОстатковПриСтаромМетодеХраненияДопРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходыПриУСНМатериалыОстатки.Организация КАК Организация,
	|	РасходыПриУСНМатериалыОстатки.ДокументВозникновенияРасходов КАК Партия,
	|	РасходыПриУСНМатериалыОстатки.СуммаРасходовОстаток КАК СуммаРасходов,
	|	РасходыПриУСНМатериалыОстатки.НДСОстаток КАК НДС,
	|	РасходыПриУСНМатериалыОстатки.СуммаОплатыОстаток КАК СуммаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы) КАК ВидРасходов,
	|	0 КАК СуммаОтгрузки
	|ПОМЕСТИТЬ ОстаткиСтарогоМетодаБезДокументовВозникновенияРасходов
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНМатериалы.Остатки(&НачГраница, Организация = &Организация
	|		И ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия = Неопределено) КАК РасходыПриУСНМатериалыОстатки
	|ГДЕ
	|	РасходыПриУСНМатериалыОстатки.СуммаРасходовОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПриУСНТоварыОстатки.Организация,
	|	РасходыПриУСНТоварыОстатки.ДокументВозникновенияРасходов КАК Партия,
	|	РасходыПриУСНТоварыОстатки.СуммаРасходовОстаток,
	|	РасходыПриУСНТоварыОстатки.НДСОстаток,
	|	РасходыПриУСНТоварыОстатки.СуммаОплатыОстаток,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура),
	|	РасходыПриУСНТоварыОстатки.СуммаОтгрузкиОстаток
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНТовары.Остатки(&НачГраница, Организация = &Организация
	|		И ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия = Неопределено) КАК РасходыПриУСНТоварыОстатки
	|ГДЕ
	|	РасходыПриУСНТоварыОстатки.СуммаРасходовОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Организация КАК Организация,
	|	Остатки.Партия,
	|	Партии.ДокументПоступления КАК ДокументВозникновенияРасходов,
	|	СУММА(ЕСТЬNULL(Партии.СтоимостьБезНДСОборот + Партии.НДСОборот, Остатки.СуммаРасходов)) КАК СуммаРасходов,
	|	СУММА(ЕСТЬNULL(Партии.НДСОборот, Остатки.НДС)) КАК НДС,
	|	СУММА(Остатки.СуммаОплаты) * СУММА(ЕСТЬNULL(Партии.СтоимостьБезНДСОборот + Партии.НДСОборот, Остатки.СуммаРасходов)) / СУММА(Остатки.СуммаРасходов) КАК СуммаОплаты,
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Партии.Партия
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ КАК ВидРасходов,
	|	СУММА(Остатки.СуммаОтгрузки) КАК СуммаОтгрузки
	|ПОМЕСТИТЬ ОстаткиСтарогоМетода
	|ИЗ
	|	ОстаткиСтарогоМетодаБезДокументовВозникновенияРасходов КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН.Обороты(
	|			ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1), &НачГраница, Регистратор, Организация = &Организация) КАК Партии
	|		ПО Остатки.Организация = Партии.Организация
	|			И Остатки.Партия = Партии.Партия
	|			И (Остатки.Партия = Партии.Партия ИЛИ Партии.Партия = НЕОПРЕДЕЛЕНО И Остатки.Партия = Партии.ДокументПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Партии.Партия
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ,
	|	Остатки.Партия,
	|	Остатки.Организация,
	|	Партии.ДокументПоступления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Остатки.Организация КАК Организация,
	|	Остатки.Партия,
	|	Партии.ДокументПоступления КАК ДокументВозникновенияРасходов,
	|	СУММА(ЕСТЬNULL(Партии.СтоимостьБезНДСОборот + Партии.НДСОборот, Остатки.СуммаРасходов)) КАК СуммаРасходов,
	|	СУММА(ЕСТЬNULL(Партии.НДСОборот, Остатки.НДС)) КАК НДС,
	|	СУММА(Остатки.СуммаОплаты) * СУММА(ЕСТЬNULL(Партии.СтоимостьБезНДСОборот + Партии.НДСОборот, Остатки.СуммаРасходов)) / СУММА(Остатки.СуммаРасходов) КАК СуммаОплаты,
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Партии.Партия
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ КАК ВидРасходов,
	|	СУММА(Остатки.СуммаОтгрузки) КАК СуммаОтгрузки
	|ИЗ
	|	ОстаткиСтарогоМетодаБезДокументовВозникновенияРасходов КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4.Обороты(
	|			ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1), &НачГраница, Регистратор, Организация = &Организация) КАК Партии
	|		ПО Остатки.Организация = Партии.Организация
	|			И Остатки.Партия = Партии.Партия
	|			И (Остатки.Партия = Партии.Партия ИЛИ Партии.Партия = НЕОПРЕДЕЛЕНО И Остатки.Партия = Партии.ДокументПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступления = Партии.Партия
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ,
	|	Остатки.Партия,
	|	Остатки.Организация,
	|	Партии.ДокументПоступления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.Партия,
	|	Партии.ДокументПоступленияРасходов,
	|	СУММА(ЕСТЬNULL(Партии.СтоимостьРеглОборот + Партии.НДСРеглОборот, Остатки.СуммаРасходов)),
	|	СУММА(ЕСТЬNULL(Партии.НДСРеглОборот, Остатки.НДС)),
	|	СУММА(Остатки.СуммаОплаты) * СУММА(ЕСТЬNULL(Партии.СтоимостьРеглОборот + Партии.НДСРеглОборот, Остатки.СуммаРасходов)) / СУММА(Остатки.СуммаРасходов),
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступленияРасходов = Партии.ДокументПоступления
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступленияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ,
	|	СУММА(Остатки.СуммаОтгрузки)
	|ИЗ
	|	ОстаткиСтарогоМетодаБезДокументовВозникновенияРасходов КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Обороты(
	|			ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1), &НачГраница, Регистратор, Организация = &Организация) КАК Партии
	|		ПО Остатки.Организация = Партии.Организация
	|			И Остатки.Партия = Партии.ДокументПоступления
	|			И (Остатки.Партия = Партии.ДокументПоступления ИЛИ Партии.ДокументПоступления = НЕОПРЕДЕЛЕНО И Остатки.Партия = Партии.ДокументПоступленияРасходов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Партии.ДокументПоступленияРасходов = Партии.ДокументПоступления
	|		ТОГДА Остатки.ВидРасходов
	|		КОГДА Партии.ДокументПоступленияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		ТОГДА ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) КОНЕЦ КОНЕЦ,
	|	Остатки.Партия,
	|	Остатки.Организация,
	|	Партии.ДокументПоступленияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстатков()
	
	МассивТекстовЗапроса = Новый Массив;
	
	#Область ОстаткиМатериалов
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация КАК Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.Партия КАК Партия,
	|	ОстаткиРасходов.СуммаРасходовОстаток КАК СуммаРасходов,
	|	ОстаткиРасходов.НДСОстаток КАК НДС,
	|	ОстаткиРасходов.СуммаОплатыОстаток КАК СуммаОплаты,
	|	ОстаткиРасходов.ВидРасходов КАК ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	ОстаткиРасходов.СуммаОтгрузкиОстаток КАК СуммаОтгрузки,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЛОЖЬ КАК ОстаткиСтарогоМетода,
	|	ОстаткиРасходов.ПризнаноОстаток КАК Признано,
	|	ОстаткиРасходов.НеПризнаноОстаток КАК НеПризнано
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНМатериалы.Остатки(&НачГраница, Организация = &Организация
	|		И ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия <> Неопределено
	|		И НЕ ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиТоваров
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.Партия,
	|	ОстаткиРасходов.СуммаРасходовОстаток,
	|	ОстаткиРасходов.НДСОстаток,
	|	ОстаткиРасходов.СуммаОплатыОстаток,
	|	ОстаткиРасходов.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	ОстаткиРасходов.СуммаОтгрузкиОстаток,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ОстаткиРасходов.ПризнаноОстаток,
	|	ОстаткиРасходов.НеПризнаноОстаток
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНТовары.Остатки(&НачГраница, Организация = &Организация
	|		И ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия <> Неопределено
	|		И НЕ ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиПрочихРасходов
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	СУММА(ОстаткиРасходов.СуммаРасходовОстаток),
	|	СУММА(ОстаткиРасходов.НДСОстаток),
	|	СУММА(ОстаткиРасходов.СуммаОплатыОстаток),
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОстаткиРасходов.ДокументВозникновенияРасходов) = ТИП(Справочник.ДоговорыКредитовИДепозитов)
	|				И ОстаткиРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты)
	|		ИНАЧЕ ОстаткиРасходов.ВидРасходов
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	0,
	|	ОстаткиРасходов.СтатьяРасходов,
	|	ЛОЖЬ,
	|	СУММА(ОстаткиРасходов.ПризнаноОстаток),
	|	СУММА(ОстаткиРасходов.НеПризнаноОстаток)
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН.Остатки(&НачГраница, Организация = &Организация
	|		И НЕ ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0
	|		ИЛИ ОстаткиРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Лизинг), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты))
	|		ИЛИ ТИПЗНАЧЕНИЯ(ОстаткиРасходов.ДокументВозникновенияРасходов) = ТИП(Справочник.ДоговорыКредитовИДепозитов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ОстаткиРасходов.ДокументВозникновенияРасходов) = ТИП(Справочник.ДоговорыКредитовИДепозитов)
	|				И ОстаткиРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты)
	|		ИНАЧЕ ОстаткиРасходов.ВидРасходов
	|	КОНЕЦ,
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.СтатьяРасходов,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиОСиНМА
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.СуммаРасходовНачальныйОстаток + ОстаткиРасходов.СуммаРасходовПриход,
	|	ОстаткиРасходов.НДСНачальныйОстаток + ОстаткиРасходов.НДСПриход,
	|	ОстаткиРасходов.СуммаОплатыНачальныйОстаток + ОстаткиРасходов.СуммаОплатыПриход,
	|	ОстаткиРасходов.ВидРасходов,
	|	ОстаткиРасходов.ЭлементРасходов,
	|	0,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ОстаткиРасходов.ПризнаноНачальныйОстаток + ОстаткиРасходов.ПризнаноПриход,
	|	ОстаткиРасходов.НеПризнаноНачальныйОстаток + ОстаткиРасходов.НеПризнаноПриход
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНОСиНМА.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&НачДата, ГОД), &НачДата,,, Организация = &Организация) КАК ОстаткиРасходов
	|ГДЕ ОстаткиРасходов.СуммаРасходовКонечныйОстаток > 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОстаткиСтарогоМетода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.Партия,
	|	ОстаткиРасходов.СуммаРасходов,
	|	ОстаткиРасходов.НДС,
	|	ОстаткиРасходов.СуммаОплаты,
	|	ОстаткиРасходов.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	ОстаткиРасходов.СуммаОтгрузки,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	ИСТИНА,
	|	0,
	|	0
	|ИЗ
	|	ОстаткиСтарогоМетода КАК ОстаткиРасходов";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область НачОстаткиМатериаловТекущегоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация КАК Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.Партия КАК Партия,
	|	ОстаткиРасходов.СуммаРасходовОстаток КАК СуммаРасходов,
	|	ОстаткиРасходов.НДСОстаток КАК НДС,
	|	ОстаткиРасходов.СуммаОплатыОстаток КАК СуммаОплаты,
	|	ОстаткиРасходов.ВидРасходов КАК ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	ОстаткиРасходов.СуммаОтгрузкиОстаток КАК СуммаОтгрузки,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЛОЖЬ КАК ОстаткиСтарогоМетода,
	|	ОстаткиРасходов.ПризнаноОстаток КАК Признано,
	|	ОстаткиРасходов.НеПризнаноОстаток КАК НеПризнано
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНМатериалы.Остатки(&КонГраница, Организация = &Организация
	|		И ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия <> Неопределено И ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НачОстаткиТоваровТекущегоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.Партия,
	|	ОстаткиРасходов.СуммаРасходовОстаток,
	|	ОстаткиРасходов.НДСОстаток,
	|	ОстаткиРасходов.СуммаОплатыОстаток,
	|	ОстаткиРасходов.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	ОстаткиРасходов.СуммаОтгрузкиОстаток,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ОстаткиРасходов.ПризнаноОстаток,
	|	ОстаткиРасходов.НеПризнаноОстаток
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНТовары.Остатки(&КонГраница, Организация = &Организация
	|		И ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка) И Партия <> Неопределено И ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НачОстаткиПрочихРасходовТекущегоПериода
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОстаткиРасходов.Организация,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.ДокументВозникновенияРасходов,
	|	ОстаткиРасходов.СуммаРасходовОстаток,
	|	ОстаткиРасходов.НДСОстаток,
	|	ОстаткиРасходов.СуммаОплатыОстаток,
	|	ОстаткиРасходов.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементРасходов,
	|	0,
	|	ОстаткиРасходов.СтатьяРасходов,
	|	ЛОЖЬ,
	|	ОстаткиРасходов.ПризнаноОстаток,
	|	ОстаткиРасходов.НеПризнаноОстаток
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН.Остатки(&КонГраница, Организация = &Организация И ДокументВозникновенияРасходов ССЫЛКА Документ.ПервичныйДокумент) КАК ОстаткиРасходов
	|ГДЕ
	|	ОстаткиРасходов.СуммаРасходовОстаток > 0
	|	И НЕ ОстаткиРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Лизинг),ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты))";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	ВидРасходов,
	|	СтатьяРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОпределенияМатериалов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СкладыУчетаМатериалов.Ссылка КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы) КАК ВидРасходов
	|ПОМЕСТИТЬ СкладыУчетаМатериалов
	|ИЗ
	|	Справочник.Склады КАК СкладыУчетаМатериалов
	|ГДЕ
	|	СкладыУчетаМатериалов.ЦеховаяКладовая
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокОтражения.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокОтражения.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ПорядокОтражения.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		КОГДА ПорядокОтражения.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|	КОНЕЦ КАК ВидРасходов	
	|ПОМЕСТИТЬ ВидыРасходовПорядкаОтражения
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|ГДЕ
	|	ПорядокОтражения.Организация = &Организация
	|	И ПорядокОтражения.СчетУчетаНаСкладе <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппаФинансовогоУчета,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыФинансовогоУчета.Ссылка КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ГруппыФинансовогоУчета.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|	КОНЕЦ КАК ВидРасходов
	|ПОМЕСТИТЬ ГруппыФинансовогоУчетаНеТовары
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчета
	|ГДЕ
	|	ГруппыФинансовогоУчета.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокОтраженияНоменклатуры.ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА ПорядокОтраженияНоменклатуры.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтраженияНоменклатуры
	|ГДЕ
	|	ПорядокОтраженияНоменклатуры.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|	И ПорядокОтраженияНоменклатуры.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПорядокОтраженияНоменклатуры.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппаФинансовогоУчета";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// При поступлении импортных товаров или сборке товаров, исходные документы поступления заменяются новыми (сборкой или
// таможенной декларацией) в партионном учете, что приводит к тому, что документ возникновения расходов один, а отгрузка
// уже прошла по другому. Для контроля таких случаев будем использовать таблицу, хранящую данные по документу
// возникновения расходов текущему и исходному, для правильной отработки алгоритма.
Функция ТекстЗапросаСоответствияДокументовВозникновенияРасходов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКОформлениюТаможенныхДеклараций.Регистратор КАК НовыйДокументВозникновенияРасходов,
	|	ТоварыКОформлениюТаможенныхДеклараций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлениюТаможенныхДеклараций.Организация КАК Организация,
	|	ТоварыКОформлениюТаможенныхДеклараций.ДокументПоступления КАК ИсходныйДокументВозникновенияРасходов,
	|	0 КАК Сумма,
	|	0 КАК НДС
	|ПОМЕСТИТЬ СоответствиеДокументовВозникновенияРасходов
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюТаможенныхДеклараций КАК ТоварыКОформлениюТаможенныхДеклараций
	|ГДЕ
	|	ТоварыКОформлениюТаможенныхДеклараций.Период < &КонДата
	|	И ТоварыКОформлениюТаможенныхДеклараций.Организация = &Организация
	|	И ТоварыКОформлениюТаможенныхДеклараций.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииЗатратНаВыпуск.Регистратор,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.Организация,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.СтоимостьРегл КАК Сумма,
	|	ПартииЗатратНаВыпуск.НДСРегл КАК НДС
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|ГДЕ
	|	ПартииЗатратНаВыпуск.Период < &КонДата
	|	И ПартииЗатратНаВыпуск.Организация = &Организация
	|	И ПартииЗатратНаВыпуск.Регистратор ССЫЛКА Документ.СборкаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НовыйДокументВозникновенияРасходов,
	|	АналитикаУчетаНоменклатуры";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// При реализации без перехода права собственности, исходные документы партии заменяются новыми (документом реализации)
// в детализации партий, что приводит к тому, что документ партии один, а отгрузка
// уже прошла по другому. Для контроля таких случаев будем использовать таблицу, хранящую данные по документу
// возникновения расходов текущему и исходному, для правильной отработки алгоритма.
Функция ТекстЗапросаПартийРеализацийБезПереходаПраваСобственности()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Партии.Партия КАК ДокументРеализации
	|ПОМЕСТИТЬ РеализацииБезПереходаПраваСобственности
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН.Остатки(&НачГраница, Организация = &Организация И Партия ССЫЛКА Документ.РеализацияТоваровУслуг) КАК Партии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Партия
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4.Остатки(&НачГраница, Организация = &Организация И Партия ССЫЛКА Документ.РеализацияТоваровУслуг) КАК Партии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.Партия КАК Партия,
	|	Партии.ДокументПоступления КАК ДокументПоступления,
	|	СУММА(Партии.НДС) КАК НДС,
	|	СУММА(Партии.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	РеализацииБезПереходаПраваСобственности.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ ПартииРеализацийБезПереходаПраваСобственности
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииБезПереходаПраваСобственности КАК РеализацииБезПереходаПраваСобственности
	|		ПО Партии.Регистратор = РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|			И Партии.Партия <> РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Партия,
	|	Партии.ДокументПоступления,
	|	РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Партия КАК Партия,
	|	Партии.ДокументПоступления КАК ДокументПоступления,
	|	СУММА(Партии.НДС) КАК НДС,
	|	СУММА(Партии.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	РеализацииБезПереходаПраваСобственности.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииБезПереходаПраваСобственности КАК РеализацииБезПереходаПраваСобственности
	|		ПО Партии.Регистратор = РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|			И Партии.Партия <> РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Партия,
	|	Партии.ДокументПоступления,
	|	РеализацииБезПереходаПраваСобственности.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеализацииБезПереходаПраваСобственности";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоСебестоимостиПредварительная()
	
	МассивТекстовЗапросов = Новый Массив;
	
	#Область ПартииТоваровОрганизаций
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Партии.Организация КАК Организация,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Период КАК Период,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|			И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА ИсходныеДокументыВозникновенияРасходов.НДС
	|		ИНАЧЕ Партии.НДСРегл
	|	КОНЕЦ) КАК НДС,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|			И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА ИсходныеДокументыВозникновенияРасходов.Сумма
	|		ИНАЧЕ Партии.СтоимостьРегл
	|	КОНЕЦ) КАК Сумма,
	|	Партии.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|					И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьРегл > 0
	|			ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьРегл < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""ДопРасходы""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ КАК ВидОперации,
	|	ЕСТЬNULL(СкладыУчетаМатериалов.ВидРасходов, ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))) КАК ВидРасходов,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления) КАК Партия,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления) КАК ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	Партии.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	ЛОЖЬ КАК ДопРасход
	|ПОМЕСТИТЬ ДанныеПоСебестоимостиПредварительные
	|ИЗ
	|	РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|		ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|			И Партии.АналитикаУчетаНоменклатуры.МестоХранения = ВидыРасходовПорядкаОтражения.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаНеТовары КАК ГруппыФинансовогоУчета
	|		ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.ГруппаФинансовогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ СкладыУчетаМатериалов КАК СкладыУчетаМатериалов
	|		ПО Партии.АналитикаУчетаНоменклатуры.МестоХранения = СкладыУчетаМатериалов.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|		ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|			И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|			И Партии.АналитикаУчетаНоменклатуры = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачДата И &КонДата
	|	И Партии.Организация = &Организация
	|	И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|	И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалогообложенияНДСПартийТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов
	|	И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|	И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ОтчетКомитентуОСписании
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|	И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПересортицаТоваров
	|	И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПрочееОприходованиеТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.СборкаТоваров
	|	И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
	|	И (НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
	|		ИЛИ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов,
	|			ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.Период,
	|	Партии.ХозяйственнаяОперация,
	|	ЕСТЬNULL(СкладыУчетаМатериалов.ВидРасходов, ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))),
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|	Партии.СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|			ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|				И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьРегл > 0
	|		ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И Партии.СтоимостьРегл < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""ДопРасходы""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПартииРасходовНаСебестоимостьТоваров
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.Период,
	|	СУММА(Партии.НДСРегл),
	|	СУММА(Партии.СтоимостьРегл),
	|	ВЫБОР
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|		ИНАЧЕ Партии.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""ДопРасходы""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьРегл < 0
	|			ТОГДА ""ВозвратКлиента""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ,
	|	ЕСТЬNULL(СкладыУчетаМатериалов.ВидРасходов, ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))),
	|	ВЫБОР КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступленияРасходов
	|		ИНАЧЕ Партии.ДокументПоступления КОНЕЦ,
	|	Партии.ДокументПоступленияРасходов,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовСписания,
	|	ИСТИНА КАК ДопРасход
	|ИЗ
	|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|		ПО Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|			И Партии.АналитикаУчетаНоменклатуры.МестоХранения = ВидыРасходовПорядкаОтражения.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаНеТовары КАК ГруппыФинансовогоУчета
	|		ПО Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.ГруппаФинансовогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ СкладыУчетаМатериалов КАК СкладыУчетаМатериалов
	|		ПО Партии.АналитикаУчетаНоменклатуры.МестоХранения = СкладыУчетаМатериалов.Склад
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачДата И &КонДата
	|	И Партии.Организация = &Организация
	|	И (Партии.СтоимостьРегл <> 0 ИЛИ Партии.НДСРегл <> 0)
	|	И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|	И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалогообложенияНДСПартийТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.НачислениеОценочныхОбязательствПоОтпускам
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПереработчика
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.ВыпускПродукции
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.СчетФактураНалоговыйАгент
	|	И НЕ Партии.Регистратор ССЫЛКА Документ.СчетФактураПолученныйНалоговыйАгент
	|	И (НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
	|			ИЛИ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы))
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.Период,
	|	ВЫБОР
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|		ИНАЧЕ Партии.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ЕСТЬNULL(СкладыУчетаМатериалов.ВидРасходов, ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))),
	|	ВЫБОР КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступленияРасходов
	|		ИНАЧЕ Партии.ДокументПоступления КОНЕЦ,
	|	Партии.ДокументПоступленияРасходов,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|			ТОГДА ""ДопРасходы""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьРегл < 0
	|			ТОГДА ""ВозвратКлиента""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПартииТоваровПереданныеНаКомиссию
	ТекстЗапроса =
	"ВЫБРАТЬ
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.НДС
	|			ИНАЧЕ Партии.НДСРегл
	|		КОНЕЦ),
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.Сумма
	|			ИНАЧЕ Партии.СтоимостьРегл
	|		КОНЕЦ),
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
	|		КОНЕЦ,
	|		""Списание"",
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура),
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|		ЛОЖЬ КАК ДопРасход
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|				И Партии.АналитикаУчетаНоменклатуры.МестоХранения = ВидыРасходовПорядкаОтражения.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаНеТовары КАК ГруппыФинансовогоУчета
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.ГруппаФинансовогоУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ СкладыУчетаМатериалов КАК СкладыУчетаМатериалов
	|			ПО Партии.АналитикаУчетаНоменклатуры.МестоХранения = СкладыУчетаМатериалов.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|			ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|				И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|				И Партии.АналитикаУчетаНоменклатуры = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачДата И &КонДата
	|		И Партии.Организация = &Организация
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И ЕСТЬNULL(СкладыУчетаМатериалов.ВидРасходов, ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДетализацияПартийТоваровДляНДСиУСН
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Партии.Организация КАК Организация,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Период КАК Период,
	|	СУММА(Партии.НДС) КАК НДС,
	|	СУММА(Партии.СтоимостьБезНДС) КАК Сумма,
	|	Партии.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|					И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС > 0
	|			ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьБезНДС < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|			ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления И Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПриобретения)
	|			ТОГДА ""ДопРасходы""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) ИЛИ НЕ СкладыУчетаМатериалов.Склад ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		КОГДА ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И ТИПЗНАЧЕНИЯ(Партии.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|			ТОГДА Партии.АналитикаРасходов
	|		ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР
	|		КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступления
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия))
	|	КОНЕЦ КАК Партия,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления) КАК ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА Партии.ВидДеятельностиНДС
	|	ИНАЧЕ Партии.КорВидДеятельностиНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовАктивов,
	|	Партии.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
	|		ИЛИ (Партии.Партия <> НЕОПРЕДЕЛЕНО И НЕ Партии.Партия ССЫЛКА Документ.СборкаТоваров И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) <> Партии.ДокументПоступления) КАК ДопРасход
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|	ПО Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|		И Партии.АналитикаУчетаНоменклатуры.МестоХранения = ВидыРасходовПорядкаОтражения.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаНеТовары КАК ГруппыФинансовогоУчета
	|	ПО Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.ГруппаФинансовогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ СкладыУчетаМатериалов КАК СкладыУчетаМатериалов
	|	ПО Партии.АналитикаУчетаНоменклатуры.МестоХранения = СкладыУчетаМатериалов.Склад
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО Партии.АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПартииРеализацийБезПереходаПраваСобственности КАК ПартииРеализацийБезПереходаПраваСобственности
	|	ПО Партии.Партия = ПартииРеализацийБезПереходаПраваСобственности.ДокументРеализации
	|		И Партии.ДокументПоступления = ПартииРеализацийБезПереходаПраваСобственности.ДокументПоступления
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|	ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|		И Партии.ДокументПоступления = ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия)
	|		И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|		И Партии.АналитикаУчетаНоменклатуры = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачДата И &КонДата
	|	И Партии.Организация = &Организация
	|	И НЕ Партии.ХозяйственнаяОперация В (&ИсключающиесяХозОперацииСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ИсключающиесяРегистраторыСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.Партия) В (&ИсключающиесяДокументыПартийСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) В (&ИсключающиесяДокументыПоступленияСебестоимости)
	|	И (Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ИЛИ НЕ ПартииРеализацийБезПереходаПраваСобственности.Партия ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.Период,
	|	Партии.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
	|		ИЛИ (Партии.Партия <> НЕОПРЕДЕЛЕНО И НЕ Партии.Партия ССЫЛКА Документ.СборкаТоваров И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) <> Партии.ДокументПоступления),
	|	Партии.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) ИЛИ НЕ СкладыУчетаМатериалов.Склад ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		КОГДА ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И ТИПЗНАЧЕНИЯ(Партии.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|			ТОГДА Партии.АналитикаРасходов
	|		ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступления
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия))
	|	КОНЕЦ,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|	ВЫБОР
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА Партии.ВидДеятельностиНДС
	|		ИНАЧЕ Партии.КорВидДеятельностиНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовАктивов,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|					И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС > 0
	|			ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьБезНДС < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|			ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления И Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПриобретения)
	|			ТОГДА ""ДопРасходы""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДетализацияПартийТоваровДляНДСиУСН2_4
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Партии.Организация КАК Организация,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Период КАК Период,
	|	СУММА(ЕСТЬNULL(СебестоимостьТоваров.НДСРегл, Партии.НДС)) КАК НДС,
	|	СУММА(ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл + СебестоимостьТоваров.ДопРасходыРегл - 
	|		ВЫБОР КОГДА СебестоимостьТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|			ИЛИ СебестоимостьТоваров.ВидДеятельностиНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА СебестоимостьТоваров.НДСРегл ИНАЧЕ 0 КОНЕЦ, Партии.СтоимостьБезНДС)) КАК Сумма,
	|	Партии.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|					И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС > 0
	|			ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьБезНДС < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|			ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления И Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПриобретения)
	|			ТОГДА ""ДопРасходы""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыНоменклатуры.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОГДА НЕ Аналитика.МестоХранения ЕСТЬ NULL И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) ИЛИ НЕ СкладыУчетаМатериалов.Склад ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		КОГДА ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И ТИПЗНАЧЕНИЯ(Партии.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|			ТОГДА Партии.АналитикаРасходов
	|		ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР
	|		КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступления
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия))
	|	КОНЕЦ КАК Партия,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления) КАК ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА Партии.ВидДеятельностиНДС
	|		ИНАЧЕ Партии.КорВидДеятельностиНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовАктивов,
	|	Партии.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
	|		ИЛИ (Партии.Партия <> НЕОПРЕДЕЛЕНО И НЕ Партии.Партия ССЫЛКА Документ.СборкаТоваров И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) <> Партии.ДокументПоступления) КАК ДопРасход
	|ИЗ
	|	РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ПО Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Партии.Регистратор = СебестоимостьТоваров.Регистратор
	|		И Партии.Организация = СебестоимостьТоваров.Организация
	|		И Партии.ВидДвижения = СебестоимостьТоваров.ВидДвижения
	|		И Партии.Партия = СебестоимостьТоваров.Партия
	|		И (Партии.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|			ИЛИ Партии.АналитикаУчетаПартий = СебестоимостьТоваров.АналитикаУчетаПартий)
	|		И Партии.ВидДеятельностиНДС = СебестоимостьТоваров.ВидДеятельностиНДС
	|		И (Партии.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ИЛИ Партии.Номенклатура = СебестоимостьТоваров.АналитикаУчетаНоменклатуры.Номенклатура)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО (ЕСТЬNULL(СебестоимостьТоваров.АналитикаУчетаНоменклатуры, Партии.КорАналитикаУчетаНоменклатуры) = Аналитика.Ссылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|	ПО ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, НЕОПРЕДЕЛЕНО) = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|		И ЕСТЬNULL(Аналитика.МестоХранения, НЕОПРЕДЕЛЕНО) = ВидыРасходовПорядкаОтражения.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ ГруппыФинансовогоУчетаНеТовары КАК ГруппыФинансовогоУчета
	|	ПО Аналитика.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.ГруппаФинансовогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ СкладыУчетаМатериалов КАК СкладыУчетаМатериалов
	|	ПО ЕСТЬNULL(Аналитика.МестоХранения, НЕОПРЕДЕЛЕНО) = СкладыУчетаМатериалов.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ЕСТЬNULL(Аналитика.Номенклатура.ВидНоменклатуры, НЕОПРЕДЕЛЕНО) = ВидыНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПартииРеализацийБезПереходаПраваСобственности КАК ПартииРеализацийБезПереходаПраваСобственности
	|	ПО Партии.Партия = ПартииРеализацийБезПереходаПраваСобственности.ДокументРеализации
	|		И Партии.ДокументПоступления = ПартииРеализацийБезПереходаПраваСобственности.ДокументПоступления
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|	ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|		И Партии.ДокументПоступления = ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия)
	|		И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|		И Аналитика.Ссылка = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачДата И &КонДата
	|	И Партии.Организация = &Организация
	|	И НЕ Партии.ХозяйственнаяОперация В (&ИсключающиесяХозОперацииСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (&ИсключающиесяРегистраторыСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.Партия) В (&ИсключающиесяДокументыПартийСебестоимости)
	|	И НЕ ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) В (&ИсключающиесяДокументыПоступленияСебестоимости)
	|	И (Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ИЛИ НЕ ПартииРеализацийБезПереходаПраваСобственности.Партия ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.Регистратор,
	|	Партии.Период,
	|	Партии.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходы),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
	|		ИЛИ (Партии.Партия <> НЕОПРЕДЕЛЕНО И НЕ Партии.Партия ССЫЛКА Документ.СборкаТоваров И ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия) <> Партии.ДокументПоступления),
	|	Партии.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыНоменклатуры.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОГДА НЕ Аналитика.МестоХранения ЕСТЬ NULL И Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение) ИЛИ НЕ СкладыУчетаМатериалов.Склад ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		КОГДА ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И ТИПЗНАЧЕНИЯ(Партии.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|			ТОГДА Партии.АналитикаРасходов
	|		ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(ГруппыФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Партии.ДокументПоступления
	|		ИНАЧЕ ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, ЕСТЬNULL(ПартииРеализацийБезПереходаПраваСобственности.Партия, Партии.Партия))
	|	КОНЕЦ,
	|	ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|	ВЫБОР
	|		КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		ТОГДА Партии.ВидДеятельностиНДС
	|		ИНАЧЕ Партии.КорВидДеятельностиНДС
	|	КОНЕЦ,
	|	Партии.СтатьяРасходовАктивов,
	|	ВЫБОР
	|		КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|			ТОГДА ""Таможня""
	|		КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|				ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|					И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС > 0
	|			ТОГДА ""ВозвратПоставщику""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И Партии.СтоимостьБезНДС < 0
	|			ТОГДА ""ВозвратКлиента""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|			ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления И Партии.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия))
	|			ТОГДА ""Приход""
	|		КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|			ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПриобретения)
	|			ТОГДА ""ДопРасходы""
	|		ИНАЧЕ ""Списание""
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Партии.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) И НЕ Партии.Партия ССЫЛКА Документ.СборкаТоваров ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоСебестоимости()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация,
	|	Данные.Регистратор,
	|	Данные.Период КАК Период,
	|	СУММА(Данные.НДС) КАК НДС,
	|	СУММА(Данные.Сумма + Данные.НДС) КАК Сумма,
	|	Данные.ХозяйственнаяОперация,
	|	Данные.ВидОперации,
	|	ВЫБОР
	|		КОГДА Данные.ДокументВозникновенияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт И Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|		КОГДА Данные.ДокументВозникновенияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт И Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы)
	|		КОГДА Данные.ДопРасход И Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|		КОГДА Данные.ДопРасход И Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы)
	|		КОГДА НЕ Данные.ВидРасходов ССЫЛКА Перечисление.ВидыРасходовУСН
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|		ИНАЧЕ Данные.ВидРасходов
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР КОГДА НЕ Данные.ВидРасходов ССЫЛКА Перечисление.ВидыРасходовУСН
	|		ТОГДА Данные.ВидРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЭлементРасходов,
	|	Данные.Партия КАК Партия,
	|	Данные.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА Данные.ВидОперации = ""Списание"" ИЛИ Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ЕСТЬNULL(СтатьиРасходов.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА Данные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА Данные.ВидОперации = ""Списание"" ИЛИ Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ЕСТЬNULL(СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	ВЫБОР
	|		КОГДА Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(СтатьиРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА)
	|	КОНЕЦ КАК ПризнаватьРасходамиПриУСН
	|ПОМЕСТИТЬ ДанныеПоСебестоимости
	|ИЗ
	|	ДанныеПоСебестоимостиПредварительные КАК Данные
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО СтатьиРасходов.Ссылка = Данные.СтатьяРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ДокументВозникновенияРасходов,
	|	Данные.ВидОперации,
	|	Данные.ХозяйственнаяОперация,
	|	Данные.ДопРасход,
	|	Данные.ВидРасходов,
	|	Данные.Партия,
	|	Данные.Регистратор,
	|	Данные.Период,
	|	Данные.Организация,
	|	ВЫБОР
	|		КОГДА Данные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА Данные.ВидОперации = ""Списание"" ИЛИ Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ЕСТЬNULL(СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(СтатьиРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Данные.ВидОперации = ""Списание"" ИЛИ Данные.ВидОперации = ""ВозвратКлиента""
	|			ТОГДА ЕСТЬNULL(СтатьиРасходов.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочихРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Регистратор,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.Сумма < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.Сумма < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ВложенныйЗапрос.НДС) КАК НДС,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации ИЛИ ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.ОбъектыСтроительства
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|		КОГДА ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА)
	|		ИНАЧЕ ВложенныйЗапрос.ВидРасходов
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ВидРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|		ТОГДА ВложенныйЗапрос.ВидРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ЭлементРасходов,
	|	ВложенныйЗапрос.ВидОперации,
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ВложенныйЗапрос.ВидДеятельности,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Договор
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Период КАК Период,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК Регистратор,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация КАК Организация,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК СтатьяРасходов,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот КАК Сумма,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаНДСРеглОборот КАК НДС,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасходов,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация В
	|															(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств))
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ КАК ВидОперации,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК ДокументВозникновенияРасходов,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности,
	|		ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.Контрагент, ЕСТЬNULL(РасходныйКассовыйОрдер.Контрагент, """"))  КАК Контрагент,
	|		ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.Договор, ЕСТЬNULL(РасходныйКассовыйОрдер.Договор, """")) КАК Договор
	|	ИЗ
	|		РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|				&НачДата,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|					И НЕ ХозяйственнаяОперация В (&ИсключающиесяХозОперацииПрочиеРасходы)) КАК ДвиженияДенежныеСредстваДоходыРасходыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|		ПО СписаниеБезналичныхДенежныхСредств.Ссылка = ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор
	|		И ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО РасходныйКассовыйОрдер.Ссылка = ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор
	|		И ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	ГДЕ
	|		НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|		И (НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		И (НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		И НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Период,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Организация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов,
	|		СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот),
	|		ВЫБОР
	|			КОГДА СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглБезНДСОборот) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот) - СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглБезНДСОборот)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор Ссылка Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежи)
	|			КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И ТИПЗНАЧЕНИЯ(ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор Ссылка Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И ТИПЗНАЧЕНИЯ(ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|				ТОГДА ""Амортизация""
	|			КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетКомиссионера).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности)
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПереработчику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ПодарочныеСертификаты
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов = НЕОПРЕДЕЛЕНО И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Договор ССЫЛКА Справочник.ДоговорыКредитовИДепозитов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Договор ССЫЛКА Справочник.ДоговорыКредитовИДепозитов
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Договор
	|			ИНАЧЕ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Контрагент,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Договор
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы.Обороты(
	|				&НачДата,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И НЕ ХозяйственнаяОперация В (&ИсключающиесяХозОперацииПрочиеРасходы)) КАК ДвиженияКонтрагентДоходыРасходыОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|				ПО ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов = СтатьиРасходов.Ссылка
	|	ГДЕ
	|		НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.НачисленияКредитовИДепозитов
	|		И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.НачислениеСписаниеРезервовПоСомнительнымДолгам
	|		И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор В
	|					(ВЫБРАТЬ
	|						ДанныеПоСебестоимости.Регистратор
	|					ИЗ
	|						ДанныеПоСебестоимости
	|					ГДЕ
	|						ДанныеПоСебестоимости.ВидОперации = ""ДопРасходы"")
	|		И (ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовУпр, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Организация) = ТИПЗНАЧЕНИЯ(Контрагент) И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераКомиссия))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Период,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Организация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор Ссылка Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежи)
	|			КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И ТИПЗНАЧЕНИЯ(ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор Ссылка Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И ТИПЗНАЧЕНИЯ(ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|				ТОГДА ""Амортизация""
	|			КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетКомиссионера).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности)
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПереработчику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ПодарочныеСертификаты
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов = НЕОПРЕДЕЛЕНО И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Договор ССЫЛКА Справочник.ДоговорыКредитовИДепозитов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Договор ССЫЛКА Справочник.ДоговорыКредитовИДепозитов
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Договор
	|			ИНАЧЕ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов
	|		КОНЕЦ,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Контрагент,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Договор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПроизводственныхЗатратОбороты.Период,
	|		ПартииПроизводственныхЗатратОбороты.Регистратор,
	|		ПартииПроизводственныхЗатратОбороты.Организация,
	|		ВЫБОР
	|			КОГДА ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ПартииПроизводственныхЗатратОбороты.Регистратор КАК Документ.ПриобретениеТоваровУслуг).ХозяйственнаяОперация
	|			КОГДА ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ОтчетПереработчика
	|				ТОГДА ВЫРАЗИТЬ(ПартииПроизводственныхЗатратОбороты.Регистратор КАК Документ.ОтчетПереработчика).ХозяйственнаяОперация
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|		ПартииПроизводственныхЗатратОбороты.СтоимостьРеглПриход + ПартииПроизводственныхЗатратОбороты.НДСРеглПриход,
	|		ПартииПроизводственныхЗатратОбороты.НДСРеглПриход,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги),
	|		""Приход"",
	|		ПартииПроизводственныхЗатратОбороты.ДокументПоступления,
	|		ВЫБОР
	|			КОГДА ПартииПроизводственныхЗатратОбороты.АналитикаУчетаПартий.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОНЕЦ,
	|		"""",
	|		""""
	|	ИЗ
	|		РегистрНакопления.ПартииПроизводственныхЗатрат.Обороты(
	|				&НачДата,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)) КАК ПартииПроизводственныхЗатратОбороты
	|	ГДЕ
	|		ПартииПроизводственныхЗатратОбороты.СтоимостьРеглПриход > 0
	//++ НЕ УТ
	|		И НЕ ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ПроизводствоБезЗаказа
	//-- НЕ УТ
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Регистратор,
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации ИЛИ ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.ОбъектыСтроительства
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС)
	|		КОГДА ВложенныйЗапрос.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА)
	|		ИНАЧЕ ВложенныйЗапрос.ВидРасходов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВложенныйЗапрос.ВидРасходов) В (ТИП(Справочник.ОбъектыСтроительства), ТИП(Справочник.НематериальныеАктивы), ТИП(Справочник.ОбъектыЭксплуатации))
	|		ТОГДА ВложенныйЗапрос.ВидРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВложенныйЗапрос.ВидДеятельности,
	|	ВложенныйЗапрос.ВидОперации,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоЗарплатеИНалогам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период КАК Период,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация КАК Организация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов
	|		ИНАЧЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья
	|	КОНЕЦ КАК СтатьяРасходов,
	|	СУММА(ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаРегл) КАК Сумма,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Приход""
	|	КОНЕЦ КАК ВидОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН,
	|		ИСТИНА) КАК ПризнаватьРасходамиПриУСН,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СпособРасчетов КАК СпособРасчетов,
	|	НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.НеОблагаетсяНДФЛ КАК ОблагаетсяНДФЛ
	|ПОМЕСТИТЬ РасходыПоЗарплатеИНалогамВременнаяТаблица
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период МЕЖДУ &НачДата И &КонДата
	|	И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация = &Организация
	|	И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов) В (&СтатьиЗарплатыИНалогов)
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.НачислениеОценочныхОбязательствПоОтпускам
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы))
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоходыКонтрагентов), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов
	|		ИНАЧЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья
	|	КОНЕЦ,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Приход""
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН,
	|		ИСТИНА),
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.СпособРасчетов,
	|	НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.НеОблагаетсяНДФЛ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтражениеЗарплатыВФинансовомУчете.Период,
	|	ОтражениеЗарплатыВФинансовомУчете.Регистратор,
	|	ОтражениеЗарплатыВФинансовомУчете.Организация,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВФинансовомУчете.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеСдельнойЗаработнойПлаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСоСдельнойЗаработнойПлаты)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВФинансовомУчете.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ИНАЧЕ ОтражениеЗарплатыВФинансовомУчете.ТипНалога
	|	КОНЕЦ,
	|	СУММА(ОтражениеЗарплатыВФинансовомУчете.СуммаРегл),
	|	ВЫБОР
	|		КОГДА ОтражениеЗарплатыВФинансовомУчете.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	КОНЕЦ,
	|	""Приход"",
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|	ИСТИНА КАК ПризнаватьРасходамиПриУСН,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетовСФизическимиЛицами.ПустаяСсылка),
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ОтражениеЗарплатыВФинансовомУчете КАК ОтражениеЗарплатыВФинансовомУчете
	|ГДЕ
	|	ОтражениеЗарплатыВФинансовомУчете.Период МЕЖДУ &НачДата И &КонДата
	|	И ОтражениеЗарплатыВФинансовомУчете.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеЗарплатыВФинансовомУчете.Период,
	|	ОтражениеЗарплатыВФинансовомУчете.Регистратор,
	|	ОтражениеЗарплатыВФинансовомУчете.Организация,
	|	ОтражениеЗарплатыВФинансовомУчете.ТипНалога
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходов,
	|	ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплате.Период КАК Период,
	|	РасходыПоЗарплате.Регистратор КАК Регистратор,
	|	РасходыПоЗарплате.Организация КАК Организация,
	|	РасходыПоЗарплате.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплате.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(РасходыПоЗарплате.Сумма) КАК Сумма,
	|	РасходыПоЗарплате.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоЗарплате.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплате.ВидОперации КАК ВидОперации,
	|	РасходыПоЗарплате.ВидДеятельности КАК ВидДеятельности,
	|	РасходыПоЗарплате.ПризнаватьРасходамиПриУСН КАК ПризнаватьРасходамиПриУСН,
	|	РасходыПоЗарплате.СпособРасчетов
	|ПОМЕСТИТЬ РасходыУменьшаемыеНаСуммуНДФЛ
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплате
	|ГДЕ
	|	РасходыПоЗарплате.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И РасходыПоЗарплате.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И РасходыПоЗарплате.ВидОперации = ""Приход""
	|	И РасходыПоЗарплате.ОблагаетсяНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплате.Период,
	|	РасходыПоЗарплате.Регистратор,
	|	РасходыПоЗарплате.Организация,
	|	РасходыПоЗарплате.ХозяйственнаяОперация,
	|	РасходыПоЗарплате.СтатьяРасходов,
	|	РасходыПоЗарплате.ВидРасходов,
	|	РасходыПоЗарплате.ВидОперации,
	|	РасходыПоЗарплате.ВидДеятельности,
	|	РасходыПоЗарплате.ПризнаватьРасходамиПриУСН,
	|	РасходыПоЗарплате.СпособРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеВозмещенные.Период,
	|	РасходыПоЗарплатеВозмещенные.Регистратор,
	|	РасходыПоЗарплатеВозмещенные.Организация,
	|	РасходыПоЗарплатеВозмещенные.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеВозмещенные.СтатьяРасходов,
	|	СУММА(РасходыПоЗарплатеВозмещенные.Сумма),
	|	РасходыПоЗарплатеВозмещенные.ВидРасходов,
	|	0,
	|	РасходыПоЗарплатеВозмещенные.Регистратор,
	|	РасходыПоЗарплатеВозмещенные.ВидОперации,
	|	РасходыПоЗарплатеВозмещенные.ВидДеятельности,
	|	РасходыПоЗарплатеВозмещенные.ПризнаватьРасходамиПриУСН,
	|	РасходыПоЗарплатеВозмещенные.СпособРасчетов
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеВозмещенные
	|ГДЕ
	|	РасходыПоЗарплатеВозмещенные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И РасходыПоЗарплатеВозмещенные.СтатьяРасходов ССЫЛКА Перечисление.ТипыНалогов
	|	И РасходыПоЗарплатеВозмещенные.ВидОперации = ""Оплата""
	|	И РасходыПоЗарплатеВозмещенные.ОблагаетсяНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеВозмещенные.Период,
	|	РасходыПоЗарплатеВозмещенные.Регистратор,
	|	РасходыПоЗарплатеВозмещенные.Организация,
	|	РасходыПоЗарплатеВозмещенные.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеВозмещенные.СтатьяРасходов,
	|	РасходыПоЗарплатеВозмещенные.ВидРасходов,
	|	РасходыПоЗарплатеВозмещенные.ВидОперации,
	|	РасходыПоЗарплатеВозмещенные.ВидДеятельности,
	|	РасходыПоЗарплатеВозмещенные.ПризнаватьРасходамиПриУСН,
	|	РасходыПоЗарплатеВозмещенные.СпособРасчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоНалогамНДФЛ.Период КАК Период,
	|	РасходыПоНалогамНДФЛ.Регистратор КАК Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация КАК Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.СтатьяРасходов КАК СтатьяРасходовЗарплаты,
	|	РасходыПоНалогамНДФЛ.Сумма * РасходыУменьшаемыеНаСуммуНДФЛ.Сумма / СУММА(РасходыУменьшаемыеНаСуммуНДФЛИтоги.Сумма) КАК Сумма,
	|	РасходыПоНалогамНДФЛ.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоНалогамНДФЛ.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ВидОперации КАК ВидОперации,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ВидДеятельности КАК ВидДеятельности,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ПризнаватьРасходамиПриУСН КАК ПризнаватьРасходамиПриУСН,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.СпособРасчетов
	|ПОМЕСТИТЬ РасходыПоНалогамКВычетуИзЗарплаты
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоНалогамНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыУменьшаемыеНаСуммуНДФЛ КАК РасходыУменьшаемыеНаСуммуНДФЛ
	|		ПО РасходыПоНалогамНДФЛ.Период = РасходыУменьшаемыеНаСуммуНДФЛ.Период
	|			И РасходыПоНалогамНДФЛ.Регистратор = РасходыУменьшаемыеНаСуммуНДФЛ.Регистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыУменьшаемыеНаСуммуНДФЛ КАК РасходыУменьшаемыеНаСуммуНДФЛИтоги
	|		ПО РасходыПоНалогамНДФЛ.Период = РасходыУменьшаемыеНаСуммуНДФЛИтоги.Период
	|			И РасходыПоНалогамНДФЛ.Регистратор = РасходыУменьшаемыеНаСуммуНДФЛИтоги.Регистратор
	|
	|ГДЕ
	|	РасходыПоНалогамНДФЛ.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И РасходыПоНалогамНДФЛ.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоНалогамНДФЛ.ВидОперации = ""Приход""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.СтатьяРасходов,
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ВидОперации,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ВидДеятельности,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.ПризнаватьРасходамиПриУСН,
	|	РасходыПоНалогамНДФЛ.Сумма,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.Сумма,
	|	РасходыУменьшаемыеНаСуммуНДФЛ.СпособРасчетов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Период,
	|	СтатьяРасходовЗарплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.Сумма - СУММА(ЕСТЬNULL(РасходыПоНалогамКВычетуИзЗарплаты.Сумма, 0)) КАК Сумма,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ РасходыПоЗарплате
	|ИЗ
	|	РасходыУменьшаемыеНаСуммуНДФЛ КАК РасходыПоЗарплатеИНалогам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамКВычетуИзЗарплаты
	|		ПО РасходыПоЗарплатеИНалогам.Регистратор = РасходыПоНалогамКВычетуИзЗарплаты.Регистратор
	|			И РасходыПоЗарплатеИНалогам.Период = РасходыПоНалогамКВычетуИзЗарплаты.Период
	|			И РасходыПоЗарплатеИНалогам.СтатьяРасходов = РасходыПоНалогамКВычетуИзЗарплаты.СтатьяРасходовЗарплаты
	|			И РасходыПоЗарплатеИНалогам.СпособРасчетов = РасходыПоНалогамКВычетуИзЗарплаты.СпособРасчетов
	|			И РасходыПоНалогамКВычетуИзЗарплаты.ВидОперации = ""Приход""
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И РасходыПоЗарплатеИНалогам.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.Сумма
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплате.Период КАК Период,
	|	РасходыПоЗарплате.Регистратор КАК Регистратор,
	|	РасходыПоЗарплате.Организация КАК Организация,
	|	РасходыПоЗарплате.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплате.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(РасходыПоЗарплате.Сумма) КАК Сумма,
	|	РасходыПоЗарплате.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоЗарплате.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплате.ВидОперации КАК ВидОперации
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплате
	|ГДЕ
	|	РасходыПоЗарплате.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И РасходыПоЗарплате.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|	И РасходыПоЗарплате.ВидОперации = ""Приход""
	|	И НЕ РасходыПоЗарплате.ОблагаетсяНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплате.Период,
	|	РасходыПоЗарплате.Регистратор,
	|	РасходыПоЗарплате.Организация,
	|	РасходыПоЗарплате.ХозяйственнаяОперация,
	|	РасходыПоЗарплате.СтатьяРасходов,
	|	РасходыПоЗарплате.ВидРасходов,
	|	РасходыПоЗарплате.ВидОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(РасходыПоЗарплатеИНалогам.Сумма) - СУММА(ЕСТЬNULL(РасходыПоНалогамКВычетуИзЗарплаты.Сумма, 0)) КАК Сумма,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов КАК ВидРасходов,
	|	СУММА(0) КАК НДС,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации КАК ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидДеятельности КАК ВидДеятельности,
	|	РасходыПоЗарплатеИНалогам.ПризнаватьРасходамиПриУСН КАК ПризнаватьРасходамиПриУСН
	|ПОМЕСТИТЬ РасходыПоНалогам
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеИНалогам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамКВычетуИзЗарплаты
	|		ПО РасходыПоЗарплатеИНалогам.Регистратор = РасходыПоНалогамКВычетуИзЗарплаты.Регистратор
	|			И РасходыПоЗарплатеИНалогам.Период = РасходыПоНалогамКВычетуИзЗарплаты.Период
	|			И РасходыПоЗарплатеИНалогам.СтатьяРасходов = РасходыПоНалогамКВычетуИзЗарплаты.СтатьяРасходовЗарплаты
	|			И РасходыПоЗарплатеИНалогам.ВидОперации = РасходыПоНалогамКВычетуИзЗарплаты.ВидОперации
	|			И РасходыПоЗарплатеИНалогам.СпособРасчетов = РасходыПоНалогамКВычетуИзЗарплаты.СпособРасчетов
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И НЕ РасходыПоЗарплатеИНалогам.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоЗарплатеИНалогам.ВидОперации = ""Приход""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидДеятельности,
	|	РасходыПоЗарплатеИНалогам.ПризнаватьРасходамиПриУСН
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.Сумма),
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.НДС),
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации,
	|	РасходыПоНалогамНДФЛ.ВидДеятельности,
	|	РасходыПоНалогамНДФЛ.ПризнаватьРасходамиПриУСН
	|ИЗ
	|	РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамНДФЛ
	|ГДЕ
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоНалогамНДФЛ.ВидОперации = ""Приход""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации,
	|	РасходыПоНалогамНДФЛ.ВидДеятельности,
	|	РасходыПоНалогамНДФЛ.ПризнаватьРасходамиПриУСН
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.Сумма),
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.НДС),
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	""Приход"",
	|	РасходыПоНалогамНДФЛ.ВидДеятельности,
	|	ЛОЖЬ
	|ИЗ
	|	РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамНДФЛ
	|ГДЕ
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоНалогамНДФЛ.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(РасходыПоЗарплатеИНалогам.Сумма) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги) КАК ВидРасходов,
	|	СУММА(0) КАК НДС,
	|	""Оплата"" КАК ВидОперации
	|ПОМЕСТИТЬ ОплатыЗаСчетРанееВнесенныхСтраховыхВзносов
	|ИЗ
	|	РасходыУменьшаемыеНаСуммуНДФЛ КАК РасходыПоЗарплатеИНалогам
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасходыПоЗарплатеИНалогамВременнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасходыУменьшаемыеНаСуммуНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасходыПоНалогамКВычетуИзЗарплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоКредитамИЛизингу()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментам.Период КАК Период,
	|	РасчетыПоФинансовымИнструментам.Регистратор КАК Регистратор,
	|	ДоговорыКредитовИДепозитов.Организация КАК Организация,
	|	РасчетыПоФинансовымИнструментам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовКомиссии
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК СтатьяРасходов,
	|	СУММА(РасчетыПоФинансовымИнструментам.СуммаРегл) КАК Сумма,
	|	РасчетыПоФинансовымИнструментам.Договор КАК ДокументВозникновенияРасходов,
	|	СУММА(0) КАК НДС,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты) КАК ВидРасходов,
	|	РасчетыПоФинансовымИнструментам.Период КАК ДатаОплаты,
	|	ДоговорыКредитовИДепозитов.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментам.Договор КАК Договор
	|ПОМЕСТИТЬ РасходыПоКредитамЛизингу
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК РасчетыПоФинансовымИнструментам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО РасчетыПоФинансовымИнструментам.Договор = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	РасчетыПоФинансовымИнструментам.Период МЕЖДУ &НачДата И &КонДата
	|	И ДоговорыКредитовИДепозитов.Организация = &Организация
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерыДоговоровФинансовыхИнструментов.КредитИлиЗайм)
	|	И РасчетыПоФинансовымИнструментам.Сумма <> 0
	|	И ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовПроцентов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовКомиссии ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоФинансовымИнструментам.Регистратор,
	|	РасчетыПоФинансовымИнструментам.Период,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА ДоговорыКредитовИДепозитов.СтатьяДоходовРасходовКомиссии
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ,
	|	РасчетыПоФинансовымИнструментам.Договор,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ,
	|	ДоговорыКредитовИДепозитов.Организация,
	|	РасчетыПоФинансовымИнструментам.ХозяйственнаяОперация,
	|	ДоговорыКредитовИДепозитов.Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыПоФинансовымИнструментам.Период,
	|	РасчетыПоФинансовымИнструментам.Регистратор,
	|	Аналитика.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриобретениеУслугПоЛизингу),
	|	РасчетыПоФинансовымИнструментам.ТипСуммы,
	|	СУММА(РасчетыПоФинансовымИнструментам.СуммаРегл),
	|	РасчетыПоФинансовымИнструментам.Договор,
	|	СУММА(ЕСТЬNULL(СуммыНДС.СуммаНДСРегл, 0)),
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Лизинг),
	|	НЕОПРЕДЕЛЕНО,
	|	Аналитика.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментам.Договор КАК Договор
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК РасчетыПоФинансовымИнструментам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыПоФинансовымИнструментам.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыНДС
	|		ПО РасчетыПоФинансовымИнструментам.Регистратор = СуммыНДС.Регистратор
	|			И РасчетыПоФинансовымИнструментам.ИдентификаторСтроки = СуммыНДС.ИдентификаторСтроки
	|ГДЕ
	|	РасчетыПоФинансовымИнструментам.Период МЕЖДУ &НачДата И &КонДата
	|	И Аналитика.Организация = &Организация
	|	И РасчетыПоФинансовымИнструментам.Договор ССЫЛКА Справочник.ДоговорыЛизинга
	|	И НЕ РасчетыПоФинансовымИнструментам.ТипСуммы В (ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ВыкупПредметаЛизинга), ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.АрендныеОбязательства))
	|	И РасчетыПоФинансовымИнструментам.Сумма <> 0
	|	И (РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыПоФинансовымИнструментам.ТипГрафика = ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Оплаты)
	|	ИЛИ РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыПоФинансовымИнструментам.ТипГрафика = ЗНАЧЕНИЕ(Перечисление.ТипыГрафиковФинансовыхИнструментов.Начисления))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоФинансовымИнструментам.Регистратор,
	|	РасчетыПоФинансовымИнструментам.Период,
	|	РасчетыПоФинансовымИнструментам.Договор,
	|	ВЫБОР
	|		КОГДА РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ,
	|	Аналитика.Организация,
	|	РасчетыПоФинансовымИнструментам.ТипСуммы,
	|	Аналитика.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Регистратор, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Период
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Период, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.Предоплата > 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|	КОНЕЦ КАК ДокументВозникновенияРасходов,
	|	СУММА(0) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСПоставщикамиПоДокументам.ДолгРегл > 0
	|				ТОГДА РасчетыСПоставщикамиПоДокументам.ДолгРегл
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл < 0
	|						ТОГДА -РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл
	|					ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл
	|				КОНЕЦ
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщикамиПоДокументам.Долг = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику)
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Аванс""
	|	КОНЕЦ КАК ВидОперации,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор
	|ПОМЕСТИТЬ ПлатежныеДокументы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|			И Аналитика.Организация = &Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Авансы
	|		ПО РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент = Авансы.РасчетныйДокумент
	|			И (Авансы.АналитикаУчетаПоПартнерам.Организация = &Организация)
	|			И РасчетыСПоставщикамиПоДокументам.Период >= Авансы.Период
	|			И РасчетыСПоставщикамиПоДокументам.ЗаказПоставщику = Авансы.ЗаказПоставщику
	|			И (НЕ Авансы.Регистратор ССЫЛКА Документ.ОтчетКомитенту)
	|			И (Авансы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками))
	|			И (Авансы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса))
	|			И (Авансы.Предоплата > 0)
	|			И (Авансы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|ГДЕ
	|	РасчетыСПоставщикамиПоДокументам.Период МЕЖДУ &НачДата И &КонДата
	|	И (РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата <= 0
	|				И НЕ РасчетыСПоставщикамиПоДокументам.Долг = 0
	|			ИЛИ РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщикамиПоДокументам.Долг = 0
	|				И НЕ РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|				И (РасчетыСПоставщикамиПоДокументам.ЗаказПоставщику <> РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|					ИЛИ РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)))
	|	И РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками)
	|	И НЕ РасчетыСПоставщикамиПоДокументам.Регистратор ССЫЛКА Документ.ОтчетКомитенту
	|	И НЕ РасчетыСПоставщикамиПоДокументам.Регистратор ССЫЛКА Документ.КорректировкаПриобретения
	|	И НЕ РасчетыСПоставщикамиПоДокументам.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Период
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Период, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщикамиПоДокументам.Долг = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику)
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Регистратор, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Аванс""
	|	КОНЕЦ,
	|	Аналитика.Организация,
	|	Аналитика.Контрагент,
	|	Аналитика.Договор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.Предоплата > 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатамПодотчетникам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.Период) КАК Период,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Организация,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.СуммаОборот) КАК СуммаОборот,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток
	|ПОМЕСТИТЬ ПериодПоследнейЗадолженности
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.Остатки(&НачГраница, Организация = &Организация) КАК ДенежныеСредстваУПодотчетныхЛицОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.ОстаткиИОбороты(, &НачГраница, Регистратор, , Организация = &Организация) КАК ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты
	|		ПО ДенежныеСредстваУПодотчетныхЛицОстатки.Организация = ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.Организация
	|			И ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо = ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.ПодотчетноеЛицо
	|			И (ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.СуммаНачальныйОстаток < 0)
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Организация,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл) КАК СуммаОплаты,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения,
	|	ПериодПоследнейЗадолженности.СуммаРеглОстаток КАК СуммаОстаток,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл) КАК Сумма,
	|	ДенежныеСредстваУПодотчетныхЛиц.МоментВремени
	|ПОМЕСТИТЬ ДокументыПериодаПоложительногоАванса
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваУПодотчетныхЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодПоследнейЗадолженности КАК ПериодПоследнейЗадолженности
	|		ПО ДенежныеСредстваУПодотчетныхЛиц.Организация = ПериодПоследнейЗадолженности.Организация
	|			И ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо = ПериодПоследнейЗадолженности.ПодотчетноеЛицо
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл <> 0
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период >= ЕСТЬNULL(ПериодПоследнейЗадолженности.Период, ДАТАВРЕМЯ(1,1,1))
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период < &НачДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения,
	|	ДенежныеСредстваУПодотчетныхЛиц.МоментВремени,
	|	ПериодПоследнейЗадолженности.СуммаРеглОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПериодаПоложительногоАванса.Период КАК Период,
	|	ДокументыПериодаПоложительногоАванса.Регистратор,
	|	ВЫБОР
	|		КОГДА СводныеДанные.СуммаОстаток- СУММА(ВЫБОР
	|					КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|						ТОГДА СводныеДанные.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ) < ДокументыПериодаПоложительногоАванса.Сумма
	|			ТОГДА СводныеДанные.СуммаОстаток - СУММА(ВЫБОР
	|						КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|							ТОГДА СводныеДанные.Сумма
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ ДокументыПериодаПоложительногоАванса.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ДокументыПериодаПоложительногоАванса.Организация КАК Организация,
	|	ДокументыПериодаПоложительногоАванса.ХозяйственнаяОперация,
	|	ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыПодотчетникам
	|ИЗ
	|	ДокументыПериодаПоложительногоАванса КАК ДокументыПериодаПоложительногоАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПериодаПоложительногоАванса КАК СводныеДанные
	|		ПО ДокументыПериодаПоложительногоАванса.Организация = СводныеДанные.Организация
	|			И ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо = СводныеДанные.ПодотчетноеЛицо
	|ГДЕ
	|	ДокументыПериодаПоложительногоАванса.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПериодаПоложительногоАванса.Организация,
	|	ДокументыПериодаПоложительногоАванса.ХозяйственнаяОперация,
	|	ДокументыПериодаПоложительногоАванса.Период,
	|	ДокументыПериодаПоложительногоАванса.Регистратор,
	|	ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо,
	|	СводныеДанные.СуммаОстаток,
	|	ДокументыПериодаПоложительногоАванса.СуммаОплаты,
	|	ДокументыПериодаПоложительногоАванса.Сумма
	|
	|ИМЕЮЩИЕ
	|	СводныеДанные.СуммаОстаток - СУММА(ВЫБОР
	|			КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|				ТОГДА СводныеДанные.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл),
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваУПодотчетныхЛиц
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДенежныеСредстваУПодотчетныхЛиц.Организация = &Организация
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период МЕЖДУ &НачДата И &КонДата
	|	И ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПодотчетноеЛицо";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатамЗарплатыИНалогов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Период,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК Регистратор,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация КАК Организация,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|			ТОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|		ИНАЧЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.АналитикаАктивовПассивов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот КАК Сумма,
	|	0 КАК НДС,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	КОНЕЦ КАК ВидРасходов,
	|	""Приход"" КАК ВидОперации,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК ДокументВозникновенияРасходов
	|ПОМЕСТИТЬ ДокументыОплатыНалогаИЗарплаты
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|			&ДатаНачалаАнализаОплатыНалогов,
	|			&КонГраница,
	|			Регистратор,
	|			Организация = &Организация
	|				И СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|				И ВЫРАЗИТЬ(СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов) В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата))) КАК ДвиженияДенежныеСредстваДоходыРасходыОбороты
	|ГДЕ
	|	(ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов,
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация КАК Организация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов КАК СтатьяРасходов,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.ХозяйственнаяОперация, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	СУММА(ВЫБОР
	|		КОГДА СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость ЕСТЬ NULL
	|			ТОГДА ДокументыОплатыНалогаИЗарплаты.Сумма
	|		ИНАЧЕ СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Сумма
	|	КОНЕЦ) КАК Сумма,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.Ведомость.ПериодРегистрации, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость.ПериодРегистрации) КАК ПериодРегистрации,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыЗарплатыБезУчетаЗачтенныхОплат
	|ИЗ
	|	ДокументыОплатыНалогаИЗарплаты КАК ДокументыОплатыНалогаИЗарплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = РасходныйКассовыйОрдер.Ссылка
	|			И (РасходныйКассовыйОрдер.Проведен)
	|			И (ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка
	|			И (СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.Проведен)
	|			И (СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость <> НЕОПРЕДЕЛЕНО)
	|			И (ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|ГДЕ
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И ВЫБОР
	|			КОГДА СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость ЕСТЬ NULL 
	|				ТОГДА ДокументыОплатыНалогаИЗарплаты.Сумма
	|			ИНАЧЕ СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Сумма
	|		КОНЕЦ > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.Ведомость.ПериодРегистрации, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость.ПериодРегистрации),
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.ХозяйственнаяОперация, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.ХозяйственнаяОперация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация,
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация КАК Организация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов КАК СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.Сумма - СУММА(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) КАК Сумма,
	|	ДокументыОплатыНалогаИЗарплаты.ПериодРегистрации КАК ПериодРегистрации,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыЗарплаты
	|ИЗ
	|	ДокументыОплатыЗарплатыБезУчетаЗачтенныхОплат КАК ДокументыОплатыНалогаИЗарплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСН.Обороты(
	|				ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|				&НачДата,
	|				Регистратор,
	|				Организация = &Организация
	|					И ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)) КАК РасходыПриУСН
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = РасходыПриУСН.Регистратор
	|			И ДокументыОплатыНалогаИЗарплаты.Организация = РасходыПриУСН.Организация
	|			И (РасходыПриУСН.СуммаОплатыПриход > 0)
	|			И (ДокументыОплатыНалогаИЗарплаты.ПериодРегистрации =
	|					ВЫРАЗИТЬ(РасходыПриУСН.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.Сумма,
	|	ДокументыОплатыНалогаИЗарплаты.ПериодРегистрации,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|	
	|ИМЕЮЩИЕ
	|	ДокументыОплатыНалогаИЗарплаты.Сумма - СУММА(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ДокументыОплатыНалогаИЗарплаты.Сумма - СУММА(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) КАК Сумма,
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыНалога
	|ИЗ
	|	ДокументыОплатыНалогаИЗарплаты КАК ДокументыОплатыНалогаИЗарплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСН.Обороты(
	|				ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|				&НачДата,
	|				Регистратор,
	|				Организация = &Организация
	|					И ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)) КАК РасходыПриУСН
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = РасходыПриУСН.Регистратор
	|			И ДокументыОплатыНалогаИЗарплаты.Организация = РасходыПриУСН.Организация
	|			И ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов = РасходыПриУСН.СтатьяРасходов
	|			И (РасходыПриУСН.СуммаОплатыПриход > 0)
	|ГДЕ
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Сумма,
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.Период
	|	
	|ИМЕЮЩИЕ
	|	ДокументыОплатыНалогаИЗарплаты.Сумма - СУММА(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) > 0;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОплатыНалогаИЗарплаты;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОплатыЗарплатыБезУчетаЗачтенныхОплат";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамВозникновенияРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоСебестоимости.Организация КАК Организация,
	|	ДанныеПоСебестоимости.Регистратор КАК Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	0 КАК СуммаОплаты,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов КАК ВидРасходов,
	|	ДанныеПоСебестоимости.ЭлементРасходов КАК ЭлементРасходов,
	|	ДанныеПоСебестоимости.Партия КАК Партия,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ДанныеПоСебестоимости.ВидДеятельности КАК ВидДеятельности,
	|	ДанныеПоСебестоимости.ПризнаватьРасходамиПриУСН КАК ПризнаватьРасходамиПриУСН,
	|	ЕСТЬNULL(ПлатежныеДокументы.Контрагент, """") КАК Контрагент,
	|	ЕСТЬNULL(ПлатежныеДокументы.Договор, """") КАК Договор
	|ПОМЕСТИТЬ ДокументыВозникновенияРасходов
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПлатежныеДокументы КАК ПлатежныеДокументы
	|	ПО ПлатежныеДокументы.Организация = ДанныеПоСебестоимости.Организация
	|		И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДанныеПоСебестоимости.ДокументВозникновенияРасходов
	|ГДЕ
	|	НЕ ДанныеПоСебестоимости.ВидОперации = ""Списание""
	|	И НЕ ДанныеПоСебестоимости.ВидОперации = ""ВозвратКлиента""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	СУММА(ПрочиеРасходы.НДС),
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|				ИЛИ ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ)
	|			ТОГДА СРЕДНЕЕ(ПрочиеРасходы.Сумма)
	|		ИНАЧЕ СУММА(ПрочиеРасходы.Сумма)
	|	КОНЕЦ,
	|	СУММА(0) КАК СуммаОплаты,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.ВидОперации,
	|	ПрочиеРасходы.ВидРасходов,
	|	ПрочиеРасходы.ЭлементРасходов,
	|	ПрочиеРасходы.ДокументВозникновенияРасходов,
	|	ПрочиеРасходы.ДокументВозникновенияРасходов,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.ВидДеятельности,
	|	ИСТИНА,
	|	ПрочиеРасходы.Контрагент,
	|	ПрочиеРасходы.Договор
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.ВидРасходов,
	|	ПрочиеРасходы.ЭлементРасходов,
	|	ПрочиеРасходы.ДокументВозникновенияРасходов,
	|	ПрочиеРасходы.ВидОперации,
	|	ПрочиеРасходы.ВидДеятельности,
	|	ПрочиеРасходы.Контрагент,
	|	ПрочиеРасходы.Договор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.НДС,
	|	РасходыПоЗарплатеИНалогам.Сумма,
	|	0 КАК СуммаОплаты,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|	ИСТИНА,
	|	"""" КАК Контрагент,
	|	"""" КАК Договор
	|ИЗ
	|	РасходыПоЗарплате КАК РасходыПоЗарплатеИНалогам
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.НДС,
	|	РасходыПоЗарплатеИНалогам.Сумма,
	|	ВЫБОР КОГДА ЕстьNULL(ОплатаЗаСчетБольничного.Сумма, 0) > РасходыПоЗарплатеИНалогам.Сумма
	|	ТОГДА РасходыПоЗарплатеИНалогам.Сумма
	|	ИНАЧЕ ЕстьNULL(ОплатаЗаСчетБольничного.Сумма, 0) КОНЕЦ КАК СуммаОплаты,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидДеятельности,
	|	РасходыПоЗарплатеИНалогам.ПризнаватьРасходамиПриУСН,
	|	"""" КАК Контрагент,
	|	"""" КАК Договор
	|ИЗ
	|	РасходыПоНалогам КАК РасходыПоЗарплатеИНалогам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатыЗаСчетРанееВнесенныхСтраховыхВзносов КАК ОплатаЗаСчетБольничного
	|			ПО РасходыПоЗарплатеИНалогам.Организация = ОплатаЗаСчетБольничного.Организация
	|			И РасходыПоЗарплатеИНалогам.СтатьяРасходов = ОплатаЗаСчетБольничного.СтатьяРасходов
	|			И РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов = ОплатаЗаСчетБольничного.Регистратор
	|		
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоКредитамЛизингу.Организация,
	|	РасходыПоКредитамЛизингу.Регистратор,
	|	РасходыПоКредитамЛизингу.Период,
	|	РасходыПоКредитамЛизингу.НДС,
	|	РасходыПоКредитамЛизингу.Сумма,
	|	0 КАК СуммаОплаты,
	|	РасходыПоКредитамЛизингу.ХозяйственнаяОперация,
	|	РасходыПоКредитамЛизингу.ВидОперации,
	|	РасходыПоКредитамЛизингу.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	РасходыПоКредитамЛизингу.ДокументВозникновенияРасходов,
	|	РасходыПоКредитамЛизингу.ДокументВозникновенияРасходов,
	|	РасходыПоКредитамЛизингу.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения),
	|	ИСТИНА,
	|	РасходыПоКредитамЛизингу.Контрагент,
	|	РасходыПоКредитамЛизингу.Договор
	|ИЗ
	|	РасходыПоКредитамЛизингу КАК РасходыПоКредитамЛизингу
	|ГДЕ
	|	РасходыПоКредитамЛизингу.ВидОперации = ""Приход""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	Регистратор,
	|	ВидРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамСписанияРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоСебестоимости.Организация КАК Организация,
	|	ДанныеПоСебестоимости.Регистратор КАК Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияМатериалов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы)
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияТоваров)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары)
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияМатериалов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы)
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияТоваров)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары)
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияТоваров)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|		КОГДА ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) И ДанныеПоСебестоимости.ХозяйственнаяОперация В (&ХозОперацииСписанияМатериалов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ ДанныеПоСебестоимости.ВидРасходов
	|	КОНЕЦ КАК ВидРасходовСУчетомХозОперации,
	|	ДанныеПоСебестоимости.ЭлементРасходов,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.Партия,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ДанныеПоСебестоимости.ВидДеятельности,
	|	ДанныеПоСебестоимости.ПризнаватьРасходамиПриУСН,
	|	ЕСТЬNULL(Аналитика.Контрагент, ПервичныеДокументы.Контрагент) КАК Контрагент,
	|	ЕСТЬNULL(Аналитика.Договор, ПервичныеДокументы.Договор) КАК Договор
	|ПОМЕСТИТЬ ДокументыСписанияРасходов
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПереопределяемый
	|		ПО (ДанныеПоСебестоимости.ДокументВозникновенияРасходов = РасчетыСПоставщикамиПереопределяемый.РасчетныйДокумент
	|				ИЛИ ДанныеПоСебестоимости.ДокументВозникновенияРасходов = РасчетыСПоставщикамиПереопределяемый.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыСПоставщикамиПереопределяемый.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|			И ДанныеПоСебестоимости.Организация = Аналитика.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныеДокументы
	|		ПО ДанныеПоСебестоимости.ДокументВозникновенияРасходов = ПервичныеДокументы.Ссылка
	|ГДЕ
	|	ДанныеПоСебестоимости.ВидОперации В (""Списание"", ""ВозвратКлиента"")
	|	И ЕСТЬNULL(ДанныеПоСебестоимости.ДокументВозникновенияРасходов, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	|	И (НЕ ЕСТЬNULL(Аналитика.Организация, ПервичныеДокументы.Организация) ЕСТЬ NULL ИЛИ РасчетыСПоставщикамиПереопределяемый.Регистратор ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов";
	
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрНакопления.РасчетыСПоставщикамиПоДокументам", "РегистрНакопления.РасчетыСПоставщикамиПоСрокам");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РасчетыСПоставщикамиПереопределяемый.Регистратор", "РасчетыСПоставщикамиПереопределяемый.ДокументРегистратор");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамОплатыРасходов()
	
	МассивТекстовЗапросов = Новый Массив;
	
	#Область ОплатыПоставщикамЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	Остатки.Партия,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС КАК НДСРасходов,
	|	Остатки.СуммаРасходов КАК СуммаРасходов,
	|	ПлатежныеДокументы.Период КАК ДатаОплаты,
	|	ПлатежныеДокументы.Контрагент КАК Контрагент,
	|	ПлатежныеДокументы.Договор КАК Договор
	|ПОМЕСТИТЬ ДокументыОплаты
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ПлатежныеДокументы.Организация = Остатки.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = Остатки.ДокументВозникновенияРасходов
	|			И НЕ Остатки.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоставщикамЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ПлатежныеДокументы.Период < ДокументыВозникновенияРасходов.Период
	|			ТОГДА ДокументыВозникновенияРасходов.Период
	|		ИНАЧЕ ПлатежныеДокументы.Период
	|	КОНЕЦ КАК Период,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Партия,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов КАК ВидРасходов,
	|	ДокументыВозникновенияРасходов.ЭлементРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.НДС КАК НДСРасходов,
	|	ДокументыВозникновенияРасходов.Сумма КАК СуммаРасходов,
	|	ПлатежныеДокументы.Период КАК ДатаОплаты,
	|	ПлатежныеДокументы.Контрагент КАК Контрагент,
	|	ПлатежныеДокументы.Договор КАК Договор
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|		ПО ПлатежныеДокументы.Организация = ДокументыВозникновенияРасходов.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов
	|			И НЕ ДокументыВозникновенияРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|			И (ДокументыВозникновенияРасходов.ВидОперации <> ""ВозвратПоставщику"")
	|ГДЕ
	|	НЕ ДокументыВозникновенияРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|	И ДокументыВозникновенияРасходов.ВидОперации <> ""ВозвратПоставщику""";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоставщикамЗакрывающиеДопРасходыПриКорректировкеПриобретения
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.Партия,
	|	ВЫБОР КОГДА ПлатежныеДокументы.НДС < Остатки.НДС ТОГДА ПлатежныеДокументы.НДС ИНАЧЕ Остатки.НДС КОНЕЦ,
	|	ВЫБОР КОГДА ПлатежныеДокументы.Сумма < Остатки.СуммаРасходов ТОГДА ПлатежныеДокументы.Сумма ИНАЧЕ Остатки.СуммаРасходов КОНЕЦ,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.Контрагент КАК Контрагент,
	|	ПлатежныеДокументы.Договор КАК Договор
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ПлатежныеДокументы.Организация = Остатки.Организация
	|			И (ВЫРАЗИТЬ(ПлатежныеДокументы.ДокументВозникновенияРасходов КАК Документ.КорректировкаПриобретения).ДокументОснование = Остатки.ДокументВозникновенияРасходов)
	|			И Остатки.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары),
	|										ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ТекущиеРасходы
	|		ПО ПлатежныеДокументы.Организация = ТекущиеРасходы.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ТекущиеРасходы.Регистратор
	|ГДЕ
	|	ТекущиеРасходы.Регистратор ЕСТЬ NULL";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоКредитамИЛизингуЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КредитЛизингОплаты.Организация,
	|	КредитЛизингОплаты.Регистратор,
	|	КредитЛизингОплаты.Период,
	|	КредитЛизингОплаты.ДокументВозникновенияРасходов,
	|	КредитЛизингОплаты.ДокументВозникновенияРасходов,
	|	КредитЛизингОплаты.НДС,
	|	КредитЛизингОплаты.Сумма,
	|	КредитЛизингОплаты.ХозяйственнаяОперация,
	|	КредитЛизингОплаты.ВидОперации,
	|	КредитЛизингОплаты.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	КредитЛизингОплаты.Период,
	|	КредитЛизингОплаты.Контрагент,
	|	КредитЛизингОплаты.Договор
	|ИЗ
	|	РасходыПоКредитамЛизингу КАК КредитЛизингОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО КредитЛизингОплаты.Организация = Остатки.Организация
	|			И КредитЛизингОплаты.ДокументВозникновенияРасходов = Остатки.ДокументВозникновенияРасходов
	|			И КредитЛизингОплаты.ВидРасходов = Остатки.ВидРасходов
	|			И КредитЛизингОплаты.СтатьяРасходов = Остатки.СтатьяРасходов
	|			И Остатки.СуммаРасходов > 0
	|ГДЕ
	|	КредитЛизингОплаты.ВидОперации = ""Оплата""";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоКредитамИЛизингуЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КредитЛизингОплаты.Организация,
	|	КредитЛизингОплаты.Регистратор,
	|	ВЫБОР
	|		КОГДА КредитЛизингОплаты.Период < КредитЛизингРасходы.Период
	|			ТОГДА КредитЛизингРасходы.Период
	|		ИНАЧЕ КредитЛизингОплаты.Период
	|	КОНЕЦ,
	|	КредитЛизингОплаты.ДокументВозникновенияРасходов,
	|	КредитЛизингОплаты.ДокументВозникновенияРасходов,
	|	КредитЛизингОплаты.НДС,
	|	КредитЛизингОплаты.Сумма,
	|	КредитЛизингОплаты.ХозяйственнаяОперация,
	|	КредитЛизингОплаты.ВидОперации,
	|	КредитЛизингОплаты.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	КредитЛизингРасходы.СтатьяРасходов,
	|	СУММА(КредитЛизингРасходы.НДС),
	|	СУММА(КредитЛизингРасходы.Сумма),
	|	КредитЛизингОплаты.Период,
	|	КредитЛизингОплаты.Контрагент,
	|	КредитЛизингОплаты.Договор
	|ИЗ
	|	РасходыПоКредитамЛизингу КАК КредитЛизингОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоКредитамЛизингу КАК КредитЛизингРасходы
	|		ПО КредитЛизингОплаты.Организация = КредитЛизингРасходы.Организация
	|			И КредитЛизингОплаты.ДокументВозникновенияРасходов = КредитЛизингРасходы.ДокументВозникновенияРасходов
	|			И КредитЛизингОплаты.ВидРасходов = КредитЛизингРасходы.ВидРасходов
	|			И КредитЛизингОплаты.СтатьяРасходов = КредитЛизингРасходы.СтатьяРасходов
	|			И (КредитЛизингРасходы.ВидОперации = ""Приход"")
	|ГДЕ
	|	КредитЛизингОплаты.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	КредитЛизингОплаты.Организация,
	|	КредитЛизингОплаты.ВидОперации,
	|	КредитЛизингОплаты.ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА КредитЛизингОплаты.Период < КредитЛизингРасходы.Период
	|			ТОГДА КредитЛизингРасходы.Период
	|		ИНАЧЕ КредитЛизингОплаты.Период
	|	КОНЕЦ,
	|	КредитЛизингРасходы.СтатьяРасходов,
	|	КредитЛизингОплаты.Регистратор,
	|	КредитЛизингОплаты.Сумма,
	|	КредитЛизингОплаты.НДС,
	|	КредитЛизингОплаты.ВидРасходов,
	|	КредитЛизингОплаты.ХозяйственнаяОперация,
	|	КредитЛизингОплаты.Период,
	|	КредитЛизингОплаты.Контрагент,
	|	КредитЛизингОплаты.Договор";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыНалоговЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыНалога.Организация,
	|	ДокументыОплатыНалога.Регистратор,
	|	ДокументыОплатыНалога.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыНалога.Сумма,
	|	ДокументыОплатыНалога.ХозяйственнаяОперация,
	|	""ОплатаБезРазбивкиПоДокументам"",
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	ДокументыОплатыНалога.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	ДокументыОплатыНалога.Период,
	|	"""",
	|	""""
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыНалога.Организация = Остатки.Организация
	|			И ДокументыОплатыНалога.СтатьяРасходов = Остатки.СтатьяРасходов
	|			И (Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|ГДЕ
	|	Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыНалоговЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыНалога.Организация,
	|	ДокументыОплатыНалога.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыНалога.Период < ДокументыНачисленияНалогов.Период
	|			ТОГДА ДокументыНачисленияНалогов.Период
	|		ИНАЧЕ ДокументыОплатыНалога.Период
	|	КОНЕЦ,
	|	ДокументыНачисленияНалогов.ДокументВозникновенияРасходов,
	|	ДокументыНачисленияНалогов.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыНалога.Сумма,
	|	ДокументыОплатыНалога.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыНалога.Период > ДокументыНачисленияНалогов.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыНачисленияНалогов.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	ДокументыОплатыНалога.СтатьяРасходов,
	|	ДокументыНачисленияНалогов.НДС,
	|	ДокументыНачисленияНалогов.Сумма,
	|	ДокументыОплатыНалога.Период,
	|	"""",
	|	""""
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоНалогам КАК ДокументыНачисленияНалогов
	|		ПО ДокументыОплатыНалога.Организация = ДокументыНачисленияНалогов.Организация
	|			И ДокументыОплатыНалога.СтатьяРасходов = ДокументыНачисленияНалогов.СтатьяРасходов
	|			И (ДокументыНачисленияНалогов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|ГДЕ
	|	ДокументыНачисленияНалогов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыЗарплатыЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ДокументыОплатыЗарплаты.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.ДокументВозникновенияРасходов,
	|	0,
	|	СРЕДНЕЕ(ДокументыОплатыЗарплаты.Сумма * Остатки.СуммаРасходов) / СУММА(ОстаткиИтого.СуммаРасходов),
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыОплатыЗарплаты.ПериодРегистрации
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	ДокументыОплатыЗарплаты.Период,
	|	"""",
	|	""""
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыЗарплаты.Организация = Остатки.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = Остатки.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК ОстаткиИтого
	|		ПО ДокументыОплатыЗарплаты.Организация = ОстаткиИтого.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = ОстаткиИтого.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(ОстаткиИтого.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (ОстаткиИтого.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|ГДЕ
	|	Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ДокументыОплатыЗарплаты.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.ДокументВозникновенияРасходов,
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыОплатыЗарплаты.ПериодРегистрации
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	ДокументыОплатыЗарплаты.Период";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыЗарплатыЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период < ДокументыНачисленияЗарплаты.Период
	|			ТОГДА ДокументыНачисленияЗарплаты.Период
	|		ИНАЧЕ ДокументыОплатыЗарплаты.Период
	|	КОНЕЦ,
	|	ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов,
	|	ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов,
	|	0,
	|	СРЕДНЕЕ(ДокументыОплатыЗарплаты.Сумма * ДокументыНачисленияЗарплаты.Сумма) / СУММА(ДокументыНачисленияЗарплатыИтого.Сумма),
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыНачисленияЗарплаты.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыНачисленияЗарплаты.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	ДокументыНачисленияЗарплаты.СтатьяРасходов,
	|	ДокументыНачисленияЗарплаты.НДС,
	|	ДокументыНачисленияЗарплаты.Сумма,
	|	ДокументыОплатыЗарплаты.Период,
	|	"""",
	|	""""
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоЗарплате КАК ДокументыНачисленияЗарплаты
	|		ПО ДокументыОплатыЗарплаты.Организация = ДокументыНачисленияЗарплаты.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = ДокументыНачисленияЗарплаты.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (ДокументыНачисленияЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И НЕ ДокументыНачисленияЗарплаты.СтатьяРасходов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоЗарплате КАК ДокументыНачисленияЗарплатыИтого
	|		ПО ДокументыОплатыЗарплаты.Организация = ДокументыНачисленияЗарплатыИтого.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = ДокументыНачисленияЗарплатыИтого.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(ДокументыНачисленияЗарплатыИтого.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (ДокументыНачисленияЗарплатыИтого.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И НЕ ДокументыНачисленияЗарплатыИтого.СтатьяРасходов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС))
	|ГДЕ
	|	ДокументыНачисленияЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И НЕ ДокументыНачисленияЗарплаты.СтатьяРасходов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период < ДокументыНачисленияЗарплаты.Период
	|			ТОГДА ДокументыНачисленияЗарплаты.Период
	|		ИНАЧЕ ДокументыОплатыЗарплаты.Период
	|	КОНЕЦ,
	|	ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов,
	|	ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов,
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыНачисленияЗарплаты.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыНачисленияЗарплаты.ВидРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	ДокументыНачисленияЗарплаты.СтатьяРасходов,
	|	ДокументыНачисленияЗарплаты.НДС,
	|	ДокументыНачисленияЗарплаты.Сумма,
	|	ДокументыОплатыЗарплаты.Период";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПодотчетникамЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Организация,
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	ДокументыОплатыПодотчетникам.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.Партия,
	|	0,
	|	ДокументыОплатыПодотчетникам.Сумма,
	|	ДокументыОплатыПодотчетникам.ХозяйственнаяОперация,
	|	""ОплатаБезРазбивкиПоДокументам"",
	|	Остатки.ВидРасходов,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаРасходов,
	|	ДокументыОплатыПодотчетникам.Период,
	|	ДокументыОплатыПодотчетникам.ПодотчетноеЛицо,
	|	""""
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыПодотчетникам.Организация = Остатки.Организация
	|			И (ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.АвансовыйОтчет).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ПриобретениеТоваровУслуг).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ПриобретениеУслугПрочихАктивов).ПодотчетноеЛицо)";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПодотчетникамЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Организация,
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыПодотчетникам.Период < ДокументыОтчетовПодотчетников.Период
	|			ТОГДА ДокументыОтчетовПодотчетников.Период
	|		ИНАЧЕ ДокументыОплатыПодотчетникам.Период
	|	КОНЕЦ,
	|	ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов,
	|	ДокументыОтчетовПодотчетников.Партия,
	|	0,
	|	ДокументыОплатыПодотчетникам.Сумма,
	|	ДокументыОплатыПодотчетникам.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыПодотчетникам.Период > ДокументыОтчетовПодотчетников.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыОтчетовПодотчетников.ВидРасходов,
	|	ДокументыОтчетовПодотчетников.ЭлементРасходов,
	|	ДокументыОтчетовПодотчетников.СтатьяРасходов,
	|	ДокументыОтчетовПодотчетников.НДС,
	|	ДокументыОтчетовПодотчетников.Сумма,
	|	ДокументыОплатыПодотчетникам.Период,
	|	ДокументыОплатыПодотчетникам.ПодотчетноеЛицо,
	|	""""
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыОтчетовПодотчетников
	|		ПО ДокументыОплатыПодотчетникам.Организация = ДокументыОтчетовПодотчетников.Организация
	|			И (ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.АвансовыйОтчет).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.ПриобретениеТоваровУслуг).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.ПриобретениеУслугПрочихАктивов).ПодотчетноеЛицо)";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоставщикамЗаОСНМАЗакрывающиеОстатки
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОстаткиДетально.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	ОстаткиДетально.ДокументВозникновенияРасходов,
	|	ОстаткиДетально.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ОстаткиДетально.ВидРасходов,
	|	ОстаткиДетально.ЭлементРасходов,
	|	ОстаткиДетально.СтатьяРасходов,
	|	СУММА(ОстаткиИтого.НДС),
	|	СУММА(ОстаткиИтого.СуммаРасходов),
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.Контрагент,
	|	ПлатежныеДокументы.Договор
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК ОстаткиДетально
	|		ПО ПлатежныеДокументы.Организация = ОстаткиДетально.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ОстаткиДетально.ДокументВозникновенияРасходов
	|			И ОстаткиДетально.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК ОстаткиИтого
	|		ПО ПлатежныеДокументы.Организация = ОстаткиИтого.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ОстаткиИтого.ДокументВозникновенияРасходов
	|			И ОстаткиИтого.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиДетально.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	ОстаткиДетально.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ОстаткиДетально.ВидРасходов,
	|	ОстаткиДетально.ЭлементРасходов,
	|	ОстаткиДетально.СтатьяРасходов,
	|	ОстаткиДетально.НДС,
	|	ОстаткиДетально.СуммаРасходов,
	|	ОстаткиДетально.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.Контрагент,
	|	ПлатежныеДокументы.Договор,
	|	0";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ОплатыПоставщикамЗаОСНМАЗакрывающиеТекущиеРасходы
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ПлатежныеДокументы.Период < ДокументыВозникновенияРасходов.Период
	|			ТОГДА ДокументыВозникновенияРасходов.Период
	|		ИНАЧЕ ПлатежныеДокументы.Период
	|	КОНЕЦ КАК Период,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Партия,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов КАК ВидРасходов,
	|	ДокументыВозникновенияРасходов.ЭлементРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	СУММА(ДокументыВозникновенияРасходовИтого.НДС),
	|	СУММА(ДокументыВозникновенияРасходовИтого.Сумма),
	|	ПлатежныеДокументы.Период КАК ДатаОплаты,
	|	ПлатежныеДокументы.Контрагент,
	|	ПлатежныеДокументы.Договор
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|		ПО ПлатежныеДокументы.Организация = ДокументыВозникновенияРасходов.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов
	|			И ДокументыВозникновенияРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходовИтого
	|		ПО ПлатежныеДокументы.Организация = ДокументыВозникновенияРасходовИтого.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДокументыВозникновенияРасходовИтого.ДокументВозникновенияРасходов
	|			И ДокументыВозникновенияРасходовИтого.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ВЫБОР
	|		КОГДА ПлатежныеДокументы.Период < ДокументыВозникновенияРасходов.Период
	|			ТОГДА ДокументыВозникновенияРасходов.Период
	|		ИНАЧЕ ПлатежныеДокументы.Период
	|	КОНЕЦ,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Партия,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов,
	|	ДокументыВозникновенияРасходов.ЭлементРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.НДС,
	|	ДокументыВозникновенияРасходов.Сумма,
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.Контрагент,
	|	ПлатежныеДокументы.Договор";
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыРегистраторовРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Партия КАК Партия,
	|	ДокументыВозникновенияРасходов.Регистратор КАК Регистратор,
	|	ДокументыВозникновенияРасходов.СуммаОплаты КАК СуммаОплаты,
	|	0 КАК СуммаОтгрузки,
	|	ДокументыВозникновенияРасходов.ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.РБП)
	|		ИНАЧЕ ДокументыВозникновенияРасходов.ВидРасходов
	|	КОНЕЦ КАК ВидРасходов,
	|	ДокументыВозникновенияРасходов.ЭлементРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.Период КАК Период,
	|	ДокументыВозникновенияРасходов.ХозяйственнаяОперация,
	|	ДокументыВозникновенияРасходов.Организация,
	|	ДокументыВозникновенияРасходов.НДС КАК НДС,
	|	ДокументыВозникновенияРасходов.Сумма КАК СуммаРасходов,
	|	ЕСТЬNULL(СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ДокументыВозникновенияРасходов.ВидДеятельности) КАК ВидДеятельности,
	|	ЕСТЬNULL(СтатьиРасходов.ПризнаватьРасходамиПриУСН, ДокументыВозникновенияРасходов.ПризнаватьРасходамиПриУСН) КАК ПризнаватьРасходамиПриУСН,
	|	ДОБАВИТЬКДАТЕ(ДокументыВозникновенияРасходов.Период, СЕКУНДА, 1) КАК ДатаОплаты,
	|	ДокументыВозникновенияРасходов.Контрагент,
	|	ДокументыВозникновенияРасходов.Договор
	|ПОМЕСТИТЬ ТаблицаРегистраторовРасходов
	|ИЗ
	|	ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО СтатьиРасходов.Ссылка = ДокументыВозникновенияРасходов.СтатьяРасходов
	|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыСписанияРасходов.ДокументВозникновенияРасходов,
	|	ДокументыСписанияРасходов.Партия КАК Партия,
	|	ДокументыСписанияРасходов.Регистратор,
	|	0,
	|	ДокументыСписанияРасходов.Сумма,
	|	ДокументыСписанияРасходов.ВидОперации,
	|	ДокументыСписанияРасходов.ВидРасходовСУчетомХозОперации,
	|	ДокументыСписанияРасходов.ЭлементРасходов,
	|	ДокументыСписанияРасходов.СтатьяРасходов,
	|	ДокументыСписанияРасходов.Период,
	|	ДокументыСписанияРасходов.ХозяйственнаяОперация,
	|	ДокументыСписанияРасходов.Организация,
	|	ДокументыСписанияРасходов.НДС,
	|	0,
	|	ДокументыСписанияРасходов.ВидДеятельности,
	|	ДокументыСписанияРасходов.ПризнаватьРасходамиПриУСН,
	|	ДОБАВИТЬКДАТЕ(ДокументыСписанияРасходов.Период, СЕКУНДА, 2),
	|	ДокументыСписанияРасходов.Контрагент,
	|	ДокументыСписанияРасходов.Договор
	|ИЗ
	|	ДокументыСписанияРасходов КАК ДокументыСписанияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплаты.ДокументВозникновенияРасходов,
	|	ДокументыОплаты.Партия,
	|	ДокументыОплаты.Регистратор,
	|	СУММА(ДокументыОплаты.Сумма),
	|	СУММА(0),
	|	ДокументыОплаты.ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.РБП)
	|		ИНАЧЕ ДокументыОплаты.ВидРасходов
	|	КОНЕЦ,
	|	ДокументыОплаты.ЭлементРасходов,
	|	ДокументыОплаты.СтатьяРасходов,
	|	ДокументыОплаты.Период,
	|	ДокументыОплаты.ХозяйственнаяОперация,
	|	ДокументыОплаты.Организация,
	|	СУММА(ДокументыОплаты.НДС),
	|	СУММА(ДокументыОплаты.СуммаРасходов),
	|	ЕСТЬNULL(СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
	|	ВЫБОР КОГДА ДокументыОплаты.Регистратор ССЫЛКА Документ.СписаниеЗадолженности И ДокументыОплаты.Регистратор <> ДокументыОплаты.ДокументВозникновенияРасходов
	|		ТОГДА ЛОЖЬ ИНАЧЕ ЕСТЬNULL(СтатьиРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КОНЕЦ,
	|	ДокументыОплаты.ДатаОплаты,
	|	ДокументыОплаты.Контрагент,
	|	ДокументыОплаты.Договор
	|ИЗ
	|	ДокументыОплаты КАК ДокументыОплаты
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО СтатьиРасходов.Ссылка = ДокументыОплаты.СтатьяРасходов
	|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплаты.Регистратор,
	|	ДокументыОплаты.Партия,
	|	ДокументыОплаты.СтатьяРасходов,
	|	ДокументыОплаты.ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.РБП)
	|		ИНАЧЕ ДокументыОплаты.ВидРасходов
	|	КОНЕЦ,
	|	ДокументыОплаты.ЭлементРасходов,
	|	ДокументыОплаты.Период,
	|	ДокументыОплаты.Организация,
	|	ДокументыОплаты.ВидОперации,
	|	ДокументыОплаты.ХозяйственнаяОперация,
	|	ДокументыОплаты.ДатаОплаты,
	|	ЕСТЬNULL(СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
	|	ВЫБОР КОГДА ДокументыОплаты.Регистратор ССЫЛКА Документ.СписаниеЗадолженности И ДокументыОплаты.Регистратор <> ДокументыОплаты.ДокументВозникновенияРасходов
	|		ТОГДА ЛОЖЬ ИНАЧЕ ЕСТЬNULL(СтатьиРасходов.ПризнаватьРасходамиПриУСН, ИСТИНА) КОНЕЦ,
	|	ДокументыОплаты.Контрагент,
	|	ДокументыОплаты.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыНачальнойТаблицы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Остатки.ОстаткиСтарогоМетода
	|		ТОГДА Остатки.Партия
	|		ИНАЧЕ Остатки.ДокументВозникновенияРасходов
	|	КОНЕЦ КАК ДокументВозникновенияРасходов,
	|	Остатки.Партия КАК Партия,
	|	СУММА(ВЫБОР
	|		КОГДА Остатки.СуммаОплаты > Остатки.СуммаРасходов И НЕ Остатки.ВидРасходов В
	|			(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Лизинг), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты))
	|			ТОГДА (Остатки.СуммаРасходов)
	|		ИНАЧЕ (Остатки.СуммаОплаты)
	|	КОНЕЦ) КАК СуммаОплаты,
	|	ВЫБОР
	|		КОГДА Остатки.ОстаткиСтарогоМетода И Остатки.ВидРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|		КОГДА Остатки.ОстаткиСтарогоМетода И Остатки.ВидРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ Остатки.ВидРасходов
	|	КОНЕЦ КАК ВидРасходов,
	|	Остатки.ЭлементРасходов КАК ЭлементРасходов,
	|	Остатки.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(Остатки.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(Остатки.НДС) КАК НДС,
	|	СУММА(Остатки.СуммаОтгрузки) КАК СуммаОтгрузки,
	|	ВЫБОР КОГДА Остатки.ОстаткиСтарогоМетода
	|		ТОГДА ""СтарыйМетод""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТипОстатка,
	|	СУММА(Остатки.Признано + Остатки.НеПризнано) КАК РасходыВсего,
	|	СУММА(Остатки.Признано) КАК Признано,
	|	СУММА(Остатки.НеПризнано) КАК НеПризнано
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	Остатки КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Остатки.ОстаткиСтарогоМетода
	|		ТОГДА Остатки.Партия
	|		ИНАЧЕ Остатки.ДокументВозникновенияРасходов
	|	КОНЕЦ,
	|	Остатки.Партия,
	|	ВЫБОР
	|		КОГДА Остатки.ОстаткиСтарогоМетода И Остатки.ВидРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыТовары), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиТовары))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|		КОГДА Остатки.ОстаткиСтарогоМетода И Остатки.ВидРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ДопРасходыМатериалы), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ Остатки.ВидРасходов
	|	КОНЕЦ,
	|	Остатки.ЭлементРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.СуммаРасходов,
	|	Остатки.НДС,
	|	Остатки.СуммаОтгрузки,
	|	ВЫБОР КОГДА Остатки.ОстаткиСтарогоМетода
	|		ТОГДА ""СтарыйМетод""
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Партия,
	|	ДокументыВозникновенияРасходов.СуммаОплаты,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.РБП)
	|		ИНАЧЕ ДокументыВозникновенияРасходов.ВидРасходов
	|	КОНЕЦ,
	|	ДокументыВозникновенияРасходов.ЭлементРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.Сумма,
	|	ДокументыВозникновенияРасходов.НДС,
	|	0,
	|	"""",
	|	0,
	|	0,
	|	0
	|ИЗ
	|	ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО СтатьиРасходов.Ссылка = ДокументыВозникновенияРасходов.СтатьяРасходов
	|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	НЕ ДокументыВозникновенияРасходов.ВидОперации = ""ВозвратПоставщику""
	|	И НЕ ДокументыВозникновенияРасходов.ВидРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Лизинг), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Кредиты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Возвраты.ДокументВозникновенияРасходов,
	|	Возвраты.Партия,
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа6Оборот, 0),
	|	Возвраты.ВидРасходов,
	|	Возвраты.ЭлементРасходов,
	|	Возвраты.СтатьяРасходов,
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа6Оборот, 0),
	|	ЕСТЬNULL(ДанныеПоПризнанию.НДСОборот, 0),
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа6Оборот, 0),
	|	""Возврат"",
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа6Оборот, 0),
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа7Оборот, 0),
	|	ЕСТЬNULL(ДанныеПоПризнанию.Графа6Оборот - ДанныеПоПризнанию.Графа7Оборот, 0)
	|ИЗ
	|	ДокументыСписанияРасходов КАК Возвраты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|	ПО Остатки.ДокументВозникновенияРасходов = Возвраты.ДокументВозникновенияРасходов
	|		И Остатки.Организация = Возвраты.Организация
	|		И Остатки.ВидРасходов = Возвраты.ВидРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|	ПО ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов = Возвраты.ДокументВозникновенияРасходов
	|		И ДокументыВозникновенияРасходов.Организация = Возвраты.Организация
	|		И ДокументыВозникновенияРасходов.ВидРасходов = Возвраты.ВидРасходов
	|		И ДокументыВозникновенияРасходов.ВидОперации <> ""ВозвратПоставщику""
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(, &НачДата,, Организация = &Организация) КАК ДанныеПоПризнанию
	|	ПО Возвраты.ДокументВозникновенияРасходов = ДанныеПоПризнанию.ДокументВозникновенияДоходовРасходов
	|		И Возвраты.Организация = ДанныеПоПризнанию.Организация
	|		И Возвраты.ВидРасходовСУчетомХозОперации = ДанныеПоПризнанию.ВидРасходов
	|ГДЕ
	|	Возвраты.ВидОперации = ""ВозвратКлиента""
	|	И Остатки.Организация ЕСТЬ NULL
	|	И ДокументыВозникновенияРасходов.Организация ЕСТЬ NULL";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыборкаДокументовДляЗаполненияРасходов(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = ТекстЗапросаВыборкиДокументовДляЗаполненияРасходов();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ВыборкаТаблицыОстатков(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОстатков.ДокументВозникновенияРасходов,
	|	ТаблицаОстатков.Партия,
	|	СУММА(ТаблицаОстатков.СуммаОплаты) КАК СуммаОплаты,
	|	ТаблицаОстатков.ВидРасходов,
	|	ТаблицаОстатков.ЭлементРасходов,
	|	ТаблицаОстатков.СтатьяРасходов,
	|	СУММА(ТаблицаОстатков.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(ТаблицаОстатков.НДС) КАК НДС,
	|	СУММА(ТаблицаОстатков.СуммаОтгрузки) КАК СуммаОтгрузки,
	|	ТаблицаОстатков.ТипОстатка КАК ТипОстатка,
	|	СУММА(ТаблицаОстатков.РасходыВсего) КАК РасходыВсего,
	|	СУММА(ТаблицаОстатков.Признано) КАК Признано,
	|	СУММА(ТаблицаОстатков.НеПризнано) КАК НеПризнано
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатков.ВидРасходов,
	|	ТаблицаОстатков.ЭлементРасходов,
	|	ТаблицаОстатков.СтатьяРасходов,
	|	ТаблицаОстатков.ДокументВозникновенияРасходов,
	|	ТаблицаОстатков.Партия,
	|	ТаблицаОстатков.ТипОстатка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Индексы.Добавить("ДокументВозникновенияРасходов, ВидРасходов, СтатьяРасходов");
	
	Возврат Результат;
	
КонецФункции

Функция ВыборкаСуммОплат(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Регистратор КАК ДокументОплаты,
	|	СУММА(ПлатежныеДокументы.НДС) КАК НДС,
	|	СУММА(ПлатежныеДокументы.Сумма) КАК Сумма
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПоКредитамЛизингуОплаты.Регистратор,
	|	СУММА(РасходыПоКредитамЛизингуОплаты.НДС),
	|	СУММА(РасходыПоКредитамЛизингуОплаты.Сумма)
	|ИЗ
	|	РасходыПоКредитамЛизингу КАК РасходыПоКредитамЛизингуОплаты
	|ГДЕ
	|	РасходыПоКредитамЛизингуОплаты.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоКредитамЛизингуОплаты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыНалога.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыНалога.Сумма)
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыНалога.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыЗарплаты.Сумма)
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыЗарплаты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыПодотчетникам.Сумма)
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыПодотчетникам.Регистратор";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ТекстЗапросаПоОплатамНоваяАрхитектураРасчетов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ДолгРегл > 0
	|			ТОГДА РасчетыСПоставщиками.ДокументРегистратор
	|		ИНАЧЕ РасчетыСПоставщиками.РасчетныйДокумент
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ДолгРегл > 0
	|			ТОГДА РасчетыСПоставщиками.Период
	|		ИНАЧЕ РасчетыСПоставщиками.ДатаВозникновения
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ДолгРегл > 0
	|			ТОГДА РасчетыСПоставщиками.РасчетныйДокумент
	|		ИНАЧЕ РасчетыСПоставщиками.ДокументРегистратор
	|	КОНЕЦ КАК ДокументВозникновенияРасходов,
	|	СУММА(0) КАК НДС,
	|	СУММА(РасчетыСПоставщиками.ДолгРегл + РасчетыСПоставщиками.ПредоплатаРегл) КАК Сумма,
	|	РасчетыСПоставщиками.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщиками.ДолгРегл > 0
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Аванс""
	|	КОНЕЦ КАК ВидОперации,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор
	|ПОМЕСТИТЬ ПлатежныеДокументы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|			И Аналитика.Организация = &Организация
	|ГДЕ
	|	РасчетыСПоставщиками.Период МЕЖДУ &НачДата И &КонДата
	|	И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыСПоставщиками.ДокументРегистратор <> РасчетыСПоставщиками.РасчетныйДокумент
	|	И (РасчетыСПоставщиками.ДолгРегл > 0 ИЛИ РасчетыСПоставщиками.ПредоплатаРегл > 0
	|			И РасчетыСПоставщиками.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса))
	|	И РасчетыСПоставщиками.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками)
	|	И НЕ РасчетыСПоставщиками.ДокументРегистратор ССЫЛКА Документ.ОтчетКомитенту
	|	И НЕ РасчетыСПоставщиками.ДокументРегистратор ССЫЛКА Документ.КорректировкаПриобретения
	|	И НЕ РасчетыСПоставщиками.ДокументРегистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитика.Организация,
	|	РасчетыСПоставщиками.ДокументРегистратор,
	|	РасчетыСПоставщиками.РасчетныйДокумент,
	|	РасчетыСПоставщиками.ХозяйственнаяОперация,
	|	РасчетыСПоставщиками.ДолгРегл,
	|	РасчетыСПоставщиками.Период,
	|	РасчетыСПоставщиками.ДатаВозникновения,
	|	Аналитика.Контрагент,
	|	Аналитика.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

Функция КоэффициентОтнесенияРасходовКПрочейДеятельности(Параметры)
	
	ПараметрыУчетнойПолитики = ЗначениеНастроекПовтИсп.ПараметрыУчетнойПолитики(Параметры.Организация, Параметры.НачДата);
	ПрименяетсяЕНВД = ПараметрыУчетнойПолитики <> Неопределено И ПараметрыУчетнойПолитики.ПрименяетсяЕНВД;
	Если Не ПрименяетсяЕНВД Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = ИнициализироватьЗапросПоПараметрам(Параметры, Новый МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕстьNULL(СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот), 0) КАК ДоходУСН,
	|	ЕстьNULL(СУММА(КнигаУчетаДоходовИРасходовОбороты.ДоходЕНВДОборот), 0) КАК ДоходЕНВД
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачДата, &КонГраница, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Коэффициент = 0;
	Если Выборка.Следующий() Тогда
		ОбщийДоход = Выборка.ДоходУСН + Выборка.ДоходЕНВД;
		Коэффициент = ?(ОбщийДоход = 0, 0, Выборка.ДоходЕНВД / ОбщийДоход);
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

Функция СтрокаОстаткаПоПараметрамВыборки(ТаблицаОстатков, Выборка, СтруктураПоиска = Неопределено)
	
	ОбновитьСтруктуруПоиска(СтруктураПоиска, Выборка);
	Если СтруктураПоиска.Количество() Тогда
		СтрокиОстатка = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаОстатка Из СтрокиОстатка Цикл
			Если СтрокаОстатка.СуммаОтгрузки < СтрокаОстатка.СуммаРасходов Или Выборка.ВидОперации <> "Списание" Тогда
				Возврат СтрокаОстатка;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СтрокаОстатка = ТаблицаОстатков.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОстатка, Выборка);
		СтрокаОстатка.СуммаОплаты = 0;
		СтрокаОстатка.СуммаРасходов = 0;
		СтрокаОстатка.НДС = 0;
		СтрокаОстатка.СуммаОтгрузки = 0;
		СтрокаОстатка.ТипОстатка = "";
		СтрокаОстатка.РасходыВсего = 0;
		СтрокаОстатка.Признано = 0;
		СтрокаОстатка.НеПризнано = 0;
		Возврат СтрокаОстатка;
	КонецЕсли;
	
	Возврат СтрокаОстаткаПоПараметрамВыборки(ТаблицаОстатков, Выборка, СтруктураПоиска);
	
КонецФункции

Процедура ОбновитьСтруктуруПоиска(СтруктураПоиска, Выборка)
	
	ВидыРасходов = Перечисления.ВидыРасходовУСН;
	
	Если СтруктураПоиска = Неопределено Тогда
		// Инициализируем структуру поиска по всем параметрам, доступным для отбора:
		СтруктураПоиска = Новый Структура("ВидРасходов, ДокументВозникновенияРасходов, Партия");
		Если ВидыРасходов.ВидыРасходовПрочие().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
			// Поиск по статье расходов справедлив только для прочих расходов:
			СтруктураПоиска.Вставить("СтатьяРасходов");
		КонецЕсли;
		Если ВидыРасходов.ВидыРасходовОСНМА().Найти(Выборка.ВидРасходов) <> Неопределено Тогда
			// Поиск по элементу расходов справедлив только для ОС/НМА:
			СтруктураПоиска.Вставить("ЭлементРасходов");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		Возврат;
	КонецЕсли;
	
	Если СтруктураПоиска.Свойство("ЭлементРасходов") Тогда
		// Поищем расходы без учета элемента расходов (расходы определены как ОС/НМА, но не списаны были сразу):
		СтруктураПоиска.Удалить("ЭлементРасходов");
		Возврат;
	КонецЕсли;
	
	Если СтруктураПоиска.Свойство("ВидРасходов") Тогда
		// Возможно расходы реклассифицированы с одного регистра на другой, поищем без учета вида расходов:
		СтруктураПоиска.Удалить("ВидРасходов");
		Возврат;
	КонецЕсли;
	
	Если (ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено
		ИЛИ ВидыРасходов.ВидыРасходовМатериалы().Найти(Выборка.ВидРасходов) <> Неопределено)
		И ?(Выборка.Партия = Неопределено, СтруктураПоиска.Свойство("Партия"), СтруктураПоиска.Свойство("ДокументВозникновенияРасходов")) Тогда
		// Поищем остатки по старому методу:
		Если Выборка.Партия = Неопределено Тогда
			// Метод оценки стоимости товаров отличается от рекомендуемого, будем учитывать по документам возникновения расходов
			СтруктураПоиска.Удалить("Партия");
		Иначе
			СтруктураПоиска.Удалить("ДокументВозникновенияРасходов");
		КонецЕсли;
		ВидРасходов = ?(ВидыРасходов.ВидыРасходовТовары().Найти(Выборка.ВидРасходов) <> Неопределено, ВидыРасходов.Номенклатура, ВидыРасходов.Материалы);
		СтруктураПоиска.Вставить("ВидРасходов", ВидРасходов);
		Возврат;
	КонецЕсли;
	
	СтруктураПоиска.Очистить();
	
КонецПроцедуры

Функция НаборЗаписейРегистраПоВидуРасходов(ДвиженияДокумента, ВидРасходов, Регистратор, ДокументВозникновенияРасходов)
	
	ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации = 
		НСтр("ru = 'Признание расходов при УСН. Не выполнена запись расходов в служебный регистр УСН.'", ОбщегоНазначения.КодОсновногоЯзыка()); // строка записывается в ИБ
	
	ВидРегистра = ИмяРегистраПоВидуРасходов(ВидРасходов);
	Если Не ДвиженияДокумента.Свойство(ВидРегистра) Тогда
		ДвиженияДокумента.Вставить(ВидРегистра, РегистрыНакопления[ВидРегистра].СоздатьНаборЗаписей());
		ДвиженияДокумента[ВидРегистра].ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
		ДвиженияДокумента[ВидРегистра].Отбор.Регистратор.Установить(Регистратор);
	КонецЕсли;
	
	НаборЗаписей = ДвиженияДокумента[ВидРегистра];
	
	Если НЕ ЗначениеЗаполнено(НаборЗаписей.Отбор.Регистратор.Значение) Тогда
		ЗаписьЖурналаРегистрации(ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления[ВидРегистра],
			Регистратор,
			НСтр("ru = 'Документ, регистрирующий расходы, не является регистратором для служебного регистра УСН.'", ОбщегоНазначения.КодОсновногоЯзыка()),  // строка записывается в ИБ
			РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументВозникновенияРасходов) Тогда
		ЗаписьЖурналаРегистрации(ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыНакопления[ВидРегистра],
			Регистратор,
			НСтр("ru = 'Не задан документ возникновения расходов.'", ОбщегоНазначения.КодОсновногоЯзыка()),  // строка записывается в ИБ
			РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат НаборЗаписей;
	
КонецФункции

Функция ИмяРегистраПоВидуРасходов(ВидРасходов)
	
	СоответствиеВидаРасходовРегистру = Новый Соответствие;
	Для каждого ВидТоваров Из Перечисления.ВидыРасходовУСН.ВидыРасходовТовары() Цикл
		СоответствиеВидаРасходовРегистру.Вставить(ВидТоваров, "РасходыПриУСНТовары");
	КонецЦикла;
	Для каждого ВидМатериалов Из Перечисления.ВидыРасходовУСН.ВидыРасходовМатериалы() Цикл
		СоответствиеВидаРасходовРегистру.Вставить(ВидМатериалов, "РасходыПриУСНМатериалы");
	КонецЦикла;
	Для каждого ВидОСНМА Из Перечисления.ВидыРасходовУСН.ВидыРасходовОСНМА() Цикл
		СоответствиеВидаРасходовРегистру.Вставить(ВидОСНМА, "РасходыПриУСНОСиНМА");
	КонецЦикла;
	Для каждого ВидПрочихРасходов Из Перечисления.ВидыРасходовУСН.ВидыРасходовПризнаваемыеПоОплате() Цикл
		Если Перечисления.ВидыРасходовУСН.ВидыРасходовМатериалы().Найти(ВидПрочихРасходов) = Неопределено Тогда
			СоответствиеВидаРасходовРегистру.Вставить(ВидПрочихРасходов, "РасходыПриУСН");
		КонецЕсли;
	КонецЦикла;
	
	Возврат СоответствиеВидаРасходовРегистру.Получить(ВидРасходов);
	
КонецФункции

Функция СодержаниеРасхода(Данные, ВидРасходов)
	
	Если ВидРасходов = Перечисления.ВидыРасходовУСН.Номенклатура Тогда
		Информация = НСтр("ru = 'Признаны расходы на приобретение товаров'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.Материалы Тогда
		Информация = НСтр("ru = 'Признаны расходы на приобретение материалов'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.ДопРасходыТовары Тогда
		Информация = НСтр("ru = 'Признаны доп. расходы по товарам'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.ДопРасходыМатериалы Тогда
		Информация = НСтр("ru = 'Признаны доп. расходы по материалам'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.ТаможенныеПлатежиТовары Тогда
		Информация = НСтр("ru = 'Признаны таможенные расходы по товарам'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.ТаможенныеПлатежиМатериалы Тогда
		Информация = НСтр("ru = 'Признаны таможенные расходы по материалам'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.Зарплата Тогда
		Информация = НСтр("ru = 'Признаны расходы по зарплате'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.Налоги Тогда
		Информация = НСтр("ru = 'Признаны расходы по налогам'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.Лизинг Тогда
		Информация = НСтр("ru = 'Признаны расходы по лизингу'");
	ИначеЕсли ВидРасходов = Перечисления.ВидыРасходовУСН.Кредиты Тогда
		Информация = НСтр("ru = 'Признаны расходы по кредитам'");
	Иначе
		Информация = НСтр("ru = 'Признаны расходы'");
	КонецЕсли;
	
	Если Данные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности Тогда
		Информация = СтрЗаменить(Информация, НСтр("ru = 'Признаны'"), НСтр("ru = 'Не признаны'"));
	КонецЕсли;
	
	МассивСодержания = Новый Массив;
	МассивСодержания.Добавить(Строка(Данные.ХозяйственнаяОперация) + ".");
	МассивСодержания.Добавить(Информация);
	
	Если ЗначениеЗаполнено(Данные.НаименованиеКонтрагента) Тогда
		ПредставлениеПоставщика = НСтр("ru = 'поставщика'");
		Если Данные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераКомиссия Тогда
			ПредставлениеПоставщика = НСтр("ru = 'комиссионера'");
		КонецЕсли;
		Если Данные.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
			ПредставлениеПоставщика = НСтр("ru = 'подотчетника'");
		КонецЕсли;
		МассивСодержания.Добавить(СтрШаблон(НСтр("ru = 'от %1 ""%2""'"), ПредставлениеПоставщика, Данные.НаименованиеКонтрагента));
	КонецЕсли;
	Если ЗначениеЗаполнено(Данные.Договор) Тогда
		МассивСодержания.Добавить(СтрШаблон(НСтр("ru = 'по договору ""%1""'"), Данные.Договор));
	КонецЕсли;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "СтатьяРасходов") И ЗначениеЗаполнено(Данные.СтатьяРасходов) Тогда
		ВидСтатьи = "";
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "ПризнаватьРасходамиПриУСН") И Не Данные.ПризнаватьРасходамиПриУСН Тогда
			ВидСтатьи = НСтр("ru = 'не признаваемую'") + " ";
		КонецЕсли;
		МассивСодержания.Добавить(СтрШаблон(НСтр("ru = 'на %1статью расходов ""%2""'"), ВидСтатьи, Данные.СтатьяРасходов));
	КонецЕсли;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Данные, "ВидДеятельности") Тогда
		СтрокаПоясненияСторно = "";
		Если Данные.ВидДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
			СтрокаПоясненияСторно = НСтр("ru = 'в результате списания на деятельность ЕНВД'");
		ИначеЕсли Данные.ВидДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты Тогда
			СтрокаПоясненияСторно = НСтр("ru = 'в результате распределения УСН/ЕНВД'");
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаПоясненияСторно) Тогда
			МассивСодержания.Добавить(СтрокаПоясненияСторно);
		КонецЕсли;
	КонецЕсли;
	
	Содержание = СтрСоединить(МассивСодержания, " ") + ".";
	
	Возврат Содержание;
	
КонецФункции

#КонецОбласти

#Область ОпределениеСлужебныхЗначений

// Возвращает имя служебного доп. свойства, устанавливаемого у всех объектов, записываемых этим механизмом.
//
Функция ИмяСлужебногоДополнительногоСвойстваОбъекта()
	Возврат "ПризнаниеРасходовПриУСН";
КонецФункции

Функция ИсключающиесяХозОперацииВПрочихРасходах()
	
	ИсключающиесяХозОперации = Новый Массив;
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЛизингУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаДенежныхСредств);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаФинансовыхИнструментов);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСКлиентами);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РаспределениеНДС);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	
	Возврат ИсключающиесяХозОперации;
	
КонецФункции

Функция ИсключающиесяХозОперацииВСебестоимости()
	
	ИсключающиесяХозОперации = Новый Массив;
	
	// Операции с тарой:
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноПереданнойТары);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад);
	
	// Операции по комиссии:
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	
	// Операции только регл. учета:
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет);
	
	// Операции производства:
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковЗатратПартийПроизводства);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхВПроизводство);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаДавальцу);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика);
	
	// Остальные операции:
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами);
	
	Возврат ИсключающиесяХозОперации;
	
КонецФункции

Функция ИсключающиесяРегистраторыСебестоимости()
	
	ИсключающиесяТипыРегистраторов = Новый Массив;
	
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.АктВыполненныхРабот"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ВводОстатков"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ВыпускПродукции"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.НачислениеОценочныхОбязательствПоОтпускам"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ОтражениеЗарплатыВФинансовомУчете"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ОтчетПереработчика"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ПервичныйДокумент"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ПередачаТоваровХранителю"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ПеремещениеТоваров"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.РаспределениеВозвратныхОтходов"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.РаспределениеПроизводственныхЗатрат"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.РасчетСебестоимостиТоваров"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.СчетФактураНалоговыйАгент"));
	ИсключающиесяТипыРегистраторов.Добавить(Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент"));
	
	Возврат ИсключающиесяТипыРегистраторов;
	
КонецФункции

Функция ИсключающиесяДокументыПартийСебестоимости()
	
	ИсключающиесяТипыДокументыПартий = ИсключающиесяДокументыПоступленияСебестоимости();
	
	ИндексСборкиТоваров = ИсключающиесяТипыДокументыПартий.Найти(Тип("ДокументСсылка.СборкаТоваров"));
	ИсключающиесяТипыДокументыПартий.Удалить(ИндексСборкиТоваров);
	
	Возврат ИсключающиесяТипыДокументыПартий;
	
КонецФункции

Функция ИсключающиесяДокументыПоступленияСебестоимости()
	
	ИсключающиесяТипыДокументыПартий = Новый Массив;
	
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтКлиента"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.ПорчаТоваров"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.ПрочееОприходованиеТоваров"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("ДокументСсылка.РаспределениеВозвратныхОтходов"));
	ИсключающиесяТипыДокументыПартий.Добавить(Тип("СправочникСсылка.ПартииПроизводства"));
	
	ТипыДокументовПартийПроизводства = Метаданные.ОпределяемыеТипы.ДокументПартииПроизводства.Тип.Типы();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИсключающиесяТипыДокументыПартий, ТипыДокументовПартийПроизводства);
	
	Возврат ИсключающиесяТипыДокументыПартий;
	
КонецФункции

Функция СтатьиЗарплатыИНалогов()
	
	Статьи = Новый Массив;
	
	Статьи.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	Статьи.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда);
	
	Возврат Статьи;
	
КонецФункции

Функция ТипыНалоговНДФЛ()
	
	ТипыНДФЛ = Новый Массив;
	
	ВидыОперацийНДФЛ = Перечисления.ВидыОперацийПоЗарплате.НДФЛ();
	Для каждого ВидОперацииНДФЛ Из ВидыОперацийНДФЛ Цикл
		ТипНДФЛ = Перечисления.ТипыНалогов.ТипНалогаОперацииПоЗарплаты(ВидОперацииНДФЛ);
		Если ЗначениеЗаполнено(ТипНДФЛ) Тогда
			ТипыНДФЛ.Добавить(ТипНДФЛ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипыНДФЛ;
	
КонецФункции

Функция ХозОперацииСписанияТоваров()
	
	ХозОперацииСписанияТоваров = Новый Массив;
	
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхНаХранение);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваров);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперацииСписанияТоваров.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваров);
	
	Возврат ХозОперацииСписанияТоваров;
	
КонецФункции

Функция ХозОперацииСписанияМатериалов()
	
	ХозОперацииСписанияМатериалов = Новый Массив;
	
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ХозОперацииСписанияМатериалов.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПереработчику);
	
	Возврат ХозОперацииСписанияМатериалов;
	
КонецФункции

Функция ХозОперацииСписанияОСНМА()
	
	ХозОперацииСписанияОСНМА = Новый Массив;
	
	ХозОперацииСписанияОСНМА.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВСоставОС);
	ХозОперацииСписанияОСНМА.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВСоставНМА);
	
	Возврат ХозОперацииСписанияОСНМА;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

// Пока не считается.
Функция ПеренесенныеУбыткиПрошлыхЛет(Организация, НачалоПериода, КонецПериода)
	
	СтруктураУбытков = Новый Структура("ПеренесенныеУбытки, УбытокОтУплатыМинимальногоНалога", 0, 0);
	
	Возврат СтруктураУбытков;
	
КонецФункции

Функция ДанныеКРасчету(НомерЗадания, Операция, Организация, НачалоПериода, КонецПериода, Отказ)
	
	Результат = Неопределено;
	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		Попытка
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗадания, Организация, Операция);
			Результат = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(НачалоПериода, КонецПериода, НомерЗадания, Организация, Операция);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать регистр заданий по причине: %ПричинаОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПричинаОшибки%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(Строка(Операция), ОбщегоНазначения.КодОсновногоЯзыка(),
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			Отказ = Истина;
		КонецПопытки;
	Иначе
		Результат = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(НачалоПериода, КонецПериода, НомерЗадания, Организация, Операция);
	КонецЕсли;
		
	Возврат Результат;	
		
КонецФункции

Процедура ЗафиксироватьРасчет(НомерЗадания, Операция, Организация, НачалоПериода, КонецПериода, ДанныеКРасчету, Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		Попытка
			ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(НомерЗадания, Организация, Операция);
			ЗакрытиеМесяцаСервер.ЗафиксироватьРасчет(КонецПериода + 1, НомерЗадания, Операция, ДанныеКРасчету);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось зафиксировать расчет в регистре заданий по причине: %ПричинаОшибки%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПричинаОшибки%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(Строка(Операция), ОбщегоНазначения.КодОсновногоЯзыка(),
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			Отказ = Истина;
		КонецПопытки;
	Иначе
		ЗакрытиеМесяцаСервер.ЗафиксироватьРасчет(КонецПериода + 1, НомерЗадания, Операция, ДанныеКРасчету);
	КонецЕсли;
		
КонецПроцедуры

Функция ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы(Организация, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ПрименяетсяУСН
	|				И ПрименяетсяУСНДоходыМинусРасходы) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Период, Период);
	
КонецФункции

Функция РазрядностьОкругленияПоказателейПриРасчетеНалога(ДатаРасчета)

	// С 1 квартала 2015 года расчет налога при выполнении "Закрытия месяца" производится в соответствии с
	// порядком заполнения декларации по УСН, опубликованным 17 декабря 2014 г. (приказ ФНС РФ № ММВ-7-3/352@):
	// промежуточные показатели, влияющие на налог и на авансовые платежи, перед расчетом округляются до целых рублей.
	//
	// Алгоритм расчета, применявшийся в регламентной операции до конца 2014 г., не изменяется.
	
	Возврат ?(ДатаРасчета >= '20150101', 0, 2);

КонецФункции

Функция ВходящиеДанныеПоОперации(Операция)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов);
	
	Если Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаУСН Тогда
		ВходящиеДанные.Вставить(Метаданные.Справочники.Организации);
		ВходящиеДанные.Вставить(Метаданные.Документы.ЗаписьКУДиР);
		ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	КонецЕсли;
	
	Если Операция = Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиР Тогда
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж);
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоСрокам);
		Иначе
			ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасчетыСКлиентамиПоДокументам);
		КонецЕсли;
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам);
	КонецЕсли;
	
	Если Операция = Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН Тогда
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокОтраженияНоменклатуры);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам);
		
		ВходящиеДанные.Вставить(Метаданные.Справочники.ГруппыФинансовогоУчетаНоменклатуры);
		ВходящиеДанные.Вставить(Метаданные.Справочники.ВидыНоменклатуры);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Номенклатура);
		ВходящиеДанные.Вставить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов);
		
		ВходящиеДанные.Вставить(Метаданные.Документы.РасходныйКассовыйОрдер);
		ВходящиеДанные.Вставить(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств);
		ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаПриобретения);
		ВходящиеДанные.Вставить(Метаданные.Документы.ОтражениеЗарплатыВФинансовомУчете);
		ВходящиеДанные.Вставить(Метаданные.Документы.АвансовыйОтчет);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПриобретениеТоваровУслуг);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПриобретениеУслугПрочихАктивов);
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыКОформлениюТаможенныхДеклараций);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасчетыПоФинансовымИнструментам);
		Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
			ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоСрокам);
		Иначе
			ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасчетыСПоставщикамиПоДокументам);
		КонецЕсли;
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц);
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасходыПриУСН);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасходыПриУСНМатериалы);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасходыПриУСНОСиНМА);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РасходыПриУСНТовары);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов);
		ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходовРаздел2);
	КонецЕсли;
	
	Возврат ВходящиеДанные;
	
КонецФункции

Функция ВидыНалоговыхПлатежей()
	
	ВидыПлатежей = Новый Массив;
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ВзносыБезСпецоценки);
	
	Возврат ВидыПлатежей;
	
КонецФункции

Функция ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Для каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#КонецОбласти
