////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыВводаОстатковОС = ВнеоборотныеАктивыКлиентСервер.ПараметрыВводаОстатковОС(Форма, Форма.ВспомогательныеРеквизиты);
	
	СтоимостьБУДоступна = (Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету")
							И Форма.ОтражатьВРеглУчете);
							
	АмортизацияДоступна = ПараметрыВводаОстатковОС.АмортизацияБУДоступна 
			И НЕ Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		ИЛИ ПараметрыВводаОстатковОС.АмортизацияУУДоступна 
			И Форма.ОтражатьВРеглУчете
			И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
							
	#Область СтраницаУчет
	
	Если ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru = 'Принят к учету (регл. учет)'");
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru = 'Принят к учету (упр. учет)'");
			Элементы.ГруппаПоследняяМодернизацияУпр.Заголовок = НСтр("ru = 'Модернизация (управленческий учет)'");
			Элементы.ГруппаОтражениеАмортизационныхРасходовУУ.Заголовок = НСтр("ru = 'Амортизация (управленческий учет)'");
			Элементы.ГруппаПорядокУчета.ОтображатьЗаголовок = Истина;
			Элементы.ГруппаПостоянныеСведения.ОтображатьЗаголовок = Истина;
			Элементы.ПорядокУчетаУУ.Заголовок = НСтр("ru = 'Управленческий учет'");
		Иначе
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru = 'Принят к учету'");
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru = 'Принят к учету'");
			Элементы.ГруппаПоследняяМодернизацияУпр.Заголовок = НСтр("ru = 'Модернизация'");
			Элементы.ГруппаОтражениеАмортизационныхРасходовУУ.Заголовок = НСтр("ru = 'Амортизация'");
			Элементы.ГруппаПорядокУчета.ОтображатьЗаголовок = Ложь;
			Элементы.ГруппаПостоянныеСведения.ОтображатьЗаголовок = Ложь;
			Элементы.ПорядокУчетаУУ.Заголовок = НСтр("ru = 'Порядок учета'");
		КонецЕсли; 
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			Форма.ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль,
			ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),,
			0);
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			Форма.ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы,
			ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),,
			0);
			
		Если Элементы.ПорядокУчетаНУ.СписокВыбора.НайтиПоЗначению(Форма.ПорядокУчетаНУ) = Неопределено Тогда
			Форма.ПорядокУчетаНУ = Элементы.ПорядокУчетаНУ.СписокВыбора.Получить(0).Значение;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Форма.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
	
		ЗначениеВидно = Форма.ВспомогательныеРеквизиты.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена");
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			3);
			
		//	
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Форма.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Форма.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаСтоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ТекущаяСтоимостьВР.Видимость = Форма.ОтражатьВРеглУчете;
		
		Элементы.ПервоначальнаяСтоимостьВР.Видимость = 
			Форма.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ТекущаяСтоимостьВРЦФ.Видимость = Форма.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
	
		АмортизацияЦФДоступна = ПараметрыВводаОстатковОС.АмортизацияБУДоступна И Форма.ПрименениеЦелевогоФинансирования;
		Элементы.НакопленнаяАмортизацияВРЦФ.Видимость = АмортизацияЦФДоступна;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования Тогда
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Собственные средства:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Собственные средства:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Собственные средства:'");
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Видимость       = Истина;
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
			
		Иначе
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Сумма:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Сумма:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Сумма:'");
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Видимость       = Ложь;
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") 
			И Форма.ОтражатьВРеглУчете Тогда
			Если ПараметрыВводаОстатковОС.АмортизацияУУДоступна Тогда
				Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация и износ'");
			Иначе
				Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленный износ'");
			КонецЕсли; 
		Иначе
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		ВидимостьЭлементов = Элементы.КорректировкаСтоимостиАрендованногоИмуществаНУ.Видимость;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаБУ.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаПР.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаВР.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаБУЗаголовок.Видимость = ВидимостьЭлементов;
	КонецЕсли;
		
	Элементы.ДекорацияЗаголовокБУ.Видимость = Элементы.ТекущаяСтоимостьБУ.Видимость;
	
	//
	Элементы.ОстаточнаяСтоимостьБУ.Видимость = Элементы.НакопленнаяАмортизацияБУ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУ.Видимость = Элементы.НакопленнаяАмортизацияНУ.Видимость;
	Элементы.ОстаточнаяСтоимостьПР.Видимость = Элементы.НакопленнаяАмортизацияПР.Видимость;
	Элементы.ОстаточнаяСтоимостьВР.Видимость = Элементы.НакопленнаяАмортизацияВР.Видимость;
	Элементы.ОстаточнаяСтоимостьУУ.Видимость = Элементы.НакопленнаяАмортизацияУУ.Видимость;
		
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Видимость = 
		Элементы.ОстаточнаяСтоимостьБУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьНУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьПР.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьВР.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьУУ.Видимость;
		
		
	//
	Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость = Элементы.НакопленнаяАмортизацияНУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьПРЦФ.Видимость = Элементы.НакопленнаяАмортизацияПРЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьВРЦФ.Видимость = Элементы.НакопленнаяАмортизацияВРЦФ.Видимость;
	
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость;
		
	#КонецОбласти
	
	#Область СтраницаСобытия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Модернизация (бухгалтерский и налоговый учет)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Модернизация (бухгалтерский учет)'");
		КонецЕсли; 
		Элементы.ГруппаПоследняяМодернизацияРегл.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаПереоценкаРегл.Заголовок = 
			?(Форма.ОтражатьВУпрУчете,
				НСтр("ru = 'Переоценка (бухгалтерский учет)'"),
				НСтр("ru = 'Переоценка'"));
				
		ЗначениеСвойства =
			Форма.ОтражатьВУпрУчете
			И Форма.ОтражатьВОперативномУчете;
			
		Элементы.РезервПереоценкиЗнак.Видимость = ЗначениеСвойства;
		Элементы.РезервПереоценкиСтоимостиСумма.Видимость = ЗначениеСвойства;
		Элементы.РезервПереоценкиАмортизацииСумма.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаПереоценкаУпр.Заголовок = 
			?(Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА,
				НСтр("ru = 'Переоценка (управленческий учет)'"),
				НСтр("ru = 'Переоценка'"));
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьРезервПереоценкиРегл")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Не Форма.ЕстьРезервПереоценкиРегл;
		Элементы.РезервПереоценкиРеглЗнак.ТолькоПросмотр = ЗначениеСвойства; 
		Элементы.РезервПереоценкиСтоимостиРеглСумма.ТолькоПросмотр = ЗначениеСвойства; 
		Элементы.РезервПереоценкиАмортизацииРеглСумма.ТолькоПросмотр = ЗначениеСвойства; 
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаАмортизация
	
	Элементы.СрокИспользованияБУРасшифровка.Видимость = Элементы.СрокИспользованияБУ.Видимость;
	Элементы.СрокИспользованияБУОстаточныйРасшифровка.Видимость = Элементы.СрокИспользованияБУОстаточный.Видимость;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУОстаточный")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУОстаточныйРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияБУОстаточный);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьРезервПереоценкиРегл") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ЕстьИзменениеПараметровАмортизацииБУ И Форма.ЕстьРезервПереоценкиРегл Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииБУ.Подсказка = НСтр("ru = 'Остаточная стоимость после модернизации и переоценки.'");
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru = 'Целевые средства в остаточной стоимость на дату последней модернизации и переоценки.'");
		ИначеЕсли Форма.ЕстьИзменениеПараметровАмортизацииБУ Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииБУ.Подсказка = НСтр("ru = 'Остаточная стоимость на дату последней модернизации.'");
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru = 'Целевые средства в остаточной стоимость на дату последней модернизации.'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете
			И Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") Тогда
			Если Форма.ОтражатьВУпрУчете 
				И Форма.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию") Тогда
				Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Амортизация и износ'");
			Иначе
				Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Износ'");
			КонецЕсли; 
		Иначе	
			Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Амортизация'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		Если Форма.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета 
			И Форма.УпрУчетПоДаннымБУ
			И Форма.ОтражатьВУпрУчете Тогда
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru = 'Остаточный срок'");
			Элементы.СрокИспользованияУУ.Подсказка = НСтр("ru = 'Остаточный срок на дату перехода'");
			Элементы.СрокИспользованияУУ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Видимость = 
		Элементы.НакопленнаяАмортизацияУУ.Видимость 
		ИЛИ Элементы.НакопленнаяАмортизацияБУ.Видимость;
		
	Элементы.ДекорацияКоэффициентАмортизацииБУПроцент.Видимость = Элементы.КоэффициентАмортизацииБУ.Видимость;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна 
			ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовУУ) Тогда
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
			
		ИначеЕсли НЕ ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна Тогда
			
			Если ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
				И ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским и налоговым учетом'");
			ИначеЕсли ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с налоговым учетом'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		Элементы.СтраницаОтражениеРасходов.Заголовок = 
			?(Форма.ПрименениеЦелевогоФинансирования, 
				НСтр("ru = 'Отражение доходов и расходов'"), 
				НСтр("ru = 'Отражение расходов'"));
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
			И ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский и налоговый учет)'");
		ИначеЕсли ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (налоговый учет)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Амортизация (бухгалтерский учет)'");
		КонецЕсли; 
		Элементы.ГруппаОтражениеАмортизационныхРасходовБУ.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиОС_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация
	
	ТребуетсяПересчитатьЗависимыеСуммы = 
		СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ");
		
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизитов(Объект, СписокРеквизитов) Экспорт

	//++ Локализация
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ПорядокУчетаБУ") <> Неопределено Тогда
		
		Если Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации") Тогда
			
			Объект.МетодНачисленияАмортизацииБУ = Неопределено;
			Объект.КоэффициентУскоренияБУ = 0;
			Объект.СтатьяРасходовБУ = Неопределено;
			Объект.АналитикаРасходовБУ = Неопределено;
			
			СписокРеквизитов.Добавить("МетодНачисленияАмортизацииБУ");
			
		КонецЕсли;
		
		Если Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СтоимостьНеПогашается")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету") Тогда
			
			Объект.НачислятьАмортизациюБУ = Ложь;
			Объект.СрокИспользованияБУ = 0;
			Объект.КоэффициентАмортизацииБУ = 0;
			
			СписокРеквизитов.Добавить("НачислятьАмортизациюБУ");
			
		КонецЕсли;
		
	КонецЕсли;

	Если СписокРеквизитов.Найти("ПорядокУчетаНУ") <> Неопределено Тогда
		
		Если Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации") Тогда
			
			Объект.НачислятьАмортизациюНУ = Ложь;
			Объект.СтатьяРасходовАмортизационнойПремии = Неопределено;
			Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
			Объект.ВключитьАмортизационнуюПремиюВСоставРасходов = Ложь;
			Объект.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;
			
			СписокРеквизитов.Добавить("НачислятьАмортизациюНУ");
			
		КонецЕсли;
		
		Если Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")  Тогда
			Объект.НакопленнаяАмортизацияНУ = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	//++ Локализация
	
	МножительЦФ = ?(Форма.ПрименениеЦелевогоФинансирования, 1, 0);
	
	Форма.ТекущаяСтоимостьПРЦФ       = Форма.ТекущаяСтоимостьБУЦФ;
	Форма.НакопленнаяАмортизацияПРЦФ = Форма.НакопленнаяАмортизацияБУЦФ;
	
	Если Не Форма.ПервоначальнаяСтоимостьОтличается Тогда
		
		Форма.ПервоначальнаяСтоимостьНУ = Форма.ТекущаяСтоимостьНУ + Форма.ТекущаяСтоимостьНУЦФ * МножительЦФ;
		Форма.ПервоначальнаяСтоимостьПР = Форма.ТекущаяСтоимостьПР + Форма.ТекущаяСтоимостьПРЦФ * МножительЦФ;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьИтоговыеСуммы(Форма) Экспорт

	//++ Локализация
	
	// Временные разницы не редактируются
	Форма.ТекущаяСтоимостьВР         = Форма.ТекущаяСтоимостьБУ         - Форма.ТекущаяСтоимостьНУ         - Форма.ТекущаяСтоимостьПР;
	Форма.ТекущаяСтоимостьВРЦФ       = Форма.ТекущаяСтоимостьБУЦФ       - Форма.ТекущаяСтоимостьНУЦФ       - Форма.ТекущаяСтоимостьПРЦФ;
	Форма.ПервоначальнаяСтоимостьВР	 = Форма.ПервоначальнаяСтоимостьБУ  - Форма.ПервоначальнаяСтоимостьНУ  - Форма.ПервоначальнаяСтоимостьПР;
	
	Если Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") Тогда
		Форма.НакопленнаяАмортизацияВР   = Форма.НакопленнаяАмортизацияБУ   - Форма.НакопленнаяАмортизацияНУ   - Форма.НакопленнаяАмортизацияПР;
		Форма.НакопленнаяАмортизацияВРЦФ = Форма.НакопленнаяАмортизацияБУЦФ - Форма.НакопленнаяАмортизацияНУЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	КонецЕсли; 
	
	// Остаточная стоимость не редактируется
	
	Если Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		И Форма.ОтражатьВРеглУчете Тогда
		Форма.ОстаточнаяСтоимостьБУ   = Форма.ТекущаяСтоимостьБУ   - Форма.НакопленнаяАмортизацияБУ;
		Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
		Форма.ОстаточнаяСтоимостьПР   = Форма.ТекущаяСтоимостьПР   - Форма.НакопленнаяАмортизацияПР;
		Форма.ОстаточнаяСтоимостьВР   = Форма.ТекущаяСтоимостьВР   - Форма.НакопленнаяАмортизацияВР;
		
		Форма.ОстаточнаяСтоимостьБУЦФ = Форма.ТекущаяСтоимостьБУЦФ - Форма.НакопленнаяАмортизацияБУЦФ;
		Форма.ОстаточнаяСтоимостьНУЦФ = Форма.ТекущаяСтоимостьНУЦФ - Форма.НакопленнаяАмортизацияНУЦФ;
		Форма.ОстаточнаяСтоимостьПРЦФ = Форма.ТекущаяСтоимостьПРЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
		Форма.ОстаточнаяСтоимостьВРЦФ = Форма.ТекущаяСтоимостьВРЦФ - Форма.НакопленнаяАмортизацияВРЦФ;
	Иначе	
		Форма.ОстаточнаяСтоимостьБУ   = 0;
		Форма.ОстаточнаяСтоимостьНУ   = 0;
		Форма.ОстаточнаяСтоимостьПР   = 0;
		Форма.ОстаточнаяСтоимостьВР   = 0;
		
		Форма.ОстаточнаяСтоимостьБУЦФ = 0;
		Форма.ОстаточнаяСтоимостьНУЦФ = 0;
		Форма.ОстаточнаяСтоимостьПРЦФ = 0;
		Форма.ОстаточнаяСтоимостьВРЦФ = 0;
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	СписокРеквизитов = "ДатаПринятияКУчетуБУ,
						|СрокИспользованияНУ,СрокИспользованияБУ,
						|ТекущаяСтоимостьНУ,
						|НакопленнаяАмортизацияНУ,
						|ПервоначальнаяСтоимостьНУ,
						|СтатьяРасходовБУ,АналитикаРасходовБУ";
	
	ЗначенияРеквизитовДоИзмененияЛокализация = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДоИзмененияЛокализация, Форма);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияРеквизитовДоИзменения, ЗначенияРеквизитовДоИзмененияЛокализация);
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ЭтоНИОКР = Форма.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР");
	
	СтоимостьБУДоступна = (Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	АмортизацияБУДоступна = 
		Форма.ОтражатьВРеглУчете
		И (Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Форма.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Форма.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	ДоступныПараметрыАмортизацииБУ = Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
									И Форма.ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
	ДоступныПараметрыАмортизацииНУ = Форма.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
									И Форма.ВспомогательныеРеквизиты.ОтражатьВРеглУчете
									И Форма.ПлательщикНалогаНаПрибыль;
	
	#Область СтраницаПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЭлементПорядокУчета = Элементы.ПорядокУчетаНУ.СписокВыбора.НайтиПоЗначению(
									ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
		
		Если Форма.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР") Тогда
			Элементы.ПорядокУчетаБУ.СписокВыбора[0].Представление = НСтр("ru = 'Списание расходов'");
			Элементы.ПорядокУчетаНУ.СписокВыбора[0].Представление = НСтр("ru = 'Списание расходов'");
		Иначе
			Элементы.ПорядокУчетаБУ.СписокВыбора[0].Представление = НСтр("ru = 'Начисление амортизации'");
			Элементы.ПорядокУчетаНУ.СписокВыбора[0].Представление = НСтр("ru = 'Начисление амортизации'");
		КонецЕсли; 
		
	КонецЕсли;	
	
	Если ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете И НЕ Форма.ОтражатьВУпрУчете Тогда
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru = 'Принят к учету'");
		ИначеЕсли Форма.ОтражатьВРеглУчете И Форма.ОтражатьВУпрУчете Тогда
			Элементы.ДатаПринятияКУчетуБУ.Заголовок = НСтр("ru = 'Принят к учету (регл)'");
		КонецЕсли; 
		
		Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru = 'Принят к учету (упр)'");
		Иначе
			Элементы.ДатаПринятияКУчетуУУ.Заголовок = НСтр("ru = 'Принят к учету'");
		КонецЕсли;
		
	КонецЕсли;	
	
	#КонецОбласти
	
	#Область СтраницаСтоимость
	
	БезАмортизацииБУ = 
		НЕ Форма.ОтражатьВРеглУчете
		ИЛИ (Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НеНачислятьАмортизацию")
				И Форма.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы"))
		ИЛИ Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования Тогда
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Собственные средства:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Собственные средства:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Собственные средства:'");
			
		Иначе
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Сумма:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Сумма:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Сумма:'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И Форма.ОтражатьВРеглУчете И НЕ Форма.ОтражатьВУпрУчете Тогда
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленный износ'");
		Иначе
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Форма.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
		Элементы.ТекущаяСтоимостьВРЦФ.Видимость = ЗначениеСвойства;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ ОбновитьВсе Тогда
		
		АмортизацияЦФДоступна = АмортизацияБУДоступна
									И Форма.ПрименениеЦелевогоФинансирования
									И Форма.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
		Элементы.НакопленнаяАмортизацияВРЦФ.Видимость = АмортизацияЦФДоступна;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьБУ.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияБУ.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияБУ.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияБУ.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияБУ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьНУ.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияНУ.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияНУ.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияНУ.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияНУ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьПР.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияПР.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияПР.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияПР.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияПР.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьВР.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияВР.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияВР.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//
	Элементы.ДекорацияПервоначальнаяСтоимостьПР.Видимость = Элементы.ПервоначальнаяСтоимостьБУ.Видимость;
	Элементы.ДекорацияПервоначальнаяСтоимостьВР.Видимость = Элементы.ПервоначальнаяСтоимостьБУ.Видимость;
		
	//
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Видимость = 
		Элементы.НакопленнаяАмортизацияУУ.Видимость 
		ИЛИ Элементы.НакопленнаяАмортизацияБУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУ.Видимость = Элементы.НакопленнаяАмортизацияБУ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУ.Видимость = Элементы.НакопленнаяАмортизацияНУ.Видимость;
	Элементы.ОстаточнаяСтоимостьПР.Видимость = Элементы.НакопленнаяАмортизацияПР.Видимость;
	Элементы.ОстаточнаяСтоимостьВР.Видимость = Элементы.НакопленнаяАмортизацияВР.Видимость;
	Элементы.ОстаточнаяСтоимостьУУ.Видимость = Элементы.НакопленнаяАмортизацияУУ.Видимость;
		
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Видимость = 
		Элементы.ОстаточнаяСтоимостьУУ.Видимость 
		ИЛИ Элементы.ОстаточнаяСтоимостьБУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость = Элементы.НакопленнаяАмортизацияНУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьПРЦФ.Видимость = Элементы.НакопленнаяАмортизацияПРЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьВРЦФ.Видимость = Элементы.НакопленнаяАмортизацияВРЦФ.Видимость;
	
	Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ТекущаяСтоимостьБУЦФ.Видимость;
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость;
	
	//	
	Элементы.ДекорацияЗаголовокБУ.Видимость = Элементы.ТекущаяСтоимостьБУ.Видимость;
		
	#КонецОбласти
	
	#Область СтраницаСобытия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВУпрУчете Тогда
			ЗаголовокГруппы = НСтр("ru = 'Переоценка (бухгалтерский учет)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Переоценка'");
		КонецЕсли; 
		Элементы.ГруппаПереоценкаРегл.Заголовок = ЗаголовокГруппы;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			ЗаголовокГруппы = НСтр("ru = 'Переоценка (управленческий учет)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Переоценка'");
		КонецЕсли; 
		Элементы.ГруппаПереоценкаУпр.Заголовок = ЗаголовокГруппы;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьРезервПереоценкиРегл")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Не Форма.ЕстьРезервПереоценкиРегл;
		Элементы.РезервПереоценкиРеглЗнак.ТолькоПросмотр = ЗначениеСвойства; 
		Элементы.РезервПереоценкиСтоимостиРеглСумма.ТолькоПросмотр = ЗначениеСвойства; 
		Элементы.РезервПереоценкиАмортизацииРеглСумма.ТолькоПросмотр = ЗначениеСвойства; 
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаАмортизация
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора,
			НЕ Форма.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР"),
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"),,
			1);
		
		Если Форма.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР") Тогда
			
			Элементы.СтраницаАмортизация.Заголовок = НСтр("ru='Списание расходов'");
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru='Способ списания'");
			Элементы.МетодНачисленияАмортизацииУУ.Заголовок = НСтр("ru='Способ списания'");
			Элементы.СрокИспользованияБУ.Заголовок = НСтр("ru='Срок списания'");
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru='Срок списания'");
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru='Срок списания'");

			Если Форма.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка") Тогда
				Форма.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный");
			КонецЕсли;
			
		Иначе
			
			Элементы.СтраницаАмортизация.Заголовок = НСтр("ru='Амортизация'");
			
			Элементы.МетодНачисленияАмортизацииБУ.Заголовок = НСтр("ru='Метод начисления'");
			Элементы.МетодНачисленияАмортизацииУУ.Заголовок = НСтр("ru='Метод начисления'");
			Элементы.СрокИспользованияБУ.Заголовок = НСтр("ru='Срок использования'");
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru='Срок использования'");
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru='Срок использования'");

		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ПроверкаНезаполненного = ВнеоборотныеАктивыКлиентСервер.ЗначениеСвойстваРеквизитаОбъекта(
									"СтатьяРасходовУУ", "АвтоОтметкаНезаполненного", ПараметрыРеквизитовОбъекта);
		
		Если ПроверкаНезаполненного = Истина ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовУУ) Тогда
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = "";
		ИначеЕсли ПроверкаНезаполненного = Ложь Тогда
			Если ДоступныПараметрыАмортизацииНУ Тогда
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским и налоговым учетом'");
			Иначе
				ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом'");
			КонецЕсли;
			
			Элементы.СтатьяРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовУУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияУУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияУУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУДо2009")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ФактическийСрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Форма.СрокИспользованияНУДо2009);
			
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		Если Форма.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета 
			И Форма.УпрУчетПоДаннымБУ
			И Форма.ОтражатьВУпрУчете Тогда
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru = 'Остаточный срок'");
			Элементы.СрокИспользованияУУ.Подсказка = НСтр("ru = 'Остаточный срок на дату перехода'");
			Элементы.СрокИспользованияУУ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.СрокИспользованияБУРасшифровка.Видимость = Элементы.СрокИспользованияБУ.Видимость;
	Элементы.СрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУ.Видимость;
	Элементы.СрокИспользованияУУРасшифровка.Видимость = Элементы.СрокИспользованияУУ.Видимость;
	Элементы.ФактическийСрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУДо2009.Видимость;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования Тогда
			Элементы.СтраницаОтражениеРасходов.Заголовок = НСтр("ru = 'Отражение доходов и расходов'");
		Иначе
			Элементы.СтраницаОтражениеРасходов.Заголовок = НСтр("ru = 'Отражение расходов'");
		КонецЕсли; 
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ЭтоНИОКР Тогда
			
			Если Форма.ОтражатьВРеглУчете И НЕ Форма.ОтражатьВУпрУчете Тогда
				Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Списание расходов'");
			ИначеЕсли Форма.ОтражатьВРеглУчете И Форма.ОтражатьВУпрУчете Тогда
				Если ДоступныПараметрыАмортизацииНУ Тогда
					Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Списание расходов (бухгалтерский и налоговый учет)'");
				Иначе
					Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Списание расходов (бухгалтерский учет)'");
				КонецЕсли; 
			КонецЕсли; 
			
			Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
				Элементы.ГруппаРасходыУУ.Заголовок = НСтр("ru = 'Списание расходов (управленческий учет)'");
			Иначе
				Элементы.ГруппаРасходыУУ.Заголовок = НСтр("ru = 'Списание расходов'");
			КонецЕсли; 
			
		Иначе
			
			Если Форма.ОтражатьВРеглУчете И НЕ Форма.ОтражатьВУпрУчете Тогда
				Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Амортизация'");
			ИначеЕсли Форма.ОтражатьВРеглУчете И Форма.ОтражатьВУпрУчете Тогда
				Если ДоступныПараметрыАмортизацииНУ Тогда
					Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Амортизация (бухгалтерский и налоговый учет)'");
				Иначе
					Элементы.ГруппаРасходыРегл.Заголовок = НСтр("ru = 'Амортизация (бухгалтерский учет)'");
				КонецЕсли; 
			КонецЕсли; 
			
			Если Форма.ОтражатьВРеглУчете И Форма.ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
				Элементы.ГруппаРасходыУУ.Заголовок = НСтр("ru = 'Амортизация (управленческий учет)'");
			Иначе
				Элементы.ГруппаРасходыУУ.Заголовок = НСтр("ru = 'Амортизация'");
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиНМА_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация
	
	ТребуетсяПересчитатьЗависимыеСуммы =
		СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования");
	
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиНМА_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	СписокРеквизитов = "ДатаПринятияКУчетуБУ,
						|СрокИспользованияНУ,СрокИспользованияБУ,
						|ТекущаяСтоимостьБУ,ТекущаяСтоимостьНУ,
						|НакопленнаяАмортизацияБУ,НакопленнаяАмортизацияНУ,
						|ПервоначальнаяСтоимостьБУ,ПервоначальнаяСтоимостьНУ,
						|СтатьяРасходовБУ,АналитикаРасходовБУ";
	
	ЗначенияРеквизитовДоИзмененияЛокализация = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДоИзмененияЛокализация, Форма);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияРеквизитовДоИзменения, ЗначенияРеквизитовДоИзмененияЛокализация);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	МножительЦФ = ?(Форма.ПрименениеЦелевогоФинансирования, 1, 0);
	
	Форма.ТекущаяСтоимостьПРЦФ       = Форма.ТекущаяСтоимостьБУЦФ;
	Форма.НакопленнаяАмортизацияПРЦФ = Форма.НакопленнаяАмортизацияБУЦФ;
	
	Если Не Форма.ПервоначальнаяСтоимостьОтличается Тогда
		
		Форма.ПервоначальнаяСтоимостьБУ = Форма.ТекущаяСтоимостьБУ + Форма.ТекущаяСтоимостьБУЦФ * МножительЦФ;
		Форма.ПервоначальнаяСтоимостьНУ = Форма.ТекущаяСтоимостьНУ + Форма.ТекущаяСтоимостьНУЦФ * МножительЦФ;
		
	КонецЕсли;
	
	// Временные разницы не редактируются
	Форма.ТекущаяСтоимостьВР         = Форма.ТекущаяСтоимостьБУ         - Форма.ТекущаяСтоимостьНУ         - Форма.ТекущаяСтоимостьПР;
	Форма.ТекущаяСтоимостьВРЦФ       = Форма.ТекущаяСтоимостьБУЦФ       - Форма.ТекущаяСтоимостьНУЦФ       - Форма.ТекущаяСтоимостьПРЦФ;
	Форма.НакопленнаяАмортизацияВР   = Форма.НакопленнаяАмортизацияБУ   - Форма.НакопленнаяАмортизацияНУ   - Форма.НакопленнаяАмортизацияПР;
	Форма.НакопленнаяАмортизацияВРЦФ = Форма.НакопленнаяАмортизацияБУЦФ - Форма.НакопленнаяАмортизацияНУЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	
	// Остаточная стоимость не редактируется
	Форма.ОстаточнаяСтоимостьБУ   = Форма.ТекущаяСтоимостьБУ   - Форма.НакопленнаяАмортизацияБУ;
	Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
	Форма.ОстаточнаяСтоимостьПР   = Форма.ТекущаяСтоимостьПР   - Форма.НакопленнаяАмортизацияПР;
	Форма.ОстаточнаяСтоимостьВР   = Форма.ТекущаяСтоимостьВР   - Форма.НакопленнаяАмортизацияВР;
	
	Форма.ОстаточнаяСтоимостьБУЦФ = Форма.ТекущаяСтоимостьБУЦФ - Форма.НакопленнаяАмортизацияБУЦФ;
	Форма.ОстаточнаяСтоимостьНУЦФ = Форма.ТекущаяСтоимостьНУЦФ - Форма.НакопленнаяАмортизацияНУЦФ;
	Форма.ОстаточнаяСтоимостьПРЦФ = Форма.ТекущаяСтоимостьПРЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	Форма.ОстаточнаяСтоимостьВРЦФ = Форма.ТекущаяСтоимостьВРЦФ - Форма.НакопленнаяАмортизацияВРЦФ;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ДействуетНачислениеИзноса = 
		Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
									
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"));
	
	#Область ПараметрыУчета
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЭтоЛизинг =	
			ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
				
		ЗначениеСвойства =
			ЭтоЛизинг
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДоговорЛизинга", 
			"ДоговорЛизинга", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			НЕ ЭтоЛизинг
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	    //
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Подразделение", 
			"Подразделение", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
			И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАрендатора", 
			"ПодразделениеАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛАрендатора", 
			"МОЛАрендатора", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И (ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
								ИЛИ ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
			
		//	
		ЗначениеСвойства = (ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС")
								ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе"))
							И ВспомогательныеРеквизиты.РасчетыМеждуОрганизациямиАрендатор
							И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗалоговаяСтоимость", 
			"ЗалоговаяСтоимость", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
							И ВспомогательныеРеквизиты.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваров
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
			
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.РаздельныйУчетТоваров
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСИзДокумента")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Стоимость
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		//
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = СтоимостьБУДоступна И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"ТолькоПросмотр", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = СтоимостьБУДоступна И НЕ Объект.ПрименениеЦелевогоФинансирования;
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		СтоимостьБУДоступна = (Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
								И ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			НЕ СтоимостьБУДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
					И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
				ИЛИ НЕ ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету")
								И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"));
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьОтличается", 
			"ПервоначальнаяСтоимостьОтличается", 
			"ТолькоПросмотрБезОчистки", 
			НЕ СтоимостьБУДоступна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.АмортизацияБУДоступна 
				ИЛИ ПараметрыВводаОстатковОС.АмортизацияУУДоступна
					И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
					И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НакопленнаяАмортизацияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И (ПараметрыВводаОстатковОС.АмортизацияБУДоступна
				ИЛИ ПараметрыВводаОстатковОС.АмортизацияУУДоступна
					И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
					И ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе")
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"ЕстьИзменениеПараметровАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаПринятияКУчету", 
			"НазваниеДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаПринятияКУчету", 
			"НомерДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаИзмененияПараметровБУ", 
			"ДатаИзмененияПараметровБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ПрименениеЦелевогоФинансирования;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
							И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
							И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
							И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитики.ПрименяетсяПБУ18
							И (Объект.ТекущаяСтоимостьПР 
									+ Объект.ТекущаяСтоимостьПРЦФ 
									- Объект.НакопленнаяАмортизацияПР 
									- Объект.НакопленнаяАмортизацияПРЦФ) > 0;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПРДляВычисленияАмортизации", 
			"ПРДляВычисленияАмортизации", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ОтражатьВРеглУчете
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВУпрУчете
					И НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюБУ", 
			"ДокументВводаВЭксплуатациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства =
			ДействуетНачислениеИзноса
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьИзносБУ", 
			"НачислятьИзносБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУДо2009", 
			"НакопленнаяАмортизацияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
				И (НачалоМесяца(ВспомогательныеРеквизиты.Дата) = НачалоМесяца(Объект.ДатаПринятияКУчетуБУ)
					ИЛИ ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета)
				И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
				И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			ИЛИ НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
				И ВспомогательныеРеквизиты.ОтражатьВБУиНУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
		    ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ((Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
						ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
					И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
				ИЛИ ДействуетНачислениеИзноса);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"))
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ 
				ИЛИ ДействуетНачислениеИзноса);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И Не ПараметрыВводаОстатковОС.ПоНаработкеБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУОстаточный", 
			"СрокИспользованияБУОстаточный", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ПараметрыВводаОстатковОС.ПоНаработкеБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ПараметрыВводаОстатковОС.ПоНаработкеБУ
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОбъемНаработкиОстаточныйБУ", 
			"ОбъемНаработкиОстаточныйБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ (ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1) >= '201901010000'
						И (ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"))));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ 
				ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ);				
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ)
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
			И (ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
					ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ
					ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовУУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПередаватьРасходыВДругуюОрганизацию,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
		    Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ДоступныПараметрыАмортизацииБУ = 
		(Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
		И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
	
	ДоступныПараметрыАмортизацииНУ = 
		(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
		И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	
	ДоступноОтражениеРасходовРегл = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	АмортизацияБУДоступна = 
		ВспомогательныеРеквизиты.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"));
			
			
	#Область ПараметрыУчета
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуБУ", 
			"ДатаПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		//
		ЗначениеСвойства = ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	#КонецОбласти
									
	#Область Стоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьВР", 
			"ТекущаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	КонецЕсли;	
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;	
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И (АмортизацияБУДоступна 
				ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
					И ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияВР", 
			"НакопленнаяАмортизацияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(АмортизацияБУДоступна ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета)
			И Объект.ПрименениеЦелевогоФинансирования
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
	
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЕстьРезервПереоценкиРегл", 
			"ЕстьРезервПереоценкиРегл", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиРеглЗнак", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиСтоимостиРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"РезервПереоценкиАмортизацииРеглСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//	
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И (ВспомогательныеРеквизиты.ОтражатьВРеглУчете
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				ИЛИ ВспомогательныеРеквизиты.ОтражатьВУпрУчете
					И НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиАмортизацииРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РезервПереоценкиСтоимостиРегл", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета)
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументПринятияКУчетуБУ", 
			"ДокументПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	// БУХГАЛТЕРСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
			И ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// НАЛОГОВЫЙ УЧЕТ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
				ИЛИ Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.ПустаяСсылка"))
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// СВЕДЕНИЯ ДО 2009 ГОДА
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииНУ <> ПредопределенноеЗначение("Перечисление.МетодыНачисленияАмортизации.Нелинейный");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеДоходовИРасходов
	
	// БУХГАЛТЕРСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = 
			ДоступныПараметрыАмортизацииБУ
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	// ЦЕЛЕВОЕ ФИНАНСИРОВАНИЕ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	// УПРАВЛЕНЧЕСКИЙ УЧЕТ
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
			И НЕ ДоступноОтражениеРасходовРегл;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	// ПЕРЕДАЧА РАСХОДОВ
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
			И (ДоступноОтражениеРасходовРегл ИЛИ ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииУУ)
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации
				И ДоступноОтражениеРасходовРегл
				И Объект.ПередаватьРасходыВДругуюОрганизацию);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
