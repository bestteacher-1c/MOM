////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Изменение параметров ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Прочее

// Добавляет в текст запроса реквизиты шапки документа.
//  Реквизиты добавляются вместо параметра "&ИзменениеПараметровОС_РеквизитыДокумента".
//
// Параметры:
//  ТекстЗапроса - Строка				 - Исходный текст запроса.
//  ИмяТаблицы	 - Строка, Неопределено	 - Синоним таблицы документа в запросе.
//  	Для получения пустых значений нужно передать "Неопределено".
//
Процедура ДобавитьВТекстЗапросаРеквизитыДокумента(ТекстЗапроса, ИмяТаблицы = Неопределено) Экспорт

	ПоляЛокализации = "NULL";
	
	//++ Локализация
	
	Если ИмяТаблицы = Неопределено Тогда
		ПоляЛокализации = 
		"	0 КАК КоэффициентАмортизацииБУ,
		|	ЛОЖЬ КАК КоэффициентАмортизацииБУФлаг,
		|	0 КАК КоэффициентУскоренияБУ,
		|	ЛОЖЬ КАК КоэффициентУскоренияБУФлаг,
		|	ЛОЖЬ КАК НачислятьАмортизациюБУ,
		|	ЛОЖЬ КАК НачислятьАмортизациюБУФлаг,
		|	ЛОЖЬ КАК НачислятьАмортизациюНУ,
		|	ЛОЖЬ КАК НачислятьАмортизациюНУФлаг,
		|	ЛОЖЬ КАК ОтражениеАмортизационнойПремииФлаг,
		|	0 КАК СпециальныйКоэффициентНУ,
		|	ЛОЖЬ КАК СпециальныйКоэффициентНУФлаг,
		|	0 КАК СрокИспользованияБУ,
		|	ЛОЖЬ КАК СрокИспользованияБУФлаг,
		|	0 КАК СрокИспользованияНУ,
		|	ЛОЖЬ КАК СрокИспользованияНУФлаг";
	Иначе
		ПоляЛокализации = 
		"	ДанныеДокумента.КоэффициентАмортизацииБУ КАК КоэффициентАмортизацииБУ,
		|	ДанныеДокумента.КоэффициентАмортизацииБУФлаг КАК КоэффициентАмортизацииБУФлаг,
		|	ДанныеДокумента.КоэффициентУскоренияБУ КАК КоэффициентУскоренияБУ,
		|	ДанныеДокумента.КоэффициентУскоренияБУФлаг КАК КоэффициентУскоренияБУФлаг,
		|	ДанныеДокумента.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
		|	ДанныеДокумента.НачислятьАмортизациюБУФлаг КАК НачислятьАмортизациюБУФлаг,
		|	ДанныеДокумента.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
		|	ДанныеДокумента.НачислятьАмортизациюНУФлаг КАК НачислятьАмортизациюНУФлаг,
		|	ДанныеДокумента.ОтражениеАмортизационнойПремииФлаг КАК ОтражениеАмортизационнойПремииФлаг,
		|	ДанныеДокумента.СпециальныйКоэффициентНУ КАК СпециальныйКоэффициентНУ,
		|	ДанныеДокумента.СпециальныйКоэффициентНУФлаг КАК СпециальныйКоэффициентНУФлаг,
		|	ДанныеДокумента.СрокИспользованияБУ КАК СрокИспользованияБУ,
		|	ДанныеДокумента.СрокИспользованияБУФлаг КАК СрокИспользованияБУФлаг,
		|	ДанныеДокумента.СрокИспользованияНУ КАК СрокИспользованияНУ,
		|	ДанныеДокумента.СрокИспользованияНУФлаг КАК СрокИспользованияНУФлаг";
	КонецЕсли; 
	
	ПоляЛокализации = СтрЗаменить(ПоляЛокализации, "Таблица", ИмяТаблицы);
	
	//-- Локализация

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИзменениеПараметровОС_РеквизитыДокумента", ПоляЛокализации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	
	//++ Локализация
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Объект, ДополнительныеСвойства, Движения, Отказ);
	
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ПроверитьЗаполнениеПараметров(Объект, Отказ);

	ПроверитьТЧАмортизация(Объект, МассивНепроверяемыхРеквизитов, Отказ);
	ПроверитьТЧАмортизационнаяПремия(Объект, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	РассчитатьСлужебныеРеквизитыДляРасчетаАмортизации(Объект);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	//++ Локализация
	
	Объект.ОтражениеАмортизационнойПремииФлаг = Ложь;
	Объект.АмортизационнаяПремия.Очистить();
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаПеремещениеСтоимостиОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаПеремещениеАмортизацииОС(СписокЗапросов);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация

	Возврат "";

	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт

	//++ Локализация
	
	// Регистры сведений для которых используется СрезПоследних
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Неопределено);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Неопределено);
	
	//-- Локализация
	
КонецПроцедуры
 
// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьБлокировкуДанныхПриПроведении(Объект, Блокировка) Экспорт

	//++ Локализация
	
	Если Объект.ОтражатьВРеглУчете Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПорядокУчетаОСБУ");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБУ");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Объект.ОС;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
		ЭлементБлокировки.УстановитьЗначение("Организация", Объект.Организация);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Функция ПараметрыВыбраны(Объект) Экспорт

	ПараметрыВыбраны = Истина;
	
	//++ Локализация
	
	ПараметрыВыбраны =
		Объект.КоэффициентУскоренияБУФлаг
		ИЛИ Объект.ГрафикАмортизацииФлаг 
		ИЛИ Объект.КоэффициентАмортизацииБУФлаг 
		ИЛИ Объект.СрокИспользованияБУФлаг 
		ИЛИ Объект.НачислятьАмортизациюБУФлаг 
		ИЛИ Объект.СпециальныйКоэффициентНУФлаг 
		ИЛИ Объект.СрокИспользованияНУФлаг 
		ИЛИ Объект.НачислятьАмортизациюНУФлаг 
		ИЛИ Объект.ОтражениеАмортизационнойПремииФлаг;

	//-- Локализация
	
	Возврат ПараметрыВыбраны;
	
КонецФункции

#КонецОбласти

#Область ФормаДокумента

Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	Форма.ЕстьСвязанныеОрганизации = Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация);
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьТекстЗапросаДляЗаполненияТекущихЗначенийПараметров(ТекстЗапроса) Экспорт

	//++ Локализация
	
	ТекстПоля =
	"	,ЕСТЬNULL(ПараметрыАмортизацииОСБУСрезПоследних.СрокПолезногоИспользованияБУ, 0) КАК СрокИспользованияБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУСрезПоследних.СрокПолезногоИспользованияНУ, 0) КАК СрокИспользованияНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУСрезПоследних.КоэффициентАмортизацииБУ, 0) КАК КоэффициентАмортизацииБУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУСрезПоследних.КоэффициентУскорения, 0) КАК КоэффициентУскоренияБУ,
	|	ЕСТЬNULL(ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ГрафикАмортизации, НЕОПРЕДЕЛЕНО) КАК ГрафикАмортизации,
	|	ЕСТЬNULL(ПорядокУчетаОСБУСрезПоследних.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(ПорядокУчетаОСБУСрезПоследних.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|	ЕСТЬNULL(НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент, 0) КАК СпециальныйКоэффициент,
	|	ЕСТЬNULL(ПервоначальныеСведенияОССрезПоследних.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) КАК ПринятКУчетуРегл";
	
	ТекстСоединение =
	"		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСБУСрезПоследних
	|		ПО (ПараметрыАмортизацииОСБУСрезПоследних.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО (ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУСрезПоследних
	|		ПО (ПорядокУчетаОСБУСрезПоследних.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В (&СписокОС)) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|		ПО (НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)";
	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЯ_ЛОКАЛИЗАЦИЯ//", ТекстПоля);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СОЕДИНЕНИЕ_ЛОКАЛИЗАЦИЯ//", ТекстСоединение);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Форма) Экспорт

	//++ Локализация
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Объект.Организация, Форма.Объект.Дата);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДатаПриИзменении(Форма) Экспорт

	//++ Локализация
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Объект.Организация, Форма.Объект.Дата);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоДокументуОснованию(Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ИзменениеПараметровОС") Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	1
		|ИЗ
		|	Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
		|ГДЕ
		|	ИзменениеПараметровОС.Ссылка = &ДокументОснование
		|	И ИзменениеПараметровОС.ДокументОснование ССЫЛКА Документ.ПринятиеКУчетуОС
		|	И ВЫРАЗИТЬ(ИзменениеПараметровОС.ДокументОснование КАК Документ.ПринятиеКУчетуОС).ВключитьАмортизационнуюПремиюВСоставРасходов";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
		
		Форма.ВключитьАмортизационнуюПремиюВСоставРасходов = НЕ Запрос.Выполнить().Пустой();
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьИнформациюВПодвале(Объект, ЗаголовокНадписи) Экспорт

	//++ Локализация
	
	Если ?(Объект.Дата <> '000101010000', Объект.Дата, ТекущаяДатаСеанса()) < ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4() Тогда
		Если ЗаголовокНадписи.Количество() <> 0 Тогда
			ЗаголовокНадписи.Добавить(Символы.ПС);
		КонецЕсли;
		ЗаголовокНадписи.Добавить(НСтр("ru = 'Документ введен для перехода на учет внеоборотных активов версии 2.4'"));
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ДополитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Объект.Организация));
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата));
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

Процедура ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                      КАК Регистратор,
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	ТаблицаОС.ОсновноеСредство   КАК ОсновноеСредство,
	|	&ГрафикАмортизации           КАК ГрафикАмортизации
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ГрафикАмортизацииФлаг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, "Документ.ИзменениеПараметровОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Состояние КАК Состояние,
	|	ВЫБОР
	|		КОГДА &НачислятьАмортизациюБУФлаг
	|			ТОГДА &НачислятьАмортизациюБУ
	|		ИНАЧЕ ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|	КОНЕЦ КАК НачислятьАмортизациюБУ,
	|	ВЫБОР
	|		КОГДА &НачислятьАмортизациюНУФлаг
	|			ТОГДА &НачислятьАмортизациюНУ
	|		ИНАЧЕ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационныхРасходовФлаг
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ПорядокУчетаОСБУ.СпособОтраженияРасходов
	|	КОНЕЦ КАК СпособОтраженияРасходов,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационнойПремииФлаг
	|			ТОГДА &Ссылка
	|		ИНАЧЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовАмортизационнойПремии
	|	КОНЕЦ КАК СпособОтраженияРасходовАмортизационнойПремии,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационныхРасходовФлаг
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчетаОСБУ.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационныхРасходовФлаг
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчетаОСБУ.АналитикаРасходов
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационнойПремииФлаг
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчетаОСБУ.СтатьяРасходовАмортизационнойПремии
	|	КОНЕЦ КАК СтатьяРасходовАмортизационнойПремии,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационнойПремииФлаг
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПорядокУчетаОСБУ.АналитикаРасходовАмортизационнойПремии
	|	КОНЕЦ КАК АналитикаРасходовАмортизационнойПремии,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационныхРасходовФлаг
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию
	|	КОНЕЦ КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ВЫБОР
	|		КОГДА &ОтражениеАмортизационныхРасходовФлаг
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов
	|	КОНЕЦ КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И &Организация = Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.Организация = &Организация)
	|			И (ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И (&НачислятьАмортизациюБУФлаг
	|			ИЛИ &НачислятьАмортизациюНУФлаг
	|			ИЛИ &ОтражениеАмортизационныхРасходовФлаг
	|			ИЛИ &ОтражениеАмортизационнойПремииФлаг
	|			ИЛИ &ОтражениеАмортизационнойПремииФлаг)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                    КАК Регистратор,
	|	&Период                    КАК Период,
	|	&Организация               КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&СпециальныйКоэффициентНУ  КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &СпециальныйКоэффициентНУФлаг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтСписокОС(ТекстыЗапроса, "Документ.ИзменениеПараметровОС2_4");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаПорядокУчетаОС(ТекстыЗапроса, "Документ.ИзменениеПараметровОС2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	// СрокПолезногоИспользованияБУ
	|	ВЫБОР
	|		КОГДА &СрокИспользованияБУФлаг
	|			ТОГДА &СрокИспользованияБУ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ, 0)
	|	КОНЕЦ КАК СрокПолезногоИспользованияБУ,
	|
	// СрокПолезногоИспользованияНУ
	|	ВЫБОР
	|		КОГДА &СрокИспользованияНУФлаг
	|			ТОГДА &СрокИспользованияНУ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ, 0)
	|	КОНЕЦ КАК СрокПолезногоИспользованияНУ,
	|
	// КоэффициентУскорения
	|	ВЫБОР
	|		КОГДА &КоэффициентУскоренияБУФлаг
	|			ТОГДА &КоэффициентУскоренияБУ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0)
	|	КОНЕЦ КАК КоэффициентУскорения,
	|
	// КоэффициентАмортизацииБУ
	|	ВЫБОР
	|		КОГДА &КоэффициентАмортизацииБУФлаг
	|			ТОГДА &КоэффициентАмортизацииБУ
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ
	|	КОНЕЦ КАК КоэффициентАмортизацииБУ,
	|
	// СрокИспользованияДляВычисленияАмортизации
	|	ВЫБОР
	|		КОГДА &СрокИспользованияБУФлаг
	|				И ПараметрыАмортизацииОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА &СрокИспользованияБУ
	|		КОГДА &СрокИспользованияБУФлаг
	|				И ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ = ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА &СрокИспользованияБУ
	|		КОГДА &СрокИспользованияБУФлаг
	|			ТОГДА ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации + (&СрокИспользованияБУ - ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияБУ)
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации,
	|
	// ОбъемПродукцииРаботДляВычисленияАмортизации
	|	ВЫБОР
	|		КОГДА &ОбъемНаработкиФлаг
	|				И ПараметрыАмортизацииОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА &ОбъемНаработки
	|		КОГДА &ОбъемНаработкиФлаг
	|				И ПорядокУчетаОС.ОбъемНаработки = ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|			ТОГДА &ОбъемНаработки
	|		КОГДА &ОбъемНаработкиФлаг
	|			ТОГДА ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации + (&ОбъемНаработки - ПорядокУчетаОС.ОбъемНаработки)
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ДатаПоследнегоИзменения КАК ДатаПоследнегоИзменения,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизацииЦФ, 0) КАК СтоимостьДляВычисленияАмортизацииЦФ
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И &Организация = Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ СписокОС.ОсновноеСредство ИЗ втСписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|		ПО (ПараметрыАмортизацииОСБУ.Организация = &Организация)
	|			И (ПараметрыАмортизацииОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО (ПорядокУчетаОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И (&СрокИспользованияБУФлаг
	|			ИЛИ &СрокИспользованияНУФлаг
	|			ИЛИ &КоэффициентУскоренияБУФлаг
	|			ИЛИ &КоэффициентАмортизацииБУФлаг
	|			ИЛИ &ОбъемНаработкиФлаг)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ГруппаФинансовогоУчетаФлаг";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&Номер КАК НомерДокумента
	|ИЗ
	|	Документ.ИзменениеПараметровОС2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И (&НачислятьАмортизациюБУФлаг ИЛИ &НачислятьАмортизациюНУФлаг)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПараметров(Объект, Отказ)

	Если Объект.ГруппаФинансовогоУчетаФлаг 
		И (НЕ Объект.ОтражатьВРеглУчете ИЛИ НЕ Объект.ОтражатьВУпрУчете) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаБУ
		|		ПО (ПорядокУчетаБУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И Организация = &Организация
		|					И ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаУУ
		|		ПО (ПорядокУчетаУУ.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка)
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
		|	И ПорядокУчетаБУ.Состояние В(&СостоянияПринят)
		|	И ПорядокУчетаУУ.Состояние В(&СостоянияПринят)";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("СписокОС", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
		
		СостоянияПринят = Новый Массив;
		СостоянияПринят.Добавить(Перечисления.СостоянияОС.ПринятоКУчету);
		СостоянияПринят.Добавить(Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
		Запрос.УстановитьПараметр("СостоянияПринят", СостоянияПринят);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Необходимо отразить изменение параметров в управленческом и регламентированном учетах, т.к. изменяется группа финансового учета и выбраны основные средства, которые приняты в обоих учетах'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ВариантОтраженияВУчете");
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Прочее

//++ Локализация

Процедура ПроверитьТЧАмортизация(Объект, МассивНепроверяемыхРеквизитов, Отказ)

	МассивНепроверяемыхРеквизитов.Добавить("Амортизация.ОрганизацияПолучательРасходов");
	
	ШаблонПолучатель = НСтр("ru='Не заполнено поле ""Получатель"" в строке ""%1"" табличной части ""Амортизация"".'");
	Для каждого ДанныеСтроки Из Объект.Амортизация Цикл
		Если ДанныеСтроки.ПередаватьРасходыВДругуюОрганизацию
			И НЕ ЗначениеЗаполнено(ДанныеСтроки.ОрганизацияПолучательРасходов) Тогда
			
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Амортизация", ДанныеСтроки.НомерСтроки, "ОрганизацияПолучательРасходов");
			ТекстСообщения = СтрШаблон(ШаблонПолучатель, ДанныеСтроки.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьТЧАмортизационнаяПремия(Объект, МассивНепроверяемыхРеквизитов, Отказ)
	
	МассивНепроверяемыхРеквизитов.Добавить("АмортизационнаяПремия.ОрганизацияПолучательРасходов");
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		Объект,
		Новый Структура("АмортизационнаяПремия", "СтатьяРасходов, АналитикаРасходов"),
		МассивНепроверяемыхРеквизитов,
		Отказ);
	
	Для каждого ДанныеСтроки Из Объект.АмортизационнаяПремия Цикл
		Если ДанныеСтроки.ПередаватьРасходыВДругуюОрганизацию
			И НЕ ЗначениеЗаполнено(ДанныеСтроки.ОрганизацияПолучательРасходов) Тогда
			
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("АмортизационнаяПремия", ДанныеСтроки.НомерСтроки, "ОрганизацияПолучательРасходов");
			ТекстСообщения = СтрШаблон(НСтр("ru='Не заполнено поле ""Получатель"" в строке ""%1"" табличной части ""Амортизационная премия"".'"), ДанныеСтроки.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьСлужебныеРеквизитыДляРасчетаАмортизации(Объект)

	Объект.СуммаКоэффициентовАмортизационнойПремии = Объект.АмортизационнаяПремия.Итог("Коэффициент");
	
	СуммаКоэффициентовПредыдущихСтрок = 0;
	Для каждого ДанныеСтроки Из Объект.АмортизационнаяПремия Цикл
		ДанныеСтроки.СуммаКоэффициентовПредыдущихСтрок = СуммаКоэффициентовПредыдущихСтрок;
		СуммаКоэффициентовПредыдущихСтрок = СуммаКоэффициентовПредыдущихСтрок + ДанныеСтроки.Коэффициент;
	КонецЦикла; 
	
КонецПроцедуры


//-- Локализация

#КонецОбласти

#КонецОбласти
