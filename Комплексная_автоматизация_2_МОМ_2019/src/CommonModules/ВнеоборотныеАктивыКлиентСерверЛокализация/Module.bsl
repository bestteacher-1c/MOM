////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Определяет какие варианты распределения расходов допустимы при указанном порядке учета в налоговом учете.
//
// Параметры:
//  ПорядокУчетаНУ	 - ПеречислениеСсылка.ПорядокВключенияСтоимостиОСВСоставРасходовНУ	 - Порядок учета (налоговый учет).
// 
// Возвращаемое значение:
//  Массив, Неопределено - Если есть ограничения, то будет возвращен список вариантов распределения.
//  Если ограничений нет, то будет возвращено "Неопределено".
//
Функция ВариантыРаспределенияРасходовПоАмортизацииРегл(ПорядокУчетаНУ) Экспорт

	МассивВариантовРаспределения = Новый Массив;
	
	//++ Локализация
	
	Если ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
		Или ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокСписанияНИОКРНУ.ПриПринятииКУчету") Тогда
		
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НеРаспределять"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы"));
		МассивВариантовРаспределения.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты"));
		
	КонецЕсли; 

	//-- Локализация
	
	Возврат ?(МассивВариантовРаспределения.Количество() <> 0, МассивВариантовРаспределения, Неопределено);
	
КонецФункции

// Определяет является ли группа ОС недвижимым имуществом.
//
// Параметры:
//  ГруппаОС - ПеречислениеСсылка.ГруппыОС	 - Группа ОС.
// 
// Возвращаемое значение:
//  Булево - Истина, если группа ОС принадлежит невижимому имуществу.
//
Функция ЭтоНедвижимоеИмущество(ГруппаОС) Экспорт

	Возврат ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.Здания")
		ИЛИ ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.Сооружения")
		ИЛИ ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МноголетниеНасаждения")
		ИЛИ ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации")
		ИЛИ ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
		ИЛИ ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки");

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ГФУ

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ГФУ(Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидАктива")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаВыбытия", 
			"СчетУчетаВыбытия", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НМА"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаАмортизации", 
			"СчетУчетаАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ОсновноеСредство")
								ИЛИ Объект.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетЗабалансовогоУчета", 
			"СчетЗабалансовогоУчета", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива <> ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаАмортизацииЦФ", 
			"СчетУчетаАмортизацииЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = (Объект.ВидАктива <> ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СчетУчетаРезерваДооценки", 
			"СчетУчетаРезерваДооценки", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;		
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаОбъектаЭксплуатации

Процедура НастроитьЗависимыеЭлементыФормы_ОбъектыЭксплуатации(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ГруппаОС.СписокВыбора,
			Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),
			ПредопределенноеЗначение("Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество"),,
			11);
	
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ОбъектыЭксплуатации(Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"));
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЗарегистрированоВРеестреСистемыПлатон", 
			"ЗарегистрированоВРеестреСистемыПлатон", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ПустаяСсылка")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.РабочийСкот")
			И Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ПродуктивныйСкот");
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмущество", 
			"НедвижимоеИмущество", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ДекорацияОтступНедвижимоеИмущество", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки");
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмущество", 
			"НедвижимоеИмущество", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаСпискаОбъектаЭксплуатации

Процедура ЗаполнитьСведенияВФормеСпискаОС(Форма, Сведения2_4, Сведения2_2) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Форма.ИспользоватьУчет2_4 Тогда
		
		ПредставлениеСведений = Сведения2_4.ПредставлениеСведений;
		
		Если ПредставлениеСведений <> Неопределено Тогда
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияПринятКУчету2, ПредставлениеСведений.СведенияПринятКУчету2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияГруппаОС, Сведения2_4.СведенияГруппаОС);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияКодПоОКОФ, Сведения2_4.СведенияКодПоОКОФ);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияАмортизационнаяГруппа, Сведения2_4.СведенияАмортизационнаяГруппа);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования2, ПредставлениеСведений.СведенияСрокИспользования2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования3, ПредставлениеСведений.СведенияСрокИспользования3);
				
		Иначе
			
			Элементы.СведенияПринятКУчету2.Видимость = Ложь;
			Элементы.СведенияГруппаОС.Видимость = Ложь;
			Элементы.СведенияКодПоОКОФ.Видимость = Ложь;
			Элементы.СведенияАмортизационнаяГруппа.Видимость = Ложь;
			Элементы.СведенияСрокИспользования2.Видимость = Ложь;
			Элементы.СведенияСрокИспользования3.Видимость = Ложь;
			
		КонецЕсли; 
		
	Иначе
		
		Элементы.СтраницыСведения.ТекущаяСтраница = Элементы.СтраницаСведения2_2;
		
		Форма.СведенияТаблицаСумм.Очистить();
		
		Для Каждого ЭлМассива Из Сведения2_2 Цикл
			ЗаполнитьЗначенияСвойств(Форма.СведенияТаблицаСумм.Добавить(), ЭлМассива);
		КонецЦикла;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаНематериальныеАктивы

Процедура НастроитьЗависимыеЭлементыФормы_НематериальныеАктивы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЭтоНМА = Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		Элементы.ВидНМА.Видимость = ЭтоНМА;
		Элементы.АмортизационнаяГруппа.Видимость = ЭтоНМА;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаСпискаНМА

Процедура ЗаполнитьСведенияВФормеСпискаНМА(Форма, Сведения2_4, Сведения2_2) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Форма.ИспользоватьУчет2_4 Тогда
		
		ПредставлениеСведений = Сведения2_4.ПредставлениеСведений;
		
		Если ПредставлениеСведений <> Неопределено Тогда
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияПринятКУчету2, ПредставлениеСведений.СведенияПринятКУчету2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияАмортизационнаяГруппа, Сведения2_4.СведенияАмортизационнаяГруппа);
			
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования2, ПредставлениеСведений.СведенияСрокИспользования2);
				
			ВнеоборотныеАктивыКлиентСервер.ЗаполнитьСведенияЭлемента(
				Элементы.СведенияСрокИспользования3, ПредставлениеСведений.СведенияСрокИспользования3);
				
		Иначе
			
			Элементы.ОбщаяКомандаДокументыПоНематериальномуАктиву.Видимость = Ложь;
			Элементы.СведенияПринятКУчету2.Видимость = Ложь;
			Элементы.СведенияАмортизационнаяГруппа.Видимость = Ложь;
			Элементы.СведенияСрокИспользования2.Видимость = Ложь;
			Элементы.СведенияСрокИспользования3.Видимость = Ложь;
			
		КонецЕсли;
		
	Иначе	
		
		Форма.СведенияТаблицаСумм.Очистить();
		Для Каждого Эл Из Сведения2_2 Цикл
			ЗаполнитьЗначенияСвойств(Форма.СведенияТаблицаСумм.Добавить(), Эл);
		КонецЦикла;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПеремещениеНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПеремещениеНМА(Объект, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ХозяйственнаяОперация =
			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеНМАвПодразделениеВыделенноеНаБаланс");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", "Организация", "ВидимостьЭлемента", Не ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Организация", "ОрганизацияСдатчик", "ВидимостьЭлемента", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучатель", "ОрганизацияПолучатель", "Видимость", ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область МодернизацияОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_МодернизацияОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ВспомогательныеРеквизиты.ЕстьУчетСебестоимости;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
							И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ДоступнаАмортизационнаяПремия = 
			Объект.ОтражатьВРеглУчете
			И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
			И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ВПроцентах", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СпособВводаАмортизационнойПремии_ФиксированнаяСумма", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОСПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ОССуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ДоступнаАмортизационнаяПремия И НЕ Объект.АмортизационнаяПремияУказанаВПроцентах, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
				Объект.ОтражатьВРеглУчете
					И НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости
					И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьПР", 
			"ОССтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьВР", 
			"ОССтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ЗначениеЗаполнено(Объект.ВариантПримененияЦелевогоФинансирования)
				И (Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется"));
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное"));
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
КонецЕсли; 
	
//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_МодернизацияОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ИспользоватьОбъектыСтроительства", Форма.ИспользоватьОбъектыСтроительства);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ОСНЮрЛицо);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_МодернизацияОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяПремияУказанаВПроцентах")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
			ТекстПодсказки = НСтр("ru = 'Процент амортизационной премии указывается в табличном поле ""Основные средства""
			|индивидуально для каждого основного средства.'");
		Иначе
			ТекстПодсказки = НСтр("ru = 'Сумма амортизационной премии указывается в табличном поле ""Основные средства""
			|индивидуально для каждого основного средства.'")
		КонецЕсли; 
		
		Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Подсказка = ТекстПодсказки;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПринятиеКУчетуОС

Процедура ЗаполнитьРеквизитыВзависимостиОтСвойств_ПринятиеКУчетуОС(Объект, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	#Область СтраницаОсновное
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ДокументОснование" Тогда
		Если Действие = "Очистить" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли; 
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантПримененияЦелевогоФинансирования" 
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВариантРаздельногоУчетаНДС"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НалогообложениеНДС"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаУчет
	
	Если ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюБУ"
		ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НачислятьАмортизациюНУ" Тогда
		
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ?(Действие = "Заполнить", Истина, Ложь);
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаБУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	Если ПараметрыРеквизита.ИмяРеквизита = "ПорядокУчетаНУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "МетодНачисленияАмортизацииБУ"
		И Действие = "Заполнить" Тогда
		Объект[ПараметрыРеквизита.ИмяРеквизита] = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный");
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
	КонецЕсли;
	
	//
	Если ПараметрыРеквизита.ИмяРеквизита = "ГрафикАмортизации" Тогда
		Если Действие = "Очистить" Тогда
			Объект[ПараметрыРеквизита.ИмяРеквизита] = Неопределено;
			ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		КонецЕсли; 
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ВключитьАмортизационнуюПремиюВСоставРасходов" Тогда
		Если Действие = "Очистить" Тогда
			Объект.ВключитьАмортизационнуюПремиюВСоставРасходов = Ложь;
			Объект.ПроцентКапитальныхВложенийВключаемыхВРасходыНУ = 0;
			ИзмененныеРеквизиты.Добавить("ВключитьАмортизационнуюПремиюВСоставРасходов");
			ИзмененныеРеквизиты.Добавить("ПроцентКапитальныхВложенийВключаемыхВРасходыНУ");
		КонецЕсли; 
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовБУ" Тогда
		Если Действие = "Очистить" Тогда
			Объект.СтатьяРасходовБУ = Неопределено;
			Объект.АналитикаРасходовБУ = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовНалог" Тогда
		Если Действие = "Очистить" Тогда
			Объект.СтатьяРасходовНалог = Неопределено;
			Объект.АналитикаРасходовНалог = Неопределено;
			ИзмененныеРеквизиты.Добавить("СтатьяРасходовНалог");
			ИзмененныеРеквизиты.Добавить("АналитикаРасходовНалог");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяДоходов" Тогда
		Если Действие = "Очистить" Тогда
			Объект.СтатьяДоходов = Неопределено;
			Объект.АналитикаДоходов = Неопределено;
			ИзмененныеРеквизиты.Добавить("СтатьяДоходов");
			ИзмененныеРеквизиты.Добавить("АналитикаДоходов");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "СтатьяРасходовАмортизационнойПремии" Тогда
		Если Действие = "Очистить" Тогда
			Объект.СтатьяРасходовАмортизационнойПремии = Неопределено;
			Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
			ИзмененныеРеквизиты.Добавить("СтатьяРасходовАмортизационнойПремии");
			ИзмененныеРеквизиты.Добавить("АналитикаРасходовАмортизационнойПремии");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ПередаватьРасходыВДругуюОрганизацию" Тогда
		Если Действие = "Очистить" Тогда
			Объект.ПередаватьРасходыВДругуюОрганизацию = Ложь;
			Объект.ОрганизацияПолучательРасходов = Неопределено;
			ИзмененныеРеквизиты.Добавить("ПередаватьРасходыВДругуюОрганизацию");
			ИзмененныеРеквизиты.Добавить("ОрганизацияПолучательРасходов");
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаЦелевоеФинансирование
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ЦелевоеФинансирование" Тогда
		Если Действие = "Очистить" Тогда
			Объект.ЦелевоеФинансирование.Очистить();
			Объект.СтатьяДоходов = Неопределено;
			Объект.АналитикаДоходов = Неопределено;
			ИзмененныеРеквизиты.Добавить("СтатьяДоходов");
			ИзмененныеРеквизиты.Добавить("АналитикаДоходов");
			ИзмененныеРеквизиты.Добавить("ЦелевоеФинансирование");
		КонецЕсли; 
	КонецЕсли;
	
	Если ПараметрыРеквизита.ИмяРеквизита = "ЦелевоеФинансирование.Сумма" И Действие = "Очистить" Тогда
		Для каждого ДанныеСтроки Из Объект.ЦелевоеФинансирование Цикл
			ДанныеСтроки.Сумма = 0;
		КонецЦикла;
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуОС(Объект, ВспомогательныеРеквизиты, ПараметрыПринятияКУчетуОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга"));

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОС")
							И Объект.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
							И ВспомогательныеРеквизиты.ЕстьУчетСебестоимости);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалогообложениеНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ЗначениеЗаполнено(Объект.ВариантПримененияЦелевогоФинансирования)
				И (Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется"));
				
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСИзДокумента")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
				Объект.ОтражатьВРеглУчете
					И (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации") 
						ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
						ИЛИ Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
						ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
					И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
		ЗначениеСвойства = 
				Объект.ОтражатьВРеглУчете
					И Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") 
					И ВспомогательныеРеквизиты.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи
					И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
					
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки") 
							И Объект.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	#КонецОбласти
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
				И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
				И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
					ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
					
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость",
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ПараметрыПринятияКУчетуОС.ПредопределенныйПорядокУчетаНУ, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
								И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииНУ
								И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
							И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
				И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
				И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
			И ПараметрыПринятияКУчетуОС.ДоступныПараметрыАмортизацииБУ;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГодоваяНормаАмортизацииБУ", 
			"ГодоваяНормаАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
				ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
					И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
					И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСпоИнвентаризации")
							И Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена")
							И Объект.ПорядокУчетаУУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.АмортизацияНачислена"));
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовПоИнвентаризации", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовПоИнвентаризации", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
							И Объект.ВариантПримененияЦелевогоФинансирования <> ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам 
							И Объект.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
							И ВспомогательныеРеквизиты.ИспользоватьРеглУчет;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ВспомогательныеРеквизиты.ИспользоватьРеглУчет
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ Объект.Дата < '201901010000'
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
				ИЛИ Объект.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
							И (ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовБУ 
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовНУ
								ИЛИ ПараметрыПринятияКУчетуОС.ДоступноОтражениеРасходовУУ);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию",
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПередаватьРасходыВДругуюОрганизацию, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЦелевоеФинансирование
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			(Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
				ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное");
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ПринятиеКУчетуНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ПринятиеКУчетуНМА(Объект, ПараметрыПринятияКУчетуНМА, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ДоступноОтражениеРасходовРегл = 
		Объект.ОтражатьВРеглУчете
		И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
		И (Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	ДоступныПараметрыАмортизацииУУ = Объект.ОтражатьВУпрУчете
		И Объект.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
	#Область Основное
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
							И Объект.ОтражатьВРеглУчете
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьБУ", 
			"ПервоначальнаяСтоимостьБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
							И НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
							И ВспомогательныеРеквизиты.ЕстьУчетСебестоимости;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантПримененияЦелевогоФинансирования", 
			"ВариантПримененияЦелевогоФинансирования", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
							И (ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
								ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
							И (ПараметрыПринятияКУчетуНМА.ПоИнвентаризации 
								ИЛИ НЕ ВспомогательныеРеквизиты.ЕстьУчетСебестоимости)
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
							И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьВР", 
			"ПервоначальнаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		Или СтруктураИзмененныхРеквизитов.Свойство("НалогообложениеНДС")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВариантРаздельногоУчетаНДС =
			ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И Не ЗначениеЗаполнено(Объект.НалогообложениеНДС);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументНаОсновании", 
			"ДокументНаОсновании",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументОснование", 
			"ДокументОснование",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВидОбъектаУчета",
			"ВидимостьЭлемента", 
			НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаБУ", 
			"ПорядокУчетаБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
							И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииБУ", 
			"МетодНачисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.Линейный")
				Или Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ",
			"СрокИспользованияБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка")
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентБУ", 
			"КоэффициентБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВариантРаздельногоУчетаНДС", 
			"ВариантРаздельногоУчетаНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НалогообложениеНДС", 
			"Видимость",
			ВспомогательныеРеквизиты.РаздельныйУчетТоваров,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ОтражатьВРеглУчете 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУ")
		Или СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ОтражатьВУпрУчете И НЕ ДоступноОтражениеРасходовРегл);
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовУУ", 
			"СтатьяРасходовУУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
			И НЕ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации
			И Объект.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование.Сумма", 
			"ЦелевоеФинансированиеСумма", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовБУ", 
			"СтатьяРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовБУ", 
			"АналитикаРасходовБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ПередаватьРасходыВДругуюОрганизацию;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Доступность", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотр", 
			Не ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовПоИнвентаризации",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовПоИнвентаризации",
			"Видимость", 
			ПараметрыПринятияКУчетуНМА.ПоИнвентаризации, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
						ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное")
						ИЛИ ПараметрыПринятияКУчетуНМА.ПоИнвентаризации);

		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"",
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЦелевоеФинансирование
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантПримененияЦелевогоФинансирования") 
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное")
							ИЛИ Объект.ВариантПримененияЦелевогоФинансирования = ПредопределенноеЗначение("Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное"));
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СтатьяДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"АналитикаДоходовЦФ", 
			"ВидимостьЭлемента", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ЦелевоеФинансирование", 
			"ЦелевоеФинансирование", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПараметровОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Учет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ",
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУ", 
			"НачислятьАмортизациюБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА,
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюБУФлаг", 
			"НачислятьАмортизациюБУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУ", 
			"СрокИспользованияБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияБУФлаг", 
			"СрокИспользованияБУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"",
			"СрокИспользованияБУРасшифровка", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентАмортизацииБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"ТолькоПросмотр", 
			НЕ Объект.КоэффициентАмортизацииБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ", 
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУФлаг", 
			"КоэффициентАмортизацииБУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"ТолькоПросмотр", 
			НЕ Объект.ГрафикАмортизацииФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизацииФлаг", 
			"ГрафикАмортизацииФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("КоэффициентУскоренияБУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"ТолькоПросмотр", 
			НЕ Объект.КоэффициентУскоренияБУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУ", 
			"КоэффициентУскоренияБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА,
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентУскоренияБУФлаг", 
			"КоэффициентУскоренияБУФлаг", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.НачислятьАмортизациюНУФлаг, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
						И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
						И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУФлаг", 
			"НачислятьАмортизациюНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.СрокИспользованияНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
						И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
						И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
						
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУФлаг", 
			"СрокИспользованияНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СпециальныйКоэффициентНУФлаг")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"ТолькоПросмотр", 
			НЕ Объект.СпециальныйКоэффициентНУФлаг, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
						И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
						И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
						
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУФлаг", 
			"СпециальныйКоэффициентНУФлаг", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область АмортизационнаяПремия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражениеАмортизационнойПремииФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяПремия", "АмортизационнаяПремия", "ТолькоПросмотрБезОтметкиНезаполненного", НЕ Объект.ОтражениеАмортизационнойПремииФлаг, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры
 
Процедура ДополнитьВспомогательныеРеквизиты_ИзменениеПараметровОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ВспомогательныеРеквизиты.Вставить("ЕстьСвязанныеОрганизации", Форма.ЕстьСвязанныеОрганизации);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_ИзменениеПараметровОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	#Область Учет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюБУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.НачислятьАмортизациюБУФлаг Тогда
			Элементы.НачислятьАмортизациюБУ.ФорматРедактирования = "БЛ=Остановлено; БИ=Действует";
		Иначе
			Элементы.НачислятьАмортизациюБУ.ФорматРедактирования = "БЛ=; БИ=Действует";
		КонецЕсли; 
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизациюНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.НачислятьАмортизациюНУФлаг Тогда
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = "БЛ=Остановлено; БИ=Действует";
		Иначе
			Элементы.НачислятьАмортизациюНУ.ФорматРедактирования = "БЛ=; БИ=Действует";
		КонецЕсли; 
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГрафикАмортизацииФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Если Объект.ГрафикАмортизацииФлаг Тогда
			Элементы.ГрафикАмортизации.ПодсказкаВвода = НСтр("ru = '<без графика>'");
		Иначе
			Элементы.ГрафикАмортизации.ПодсказкаВвода = "";
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияБУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияБУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Объект.СрокИспользованияБУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУФлаг")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.РасшифровкаСрокаПолезногоИспользования(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ГруппаПараметрыУУ.ОтображатьЗаголовок = (Объект.ОтражатьВРеглУчете И Форма.ВедетсяРегламентированныйУчетВНА);
		Элементы.ГруппаОбщее.ОтображатьЗаголовок = (Объект.ОтражатьВРеглУчете И Форма.ВедетсяРегламентированныйУчетВНА);
	КонецЕсли;
	
	#КонецОбласти
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ДокументОснование")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.АмортизационнаяПремия.Видимость = Форма.ВключитьАмортизационнуюПремиюВСоставРасходов;
		Элементы.ОтражениеАмортизационнойПремииФлаг.Видимость = Форма.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура УстановитьВидимостьТекущихЗначений_ИзменениеПараметровОС(Форма, КоличествоСвойствУУ, КоличествоСвойствОбщ, КоличествоСвойствЛокализация, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СвойстваБУ  = Новый Структура("КоэффициентУскоренияБУ,ГрафикАмортизации,КоэффициентАмортизацииБУ,СрокИспользованияБУ,НачислятьАмортизациюБУ");
	СвойстваНУ  = Новый Структура("СпециальныйКоэффициентНУ,СрокИспользованияНУ,НачислятьАмортизациюНУ");
	
	КоличествоСвойствБУ = 0;
	КоличествоСвойствНУ = 0;
	
	Для каждого КлючИЗначение Из СвойстваБУ Цикл
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметра_ИзменениеПараметровОС(
			Форма, КлючИЗначение.Ключ, СтруктураИзмененныхРеквизитов);
		КоличествоСвойствБУ = КоличествоСвойствБУ + ?(Объект[КлючИЗначение.Ключ + "Флаг"], 1, 0);
	КонецЦикла;
	Для каждого КлючИЗначение Из СвойстваНУ Цикл
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьТекущегоЗначенияПараметра_ИзменениеПараметровОС(
			Форма, КлючИЗначение.Ключ, СтруктураИзмененныхРеквизитов);
		КоличествоСвойствНУ = КоличествоСвойствНУ + ?(Объект[КлючИЗначение.Ключ + "Флаг"], 1, 0);
	КонецЦикла;
	
	Если Форма.ПоказатьТекущиеЗначения Тогда
		
		ОтображатьВШапке = КоличествоСвойствНУ <> 0 ИЛИ КоличествоСвойствУУ <> 0 ИЛИ КоличествоСвойствОбщ <> 0;
		Если Элементы.ОСГруппаБУ.ОтображатьВШапке <> ОтображатьВШапке Тогда
			Элементы.ОСГруппаБУ.ОтображатьВШапке = ОтображатьВШапке;
		КонецЕсли;
		
		ОтображатьВШапке = КоличествоСвойствБУ <> 0 ИЛИ КоличествоСвойствУУ <> 0 ИЛИ КоличествоСвойствОбщ <> 0;
		Если Элементы.ОСГруппаНУ.ОтображатьВШапке <> ОтображатьВШапке Тогда
			Элементы.ОСГруппаНУ.ОтображатьВШапке = ОтображатьВШапке;
		КонецЕсли;
		
	КонецЕсли;
	
	КоличествоСвойствЛокализация = КоличествоСвойствБУ + КоличествоСвойствНУ;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПараметровНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеПараметровНМА(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	#Область НУ
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И Объект.ЧастичнаяЛиквидация И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияНУ", 
			"ОССуммаСписанияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияПР", 
			"ОССуммаСписанияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СуммаСписанияВР", 
			"ОССуммаСписанияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_СписаниеОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_СписаниеОС(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = (СтруктураИзмененныхРеквизитов.Количество() = 0);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСГруппаЧастичнойЛиквидации.Видимость = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ЧастичнаяЛиквидация
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		Если НЕ Объект.ОтражатьВРеглУчете 
			ИЛИ НЕ Объект.ЧастичнаяЛиквидация Тогда
			
			Элементы.ОССуммаСписанияБУ.Видимость = Ложь;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		ИначеЕсли ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль Тогда
			
			Элементы.ОССуммаСписанияБУ.Видимость = Ложь;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Истина;
			
		ИначеЕсли ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			Элементы.ОССуммаСписанияБУ.Видимость = Истина;
			Элементы.ОССуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеНМА

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_СписаниеНМА(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		Или СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация")
		Или ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ОтражатьВРеглУчете И Объект.ЧастичнаяЛиквидация);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияБУ", 
			"НМАСуммаСписанияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете И Объект.ЧастичнаяЛиквидация И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияНУ", 
			"НМАСуммаСписанияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияПР", 
			"НМАСуммаСписанияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НМА.СуммаСписанияВР", 
			"НМАСуммаСписанияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_СписаниеНМА(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_СписаниеНМА(Форма, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = (СтруктураИзмененныхРеквизитов.Количество() = 0);
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете
							И ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов")
							И Форма.ВедетсяРегламентированныйУчетВНА;

		Элементы.ГруппаОтражениеВРеглУчете.Видимость = ЗначениеСвойства;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЧастичнаяЛиквидация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаРеглУчет.Видимость = 
			Объект.ОтражатьВРеглУчете 
			И Объект.ЧастичнаяЛиквидация
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		Если НЕ Объект.ОтражатьВРеглУчете 
			ИЛИ НЕ Объект.ЧастичнаяЛиквидация Тогда
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Ложь;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		ИначеЕсли ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль Тогда
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Ложь;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Истина;
			
		ИначеЕсли ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА Тогда
			
			Элементы.НМАСуммаСписанияБУ.Видимость = Истина;
			Элементы.НМАСуммаСписанияБУ_Расширенная.Видимость = Ложь;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область РазукомплектацияОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_РазукомплектацияОС(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьБУ", 
			"ОССтоимостьБУ", 
			"Видимость", 
			Объект.ОтражатьВРеглУчете, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ОтражатьВРеглУчете 
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
							И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц
							И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьПР", 
			"ОССтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьВР", 
			"ОССтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_РазукомплектацияОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОССтоимостьБУ_Расширенная.Видимость = Объект.ОтражатьВРеглУчете И Форма.ПлательщикНалогаНаПрибыль И Форма.ВедетсяРегламентированныйУчетВНА;
		Элементы.ОССтоимостьБУ.Видимость = Объект.ОтражатьВРеглУчете И НЕ Форма.ПлательщикНалогаНаПрибыль;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_РазукомплектацияОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", Форма.ВедетсяУчетПостоянныхИВременныхРазниц);
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область РеализацияУслугПрочихАктивов

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_РеализацияУслугПрочихАктивов(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
							
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"РеализацияВзаимозависимомуЛицу", 
			"РеализацияВзаимозависимомуЛицу", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РеализацияВзаимозависимомуЛицу")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Партнер")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Контрагент")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И Объект.РеализацияВзаимозависимомуЛицу;
								
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.ВосстановитьАмортизационнуюПремию", 
			"РасходыВосстановитьАмортизационнуюПремию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СуммаАмортизационнойПремии", 
			"РасходыСуммаАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.СтатьяДоходов", 
			"РасходыСтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Расходы.АналитикаДоходов", 
			"РасходыАналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_РеализацияУслугПрочихАктивов(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.ПлательщикНалогаНаПрибыль);
	//-- Локализация
	
КонецПроцедуры
 
Процедура ПриИзмененииРеквизитов_РеализацияУслугПрочихАктивов(Форма, ИзмененныеРеквизиты) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если Объект.РеализацияВзаимозависимомуЛицу
		И (НЕ Форма.ПлательщикНалогаНаПрибыль 
		ИЛИ Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
		И Объект.ХозяйственнаяОперация <> ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав")) Тогда
		
		Объект.РеализацияВзаимозависимомуЛицу = Ложь;
		ИзмененныеРеквизиты = ИзмененныеРеквизиты + ",РеализацияВзаимозависимомуЛицу";
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_РеализацияУслугПрочихАктивов(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("РеализацияВзаимозависимомуЛицу")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Партнер")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Контрагент")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Соглашение")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов")
								ИЛИ Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав"))
							И Объект.РеализацияВзаимозависимомуЛицу;
							
		Элементы.РасходыЗаполнитьВосстановлениеАмортизационнойПремии.Видимость = ЗначениеСвойства;
		Элементы.РасходыЗаполнитьСтатьюАмортизационнойПремии.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

//++ Локализация

#Область Инвентаризация

Функция ЗначенияСвойствЗависимыхРеквизитов_ИнвентаризацияОС(Объект, ИзмененныеРеквизиты = "") Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияОС");
										
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.МОЛ", 
			"ОСМОЛ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.Действие", 
			"ОСДействие", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Возврат ПараметрыРеквизитовОбъекта;

КонецФункции
 
Функция ЗаполнитьДействиеНаОснованииИнвентаризацииОС(ДанныеСтроки, Организация, Подразделение, ИспользуетсяВНА24) Экспорт
	
	ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");

	Если ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету") Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету")
		И ДанныеСтроки.ПолученоВАренду Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ВыбытиеАрендованныхОС");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.СтоимостьПоДаннымУчета <> ДанныеСтроки.СтоимостьФактическая
		И ДанныеСтроки.СтоимостьФактическая <> 0 Тогда
		
		ДанныеСтроки.Действие = ?(ИспользуетсяВНА24, 
								ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Переоценка"),
								ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание"));
		
	ИначеЕсли НЕ ДанныеСтроки.НаличиеПоДаннымУчета Тогда
		
		Если ДанныеСтроки.НаличиеФактическое
			И (ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.НеПринятоКУчету")
				ИЛИ ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.СнятоСУчета")
				ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.Состояние)) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету");
			
		ИначеЕсли ДанныеСтроки.НаличиеФактическое
			И ДанныеСтроки.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")
			И (ДанныеСтроки.ОрганизацияПоДаннымУчета <> Организация
				ИЛИ ДанныеСтроки.ПодразделениеПоДаннымУчета <> Подразделение
				ИЛИ ДанныеСтроки.МОЛПоДаннымУчета <> ДанныеСтроки.МОЛ
					И ЗначениеЗаполнено(ДанныеСтроки.МОЛ)) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Перемещение");
			
		КонецЕсли;
		
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьДанныеУчетаВСтрокеИнвентаризацииОС(ДанныеСтроки, ДанныеУчета, Организация, Подразделение, ЭтоЧтениеОбъекта, ЗаполнитьСлужебныеРеквизиты, ИспользуетсяУправлениеВНА_2_4) Экспорт

	Если ДанныеУчета <> Неопределено Тогда
		
		Если НЕ ЭтоЧтениеОбъекта Тогда
			
			Если ДанныеУчета.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияНезавершенногоСтроительства") Тогда
				ДанныеСтроки.НаличиеПоДаннымУчета = Истина;
			ИначеЕсли ДанныеУчета.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ИнвентаризацияВложенийВОС") Тогда
				ДанныеСтроки.НаличиеПоДаннымУчета = Истина;
			Иначе
				ДанныеСтроки.НаличиеПоДаннымУчета = 
					(ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКУчету")
						ИЛИ ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету"))
					И ДанныеУчета.ОрганизацияПоДаннымУчета = Организация
					И ДанныеУчета.ПодразделениеПоДаннымУчета = Подразделение
					И (ДанныеУчета.МОЛПоДаннымУчета = ДанныеСтроки.МОЛ
						ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.МОЛ));
			КонецЕсли; 
			
			Если ДанныеСтроки.НаличиеПоДаннымУчета Тогда
				ДанныеСтроки.СтоимостьПоДаннымУчета = ДанныеУчета.СтоимостьПоДаннымУчета;
			Иначе
				ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
			КонецЕсли;
			
			ЗаполнитьРассчитываемыеПоляИнвентаризации(ДанныеСтроки);
			
		КонецЕсли; 
		
		Если ЗаполнитьСлужебныеРеквизиты Тогда
			ДанныеСтроки.ОрганизацияПоДаннымУчета = ДанныеУчета.ОрганизацияПоДаннымУчета;
			ДанныеСтроки.ПодразделениеПоДаннымУчета = ДанныеУчета.ПодразделениеПоДаннымУчета;
			ДанныеСтроки.МОЛПоДаннымУчета = ДанныеУчета.МОЛПоДаннымУчета;
			ДанныеСтроки.ОрганизацииВзаимосвязаны = ДанныеУчета.ОрганизацииВзаимосвязаны;
			ДанныеСтроки.ПолученоВАренду = ДанныеУчета.ПолученоВАренду;
			ДанныеСтроки.Состояние = ДанныеУчета.Состояние;
			ДанныеСтроки.ИнвентарныйНомер = ДанныеУчета.ИнвентарныйНомер;
			ДанныеСтроки.Код = ДанныеУчета.Код;
		КонецЕсли; 
		
	Иначе
		
		Если НЕ ЭтоЧтениеОбъекта Тогда
			ДанныеСтроки.НаличиеПоДаннымУчета = Ложь;
			ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
		КонецЕсли; 
		
		Если ЗаполнитьСлужебныеРеквизиты Тогда
			ДанныеСтроки.ОрганизацияПоДаннымУчета = Неопределено;
			ДанныеСтроки.ПодразделениеПоДаннымУчета = Неопределено;
			ДанныеСтроки.МОЛПоДаннымУчета = Неопределено;
			ДанныеСтроки.ОрганизацииВзаимосвязаны = Ложь;
			ДанныеСтроки.ПолученоВАренду = Ложь;
			ДанныеСтроки.Состояние = Неопределено;
			ДанныеСтроки.ИнвентарныйНомер = "";
			ДанныеСтроки.Код = "";
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если НЕ ЭтоЧтениеОбъекта Тогда
		
		ЗаполнитьДействиеНаОснованииИнвентаризацииОС(
			ДанныеСтроки, 
			Организация, 
			Подразделение,
			ИспользуетсяУправлениеВНА_2_4);
			
	КонецЕсли; 
	
КонецПроцедуры
 
Функция ЗаполнитьДействиеНаОснованииИнвентаризацииНМА(ДанныеСтроки, ДанныеУчета, Организация, Подразделение) Экспорт
	
	ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");

	Если ДанныеУчета = Неопределено Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПустаяСсылка");
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета 
		И НЕ ДанныеСтроки.НаличиеФактическое
		И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.ПринятКУчету") Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Списание");
		
	ИначеЕсли НЕ ДанныеСтроки.НаличиеПоДаннымУчета Тогда
		
		Если ДанныеСтроки.НаличиеФактическое
			И (ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.НеПринятКУчету")
				ИЛИ ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.Списан")) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.ПринятиеКУчету");
			
		ИначеЕсли ДанныеСтроки.НаличиеФактическое
			И ДанныеУчета.Состояние = ПредопределенноеЗначение("Перечисление.ВидыСостоянийНМА.ПринятКУчету")
			И (ДанныеУчета.Организация <> Организация
				ИЛИ ДанныеУчета.Подразделение <> Подразделение) Тогда
			
			ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Перемещение");
			
		КонецЕсли;
		
	ИначеЕсли ДанныеСтроки.НаличиеПоДаннымУчета
		И ДанныеСтроки.НаличиеФактическое
		И ДанныеСтроки.СтоимостьПоДаннымУчета <> ДанныеСтроки.СтоимостьФактическая Тогда
		
		ДанныеСтроки.Действие = ПредопределенноеЗначение("Перечисление.ДействияНаОснованииИнвентаризации.Переоценка");
		
	КонецЕсли;

КонецФункции

Процедура ЗаполнитьСтрокуИнвентаризацииНМАПоДаннымУчета(ДанныеСтроки, ДанныеУчета) Экспорт

	Если ДанныеУчета <> Неопределено Тогда
		
		ДанныеСтроки.НаличиеПоДаннымУчета = ДанныеУчета.НаличиеПоДаннымУчета;
		Если ДанныеСтроки.НаличиеПоДаннымУчета Тогда
			ДанныеСтроки.СтоимостьПоДаннымУчета = ДанныеУчета.СтоимостьПоДаннымУчета;
		Иначе
			ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
		КонецЕсли;
		
	Иначе
		ДанныеСтроки.НаличиеПоДаннымУчета = Ложь;
		ДанныеСтроки.СтоимостьПоДаннымУчета = 0;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьРассчитываемыеПоляИнвентаризации(ДанныеСтроки) Экспорт
	
	РазницаПоСтоимости = ДанныеСтроки.СтоимостьФактическая - ДанныеСтроки.СтоимостьПоДаннымУчета;

	ДанныеСтроки.ИзлишекСумма = ?(РазницаПоСтоимости > 0, РазницаПоСтоимости, 0);
	ДанныеСтроки.НедостачаСумма = ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);

КонецПроцедуры

#КонецОбласти

//-- Локализация

#Область Прочее

Процедура ДополнитьИзменяемыеРеквизиты_ИзменениеПараметровНМА(ИзменяемыеРеквизиты) Экспорт

	//++ Локализация
	
	ИзменяемыеРеквизитыЛокализация = Новый Структура("НачислятьАмортизациюНУ,СпециальныйКоэффициентНУ");
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ИзменяемыеРеквизиты, ИзменяемыеРеквизитыЛокализация);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
