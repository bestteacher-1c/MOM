////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Разукомплектация ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	Движения = Объект.Движения;
	ДополнительныеСвойства = Объект.ДополнительныеСвойства;
	
	//++ Локализация
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Объект, ДополнительныеСвойства, Движения, Отказ);
	
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
		
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	
	Если Не Отказ И Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьРеквизитыОСПриПроведении(Объект, Отказ);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.<Имя документа> - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область ВыделениеСтоимости
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение стоимости ОС (Дт СчетУчетаСтоимости :: Кт СчетУчетаСтоимости)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Арендатор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУ КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.ОсновноеСредство КАК СубконтоКт1,
	|	Строки.Арендатор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУ КАК СуммаНУКт,
	|	Строки.СтоимостьПР КАК СуммаПРКт,
	|	Строки.СтоимостьВР КАК СуммаВРКт,
	|	""Выделение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьНУ <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыделениеСтоимостиЦФ_Дт_СчетУчетаСтоимости_ЦФ__Кт_СчетУчетаСтоимости_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение стоимости ОС (Дт СчетУчетаСтоимости_ЦФ :: Кт СчетУчетаСтоимости_ЦФ)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУДт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРДт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ КАК СуммаНУКт,
	|	Строки.СтоимостьПРЦФ КАК СуммаПРКт,
	|	Строки.СтоимостьВРЦФ КАК СуммаВРКт,
	|	""Выделение стоимости ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И (Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеАмортизации_Дт_СчетУчетаАмортизации__Кт_СчетУчетаАмортизации
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС (Дт СчетУчетаАмортизации :: Кт СчетУчетаАмортизации)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияРегл 
	|	КОНЕЦ КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияНУ 
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияПР 
	|	КОНЕЦ КАК СуммаПРКт,
	|	ВЫБОР КОГДА Строки.НачислятьИзнос ТОГДА 0 
	|		ИНАЧЕ Строки.АмортизацияВР 
	|	КОНЕЦ КАК СуммаВРКт,
	|	""Выделение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Строки.Амортизация <> 0
	|		ИЛИ НЕ Строки.НачислятьИзнос 
	|			И (Строки.АмортизацияРегл <> 0
	|				ИЛИ Строки.АмортизацияНУ <> 0
	|				ИЛИ Строки.АмортизацияПР <> 0
	|				ИЛИ Строки.АмортизацияВР <> 0))";

	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыделениеАмортизацииЦФ_Дт_СчетУчетаАмортизации_ЦФ__Кт_СчетУчетаАмортизации_ЦФ
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС (Дт СчетУчетаАмортизации_ЦФ :: Кт СчетУчетаАмортизации_ЦФ) за счет целевого финансирования
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУДт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРДт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.АмортизацияНУЦФ КАК СуммаНУКт,
	|	Строки.АмортизацияПРЦФ КАК СуммаПРКт,
	|	Строки.АмортизацияВРЦФ КАК СуммаВРКт,
	|	""Выделение амортизации ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ Строки.НачислятьИзнос
	|	И (Строки.АмортизацияЦФ <> 0
	|		ИЛИ Строки.АмортизацияНУЦФ <> 0
	|		ИЛИ Строки.АмортизацияПРЦФ <> 0
	|		ИЛИ Строки.АмортизацияВРЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ВыделениеИзносаИсходящиеДвижения // Дт  :: Кт 010
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС исходящие проводки (Дт  :: Кт 010)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выделение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Строки.НачислятьИзнос
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеИзносаВходящиеДвижения // Дт 010 :: Кт
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение амортизации ОС исходящие проводки (Дт 010 :: Кт)
	|ВЫБРАТЬ
	|
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл + Строки.АмортизацияЦФ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение накопленного износа ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК Строки
	|	ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Строки.НачислятьИзнос
	|	И (Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияЦФ <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеРезерваДоценки // (Дт 83.01 :: Кт 83.01)
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение резерва доценки (Дт 83.01 :: Кт 83.01)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР 
	|		КОГДА Строки.РезервПереоценкиСтоимостиРегл > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимостиРегл - ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизацииРегл, 0)
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР 
	|		КОГДА Строки.РезервПереоценкиСтоимости > 0
	|			ТОГДА Строки.РезервПереоценкиСтоимости - ЕСТЬNULL(АмортизацияОС.РезервПереоценкиАмортизации, 0)
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДоОценкиВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Выделение резерва дооценки"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|	ПО АмортизацияОС.Регистратор = Строки.Регистратор
	|		И АмортизацияОС.ОсновноеСредство = Строки.ОсновноеСредство
	|		И (АмортизацияОС.РезервПереоценкиАмортизацииРегл > 0
	|			ИЛИ АмортизацияОС.РезервПереоценкиАмортизации > 0)
	|ГДЕ
	|	Строки.РезервПереоценкиСтоимостиРегл > 0
	|		ИЛИ Строки.РезервПереоценкиСтоимости > 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ВыделениеДоходыОтЦелевогоФинансирования // Дт 98 :: Кт 98
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Выделение доходов от целевого финансирования (Дт 98 :: Кт 98)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Операция.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьНУЦФ + Строки.СтоимостьПРЦФ + Строки.СтоимостьВРЦФ - ЕСТЬNULL(СтрокиАмортизация.АмортизацияЦФ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Выделение доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|	ПО ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АмортизацияОС КАК СтрокиАмортизация
	|	ПО СтрокиАмортизация.Регистратор = Строки.Регистратор
	|		И СтрокиАмортизация.ОсновноеСредство = Строки.ОсновноеСредство
	|		И СтрокиАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|ГДЕ
	|	(Строки.СтоимостьЦФ <> 0
	|		ИЛИ Строки.СтоимостьНУЦФ <> 0
	|		ИЛИ Строки.СтоимостьПРЦФ <> 0
	|		ИЛИ Строки.СтоимостьВРЦФ <> 0)";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	Возврат "";
	
	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

Процедура ТаблицыОтложенногоФормированияДвижений(Запрос, ТекстыЗапроса) Экспорт

	//++ Локализация
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(Запрос, ТекстыЗапроса, Неопределено);
	//-- Локализация
	
КонецПроцедуры
 
// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСобытияОСОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Функция ШаблонСообщенияПроверкиОС(РезультатПроверки) Экспорт

	ШаблонСообщения = Неопределено;
	
	//++ Локализация
	
	Если РезультатПроверки.ОтличаетсяГруппаОС 
		И РезультатПроверки.ОтличаетсяАмортизационнаяГруппа
		И НЕ РезультатПроверки.ОтличаетсяНаправлениеДеятельности Тогда
		
		ШаблонСообщения = НСтр("ru = 'У принимаемого к учету основного средства ""%1"" должна быть аналогичная группа ОС и амортизационная группа'");
		
	ИначеЕсли РезультатПроверки.ОтличаетсяАмортизационнаяГруппа
		И НЕ РезультатПроверки.ОтличаетсяГруппаОС
		И НЕ РезультатПроверки.ОтличаетсяНаправлениеДеятельности Тогда
		
		ШаблонСообщения = НСтр("ru = 'У принимаемого к учету основного средства ""%1"" должна быть аналогичная амортизационная группа'");
		
	ИначеЕсли РезультатПроверки.ОтличаетсяНаправлениеДеятельности
		И НЕ РезультатПроверки.ОтличаетсяГруппаОС
		И НЕ РезультатПроверки.ОтличаетсяАмортизационнаяГруппа Тогда
		
		ШаблонСообщения = НСтр("ru = 'У принимаемого к учету основного средства ""%1"" должно быть аналогичное направление деятельности'");
		
	Иначе
		ШаблонСообщения = НСтр("ru = 'У принимаемого к учету основного средства ""%1"" должна быть аналогичная группа ОС, амортизационная группа и направление деятельности'");
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ШаблонСообщения;
	
КонецФункции

Процедура ПроверитьСтрокуТЧ(ДанныеСтроки, Объект, ВспомогательныеРеквизиты, Отказ) Экспорт

	//++ Локализация
	
	Если ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль Тогда
		ШаблонСообщенияСтоимостьРегл = НСтр("ru = 'Для основного средства ""%1"" необходимо указать стоимость в регламентированном учете'");
	Иначе
		ШаблонСообщенияСтоимостьРегл = НСтр("ru = 'Для основного средства ""%1"" необходимо указать стоимость в бухгалтерском учете'");
	КонецЕсли;
	
	Если Объект.ОтражатьВРеглУчете Тогда
		Если ДанныеСтроки.СтоимостьБУ = 0 
			И ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА
			И (ДанныеСтроки.СтоимостьНУ = 0 ИЛИ НЕ ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль) Тогда
				
			ТекстСообщения = СтрШаблон(ШаблонСообщенияСтоимостьРегл, ДанныеСтроки.ОсновноеСредство);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОС", ДанныеСтроки.НомерСтроки, "ОсновноеСредство");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, Поле, "", Отказ);
		КонецЕсли; 
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаДокумента

Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	
	Форма.ГруппаОС = Перечисления.ГруппыОС.ПустаяСсылка();
	Форма.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(Объект.ОсновноеСредство) Тогда
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ОсновноеСредство, "ГруппаОС,АмортизационнаяГруппа");
		Если ЗначенияРеквизитов <> Неопределено Тогда
			Форма.ГруппаОС = ЗначенияРеквизитов.ГруппаОС;
			Форма.АмортизационнаяГруппа = ЗначенияРеквизитов.АмортизационнаяГруппа;
		КонецЕсли; 
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры
 
Функция ТекстЗапросаДляПроверкиОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.ГруппаОС КАК ГруппаОС,
	|	ОбъектыЭксплуатации.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ОбъектыЭксплуатации.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ОбъектыЭксплуатации.ГруппаОС <> ИсходныйОС.ГруппаОС
	|		И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка) КАК ОтличаетсяГруппаОС,
	|
	|	ОбъектыЭксплуатации.АмортизационнаяГруппа <> ИсходныйОС.АмортизационнаяГруппа
	|		И ОбъектыЭксплуатации.АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка) КАК ОтличаетсяАмортизационнаяГруппа,
	|
	|	ОбъектыЭксплуатации.НаправлениеДеятельности <> ИсходныйОС.НаправлениеДеятельности КАК ОтличаетсяНаправлениеДеятельности
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ИсходныйОС
	|		ПО (ИсходныйОС.Ссылка = &ОсновноеСредство)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&СписокОС)
	|	И (ОбъектыЭксплуатации.ГруппаОС <> ИсходныйОС.ГруппаОС 
	|					И ОбъектыЭксплуатации.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			ИЛИ ОбъектыЭксплуатации.АмортизационнаяГруппа <> ИсходныйОС.АмортизационнаяГруппа 
	|					И ОбъектыЭксплуатации.АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)
	|			ИЛИ ОбъектыЭксплуатации.НаправлениеДеятельности <> ИсходныйОС.НаправлениеДеятельности)";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ДополнитьРезультатПроверкиОС(Выборка, ВыборкаОС, РезультатПроверки) Экспорт

	//++ Локализация
	
	ОтличаетсяГруппаОС = Ложь;
	ОтличаетсяАмортизационнаяГруппа = Ложь;
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		ОтличаетсяГруппаОС = ОтличаетсяГруппаОС ИЛИ Выборка.ОтличаетсяГруппаОС;
		ОтличаетсяАмортизационнаяГруппа = ОтличаетсяАмортизационнаяГруппа ИЛИ Выборка.ОтличаетсяАмортизационнаяГруппа;
	КонецЦикла;
	
	РезультатПроверки.Вставить("ГруппаОС", ВыборкаОС.ГруппаОС);
	РезультатПроверки.Вставить("АмортизационнаяГруппа", ВыборкаОС.АмортизационнаяГруппа);
	РезультатПроверки.Вставить("ОтличаетсяАмортизационнаяГруппа", ОтличаетсяАмортизационнаяГруппа);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьСлужебныеПараметрыФормы(СлужебныеПараметры) Экспорт

	//++ Локализация
	
	СлужебныеПараметры.ПроверяемыеРеквизиты = 
		СлужебныеПараметры.ПроверяемыеРеквизиты
		+ ",ГруппаОС,АмортизационнаяГруппа";
		
	СлужебныеПараметры.Вставить("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
	СлужебныеПараметры.Вставить("АмортизационнаяГруппа", Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		Форма.ВедетсяУчетПостоянныхИВременныхРазниц =
			УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата));
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц",
		УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, Объект.Дата));
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

Процедура ЗаполнитьРеквизитыОСПриПроведении(Объект, Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.ОсновноеСредство) Тогда
		Возврат;
	КонецЕсли; 
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыЭксплуатации");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ОсновноеСредство");
	ЭлементБлокировки.ИсточникДанных = Объект.ОС;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыЭксплуатации");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Объект.ОсновноеСредство);
	
	Блокировка.Заблокировать();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыЭксплуатации.Ссылка КАК Ссылка,
	|	ИсходныйОС.ГруппаОС КАК ГруппаОС,
	|	ИсходныйОС.АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ИсходныйОС
	|		ПО (ИсходныйОС.Ссылка = &ОсновноеСредство)
	|ГДЕ
	|	ОбъектыЭксплуатации.Ссылка В(&ОбъектыЭксплуатации)
	|	И (ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|			ИЛИ ОбъектыЭксплуатации.АмортизационнаяГруппа = ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбъектыЭксплуатации", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ОсновноеСредство", Объект.ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектСправочника = Выборка.Ссылка.ПолучитьОбъект();
		Если Не ЗначениеЗаполнено(ОбъектСправочника.ГруппаОС) Тогда
			ОбъектСправочника.ГруппаОС = Выборка.ГруппаОС;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОбъектСправочника.АмортизационнаяГруппа) Тогда
			ОбъектСправочника.АмортизационнаяГруппа = Выборка.АмортизационнаяГруппа;
		КонецЕсли;
		Если ОбъектСправочника.Модифицированность() Тогда
			ОбъектСправочника.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаВтТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, "Документ.РазукомплектацияОС");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)       КАК Состояние,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюБУ                КАК НачислятьАмортизациюБУ,
	|	ПорядокУчетаОСБУ.НачислятьАмортизациюНУ                КАК НачислятьАмортизациюНУ,
	|	ПорядокУчетаОСБУ.СтатьяРасходов                        КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходов                     КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию   КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов         КАК ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходов               КАК СпособОтраженияРасходов,
	|	ПорядокУчетаОСБУ.НалогообложениеНДС                    КАК НалогообложениеНДС
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = &ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыАмортизацииОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаПустаяТаблицаСтоимостьВНА(ТекстыЗапроса, Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ               КАК КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения                   КАК КоэффициентУскорения,
	|
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации    КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации  КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизации
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|						ТОГДА 0
	|					ИНАЧЕ ТаблицаРегистра.СтоимостьДляВычисленияАмортизации 
	|							* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаОС.СтоимостьБУ
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|
	// СтоимостьДляВычисленияАмортизацииЦФ
	|	ВЫБОР 
	|		КОГДА ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|			ТОГДА 0
	|		КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|						ТОГДА 0
	|					ИНАЧЕ ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ 
	|							* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаОС.СтоимостьБУ * ЕСТЬNULL(ВТ_СтоимостьВНА.ДоляЦФБУ, 0)
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	ТаблицаОС.СтоимостьПР КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО ВТ_СтоимостьВНА.ОбъектУчета = &ОсновноеСредство
	|			И ВТ_СтоимостьВНА.Ссылка = &Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	&ОсновноеСредство                                      КАК ОсновноеСредство,
	|	ТаблицаРегистра.ДатаПоследнегоИзменения                КАК ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ           КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ           КАК СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ               КАК КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения                   КАК КоэффициентУскорения,
	|
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации    КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации  КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизации 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизации,
	|
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ
	|		- СУММА(ВЫБОР 
	|					КОГДА ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ = 0
	|						ТОГДА 0
	|					КОГДА ТаблицаРегистра.СрокПолезногоИспользованияБУ <> ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации
	|						ТОГДА ВЫБОР
	|								КОГДА (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) = 0
	|									ТОГДА 0
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ 
	|												* ТаблицаОС.СтоимостьБУ / (ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьРегл, 0) + ЕСТЬNULL(ВТ_СтоимостьВНА.СтоимостьЦФ, 0)) КАК ЧИСЛО(31, 2))
	|							КОНЕЦ
	|					ИНАЧЕ  
	|						ТаблицаОС.СтоимостьБУ
	|				КОНЕЦ) КАК СтоимостьДляВычисленияАмортизацииЦФ,
	|
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации 
	|		- СУММА(ТаблицаОС.СтоимостьПР) КАК ПРДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК ВТ_СтоимостьВНА
	|		ПО ВТ_СтоимостьВНА.ОбъектУчета = &ОсновноеСредство
	|			И ВТ_СтоимостьВНА.Ссылка = &Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = &Ссылка
	|ГДЕ
	|	&ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.ДатаПоследнегоИзменения,
	|	ТаблицаРегистра.СрокПолезногоИспользованияБУ,
	|	ТаблицаРегистра.СрокПолезногоИспользованияНУ,
	|	ТаблицаРегистра.КоэффициентАмортизацииБУ,
	|	ТаблицаРегистра.КоэффициентУскорения,
	|	ТаблицаРегистра.СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаРегистра.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизации,
	|	ТаблицаРегистра.СтоимостьДляВычисленияАмортизацииЦФ,
	|	ТаблицаРегистра.ПРДляВычисленияАмортизации";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.ИнвентарныйНомер            КАК ИнвентарныйНомер,
	|	ТаблицаРегистра.СпособПоступления                      КАК СпособПоступления,
	|	ТаблицаОС.СтоимостьБУ                                  КАК ПервоначальнаяСтоимость,
	|	ТаблицаРегистра.СпособНачисленияАмортизации            КАК СпособНачисленияАмортизации,
	|	ТаблицаРегистра.ПоказательНаработки                    КАК ПоказательНаработки,
	|	ТаблицаРегистра.ПорядокПогашенияСтоимости              КАК ПорядокПогашенияСтоимости,
	|	ТаблицаОС.ОсновноеСредство.ГруппаОС                    КАК ГруппаОС,
	|	ТаблицаОС.ОсновноеСредство.КодПоОКОФ                   КАК КодПоОКОФ,
	|	ТаблицаОС.ОсновноеСредство.ШифрПоЕНАОФ                 КАК ШифрПоЕНАОФ,
	|	ТаблицаОС.ОсновноеСредство.АмортизационнаяГруппа       КАК АмортизационнаяГруппа,
	|	ТаблицаРегистра.ДоговорЛизинга                         КАК ДоговорЛизинга
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.АмортизацияДо2002                      КАК АмортизацияДо2002,
	|	ТаблицаРегистра.АмортизацияДо2009                      КАК АмортизацияДо2009,
	|	ТаблицаРегистра.МетодНачисленияАмортизации             КАК МетодНачисленияАмортизации,
	|	ТаблицаОС.СтоимостьНУ                                  КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаРегистра.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ТаблицаРегистра.СтоимостьДо2002                        КАК СтоимостьДо2002,
	|	ТаблицаРегистра.ФактическийСрокИспользованияДо2009     КАК ФактическийСрокИспользованияДо2009
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                     КАК Период,
	|	&Организация                КАК Организация,
	|	ТаблицаОС.ОсновноеСредство  КАК ОсновноеСредство,
	|	&НазваниеДокумента          КАК НазваниеДокумента,
	|	&Номер                      КАК НомерДокумента,
	|	0                           КАК СуммаЗатратБУ,
	|	0                           КАК СуммаЗатратНУ
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                     КАК Период,
	|	&Организация                КАК Организация,
	|	&ОсновноеСредство           КАК ОсновноеСредство,
	|	&НазваниеДокумента          КАК НазваниеДокумента,
	|	&Номер                      КАК НомерДокумента,
	|	СУММА(ТаблицаОС.СтоимостьБУ) КАК СуммаЗатратБУ,
	|	СУММА(ТаблицаОС.СтоимостьНУ) КАК СуммаЗатратНУ
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСпособыОтраженияРасходовПоИмущественнымНалогам(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СпособыОтраженияРасходовПоИмущественнымНалогам";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ВидНалога                              КАК ВидНалога,
	|	ТаблицаРегистра.СтатьяРасходов                         КАК СтатьяРасходов,
	|	ТаблицаРегистра.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ТаблицаРегистра.СпособОтраженияРасходов                КАК СпособОтраженияРасходов,
	|	ТаблицаРегистра.АналитикаРасходов                      КАК АналитикаРасходов
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоИмущественнымНалогам.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПараметрыЦелевогоФинансированияОС(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПараметрыЦелевогоФинансированияОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ПрименениеЦелевогоФинансирования       КАК ПрименениеЦелевогоФинансирования,
	|	ТаблицаРегистра.СтатьяДоходов                          КАК СтатьяДоходов,
	|	ТаблицаРегистра.АналитикаДоходов                       КАК АналитикаДоходов
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.СпециальныйКоэффициент                 КАК СпециальныйКоэффициент
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаГрафикиАмортизацииОСБухгалтерскийУчет(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ГрафикАмортизации                      КАК ГрафикАмортизации
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	&Организация                                           КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                             КАК ОсновноеСредство,
	|	ТаблицаРегистра.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.РазукомплектацияОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&Период,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И ОсновноеСредство = &ОсновноеСредство) КАК ТаблицаРегистра
	|		ПО (ТаблицаРегистра.ОсновноеСредство = &ОсновноеСредство)
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ВедетсяРегламентированныйУчетВНА";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
