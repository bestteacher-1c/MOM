#Область СлужебныеПроцедурыИФункции

#Область ПолучениеНастроекИПараметровУчетаНДС

Функция ПрименяемыеТипыНалогообложенияНДС(Продажи = Истина, Закупки = Истина) Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ТипыНалогообложения = Новый СписокЗначений();
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		Если Продажи И Закупки Тогда
			Представление = НСтр("ru = 'Облагается НДС'");
		ИначеЕсли Продажи Тогда
			Представление = НСтр("ru = 'Продажа облагается НДС'");
		Иначе
			Представление = НСтр("ru = 'Закупка облагается НДС'");
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Представление);
	КонецЕсли;
	
	Если Продажи И Закупки Тогда
		Представление = НСтр("ru = 'Не облагается НДС'");
	ИначеЕсли Продажи Тогда
		Представление = НСтр("ru = 'Продажа не облагается НДС'");
	Иначе
		Представление = НСтр("ru = 'Закупка не облагается НДС'");
	КонецЕсли;
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, Представление);
	
	Если Продажи И НастройкиУчета.ПродажиНаЭкспорт Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт, НСтр("ru = 'Экспорт'"));
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки);
	
	Возврат ТипыНалогообложения;
	
КонецФункции

Функция ПрименяемыеВидыДеятельностиНДС() Экспорт
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	
	ВидыДеятельностиНДС = Новый СписокЗначений();
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(), НСтр("ru = 'Без изменений'"));
	Если НастройкиУчета.ИспользоватьУчетНДС Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, НСтр("ru = 'Облагаемую НДС'"));
	КонецЕсли;
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, НСтр("ru = 'Не облагаемую НДС'"));
	
	УчетНДСЛокализация.ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета);
	
	Возврат ВидыДеятельностиНДС;
	
КонецФункции

#КонецОбласти

#Область УчетВходящегоНДС

Процедура УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ТипыНалогообложенияНДСПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСПоступления", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	
КонецПроцедуры

Функция ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив видов деятельности доступных по операциям
	ВидыДеятельностиНДСДоступныеПоОперации = Новый Структура;
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПриобретениеНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровНаСкладах", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеМеждуФилиалами", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ДвижениеТоваровИРаботВПроизводстве", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СписаниеТоваровИРаботНаСтатьи", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ВыпускПродукцииИРабот", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("СборкаРазборкаТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПередачаВЭксплуатацию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ПрочееВыбытиеТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		ВидыДеятельностиНДСДоступныеПоОперации.Вставить("ЛизинговоеИмуществоНаБалансе", МассивДоступных);
	КонецЕсли;
	
	// Подготовим массив видов деятельности не доступных по настройкам
	НедоступныеВидыДеятельностиНДС = Новый Массив;
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
	Иначе
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
	КонецЕсли;
	
	Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ИначеЕсли ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС 
		 И НЕ РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(
		ВидыДеятельностиНДСДоступныеПоОперации, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеВидыДеятельностиНДС = Новый Массив;
	Если ВидыДеятельностиНДСДоступныеПоОперации.Количество() > 0 Тогда
		ДоступныеВидыДеятельностиНДС = ПрименяемыеВидыДеятельностиНДС().ВыгрузитьЗначения();
		Для каждого КлючИЗначение Из ВидыДеятельностиНДСДоступныеПоОперации Цикл
			ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеВидыДеятельностиНДС, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеВидыДеятельностиНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС);
	
	Возврат ДоступныеВидыДеятельностиНДС;
	
КонецФункции

Функция ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения) Экспорт
	
	ПрименяемыеТипыНалогообложения = ПрименяемыеТипыНалогообложенияНДС(Ложь, Истина).ВыгрузитьЗначения();
	
	ТипыНалогообложенияНедоступныеПоПараметрам = Новый Массив;
	Если ПараметрыЗаполнения.ИмпортТоваров ИЛИ ПараметрыЗаполнения.ВвозТоваровИзТаможенногоСоюза Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	КонецЕсли;
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		ТипыНалогообложенияНедоступныеПоПараметрам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	КонецЕсли;
	УчетНДСЛокализация.ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(ТипыНалогообложенияНедоступныеПоПараметрам, ПараметрыЗаполнения);

	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ПрименяемыеТипыНалогообложения, ТипыНалогообложенияНедоступныеПоПараметрам);
	
КонецФункции

Функция НалогообложенияНДСПродажиНаЭкспорт() Экспорт
	
	Результат = Новый Массив();
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	УчетНДСЛокализация.ДополнитьНалогообложенияНДСПродажиНаЭкспорт(Результат);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

// Формирует список доступных значений по настройка учета НДС и отражаемой операции.
//
// Параметры:
// 	ПараметрыЗаполнения - Структура - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
// Возвращаемое значение:
// 	Результат - Массив - Доступные значения налогообложения НДС закупки.
// 
Функция ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения) Экспорт
	
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата, ПараметрыЗаполнения.Склад);
	
	НалогообложенияНДСДоступныеПоОперации = Новый Структура();
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияТоваров", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияРаботУслуг", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РеализацияПрочихАктивов", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыКлиентом Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупВозвратнойТарыКлиентом", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВыкупТоваровХранителем", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаКомиссию Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ПередачаНаКомиссию", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетДавальцу", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетДавальцу", МассивДоступных);
	КонецЕсли;

	Если ПараметрыЗаполнения.ОтчетКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ОтчетКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКомиссионера", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НалогообложенияНДСДоступныеПоОперации.Вставить("ВозвратТоваровОтКлиента", МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РозничнаяПродажа Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи);
		НалогообложенияНДСДоступныеПоОперации.Вставить("РозничнаяПродажа", МассивДоступных);
	КонецЕсли;
	
	// Не доступные по настройкам
	НедоступныеНалогообложенияНДС = Новый Массив;
	Если Не ПараметрыУчетаИБ.ПродажиНаЭкспорт Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	УчетНДСЛокализация.ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(
		НалогообложенияНДСДоступныеПоОперации, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения);
	
	// Учтем доступность по операции
	ДоступныеНалогообложенияНДС = Новый Массив;
	Для каждого КлючИЗначение Из НалогообложенияНДСДоступныеПоОперации Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС, КлючИЗначение.Значение, Истина);
	КонецЦикла;
	ПрименяемыеТипыНалогообложенияНДС = ПрименяемыеТипыНалогообложенияНДС(Истина, Ложь).ВыгрузитьЗначения();
	ОбщегоНазначенияУТКлиентСервер.ПересечениеМассивов(ДоступныеНалогообложенияНДС, ПрименяемыеТипыНалогообложенияНДС);
	
	// Учтем недоступность по настройкам учета организации
	ДоступныеНалогообложенияНДС = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС);
	
	Возврат ДоступныеНалогообложенияНДС;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ВходящиеДанныеМеханизма() Экспорт
	
	ВходящиеДанные = Новый Массив;
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСПредъявленный);
	
	УчетНДСЛокализация.ДополнитьВходящиеДанныхДляВыполненияРегламентнойОперации(ВходящиеДанные);
	
	Возврат ВходящиеДанные;
	
КонецФункции

Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Новый Массив();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

Функция ТипыНоменклатурыТовар() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

Функция ТипыНоменклатурыУслугаРабота() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

Функция ИзмененныеПараметры(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Результат = Новый Структура();
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПрошлыеЗначенияПараметров = Неопределено;
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ЗначенияПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ЗначенияПараметров Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение)
			И КлючИЗначение.Значение <> ПрошлыеЗначенияПараметров[КлючИЗначение.Ключ] Тогда
			Результат.Вставить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьКэшированныеЗначенияПараметров(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		КэшированныеЗначенияПараметров = Новый Структура();
	КонецЕсли;
	
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров) Тогда
		КэшированныеЗначенияПараметров.Вставить(КлючПараметров, ЗначенияПараметров);
	Иначе
		ЗаполнитьЗначенияСвойств(КэшированныеЗначенияПараметров[КлючПараметров], ЗначенияПараметров);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьСовместныйВыборКонтрагентовОрганизаций(Элемент, Контрагент = Null) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		Если Контрагент = Неопределено Тогда
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("ВыборКонтрагентовИОрганизаций", Истина));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
 	Иначе
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");	
		Элемент.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры


#Область ПроверкаЗаполненияДокументовПродажи

// Формирует текст запроса для проверки отсутствия подакцизного товара строках табличной части товаров
// Проверка должна выполняться только если:
// - в строке табличной части выбрана номенклатура типа товар;
// - в шапке выбран режим налогообложения ЕНВД.
//
Процедура СформироватьЗапросКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	ВременнаяТаблицаТовары.Номенклатура.ПодакцизныйТовар
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|;
		|";
	
КонецПроцедуры

// Формирует текст запроса для проверки отсутствия товара c обратным обложением НДС строках табличной части товаров
// Проверяется соответствие признака "Облагается НДС у покупателя" товара налогообложению документа продажи.
//
Процедура СформироватьЗапросКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Номенклатура.ОблагаетсяНДСУПокупателя
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|;
		|";
	
КонецПроцедуры

// Формирует запрос для проверки указания ставки НДС в зависимости от налогообложения.
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьУказанияСтавкиНДСПродажи(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + СтрЗаменить(
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаДокументПродажи.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|				ИЛИ ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|			ТОГДА &СтавкаНДСПоУмолчанию
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|			ТОГДА ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И &ВозвратМногооборотнойТары
		|				ТОГДА ЛОЖЬ
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> &СтавкаНДСПоУмолчанию
		|				ТОГДА ИСТИНА
		|			КОГДА (ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|					ИЛИ ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|					И (ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10),
		|						 ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|", "&СтавкаНДСПоУмолчанию", УчетНДСРФ.ТекстВыбораСтавкиНДСПоУмолчанию(, Истина));
	
КонецПроцедуры

// Формирует запрос для проверки корректности суммы НДС в зависимости от ставки НДС
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьСуммыНДС(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ВременнаяТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВременнаяТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВременнаяТаблицаДокументПродажи.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСуммаНДС,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС  ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ КАК СуммаНДСРасчетная
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			ИНАЧЕ
	|               ВЫБОР ВременнаяТаблицаТовары.СуммаНДС - ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|					КОГДА 0 ТОГДА ЛОЖЬ
	|					КОГДА 0.01 ТОГДА ЛОЖЬ
	|					КОГДА -0.01 ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ	
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ
	|;
	|";

КонецПроцедуры

// Формирует запрос для проверки корректности суммы НДС в зависимости от суммы, когда НДС включен в цену
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьСуммыИСуммыНДС(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ВременнаяТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
	|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВременнаяТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВременнаяТаблицаДокументПродажи.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.Сумма - ВременнаяТаблицаТовары.СуммаНДС >= 0
	|				ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСуммаНДС
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.Сумма - ВременнаяТаблицаТовары.СуммаНДС >= 0
	|				ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|;
	|";

КонецПроцедуры

// Выводит сообщения об ошибках указания подакцизного товара в табличной части "Товары" документа продажи.
//
Процедура СообщитьОбОшибкахКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(Знач Выборка,
	                                                                                   Знач ДокументПродажи,
	                                                                                   Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru='При режиме налогообложения ""Продажа облагается ЕНВД"" запрещено выбирать подакцизный товар в строке %НомерСтроки% списка ""Товары""'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания товара с обратным обложением НДС в табличной части "Товары" документа продажи
//
Процедура СообщитьОбОшибкахКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(Знач Выборка,
	                                                                                             Знач ДокументПродажи,
	                                                                                             Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru='Товар в строке %НомерСтроки% списка ""Товары"" не соответствует режиму налогообложения ""Облагается НДС у покупателя""'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			,
			Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания суммы НДС в табличной части документа продажи.
//
// Параметры:
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаПродажи - Структура - описание документа 
// Отказ           - Булево - Флаг отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьСуммыНДС(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ПроверятьСуммуНДС = Истина;
		
		Если ЗначениеЗаполнено(Выборка.НоменклатураНабора) Тогда
			
			ПараметрыВариантаКомплектацииНоменклатуры = НаборыВызовСервера.ПараметрыВариантаКомплектацииНоменклатуры(
				Выборка.НоменклатураНабора,
				Выборка.ХарактеристикаНабора);
				
				Если ЗначениеЗаполнено(ПараметрыВариантаКомплектацииНоменклатуры) И
					(ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
					Или ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
				
					ПроверятьСуммуНДС = Ложь;
				
				КонецЕсли;
				
		КонецЕсли;
		
		Если ПроверятьСуммуНДС Тогда
		
			ТекстОшибки = НСтр("ru='Сумма НДС %СуммаНДС% %Валюта% при ставке ""%СтавкаНДС%"" отличается от расчетной %СуммаНДСРасчетная% %Валюта%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДС%",          Выборка.СуммаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДСРасчетная%", Выборка.СуммаНДСРасчетная);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",         Выборка.СтавкаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Валюта%",            Выборка.Валюта);
			
			АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
			АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
			АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
			
			ПродажиСервер.СообщитьПользователюОбОшибке(
				ТекстОшибки + АдресОшибки,
				ОписаниеДокументаПродажи.ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СуммаНДС"),
				Отказ);
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания суммы НДС в табличной части документа продажи.
//
// Параметры:
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаПродажи - Структура - описание документа 
// Отказ           - Булево - Флаг отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьСуммыИСуммыНДС(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ПроверятьСуммуНДС = Истина;
		
		Если ЗначениеЗаполнено(Выборка.НоменклатураНабора) Тогда
			
			ПараметрыВариантаКомплектацииНоменклатуры = НаборыВызовСервера.ПараметрыВариантаКомплектацииНоменклатуры(
				Выборка.НоменклатураНабора,
				Выборка.ХарактеристикаНабора);
				
				Если ЗначениеЗаполнено(ПараметрыВариантаКомплектацииНоменклатуры) И
					(ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
					Или ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
				
					ПроверятьСуммуНДС = Ложь;
				
				КонецЕсли;
				
		КонецЕсли;
		
		Если ПроверятьСуммуНДС Тогда
		
			ТекстОшибки = НСтр("ru='Сумма НДС %СуммаНДС% %Валюта% при ставке ""%СтавкаНДС%"" больше общей суммы по строке %Сумма% %Валюта%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДС%",          Выборка.СуммаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Сумма%",             Выборка.Сумма);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",         Выборка.СтавкаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Валюта%",            Выборка.Валюта);
			
			АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
			АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
			АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
			
			ПродажиСервер.СообщитьПользователюОбОшибке(
				ТекстОшибки + АдресОшибки,
				ОписаниеДокументаПродажи.ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СуммаНДС"),
				Отказ);
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания ставки НДС в табличной части документа продажи.
//
Процедура СообщитьОбОшибкахКорректностьУказанияСтавкиНДСПродажи(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку 18% или 20%'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				
			ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку 18/118 или 20/120'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				
			Иначе

				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);

				
			КонецЕсли;


			
		Иначе
			
			ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		КонецЕсли;
		
		АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаПродажи.ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СтавкаНДС"),
			Отказ);
		
	КонецЦикла;


	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДокументовЗакупки

// Формирует запрос для проверки указания ставки НДС в зависимости от налогообложения.
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьУказанияСтавкиНДСЗакупки(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + СтрЗаменить(
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|				ИЛИ ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|			ТОГДА &СтавкаНДСПоУмолчанию
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|			ТОГДА ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументЗакупки КАК ВременнаяТаблицаДокументЗакупки
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И &ВозвратМногооборотнойТары
		|				ТОГДА ЛОЖЬ
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> &СтавкаНДСПоУмолчанию
		|				ТОГДА ИСТИНА
		|			КОГДА (ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|					ИЛИ ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|					И (ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10),
		|						 ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|", "&СтавкаНДСПоУмолчанию", УчетНДСРФ.ТекстВыбораСтавкиНДСПоУмолчанию(, Истина));
	
КонецПроцедуры

// Формирует запрос для проверки указания суммы НДС в зависимости от суммы строки.
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьСуммыИСуммыНДСЗакупки(ТекстЗапроса, ПараметрыЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТовары.Сумма КАК Сумма,
	|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВременнаяТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВременнаяТаблицаДокументЗакупки.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.Сумма - ВременнаяТаблицаТовары.СуммаНДС >= 0
	|				ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСуммаНДС
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументЗакупки КАК ВременнаяТаблицаДокументЗакупки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.Сумма - ВременнаяТаблицаТовары.СуммаНДС >= 0
	|				ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|;
	|";
	
КонецПроцедуры

// Выводит сообщения об ошибках указания ставки НДС в табличной части документа закупки.
//
Процедура СообщитьОбОшибкахКорректностьУказанияСтавкиНДСЗакупки(Знач Выборка, ОписаниеДокументаЗакупки, Отказ) Экспорт

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""Закупка облагается НДС"" необходимо установить ставку 18% или 20%'");
				
			ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""Закупка облагается НДС"" необходимо установить ставку 18/118 или 20/120'");
				
			Иначе
				
				ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
				
			КонецЕсли;
			
		ИначеЕсли Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			
			ТекстОшибки = НСтр("ru='В режиме налогообложения ""Закупка не облагается НДС"" необходимо установить ставку ""%СтавкаНДС%""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		Иначе
			
			ТекстОшибки = НСтр("ru='В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		КонецЕсли;
		
		АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаЗакупки.ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаЗакупки.ДокументЗакупки,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаЗакупки.ИмяТЧ, Выборка.НомерСтроки, "СтавкаНДС"),
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания суммы НДС в табличной части документа закупки.
//
// Параметры:
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаПродажи - Структура - описание документа 
// Отказ           - Булево - Флаг отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьСуммыИСуммыНДСЗакупки(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru='Сумма НДС %СуммаНДС% %Валюта% при ставке ""%СтавкаНДС%"" больше общей суммы по строке %Сумма% %Валюта%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДС%",          Выборка.СуммаНДС);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Сумма%",             Выборка.Сумма);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",         Выборка.СтавкаНДС);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Валюта%",            Выборка.Валюта);
		
		АдресОшибки = " " + НСтр("ru='в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаПродажи.ДокументЗакупки,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СуммаНДС"),
			Отказ);
				
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область РегламентнаяОперацияПоНДС

// Выполняет Формирование записей книг покупок и продаж.
// 
// Параметры:
// 	 КонецПериода - Дата - Период, по который необходимо выполнить отражение
// 	 МассивОрганизаций - Массив, Неопределено - Организации, по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем организациям.
// 	 МассивСчетовФактур - Массив, Неопределено - Счета-фактуры (документы поступления), по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем счетам-фактурам.
//
Процедура ВыполнитьЗаданияКФормированиюДвиженийПоНДС(КонецПериода, МассивОрганизаций = Неопределено, МассивСчетовФактур = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ();
	
	НомерЗаданияДоРасчета = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.УвеличитьНомерЗадания();
	
	Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);  
	Пока Месяц <> Неопределено Цикл
		
		ПараметрыРасчета = Новый Структура;
		ПараметрыРасчета.Вставить("НомерЗадания",            НомерЗаданияДоРасчета);
		ПараметрыРасчета.Вставить("НачалоПериода",           НачалоМесяца(Месяц));
		ПараметрыРасчета.Вставить("КонецПериода",            КонецМесяца(Месяц));
		ПараметрыРасчета.Вставить("МассивОрганизаций",       МассивОрганизаций);
		ПараметрыРасчета.Вставить("МассивСчетовФактур",      МассивСчетовФактур);
		ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
		
		Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			НачатьТранзакцию();
			Попытка
				ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
				ПолучитьЗадания(ПараметрыРасчета);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось выполнить по причине %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Формирование записей книг покупок и продаж.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
					УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;
		Иначе
			ПолучитьЗадания(ПараметрыРасчета);
		КонецЕсли;
			
		НачатьТранзакцию();
		Попытка
			ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета);
			Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
				ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
			КонецЕсли;
			ЗафиксироватьРезультат(ПараметрыРасчета);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось выполнить по причине %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Формирование записей книг покупок и продаж.'", ОбщегоНазначения.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
				
			ВызватьИсключение ТекстСообщения;
			
		КонецПопытки;
		
		Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаблокироватьРегистрЗаданий(ПараметрыРасчета)
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС");
	ЭлементБлокировки.УстановитьЗначение("НомерЗадания", Новый Диапазон(Неопределено, ПараметрыРасчета.НомерЗадания));
	
	ИсточникБлокировки = Новый ТаблицаЗначений;
	ИсточникБлокировки.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ИсточникБлокировки.Колонки.Добавить("СчетФактура", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы()));
	
	Если ПараметрыРасчета.МассивСчетовФактур <> Неопределено Тогда
		ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивСчетовФактур, "СчетФактура");
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СчетФактура", "СчетФактура");
	КонецЕсли;
	Если ПараметрыРасчета.МассивОрганизаций <> Неопределено Тогда
		Если ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СписокЗначений") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций.ВыгрузитьЗначения(), "Организация");
		ИначеЕсли ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СправочникСсылка.Организации") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыРасчета.МассивОрганизаций), "Организация");
		Иначе
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций, "Организация");
		КонецЕсли;
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("УчетНДС.ФормированиеЗаписейКнигПокупокИПродажПоПриобретеннымЦенностям");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗаданий
	|ИЗ
	|	Задания";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоЗаданий = Выборка.КоличествоЗаданий;
	Иначе
		КоличествоЗаданий = 0;
	КонецЕсли;
	
	ВыполнитьРасчет(ПараметрыРасчета);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоЗаданий);
	
КонецПроцедуры

Процедура ВыполнитьРасчет(ПараметрыРасчета)
	
	СформироватьНДСПредъявленный(ПараметрыРасчета);
	СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	
	УчетНДСЛокализация.ВыполнитьРасчет(ПараметрыРасчета);
	
КонецПроцедуры

Функция МесяцДляРасчета(КонецПериода, НомерЗадания, МассивОрганизаций, МассивСчетовФактур)
	
	Месяц = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК Задания
	|ГДЕ
	|	(Задания.Месяц <= &КонецПериода ИЛИ &КонецПериода = ДАТАВРЕМЯ(1,1,1))
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) ВОЗР
	|";
	
	Запрос.УстановитьПараметр("КонецПериода",       ?(КонецПериода = КонецМесяца(ТекущаяДатаСеанса()),'00010101',КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций",  МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       НомерЗадания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Месяц = Выборка.Месяц;
	КонецЕсли;
	
	Возврат Месяц;
	
КонецФункции

Процедура ПолучитьЗадания(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ Задания
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК Задания
	|ГДЕ
	|	Задания.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур)) 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.Месяц,
	|	Задания.НомерЗадания,
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ ИсходныеЗадания
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюДвиженийПоНДС КАК Задания
	|ГДЕ
	|	Задания.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур)) 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(ПараметрыРасчета.МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", ПараметрыРасчета.МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(ПараметрыРасчета.МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       ПараметрыРасчета.НомерЗадания);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗафиксироватьРезультат(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаданияКОчистке.Месяц                               КАК Месяц,
	|	ЗаданияКОчистке.НомерЗадания                        КАК НомерЗадания,
	|	ЗаданияКОчистке.Организация                         КАК Организация,
	|	ЗаданияКОчистке.СчетФактура                         КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК ЗаданияКОчистке
	|;
	|
	|//////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|	&НомерЗадания                                 КАК НомерЗадания,
	|	Задания.Организация                           КАК Организация,
	|	Задания.СчетФактура                           КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК Задания
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО НДСПредъявленный.Период > &КонецПериода
	|		И НДСПредъявленный.Организация = Задания.Организация
	|		И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|		И НДСПредъявленный.Активность
	|";
	
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("НомерЗадания",      ПараметрыРасчета.НомерЗадания);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаДляУдаления = Результат[0].Выбрать();
	ВыборкаДляЗаписи = Результат[1].Выбрать();
	
	Пока ВыборкаДляУдаления.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляУдаления);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Пока ВыборкаДляЗаписи.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляЗаписи);
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	УчетНДСЛокализация.ЗафиксироватьРезультат(ПараметрыРасчета);
	
	ПараметрыРасчета.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ПолучитьПартии(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьПартии(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("Партии") = Неопределено Тогда
		Запрос = Новый Запрос();
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Партии.МоментВремени КАК МоментВремени,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаПартий.Контрагент КАК Контрагент,
		|	Партии.ДокументПоступленияРасходов КАК СчетФактура,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
		|	ВЫБОР 
		|		КОГДА Партии.ДокументПоступленияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
		|		ИНАЧЕ Партии.АналитикаУчетаПартий.ВидЦенности 
		|	КОНЕЦ КАК ВидЦенности,
		|	Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.НалогообложениеНДС КАК КорВидДеятельностиНДС,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(Партии.ДокументПоступленияРасходов) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
		|			ТОГДА 0
		|		ИНАЧЕ Партии.СтоимостьРегл 
		|	КОНЕЦ КАК СуммаБезНДС,
		|	Партии.НДСРегл КАК НДС,
		|	Партии.НДСУпр КАК НДСУпр
		|ПОМЕСТИТЬ ПартииПредварительная
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК Партии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Задания КАК Задания
		|	ПО
		|		Задания.Организация = Партии.Организация
		|		И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		Партии.Организация = ДанныеПервичныхДокументов.Организация
		|		И Партии.ДокументПоступленияРасходов = ДанныеПервичныхДокументов.Документ
		|	
		|ГДЕ
		|	Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Партии.Активность
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.НДСРегл <> 0
		|	И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партии.МоментВремени КАК МоментВремени,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.Поставщик КАК Контрагент,
		|	Партии.ДокументПоступленияРасходов КАК СчетФактура,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
		|	Партии.ВидЦенности КАК ВидЦенности,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	Партии.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
		|	Партии.СтатьяОтраженияРасходов КАК СтатьяСписанияНДС,
		|	Партии.АналитикаОтраженияРасходов КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиСписанияНДС,
		|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
		|	Партии.Подразделение КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	Партии.СтоимостьРегл КАК СуммаБезНДС,
		|	Партии.НДСРегл КАК НДС,
		|	Партии.НДСУпр КАК НДСУпр
		|ИЗ
		|	РегистрНакопления.ПартииНДСКРаспределению КАК Партии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Задания КАК Задания
		|	ПО
		|		Задания.Организация = Партии.Организация
		|		И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		ДанныеПервичныхДокументов.Организация = Партии.Организация
		|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступленияРасходов
		|		
		|ГДЕ
		|	Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Партии.Активность
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.НДСРегл <> 0
		|	И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.МоментВремени КАК МоментВремени,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.Контрагент КАК Контрагент,
		|	Партии.СчетФактура КАК СчетФактура,
		|	Партии.ДатаПоступления КАК ДатаПоступления,
		|	Партии.ВидЦенности КАК ВидЦенности,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.НалогообложениеФинПартии КАК ВидДеятельностиНДС,
		|	Партии.НалогообложениеПартии КАК КорВидДеятельностиНДС,
		|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельностиСписанияНДС КАК НаправлениеДеятельностиСписанияНДС,
		|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
		|	Партии.ПодразделениеСписанияНДС КАК ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации КАК ДокументРеализации,
		|	СУММА(Партии.СуммаБезНДС) КАК СуммаБезНДС,
		|	СУММА(Партии.НДС) КАК НДС,
		|	СУММА(Партии.НДСУпр) КАК НДСУпр
		|ПОМЕСТИТЬ Партии
		|ИЗ
		|	ПартииПредварительная КАК Партии
		|
		|СГРУППИРОВАТЬ ПО
		|	Партии.МоментВремени,
		|	Партии.Период,
		|	Партии.Регистратор,
		|	Партии.Организация,
		|	Партии.Контрагент,
		|	Партии.СчетФактура,
		|	Партии.ДатаПоступления,
		|	Партии.ВидЦенности,
		|	Партии.СтавкаНДС,
		|	Партии.ВидДеятельностиНДС,
		|	Партии.КорВидДеятельностиНДС,
		|	Партии.СтатьяСписанияНДС,
		|	Партии.АналитикаСписанияНДС,
		|	Партии.НаправлениеДеятельностиСписанияНДС,
		|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	Партии.ПодразделениеСписанияНДС,
		|	Партии.ДокументРеализации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПартииПредварительная
		|";
		
		Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВходящиеДанныеРагламентнойОперации = Новый Соответствие;
	
	ВходящиеДанныеМеханизма = ВходящиеДанныеМеханизма();
	Для каждого Объект Из ВходящиеДанныеМеханизма Цикл
		ВходящиеДанныеРагламентнойОперации.Вставить(Объект);
	КонецЦикла;
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		ВходящиеДанныеРагламентнойОперации,
		НСтр("ru = 'Формирование записей книг покупок и продаж.'"));
	
КонецПроцедуры

#Область ФормированиеДвиженияНДСПредъявленный

Процедура СформироватьНДСПредъявленный(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета);
	ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета);
	ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	ПолучитьПартии(ПараметрыРасчета);
	
	ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета);
	ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета);
	ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета);
	
	ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСПредъявленный = Новый Массив;
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета));
	
	ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета);
	
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета));
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета));
	
	ИменаТаблицЗаписейНДСПредъявленный.Добавить(РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный));
	
	ЗаписатьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный);
	ОчиститьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный);
	
КонецПроцедуры

Процедура ПолучитьРазрезыВычетаНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОстатокНаНачало.Организация КАК Организация,
	|	ОстатокНаНачало.СчетФактура КАК СчетФактура,
	|	ОстатокНаНачало.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ОстатокНаНачало.ВидЦенности КАК ВидЦенности,
	|	ОстатокНаНачало.РеализацияЭкспорт КАК РеализацияЭкспорт
	|ПОМЕСТИТЬ ВозможныеРазрезыВычетаНДС
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачало КАК ОстатокНаНачало
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОнлайнДвижения.Организация КАК Организация,
	|	ОнлайнДвижения.СчетФактура КАК СчетФактура,
	|	ОнлайнДвижения.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ОнлайнДвижения.ВидЦенности КАК ВидЦенности,
	|	ОнлайнДвижения.РеализацияЭкспорт КАК РеализацияЭкспорт
	|ИЗ
	|	НДСПредъявленныйОнлайнДвижения КАК ОнлайнДвижения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт
	|ИЗ
	|	Партии КАК Партии
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт
	|ИЗ
	|	Партии КАК Партии
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Организация КАК Организация,
	|	Партии.СчетФактура КАК СчетФактура,
	|	Партии.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	Партии.ДокументРеализации КАК РеализацияЭкспорт
	|ИЗ
	|	Партии КАК Партии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	УчетНДСЛокализация.ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("РазрезыВычетаНДС") = Неопределено Тогда
		
		// Если в локализации не задана локализация, то весь входной НДС без ограничений принимаем к вычету.
		// Вычет формируем в рамках самих счетов-фактур.
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазрезыВычетаНДС.Организация КАК Организация,
		|	РазрезыВычетаНДС.СчетФактура КАК СчетФактура,
		|	РазрезыВычетаНДС.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
		|	РазрезыВычетаНДС.ВидЦенности КАК ВидЦенности,
		|	РазрезыВычетаНДС.РеализацияЭкспорт КАК РеализацияЭкспорт,
		|	
		|	ЛОЖЬ КАК ПоВидуДеятельностиОсобыйПорядокВычетаНДС,
		|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету) КАК Событие,
		|	ДанныеПервичныхДокументовСчетФактура.ДатаРегистратора КАК Период,
		|	РазрезыВычетаНДС.СчетФактура  КАК Регистратор
		|ПОМЕСТИТЬ РазрезыВычетаНДС
		|ИЗ
		|	ВозможныеРазрезыВычетаНДС КАК РазрезыВычетаНДС
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактура
		|	ПО
		|		РазрезыВычетаНДС.Организация = ДанныеПервичныхДокументовСчетФактура.Организация
		|		И РазрезыВычетаНДС.СчетФактура = ДанныеПервичныхДокументовСчетФактура.Документ
		|	
		|";
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета)

	УчетНДСЛокализация.ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("СчетаФактурыДокументы") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Задания.Организация           КАК Организация,
		|	Задания.СчетФактура           КАК СчетФактура,
		|	Задания.СчетФактура           КАК Ссылка,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗаписиКнигиПокупок
		|ПОМЕСТИТЬ СчетаФактурыДокументы
		|ИЗ
		|	Задания КАК Задания
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|	ПО
		|		Задания.Организация = ДанныеПервичныхДокументов.Организация
		|		И Задания.СчетФактура = ДанныеПервичныхДокументов.Документ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация, 
		|	СчетФактура
		|";
		Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
		Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета)
	
	УчетНДСЛокализация.ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ИсправительныеСчетаФактуры") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО      КАК СчетФактура,
		|	НЕОПРЕДЕЛЕНО      КАК ИсправительныйСчетФактура,
		|	НЕОПРЕДЕЛЕНО      КАК Ссылка,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаИсправления,
		|	НЕОПРЕДЕЛЕНО      КАК МоментВремени,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаПолучения,
		|	ДАТАВРЕМЯ(1,1,1)  КАК ДатаЗаписиКнигиПокупок,
		|	ЛОЖЬ              КАК ЗаписьДополнительногоЛиста,
		|	ДАТАВРЕМЯ(1,1,1)  КАК КорректируемыйПериод
		|
		|ПОМЕСТИТЬ ИсправительныеСчетаФактуры
		|ГДЕ
		|	ЛОЖЬ";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета)

	УчетНДСЛокализация.ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Если МенеджерВременныхТаблиц.Таблицы.Найти("КорректировочныеСчетаФактуры") = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК СчетФактура
		|ПОМЕСТИТЬ КорректировочныеСчетаФактуры
		|ГДЕ
		|	ЛОЖЬ
		|";
		Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.Организация                          КАК Организация,
	|	Задания.СчетФактура                          КАК СчетФактура,
	|	СписаниеНДСНаРасходы.Ссылка                  КАК СписаниеНДСНаРасходы,
	|	СписаниеНДСНаРасходы.Подразделение           КАК Подразделение,
	|	СписаниеНДСНаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	СписаниеНДСНаРасходы.АналитикаРасходов       КАК АналитикаРасходов
	|ПОМЕСТИТЬ СписанияНДСНаРасходы 
	|ИЗ
	|	Задания КАК Задания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы КАК СписаниеНДСНаРасходы
	|	ПО
	|		СписаниеНДСНаРасходы.Дата < &КонецПериода
	|		И Задания.Организация = СписаниеНДСНаРасходы.Организация
	|		И Задания.СчетФактура = СписаниеНДСНаРасходы.СчетФактура
	|		И СписаниеНДСНаРасходы.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;

	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДСОстаток      КАК СуммаБезНДС,
	|	ДД.НДСОстаток              КАК НДС,
	|	ДД.НДСУпрОстаток           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачалоСНаправлениями
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|		&НачалоПериода, 
	|		(Организация, СчетФактура) В (
	|			ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания)) КАК ДД
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	СУММА(ДД.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(ДД.НДС)              КАК НДС,
	|	СУММА(ДД.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачало
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОнлайнДвижения
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		ДД.Организация = Задания.Организация
	|		И ДД.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ ДД.РегламентнаяОперация
	|	И ДД.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.Период КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСПредъявленный
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = НДСПредъявленный.Организация)
	|			И (Задания.СчетФактура = НДСПредъявленный.СчетФактура)
	|ГДЕ
	|	НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСПредъявленный.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ()                  КАК НомерЗаписи,
	|	ДД.Приоритет                       КАК Приоритет,
	|	ДД.МоментВремени                   КАК МоментВремени,
	|	ДД.Период                          КАК Период,
	|	ДД.Регистратор                     КАК Регистратор,
	|	ДД.ВидДвижения                     КАК ВидДвижения,
	|	ДД.Организация                     КАК Организация,
	|	ДД.СчетФактура                     КАК СчетФактура,
	|	ДД.Поставщик                       КАК Поставщик,
	|	ДД.ВидЦенности                     КАК ВидЦенности,
	|	ДД.СтавкаНДС                       КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура         КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт               КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС                     КАК СуммаБезНДС,
	|	ДД.НДС                             КАК НДС,
	|	ДД.НДСУпр                          КАК НДСУпр,
	|	ДД.Событие                         КАК Событие,
	|	ДД.КорВидДеятельностиНДС           КАК КорВидДеятельностиНДС,
	|	ДД.Подразделение                   КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	ДД.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов               КАК АналитикаРасходов,
	|	ДД.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ДД.РегламентнаяОперация            КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеВидаДеятельности
	|ИЗ (
	|	ВЫБРАТЬ
	|		2                                      КАК Приоритет,
	|		Партии.МоментВремени                   КАК МоментВремени,
	|		Партии.Период                          КАК Период,
	|		Партии.Регистратор                     КАК Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		Партии.Организация                     КАК Организация,
	|		Партии.СчетФактура                     КАК СчетФактура,
	|		Партии.Контрагент                      КАК Поставщик,
	|		Партии.ВидЦенности                     КАК ВидЦенности,
	|		Партии.СтавкаНДС                       КАК СтавкаНДС,
	|		Партии.ВидДеятельностиНДС        КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|		НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|		Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|		Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|		Партии.НДС                             КАК НДС,
	|		Партии.НДСУпр                          КАК НДСУпр,
	|		ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости) ТОГДА
	|				ВЫБОР 
	|					КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|				КОНЕЦ
	|			КОГДА Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ                                             КАК Событие,
	|		Партии.КорВидДеятельностиНДС                      КАК КорВидДеятельностиНДС,
	|		Партии.ПодразделениеСписанияНДС                   КАК Подразделение,
	|		ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС,Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|		Партии.СтатьяСписанияНДС                          КАК СтатьяРасходов,
	|		Партии.АналитикаСписанияНДС                       КАК АналитикаРасходов,
	|		""""                                              КАК ИдентификаторСтроки,
	|		ИСТИНА                                            КАК РегламентнаяОперация
	|	ИЗ
	|		Партии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|		ПО
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДСРасход
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДСРасход.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДСРасход.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДСРасход.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДСРасход.ВидЦенности
	|			И РазрезыВычетаНДСРасход.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДСПриход
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДСПриход.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДСПриход.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДСПриход.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДСПриход.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДСПриход.РеализацияЭкспорт
	|	
	|	ГДЕ
	|		Партии.ВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|		И ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|					И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОГДА Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ <> НЕОПРЕДЕЛЕНО
	|		И НЕ (НЕ РазрезыВычетаНДСРасход.СчетФактура ЕСТЬ NULL И НЕ РазрезыВычетаНДСРасход.ПоВидуДеятельностиОсобыйПорядокВычетаНДС
	|				И НЕ РазрезыВычетаНДСПриход.СчетФактура ЕСТЬ NULL И НЕ РазрезыВычетаНДСПриход.ПоВидуДеятельностиОсобыйПорядокВычетаНДС)
	|		И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		3                                      КАК Приоритет,
	|		Партии.МоментВремени                   КАК МоментВремени,
	|		Партии.Период                          КАК Период,
	|		Партии.Регистратор                     КАК Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|		Партии.Организация                     КАК Организация,
	|		Партии.СчетФактура                     КАК СчетФактура,
	|		Партии.Контрагент                      КАК Поставщик,
	|		Партии.ВидЦенности                     КАК ВидЦенности,
	|		Партии.СтавкаНДС                       КАК СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|		ВЫБОР
	|			КОГДА Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА Партии.ДокументРеализации
	|			КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|				ТОГДА Партии.ДокументРеализации
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ                                  КАК РеализацияЭкспорт,
	|		Партии.КорНаправлениеДеятельности      КАК НаправлениеДеятельности,
	|		Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|		Партии.НДС                             КАК НДС,
	|		Партии.НДСУпр                          КАК НДСУпр,
	|		ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|		КОНЕЦ                             КАК Событие,
	|		Партии.ВидДеятельностиНДС   КАК КорВидДеятельностиНДС,
	|		НЕОПРЕДЕЛЕНО                      КАК Подразделение,
	|		Партии.НаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|		""""                              КАК ИдентификаторСтроки,
	|		ИСТИНА                            КАК РегламентнаяОперация
	|	ИЗ
	|		Партии КАК Партии
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДСРасход
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДСРасход.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДСРасход.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДСРасход.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДСРасход.ВидЦенности
	|			И РазрезыВычетаНДСРасход.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДСПриход
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДСПриход.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДСПриход.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДСПриход.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДСПриход.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДСПриход.РеализацияЭкспорт
	|		
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|		И ВЫБОР
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС В (&НалогообложенияНДСПродажиНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО 
	|					И Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|			КОГДА Партии.КорВидДеятельностиНДС В (&ВидыДеятельностиНДСУчитываетсяВСтоимости) ТОГДА
	|				ВЫБОР 
	|					КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|				КОНЕЦ
	|			КОГДА Партии.ВидДеятельностиНДС <> Партии.КорВидДеятельностиНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ <> НЕОПРЕДЕЛЕНО
	|		И НЕ (НЕ РазрезыВычетаНДСРасход.СчетФактура ЕСТЬ NULL И НЕ РазрезыВычетаНДСРасход.ПоВидуДеятельностиОсобыйПорядокВычетаНДС
	|				И НЕ РазрезыВычетаНДСПриход.СчетФактура ЕСТЬ NULL И НЕ РазрезыВычетаНДСПриход.ПоВидуДеятельностиОсобыйПорядокВычетаНДС)
	|		И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Обработаем смены вида деятельности партий, по которым НДС был списан документом СписаниеНДСНаРасходы.
	|	ВЫБРАТЬ
	|		2,
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		-Партии.СуммаБезНДС,
	|		-Партии.НДС,
	|		-Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|		НЕОПРЕДЕЛЕНО,
	|		СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|		СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|		СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|		И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		3,
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.ВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость),
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|		И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		2,
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.КорНаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|		Партии.ВидДеятельностиНДС,
	|		НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|		Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|		НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		2,
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.СтавкаНДС,
	|		Партии.КорВидДеятельностиНДС,
	|		ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СуммаБезНДС,
	|		Партии.НДС,
	|		Партии.НДСУпр,
	|		ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|		НЕОПРЕДЕЛЕНО,
	|		СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|		Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|		СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|		СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|		"""",
	|		ИСТИНА
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО 
	|			Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			СписанияНДСНаРасходы
	|		ПО 
	|			Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ГДЕ
	|		Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		И Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|	) КАК ДД
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСПринимаетсяКВозмещению", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСУчитываетсяВСтоимости", УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("НалогообложенияНДСПродажиНаЭкспорт", НалогообложенияНДСПродажиНаЭкспорт());
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйИзменениеВидаДеятельности";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	// Обработаем смену направления деятельности 
	|ВЫБРАТЬ
	|	2                                      КАК Приоритет,
	|	Партии.МоментВремени                   КАК МоментВремени,
	|	Партии.Период                          КАК Период,
	|	Партии.Регистратор                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Партии.Организация                     КАК Организация,
	|	Партии.СчетФактура                     КАК СчетФактура,
	|	Партии.Контрагент                      КАК Поставщик,
	|	Партии.ВидЦенности                     КАК ВидЦенности,
	|	Партии.СтавкаНДС                       КАК СтавкаНДС,
	|	Партии.ВидДеятельностиНДС        КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Партии.НДС                             КАК НДС,
	|	Партии.НДСУпр                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности) КАК Событие,
	|	Партии.КорВидДеятельностиНДС           КАК КорВидДеятельностиНДС,
	|	Партии.ПодразделениеСписанияНДС        КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС               КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС            КАК АналитикаРасходов,
	|	""""                                   КАК ИдентификаторСтроки,
	|	ИСТИНА                                 КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.ВидДеятельностиНДС = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.КорВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности),
	|	Партии.ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                      КАК Подразделение,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.КорВидДеятельностиНДС = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|	
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|;
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет                  КАК Приоритет,
	|	ДД.МоментВремени              КАК МоментВремени,
	|	ДД.Период                     КАК Период,
	|	ДД.Регистратор                КАК Регистратор,
	|	ДД.ВидДвижения                КАК ВидДвижения,
	|	ДД.Организация                КАК Организация,
	|	ДД.СчетФактура                КАК СчетФактура,
	|	ДД.Поставщик                  КАК Поставщик,
	|	ДД.ВидЦенности                КАК ВидЦенности,
	|	ДД.СтавкаНДС                  КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаБезНДС > ДД.СуммаБезНДС
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ Остатки.СуммаБезНДС
	|	КОНЕЦ                         КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДС > ДД.НДС
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ Остатки.НДС
	|	КОНЕЦ                         КАК НДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДСУпр > ДД.НДСУпр
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ Остатки.НДСУпр
	|	КОНЕЦ                         КАК НДСУпр,
	|	ДД.Событие                    КАК Событие,
	|	ДД.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ДД.Подразделение              КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДД.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов          КАК АналитикаРасходов,
	|	ДД.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	ДД.РегламентнаяОперация       КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачало КАК Остатки
	|	ПО
	|		ДД.Организация   = Остатки.Организация
	|		И ДД.СчетФактура = Остатки.СчетФактура
	|		И ДД.Поставщик   = Остатки.Поставщик
	|		И ДД.ВидЦенности = Остатки.ВидЦенности
	|		И ДД.СтавкаНДС   = Остатки.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = Остатки.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = Остатки.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = Остатки.РеализацияЭкспорт
	|	
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйИзменениеНаправленияДеятельности"
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета)
	 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.МоментВремени    КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.Ссылка           КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаПолучения    КАК Период,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура КАК ИсправительныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ПОМЕСТИТЬ НДСПредъявленныйИсправительныеСчетаФактуры
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период < &НачалоПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|		И НДСПредъявленный.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.МоментВремени КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.Ссылка КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаПолучения КАК Период,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов
	|
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|		И НЕ НДСПредъявленный.РегламентнаяОперация
	|		И НДСПредъявленный.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Событие
	|;
	|
	|ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	НДСПредъявленный.МоментВремени              КАК МоментВремени,
	|	НДСПредъявленный.Регистратор                КАК Регистратор,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС)                 КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр)              КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ИСТИНА                                      КАК РегламентнаяОперация,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ПОМЕСТИТЬ НДСПредъявленныйПоИСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСПредъявленный.МоментВремени,
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		- НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		- НДСПредъявленный.НДС КАК НДС,
	|		- НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов
	|	ИЗ
	|		НДСПредъявленныйИсправительныеСчетаФактуры КАК НДСПредъявленный
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		НДСПредъявленный.МоментВремени,
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.ИсправительныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		НДСПредъявленный.НДС КАК НДС,
	|		НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов
	|	ИЗ
	|		НДСПредъявленныйИсправительныеСчетаФактуры КАК НДСПредъявленный
	|	ГДЕ
	|		НЕ НДСПредъявленный.Событие В (
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)
	|				)
	|	) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.МоментВремени,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов
	|
	|ИМЕЮЩИЕ 
	|	СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСПредъявленныйИсправительныеСчетаФактуры
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйПоИСФ";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	0                          КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|	ДД.НДС                     КАК НДС,
	|	ДД.НДСУпр                  КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйДвиженияЗаПериод
	|ИЗ
	|	НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности  КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйПоИСФ  КАК ДД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|;
	|
	|ВЫБРАТЬ
	|	1                                       КАК Приоритет,
	|	ДД.Период                               КАК Период,
	|	ДД.Регистратор                          КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ДД.Организация                          КАК Организация,
	|	ДД.СчетФактура                          КАК СчетФактура,
	|	ДД.Поставщик                            КАК Поставщик,
	|	ДД.ВидЦенности                          КАК ВидЦенности,
	|	ДД.СтавкаНДС                            КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура              КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                    КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	(ДД.СуммаБезНДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                           КАК СуммаБезНДС,
	|	(ДД.НДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДС,
	|	(ДД.НДСУпр) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                     КАК ИдентификаторСтроки,
	|	ИСТИНА                                   КАК РегламентнаяОперация
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПодВидДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачало КАК НДСПредъявленныйОстатокНаНачало
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйОстатокНаНачало.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйОстатокНаНачало.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйОстатокНаНачало.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйОстатокНаНачало.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйОстатокНаНачало.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйОстатокНаНачало.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйОстатокНаНачало.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйОстатокНаНачало.РеализацияЭкспорт
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйДвиженияЗаПериод КАК НДСПредъявленныйДвиженияЗаПериод
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйДвиженияЗаПериод.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйДвиженияЗаПериод.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйДвиженияЗаПериод.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйДвиженияЗаПериод.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйДвиженияЗаПериод.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйДвиженияЗаПериод.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйДвиженияЗаПериод.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйДвиженияЗаПериод.РеализацияЭкспорт
	|		И (НДСПредъявленныйДвиженияЗаПериод.Приоритет = 0 // Онлайн движения
	|			ИЛИ НДСПредъявленныйДвиженияЗаПериод.НДС > 0  // Приход
	|			ИЛИ ДД.МоментВремени > НДСПредъявленныйДвиженияЗаПериод.МоментВремени // Более ранее движения 
	|			ИЛИ (ДД.МоментВремени = НДСПредъявленныйДвиженияЗаПериод.МоментВремени 
	|					И НДСПредъявленныйДвиженияЗаПериод.Приоритет < ДД.Приоритет))
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|	ПО
	|		ДД.Организация = СписанияНДСНаРасходы.Организация
	|		И ДД.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|ГДЕ
	|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL 
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДД.НомерЗаписи,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СуммаБезНДС,
	|	ДД.НДС,
	|	ДД.НДСУпр
	|
	|ИМЕЮЩИЕ
	|	((ДД.НДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ) > 0
	|	ИЛИ (ДД.СуммаБезНДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ  > 0
	|
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйВосстановлениеПодВидДеятельности";
	
КонецФункции

Процедура ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС) КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстаткиНаКонецПериода 
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.СчетФактура             КАК СчетФактура,
	|		ДД.Поставщик               КАК Поставщик,
	|		ДД.ВидЦенности             КАК ВидЦенности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ДД.СуммаБезНДС,
	|		ДД.НДС,
	|		ДД.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйПоИСФ КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеНаправленияДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйВосстановлениеПодВидДеятельности КАК ДД
	|) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСПредъявленный.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	ИсправленныйСчетФактура
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация              КАК Организация,
	|	НДСПредъявленный.СчетФактура              КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности              КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура  КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт        КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС              КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                      КАК НДС,
	|	НДСПредъявленный.НДСУпр                   КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатки
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК НДСПредъявленный
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КорректировочныеСчетаФактуры КАК КорректировочныеСчетаФактуры
	|	ПО
	|		НДСПредъявленный.Организация = КорректировочныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = КорректировочныеСчетаФактуры.СчетФактура
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА НЕ КорректировочныеСчетаФактуры.СчетФактура ЕСТЬ NULL 
	|			ТОГДА НДСПредъявленный.НДС > 0
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	ИсправленныйСчетФактура,
	|	РеализацияЭкспорт,
	|	НаправлениеДеятельности
	|;
	|
	|///////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.МоментВремени              КАК МоментВремени,
	|	Партии.Период                     КАК Период,
	|	Партии.Регистратор                КАК Регистратор,
	|	Партии.Организация                КАК Организация,
	|	Партии.СчетФактура                КАК СчетФактура,
	|	Партии.ДатаПоступления            КАК ДатаПоступления,
	|	Партии.Контрагент                 КАК Поставщик,
	|	Партии.ВидЦенности                КАК ВидЦенности,
	|	Партии.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	Партии.СтавкаНДС                  КАК СтавкаНДС,
	|	СУММА(Партии.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(Партии.НДС)                 КАК НДС,
	|	СУММА(Партии.НДСУпр)              КАК НДСУпр
	|ПОМЕСТИТЬ ПартииНаПродажаОблагаетсяНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Партии.МоментВремени              КАК МоментВремени,
	|		Партии.Период                     КАК Период,
	|		Партии.Регистратор                КАК Регистратор,
	|		Партии.Организация                КАК Организация,
	|		Партии.СчетФактура                КАК СчетФактура,
	|		Партии.ДатаПоступления            КАК ДатаПоступления,
	|		Партии.Контрагент                 КАК Контрагент,
	|		Партии.ВидЦенности                КАК ВидЦенности,
	|		Партии.КорВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|		Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|		Партии.СтавкаНДС                  КАК СтавкаНДС,
	|		Партии.СуммаБезНДС                КАК СуммаБезНДС,
	|		Партии.НДС                        КАК НДС,
	|		Партии.НДСУпр                     КАК НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_НовыйВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_НовыйВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДС_НовыйВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_НовыйВидДеятельности.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДС_НовыйВидДеятельности.РеализацияЭкспорт
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_ТекущийВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_ТекущийВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидЦенности
	|			И РазрезыВычетаНДС_ТекущийВидДеятельности.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|
	|	ГДЕ
	|		НЕ РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И Партии.НДС > 0
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.ДатаПоступления,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.ВидДеятельностиНДС,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СтавкаНДС,
	|		-Партии.СуммаБезНДС,
	|		-Партии.НДС,
	|		-Партии.НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_НовыйВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_НовыйВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура
	|			И Партии.КорВидДеятельностиНДС = РазрезыВычетаНДС_НовыйВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_НовыйВидДеятельности.ВидЦенности
	|			И Партии.ДокументРеализации = РазрезыВычетаНДС_НовыйВидДеятельности.РеализацияЭкспорт
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РазрезыВычетаНДС КАК РазрезыВычетаНДС_ТекущийВидДеятельности
	|		ПО
	|			Партии.Организация = РазрезыВычетаНДС_ТекущийВидДеятельности.Организация
	|			И Партии.СчетФактура = РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура
	|			И Партии.ВидДеятельностиНДС = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидДеятельностиНДС
	|			И Партии.ВидЦенности = РазрезыВычетаНДС_ТекущийВидДеятельности.ВидЦенности
	|			И РазрезыВычетаНДС_ТекущийВидДеятельности.РеализацияЭкспорт = НЕОПРЕДЕЛЕНО
	|	
	|	ГДЕ
	|		НЕ РазрезыВычетаНДС_ТекущийВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И РазрезыВычетаНДС_НовыйВидДеятельности.СчетФактура ЕСТЬ NULL
	|		И Партии.НДС < 0
	|
	|	) КАК Партии
	|	
	|СГРУППИРОВАТЬ ПО
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	НаправлениеДеятельности
	|;
	|
	|ВЫБРАТЬ
	|	Партии.Организация                КАК Организация,
	|	Партии.СчетФактура                КАК СчетФактура,
	|	Партии.ДатаПоступления            КАК ДатаПоступления,
	|	Партии.Поставщик                  КАК Поставщик,
	|	Партии.ВидЦенности                КАК ВидЦенности,
	|	Партии.СтавкаНДС                  КАК СтавкаНДС,
	|	Партии.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	СУММА(Партии.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(Партии.НДС)                 КАК НДС,
	|	СУММА(Партии.НДСУпр)              КАК НДСУпр
	|ПОМЕСТИТЬ ПартииНаПродажаОблагаетсяНДСИтоги 
	|ИЗ
	|	ПартииНаПродажаОблагаетсяНДС КАК Партии
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.Поставщик,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	НаправлениеДеятельности
	|;
	|
	|ВЫБРАТЬ
	|	2                                                                КАК Приоритет,
	|	РазрезыВычетаНДС.Период                                          КАК Период,
	|	РазрезыВычетаНДС.Регистратор                                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                             КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС - ЕСТЬNULL(ДанныеПартий.СуммаБезНДС, 0)           КАК СуммаБезНДС,
	|	ДД.НДС - ЕСТЬNULL(ДанныеПартий.НДС, 0)                           КАК НДС,
	|	ДД.НДСУпр - ЕСТЬNULL(ДанныеПартий.НДСУпр, 0)                     КАК НДСУпр,
	|	РазрезыВычетаНДС.Событие                                         КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                                             КАК ИдентификаторСтроки,
	|	ИСТИНА                                                           КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйПринятиеКВычету
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РазрезыВычетаНДС КАК РазрезыВычетаНДС
	|	ПО
	|		ДД.Организация = РазрезыВычетаНДС.Организация
	|		И ДД.СчетФактура = РазрезыВычетаНДС.СчетФактура
	|		И ДД.ВидДеятельностиНДС = РазрезыВычетаНДС.ВидДеятельностиНДС
	|		И ДД.ВидЦенности = РазрезыВычетаНДС.ВидЦенности
	|		И ДД.РеализацияЭкспорт = РазрезыВычетаНДС.РеализацияЭкспорт
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДСИтоги КАК ДанныеПартий
	|	ПО
	|		ДД.Организация = ДанныеПартий.Организация
	|		И ДД.СчетФактура = ДанныеПартий.СчетФактура
	|		И ДД.Поставщик = ДанныеПартий.Поставщик
	|		И ДД.ВидЦенности = ДанныеПартий.ВидЦенности
	|		И ДД.СтавкаНДС = ДанныеПартий.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = ДанныеПартий.ВидДеятельностиНДС
	|		И ДД.НаправлениеДеятельности = ДанныеПартий.НаправлениеДеятельности
	|	
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА ДД.НДС < 0 ТОГДА
	|			ИСТИНА
	|		КОГДА ЕСТЬNULL(ДанныеПартий.НДС, 0) <> 0 ТОГДА
	|			(ДД.НДС - ЕСТЬNULL(ДанныеПартий.НДС, 0)) > 0
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4                                                                КАК Приоритет,
	|	ДанныеПартий.Период                                              КАК Период,
	|	ДанныеПартий.Регистратор                                         КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                             КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.СуммаБезНДС) <= 
	|				(МАКСИМУМ(ДД.СуммаБезНДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.СуммаБезНДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.СуммаБезНДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.СуммаБезНДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.СуммаБезНДС, 0))
	|	КОНЕЦ                                                             КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДС) <= 
	|				(МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0))
	|	КОНЕЦ                                                             КАК НДС,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДСУпр) <= 
	|				(МАКСИМУМ(ДД.НДСУпр) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДСУпр, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДСУпр)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДСУпр) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДСУпр, 0))
	|	КОНЕЦ                                                             КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)   КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                      КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов,
	|	""""                                                              КАК ИдентификаторСтроки,
	|	ИСТИНА                                                            КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РазрезыВычетаНДС КАК РазрезыВычетаНДС
	|	ПО
	|		ДД.Организация = РазрезыВычетаНДС.Организация
	|		И ДД.СчетФактура = РазрезыВычетаНДС.СчетФактура
	|		И ДД.ВидДеятельностиНДС = РазрезыВычетаНДС.ВидДеятельностиНДС
	|		И ДД.ВидЦенности = РазрезыВычетаНДС.ВидЦенности
	|		И ДД.РеализацияЭкспорт = РазрезыВычетаНДС.РеализацияЭкспорт
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДС КАК ДанныеПартий
	|	ПО
	|		ДД.Организация = ДанныеПартий.Организация
	|		И ДД.СчетФактура = ДанныеПартий.СчетФактура
	|		И ДД.Поставщик = ДанныеПартий.Поставщик
	|		И ДД.ВидЦенности = ДанныеПартий.ВидЦенности
	|		И ДД.СтавкаНДС = ДанныеПартий.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = ДанныеПартий.ВидДеятельностиНДС
	|		И ДД.НаправлениеДеятельности = ДанныеПартий.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДС КАК ДанныеПартийУменьшение
	|	ПО
	|		ДанныеПартий.Организация = ДанныеПартийУменьшение.Организация
	|		И ДанныеПартий.СчетФактура = ДанныеПартийУменьшение.СчетФактура
	|		И ДанныеПартий.Поставщик = ДанныеПартийУменьшение.Поставщик
	|		И ДанныеПартий.ВидЦенности = ДанныеПартийУменьшение.ВидЦенности
	|		И ДанныеПартий.СтавкаНДС = ДанныеПартийУменьшение.СтавкаНДС
	|		И ДанныеПартий.ВидДеятельностиНДС = ДанныеПартийУменьшение.ВидДеятельностиНДС
	|		И ДанныеПартий.НаправлениеДеятельности = ДанныеПартийУменьшение.НаправлениеДеятельности
	|		И ДанныеПартий.МоментВремени < ДанныеПартийУменьшение.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПартий.Период,
	|	ДанныеПартий.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности,
	|	ДД.ИсправленныйСчетФактура
	|
	|ИМЕЮЩИЕ
	|	(ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДС) <= (МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0))
	|	КОНЕЦ > 0)
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйПринятиеКВычету";
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                    КАК ВидДвижения,
	|	ДД.Организация                                                            КАК Организация,
	|	ДД.СчетФактура                                                            КАК СчетФактура,
	|	ДД.Поставщик                                                              КАК Поставщик,
	|	ДД.ВидЦенности                                                            КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                              КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                                     КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                                КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                                      КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                                КАК НаправлениеДеятельности,
	|	-ДД.СуммаБезНДС                                                           КАК СуммаБезНДС,
	|	-ДД.НДС                                                                   КАК НДС,
	|	-ДД.НДСУпр                                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)     КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                              КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                              КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                              КАК АналитикаРасходов,
	|	""""                                                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                    КАК РегламентнаяОперация
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПоКСФ
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КорректировочныеСчетаФактуры КАК КорректировочныеСчетаФактуры
	|	ПО
	|		ДД.СчетФактура = КорректировочныеСчетаФактуры.СчетФактура
	|		И ДД.Организация = КорректировочныеСчетаФактуры.Организация
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|ГДЕ
	|	ДД.ВидДеятельностиНДС В (&ВидыДеятельностиНДСПринимаетсяКВозмещению)
	|	И ДД.НДС < 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВидыДеятельностиНДСПринимаетсяКВозмещению", УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению());
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйВосстановлениеПоКСФ"
	
КонецФункции

Функция РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	%1 КАК НДСПредъявленный";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстЗапросаСохранение =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0                                           КАК Приоритет,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Регистратор                КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйСохранение
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСПредъявленный.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = НДСПредъявленный.Организация
	|		И Задания.СчетФактура = НДСПредъявленный.СчетФактура
	|ГДЕ
	|	НЕ РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|	И (НДСПредъявленный.Период < &НачалоПериода
	|			ИЛИ НДСПредъявленный.Период > &КонецПериода
	|			ИЛИ НЕ НДСПредъявленный.РегламентнаяОперация
	|			ИЛИ Задания.СчетФактура ЕСТЬ NULL)
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";

	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапросаСохранение, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат "НДСПредъявленныйСохранение";
	
КонецФункции

Процедура ЗаписатьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовДанных = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения КАК ВидДвижения,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.Поставщик КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС КАК НДС,
	|	НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НДСПредъявленный.Событие КАК Событие, 
	|	НДСПредъявленный.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение  КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация КАК РегламентнаяОперация
	|ИЗ
	|	%1 КАК НДСПредъявленный";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		МассивТекстовДанных.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстДанныеДляЗаписи = СтрСоединить(МассивТекстовДанных, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		ТекстДанныеДляЗаписи
		+ "
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор,
		|	Период,
		|	Приоритет
		|
		|ИТОГИ ПО
		|	Регистратор
		|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
		// а при создании заданий даты запрета контролируются. 
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНДСПредъявленный(ПараметрыРасчета, ИменаТаблицЗаписейНДСПредъявленный)
	
	МассивТекстовРегистраторыЗапись = Новый Массив;
	ШаблонЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	%1 КАК НДСПредъявленный";
	Для каждого ИмяТаблицыЗаписей Из ИменаТаблицЗаписейНДСПредъявленный Цикл
		МассивТекстовРегистраторыЗапись.Добавить(СтрШаблон(ШаблонЗапроса, ИмяТаблицыЗаписей));
	КонецЦикла;
	ТекстРегистраторыЗапись = СтрСоединить(МассивТекстовРегистраторыЗапись, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстУстаревшиеРегистраторы = 
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ГДЕ
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ
	|
	|%ТекстРегистраторыЗапись
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		УстаревшиеРегистраторы.Регистратор = РегистраторыЗапись.Регистратор
	|
	|ГДЕ
	|	РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстУстаревшиеРегистраторы, "%ТекстРегистраторыЗапись", ТекстРегистраторыЗапись);
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженияКорректировкиСписанияНДСНаРасходы

Процедура СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета);
	ОчиститьНДСПрочиеРасходы(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТекущиеРегистраторыПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		ПрочиеРасходы.Регистратор = НДСПредъявленный.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы)
	|	И НЕ ПрочиеРасходы.Регистратор ССЫЛКА Документ.СписаниеНДСНаРасходы
	|	И НЕ ПрочиеРасходы.РасчетСебестоимости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                        КАК Приоритет,
	|	НДСПредъявленный.Период                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	НДСПредъявленный.Регистратор             КАК Регистратор,
	|	НДСПредъявленный.Организация             КАК Организация,
	|	НДСПредъявленный.Подразделение           КАК Подразделение,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов          КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов       КАК АналитикаРасходов,
	|	0                                        КАК Сумма,
	|	0                                        КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                     КАК СуммаРегл,
	|	НДСПредъявленный.НДСУпр                  КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА НЕ НДСПредъявленный.СтатьяРасходов.ПринятиеКНалоговомуУчету ТОГДА
	|			НДСПредъявленный.НДС 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы) КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленный.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленный.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК ПрочиеРасходы
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.ИдентификаторСтроки
	|	
	|ПОМЕСТИТЬ ПрочиеРасходыСохранение
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		ПрочиеРасходы.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы)
	|	ИЛИ НЕ ПрочиеРасходы.Организация В (&МассивОрганизаций)
	|	ИЛИ ПрочиеРасходы.Период < &НачалоПериода 
	|	ИЛИ ПрочиеРасходы.Период > &КонецПериода 
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.ИдентификаторСтроки
	|ИЗ
	|	ПрочиеРасходыСохранение КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходы КАК ПрочиеРасходы
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходы.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходыСохранение КАК ПрочиеРасходыСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходыСохранение.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.Регистратор ЕСТЬ NULL
	|	И ПрочиеРасходыСохранение.Регистратор ЕСТЬ NULL
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти
