////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	//++ Локализация
	
	Если Элемент.Имя = Элементы.ВариантПримененияЦелевогоФинансирования.Имя
		ИЛИ Элемент.Имя = Элементы.ГруппаОС.Имя
		ИЛИ Элемент.Имя = Элементы.ВариантРаздельногоУчетаНДСИзДокумента.Имя
		ИЛИ Элемент.Имя = Элементы.ВариантРаздельногоУчетаНДСРаспределяется.Имя
		ИЛИ Элемент.Имя = Элементы.ПорядокУчетаНУ.Имя Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ЦелевоеФинансированиеСчет.Имя
		ИЛИ Элемент.Имя = Элементы.АмортизационнаяГруппа.Имя
		ИЛИ Элемент.Имя = Элементы.МетодНачисленияАмортизацииБУ.Имя 
		ИЛИ Элемент.Имя = Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяДоходовЦФ.Имя Тогда
		
		Если ЗначениеЗаполнено(Объект.СтатьяДоходов) Тогда
			ТребуетсяВызовСервера = Истина;
		Иначе
			Форма.АналитикаДоходовОбязательна = Ложь;
			Объект.АналитикаДоходов = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Элемент.Имя = Элементы.ДокументНаОсновании.Имя Тогда
		
		ДокументНаОснованииПриИзменении(Форма, ПродолжитьИзменениеРеквизита);
		
	ИначеЕсли Элемент.Имя = Элементы.ПорядокУчетаБУ.Имя Тогда
		
		ПорядокУчетаБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.СрокИспользованияБУ.Имя Тогда
		
		СрокИспользованияБУПриИзменении(ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.СрокИспользованияНУ.Имя Тогда
		
		СрокИспользованияНУПриИзменении(ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовБУ.Имя Тогда
		
		СтатьяРасходовБУПриИзменении(Форма, ТребуетсяВызовСервера, ДополнительныеПараметры)
		
	ИначеЕсли Элемент.Имя = Элементы.АналитикаРасходовБУ.Имя Тогда
		
		АналитикаРасходовБУПриИзменении(Форма);
		
	ИначеЕсли Элемент.Имя = Элементы.ПередаватьРасходыВДругуюОрганизацию.Имя Тогда
		
		ПередаватьРасходыВДругуюОрганизациюПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовАмортизационнойПремии.Имя Тогда
		
		СтатьяРасходовАмортизационнойПремииПриИзменении(Форма, ТребуетсяВызовСервера);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовНалог.Имя Тогда
		
		СтатьяРасходовНалогПриИзменении(Форма, ТребуетсяВызовСервера);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяДоходовПоИнвентаризации.Имя Тогда
		
		СтатьяДоходовПоИнвентаризацииПриИзменении(Форма, ТребуетсяВызовСервера);
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьБУ_Расширенная.Имя Тогда
		
		ОССтоимостьБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьНУ.Имя Тогда
		
		ОССтоимостьНУПриИзменении(Форма);
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьПР.Имя Тогда
		
		ОССтоимостьПРПриИзменении(Форма);
		
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			Элемент.Имя, 
			ДополнительныеПараметры,
			ТребуетсяВызовСервера);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	
	Если Команда.Имя = Форма.Команды.ЗаполнитьИсточникиФинансирования.Имя Тогда
		ТребуетсяВызовСервера = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ДополнительныеПараметры,
			ТребуетсяВызовСервера);
			
	КонецЕсли; 
	
КонецПроцедуры

Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(Объект, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	Если СтруктураИзмененныхРеквизитов.Количество() = 0
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")  
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			И ЗначениеЗаполнено(Объект.СтатьяРасходовБУ) Тогда
			
		Возврат Истина;
	КонецЕсли; 
	//-- Локализация
	
	Возврат Ложь;

КонецФункции

Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "УстановкаПорядкаУчетаНУ" Тогда
		СтандартнаяОбработка = Ложь;
		
		Форма.Модифицированность = Истина;
		Объект.ПорядокУчетаНУ = Форма.РекомендуемыйПорядокУчетаНУ;
		
		ДополнительныеПараметрыДействия = Новый Структура;
		ДополнительныеПараметрыДействия.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы");
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			"ПорядокУчетаНУ", 
			ДополнительныеПараметрыДействия,
			Ложь);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

//++ Локализация

Процедура ДокументНаОснованииПриИзменении(Форма, ПродолжитьИзменениеРеквизита)
	
	ПродолжитьИзменениеРеквизита = Ложь;
	
	Объект = Форма.Объект;
	
	Если Объект.ДокументНаОсновании Тогда
		
		ОтборСписка = Новый Структура;
		ОтборСписка.Вставить("Проведен", Истина);
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			ОтборСписка.Вставить("Организация", Объект.Организация);
		КонецЕсли;
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПринятиеКУчетуОСПоДоговоруЛизинга") Тогда
			ИмяФормыВыбора = "Документ.ПоступлениеПредметовЛизинга.ФормаВыбора";
			ОтборСписка.Вставить("ВариантУчетаИмущества", ПредопределенноеЗначение("Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе"));
		Иначе
			ИмяФормыВыбора = "Документ.ИнвентаризацияОС.ФормаВыбора";
			Если ЗначениеЗаполнено(Объект.Местонахождение) Тогда
				ОтборСписка.Вставить("ПодразделениеОрганизации", Объект.Местонахождение);
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ДокументНаОснованииПриИзмененииЗавершение", ЭтотОбъект, ПараметрыОповещения);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", ОтборСписка);
		ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы,,,,, ОписаниеОповещения);
		
	Иначе
		Объект.ДокументОснование = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДокументНаОснованииПриИзмененииЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Объект.ДокументОснование = РезультатЗакрытия;
	Иначе
		Объект.ДокументНаОсновании = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ТекстВопроса = НСтр("ru = 'Заполнить документ по данным документа-основания?'");
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоДаннымОснованияЗавершение", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымОснованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			ДополнительныеПараметры.Форма, 
			"ДокументНаОсновании", 
			Неопределено,
			Истина);
			
		КонецЕсли;
	
КонецПроцедуры

Процедура ПорядокУчетаБУПриИзменении(Форма, ДополнительныеПараметры)
	
	ИзмененныеРеквизиты = ВнеоборотныеАктивыКлиентЛокализация.ПриИзмененииПорядкаУчетаБУ_ОС(
								Форма.Объект, 
								Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИзмененныеРеквизиты);
	
КонецПроцедуры

Процедура СрокИспользованияБУПриИзменении(ДополнительныеПараметры)
	
	ДополнительныеПараметры = Новый Структура;
	
	ПараметрыДействия = Новый Структура("ИмяРеквизита,ОбновитьЕслиСовпадают", "СрокИспользованияБУ", Истина);
	ДополнительныеПараметры.Вставить("Выполнить_ПриИзмененииСрокаИспользования", ПараметрыДействия);
	
КонецПроцедуры

Процедура СрокИспользованияНУПриИзменении(ДополнительныеПараметры)
	
	ДополнительныеПараметры = Новый Структура;
	
	ПараметрыДействия = Новый Структура("ИмяРеквизита,ОбновитьЕслиСовпадают", "СрокИспользованияНУ", Ложь);
	ДополнительныеПараметры.Вставить("Выполнить_ПриИзмененииСрокаИспользования", ПараметрыДействия);
	
КонецПроцедуры

Процедура СтатьяРасходовБУПриИзменении(Форма, ТребуетсяВызовСервера, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходовБУ) Тогда
		ТребуетсяВызовСервера = Истина;
	Иначе
		Объект.АналитикаРасходовБУ = Неопределено;
		Форма.АналитикаРасходовБУОбязательна = Ложь;
	КонецЕсли;
	
	Если Форма.СтатьяРасходовДоИзменения = Объект.СтатьяРасходовАмортизационнойПремии
		И Элементы.СтатьяРасходовАмортизационнойПремии.Видимость Тогда
		
		Объект.СтатьяРасходовАмортизационнойПремии = Объект.СтатьяРасходовБУ;
		Объект.АналитикаРасходовАмортизационнойПремии = Объект.АналитикаРасходовБУ;
		
	КонецЕсли;
	
	Форма.СтатьяРасходовДоИзменения = Объект.СтатьяРасходовБУ;
	Форма.АналитикаРасходовДоИзменения = Объект.АналитикаРасходовБУ;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СтатьяРасходовБУ");
	
КонецПроцедуры

Процедура АналитикаРасходовБУПриИзменении(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.СтатьяРасходовБУ = Объект.СтатьяРасходовАмортизационнойПремии
		И Форма.АналитикаРасходовДоИзменения = Объект.АналитикаРасходовАмортизационнойПремии
		И Элементы.АналитикаРасходовАмортизационнойПремии.Видимость Тогда
		
		Объект.АналитикаРасходовАмортизационнойПремии = Объект.АналитикаРасходовБУ;
		
	КонецЕсли;
	
	Форма.АналитикаРасходовДоИзменения = Объект.АналитикаРасходовБУ;
	
КонецПроцедуры

Процедура ПередаватьРасходыВДругуюОрганизациюПриИзменении(Форма, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	
	Если Не Объект.ПередаватьРасходыВДругуюОрганизацию Тогда
		Объект.ОрганизацияПолучательРасходов = Неопределено;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "ПередаватьРасходыВДругуюОрганизацию");
	
КонецПроцедуры

Процедура СтатьяРасходовАмортизационнойПремииПриИзменении(Форма, ТребуетсяВызовСервера)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходовАмортизационнойПремии) Тогда
		ТребуетсяВызовСервера = Истина;
	Иначе
		Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
		Форма.АналитикаРасходовАмортизационнойПремииОбязательна = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатьяРасходовНалогПриИзменении(Форма, ТребуетсяВызовСервера)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходовНалог) Тогда
		ТребуетсяВызовСервера = Истина;
	Иначе
		Объект.АналитикаРасходовНалог = Неопределено;
		Форма.АналитикаРасходовНалогОбязательна = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатьяДоходовПоИнвентаризацииПриИзменении(Форма, ТребуетсяВызовСервера)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.СтатьяДоходов) Тогда
		ТребуетсяВызовСервера = Истина;
	Иначе
		Форма.АналитикаДоходовОбязательна = Ложь;
		Объект.АналитикаДоходов = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОССтоимостьБУПриИзменении(Форма, ДополнительныеПараметры)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	Если ТекущиеДанные.СтоимостьНУ = Форма.ЗначенияРеквизитовОСДоИзменения.СтоимостьБУ 
		И Форма.РасширеннаяСтоимостьРегл Тогда
		
		ТекущиеДанные.СтоимостьНУ = ТекущиеДанные.СтоимостьБУ;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовОСДоИзменения");
	
КонецПроцедуры

Процедура ОССтоимостьНУПриИзменении(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	
КонецПроцедуры

Процедура ОССтоимостьПРПриИзменении(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	Если ТекущиеДанные.СтоимостьВР < 0 Тогда
		ТекущиеДанные.СтоимостьНУ = ТекущиеДанные.СтоимостьНУ + ТекущиеДанные.СтоимостьВР;
		ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
