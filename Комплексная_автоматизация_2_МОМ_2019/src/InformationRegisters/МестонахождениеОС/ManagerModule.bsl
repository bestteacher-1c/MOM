
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.МестонахождениеОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.4.9.34";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("9b4edce7-a5aa-46cb-9a54-ccfc629f9ca0");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.МестонахождениеОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Местонахождение ОС"":
	|- Заполняет новый реквизит ""Адрес местонахождения (значение)""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.МестонахождениеОС.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.МестонахождениеОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "РегистрСведений.МестонахождениеОС";
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяОбъекта;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Регистратор.Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Регистратор");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.МестонахождениеОС КАК ДанныеРегистра
	|ГДЕ
	|	(ДанныеРегистра.АдресМестонахождения <> """"
	|				И (ВЫРАЗИТЬ(ДанныеРегистра.АдресМестонахожденияЗначение КАК СТРОКА(100))) = """"
	|			ИЛИ ДанныеРегистра.АдресМестонахождения = """"
	|				И (ВЫРАЗИТЬ(ДанныеРегистра.УдалитьАдресМестонахожденияАрендатора КАК СТРОКА(100))) <> """")";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "РегистрСведений.МестонахождениеОС";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для каждого Выборка Из ОбновляемыеДанные Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.МестонахождениеОС.НаборЗаписей");
 			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
 			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.МестонахождениеОС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Прочитать();
			
			Для каждого ЗаписьРегистра Из НаборЗаписей Цикл
				
				Если ЗначениеЗаполнено(ЗаписьРегистра.АдресМестонахождения)
					И НЕ ЗначениеЗаполнено(ЗаписьРегистра.АдресМестонахожденияЗначение) Тогда
					
					ЗаписьРегистра.АдресМестонахожденияЗначение = 
						УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
							ЗаписьРегистра.АдресМестонахождения,
							Перечисления.ТипыКонтактнойИнформации.Адрес);
							
				ИначеЕсли ЗначениеЗаполнено(ЗаписьРегистра.УдалитьАдресМестонахожденияАрендатора)
					И НЕ ЗначениеЗаполнено(ЗаписьРегистра.АдресМестонахождения) Тогда
					
					ЗаписьРегистра.АдресМестонахождения = ЗаписьРегистра.УдалитьАдресМестонахожденияАрендатора;
					
					ЗаписьРегистра.АдресМестонахожденияЗначение = 
						УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
							ЗаписьРегистра.АдресМестонахождения,
							Перечисления.ТипыКонтактнойИнформации.Адрес);
							
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если НаборЗаписей.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Регистратор);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать данные регистра ""Местонахождение ОС"": %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Регистратор.Метаданные(),
									Выборка.Регистратор,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли