#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат выполнения анализатора отражения доходов с настроенными счетами.
//	
//	Параметры:
//		МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям;
//		Период - СтандартныйПериод - период с датой начала и окончания анализа.
//	ВозвращаемоеЗначение:
//		РезультатЗапроса - список всех операций, удовлетворяющий входным параметрам с настроенными для них счетами.
//
Функция РезультатЗапросаПоНастройкамОтраженияВУчете(МассивОрганизаций, Период) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	ПараметрыАнализатора = Новый Структура("МассивОрганизаций, НачалоПериода, КонецПериода", МассивОрганизаций, Период.ДатаНачала, Период.ДатаОкончания);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора);
	Запрос.Текст =
	"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеДоходы.Организация КАК Организация,
	|	ПрочиеДоходы.Подразделение КАК Подразделение,
	|	ПрочиеДоходы.СтатьяДоходов КАК СтатьяДоходов,
	|	ИСТИНА КАК ЕстьДоходы,
	|
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) <> &ПустойСчет
	|			ТОГДА ПорядокОтражения.СчетУчета
	|		ИНАЧЕ СтатьиДоходов.СчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет
	|				И СтатьиДоходов.СчетУчета <> &ПустойСчет 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаПоУмолчанию
	|	
	|ИЗ
	|	ПрочиеДоходы КАК ПрочиеДоходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтражения
	|	ПО
	|		ПрочиеДоходы.Организация = ПорядокОтражения.Организация
	|		И ПрочиеДоходы.Подразделение = ПорядокОтражения.Подразделение
	|		И ПрочиеДоходы.СтатьяДоходов = ПорядокОтражения.СтатьяДоходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|	ПО
	|		ПрочиеДоходы.СтатьяДоходов = СтатьиДоходов.Ссылка
	|		
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокОтражения.Организация КАК Организация,
	|	ПорядокОтражения.Подразделение КАК Подразделение,
	|	ПорядокОтражения.СтатьяДоходов КАК СтатьяДоходов,
	|	ЛОЖЬ КАК ЕстьДоходы,
	|
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) <> &ПустойСчет 
	|			ТОГДА ПорядокОтражения.СчетУчета
	|		ИНАЧЕ СтатьиДоходов.СчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет
	|				И СтатьиДоходов.СчетУчета <> &ПустойСчет 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаПоУмолчанию
	|	
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтражения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеДоходы КАК ПрочиеДоходы
	|	ПО
	|		ПорядокОтражения.Организация = ПрочиеДоходы.Организация
	|		И ПорядокОтражения.Подразделение = ПрочиеДоходы.Подразделение
	|		И ПорядокОтражения.СтатьяДоходов = ПрочиеДоходы.СтатьяДоходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|	ПО
	|		ПрочиеДоходы.СтатьяДоходов = СтатьиДоходов.Ссылка
	|	
	|ГДЕ
	|	ПрочиеДоходы.Организация ЕСТЬ NULL
	|	И ПорядокОтражения.Организация В (&МассивОрганизаций)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Организация Возр,
	|	Подразделение Возр,
	|	СтатьяДоходов ВОЗР
	|";
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции // РезультатЗапросаПоНастройкамОтраженияВУчете()

Функция ВременнаяТаблицаСтатейЦелевогоФинансированияКОтражению(КонецПериода, МассивОрганизаций = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаНМА.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМА.СчетУчета,
	|	ПараметрыЦелевогоФинансированияНМА.СчетУчета КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования, ЛОЖЬ) КАК ПрименениеЦелевогоФинансирования
	|ПОМЕСТИТЬ втСчетаБухгалтерскогоУчетаНМА
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК СчетаБухгалтерскогоУчетаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&ДатаОкончания, ) КАК ПараметрыЦелевогоФинансированияНМА
	|		ПО СчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ЕСТЬNULL(ДанныеСчетУчета.Подразделение, ЕСТЬNULL(ДанныеСчетУчетаЦФ.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	втСчетаБухгалтерскогоУчетаНМА КАК втСчетаБухгалтерскогоУчетаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаОкончания,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						втСчетаБухгалтерскогоУчетаНМА КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|				Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчета
	|		ПО втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ДанныеСчетУчета.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаОкончания,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчетаЦФ
	|					ИЗ
	|						втСчетаБухгалтерскогоУчетаНМА КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|				Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчетаЦФ
	|		ПО втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ДанныеСчетУчетаЦФ.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов
	|ПОМЕСТИТЬ втСтатьиЦелевогоФинансированияКОтражению
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПервоначальныеСведения.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&ДатаОкончания, ) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ПараметрыЦелевогоФинансирования.НематериальныйАктив
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаОкончания, Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПервоначальныеСведения.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(&ДатаОкончания, ) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСчетаБухгалтерскогоУчетаНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втМестонахожденияНМА";

	Если МассивОрганизаций = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация В (&МассивОрганизаций)", "");
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода);
		
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора)
	
	РежимАнализа = Неопределено;
	ПараметрыАнализатора.Свойство("РежимАнализа", РежимАнализа);
	КонецПериода = Неопределено;
	ПараметрыАнализатора.Свойство("КонецПериода", КонецПериода);
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		ОграничениеПериода = Неопределено;
		Если Не ПараметрыАнализатора.Свойство("ДатаОкончанияПериода", ОграничениеПериода) Тогда
			ОграничениеПериода = Новый СтандартнаяДатаНачала();
		КонецЕсли;
		КонецПериода = Обработки.НастройкаОтраженияДокументовВРеглУчете.ПериодКОтражениюВРеглУчете(ПараметрыАнализатора.МассивОрганизаций, ОграничениеПериода).ДатаОкончания;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаСтатейЦелевогоФинансированияКОтражению(КонецПериода, ПараметрыАнализатора.МассивОрганизаций);	
			
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.СтатьяДоходов КАК СтатьяДоходов
	|
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.Статья КАК СтатьяДоходов
	|
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.КорПодразделение КАК Подразделение,
	|	ДанныеРегистра.КорСтатья КАК СтатьяДоходов
	|
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.КорСтатья ССЫЛКА ПланВидовХарактеристик.СтатьиДоходов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	ДанныеРегистра.СтатьяДоходов КАК СтатьяДоходов
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	&УсловиеДляРегистра
	|	И ДанныеРегистра.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ТаблицаНачисления.СтатьяДоходовРасходов КАК СтатьяДоходов
	|
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов КАК ДанныеДокумента	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачисления
	|	ПО ДанныеДокумента.Ссылка = ТаблицаНачисления.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов
	|
	|ИЗ
	|	Документ.ПереоценкаНМА КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов
	|
	|ИЗ
	|	Документ.ПереоценкаОС КАК ДанныеДокумента
	|ГДЕ
	|	&УсловиеДляДокумента
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втСтатьиЦелевогоФинансированияКОтражению.Организация КАК Организация,
	|	втСтатьиЦелевогоФинансированияКОтражению.Подразделение КАК Подразделение,
	|	втСтатьиЦелевогоФинансированияКОтражению.СтатьяДоходов КАК СтатьяДоходов
	|
	|ИЗ
	|	втСтатьиЦелевогоФинансированияКОтражению КАК втСтатьиЦелевогоФинансированияКОтражению";
	
	УсловиеВхожденияВРегистр = "ГДЕ" + Символы.ПС + Символы.Таб + "&УсловиеДляРегистра";
	УсловиеВхожденияВДокумент = "ГДЕ" + Символы.ПС + Символы.Таб + "&УсловиеДляДокумента";
	ТекстСоединенияСТаблицейДокументов = "		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеРегистра.Организация = ТаблицаДокументов.Организация
	|			И ДанныеРегистра.Регистратор = ТаблицаДокументов.Документ";
	ТекстУсловийПоОрганизацииИПериоду = "ГДЕ
	|	ДанныеРегистра.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеРегистра.Организация В (&Организации)";
	
	Если РежимАнализа = "ПоНеотраженным" Тогда
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.НеУказаныСчетаУчета);
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете);
		РегистрыСведений.ОтражениеДокументовВРеглУчете.ДобавитьВременнуюТаблицуДокументовСОтборомПоСтатусуОтражения(
			Запрос.МенеджерВременныхТаблиц,
			ПараметрыАнализатора.МассивОрганизаций,
			Статусы);
	
		ТекстУсловий = ТекстСоединенияСТаблицейДокументов;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистр, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "Регистратор", "Ссылка");
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра", "ДанныеДокумента");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстУсловий);
	Иначе
		ТекстУсловий = ТекстУсловийПоОрганизацииИПериоду;
		Запрос.УстановитьПараметр("Организации", ПараметрыАнализатора.МассивОрганизаций);
		Запрос.УстановитьПараметр("ДатаНачала", ПараметрыАнализатора.НачалоПериода);
		Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВРегистр, ТекстУсловий);
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "Период", "Дата");
		ТекстУсловий = СтрЗаменить(ТекстУсловий, "ДанныеРегистра", "ДанныеДокумента");
		ТекстУсловий = ТекстУсловий + Символы.ПС + Символы.Таб + "И ДанныеДокумента.Проведен";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстУсловий);
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвижений;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.Подразделение КАК Подразделение,
	|	ТаблицаДвижений.СтатьяДоходов КАК СтатьяДоходов,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(АналитикаУчета.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|		ИНАЧЕ ПорядокОтражения.СчетУчета КОНЕЦ КАК СчетУчета,
	|
	|	ЕСТЬNULL(ПорядокОтражения.СчетУчета, ЕСТЬNULL(АналитикаУчета.СчетУчета,
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) = АналитикаУчета.СчетУчета КАК СчетУчетаПоУмолчанию
	|
	|ПОМЕСТИТЬ ТаблицаДвиженийСоСчетами
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтражения
	|		ПО ТаблицаДвижений.Организация = ПорядокОтражения.Организация
	|			И ТаблицаДвижений.Подразделение = ПорядокОтражения.Подразделение
	|			И ТаблицаДвижений.СтатьяДоходов = ПорядокОтражения.СтатьяДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК АналитикаУчета
	|		ПО ТаблицаДвижений.СтатьяДоходов = АналитикаУчета.Ссылка";
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

// Выполняет анализ всех неотраженных операций отражения доходов, ищет для них ненастроенные счета учета и заносит эти
// данные в регистр ненастроенных счетов учета.
//	
//	Параметры:
//		ПараметрыАнализатора - Структура, содержащая следующие значения:
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//			* ДатаОкончанияПериода - СтандартнаяДатаНачала - конец периода определяется на основании этой даты
//				(см. метод "Обработки.НастройкаОтраженияДокументовВРеглУчете.ПериодКОтражениюВРеглУчете");
//			* РежимАнализа - Строка - строка вида "ПоНеотраженным" -
//					необходимо для того, чтобы анализатор работал только по документам, неотраженным в регл. учете.
//
Процедура ЗаполнитьРегистрТребующихНастройкиНаОснованииАнализаНеотраженныхОпераций(ПараметрыАнализатора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
			
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора);
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.Подразделение КАК МестоУчета,
	|	ТаблицаДвиженийСоСчетами.СтатьяДоходов КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчета
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	
	СтруктураВидовСчетовИРезультатаЗапроса = Новый Соответствие;
	СтруктураВидовСчетовИРезультатаЗапроса.Вставить(Перечисления.ВидыСчетовРеглУчета.Доходы, Результат);
	
	ИмяСобытия = НСтр("ru = 'Анализ порядка отражения прочих доходов, требующего настройки'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ЗаполнитьЗаписиРегистраПоВидамСчетов(СтруктураВидовСчетовИРезультатаЗапроса, ИмяСобытия);

КонецПроцедуры

// Выполняет анализ операций отражения доходов, в зависимости от параметров и дополняет исходную таблицу операций новыми
// строками.
//	
//	Параметры:
//		ПараметрыАнализа - Структура - содержит настройки анализатора со следующими свойствами:
//			* РежимАнализа - Строка - принимает значения вида "ПоНеотраженным" и "ЗаПериод". Причем если не задана, значение по умолчанию "ЗаПериод".
//			* КонецПериода - Дата - по эту дату анализируются операции, причем если режим анализа "ПоНеотраженным", то актуальна только для
//				формирования статей целевого финансирования к отражению;
//			* ДатаОкончанияПериода - СтандартнаяДатаНачала - если конец периода не задан, конец периода определяется на основании этой даты
//				(см. метод "Обработки.НастройкаОтраженияДокументовВРеглУчете.ПериодКОтражениюВРеглУчете");
//			* НачалоПериода - Дата - начиная с этой даты анализируются операции, причем если режим анализа "ПоНеотраженным" не актуальна;
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//		АдресХранилища - Строка - адрес сохранения результата работы метода (ТаблицаЗначений).
//
Процедура ДополнитьТаблицуНаОснованииАнализаОпераций(ПараметрыАнализа, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализа);		
	 
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ПараметрыАнализа.ЗаполняемаяТаблица);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.Подразделение,
	|	ТекущаяТаблицаСчетовУчета.СтатьяДоходов,
	|
	|	ТекущаяТаблицаСчетовУчета.СчетУчета,
	|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
	|
	|ПОМЕСТИТЬ ТекущаяТаблицаСчетовУчета
	|ИЗ
	|	&Таблица КАК ТекущаяТаблицаСчетовУчета;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.Подразделение,
	|	ТаблицаДвиженийСоСчетами.СтатьяДоходов,
	|
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчета, ТаблицаДвиженийСоСчетами.СчетУчета) КАК СчетУчета,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию, ТаблицаДвиженийСоСчетами.СчетУчетаПоУмолчанию) КАК СчетУчетаПоУмолчанию,
	|	
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчета, ТаблицаДвиженийСоСчетами.СчетУчета) = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК ТребуетсяНастройка,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.ИзмененныеДанные, ""СчетУчета"") КАК ИзмененныеДанные
	|
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|	ПО
	|		ТаблицаДвиженийСоСчетами.Организация = ТекущаяТаблицаСчетовУчета.Организация
	|		И ТаблицаДвиженийСоСчетами.Подразделение = ТекущаяТаблицаСчетовУчета.Подразделение
	|		И ТаблицаДвиженийСоСчетами.СтатьяДоходов = ТекущаяТаблицаСчетовУчета.СтатьяДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТаблицаДвиженийСоСчетами.Подразделение,
	|	ТаблицаДвиженийСоСчетами.СтатьяДоходов,
	|
	|	ТекущаяТаблицаСчетовУчета.СчетУчета,
	|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
	|ИЗ
	|	ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|	ПО
	|		ТекущаяТаблицаСчетовУчета.Организация = ТаблицаДвиженийСоСчетами.Организация
	|		И ТаблицаДвиженийСоСчетами.Подразделение = ТекущаяТаблицаСчетовУчета.Подразделение
	|		И ТаблицаДвиженийСоСчетами.СтатьяДоходов = ТекущаяТаблицаСчетовУчета.СтатьяДоходов
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.Организация ЕСТЬ NULL";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ПоместитьВоВременноеХранилище(Новый Структура("СчетаУчетаДоходов", Таблица), АдресХранилища);
	
КонецПроцедуры

Процедура НайтиДокументыСоответствующиеНастройкам(ТаблицаНастроек, Дата, ТаблицаДокументов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.Организация КАК Организация,
	|	ИсходнаяТаблица.Подразделение КАК Подразделение,
	|	ИсходнаяТаблица.СтатьяДоходов КАК СтатьяДоходов
	|
	|ПОМЕСТИТЬ ТаблицаНастроек
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|ГДЕ
	|	ИсходнаяТаблица.ИзмененныеДанные <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	СтатьяДоходов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, Подразделение, СтатьяДоходов) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.Подразделение,
	|				ТаблицаНастроек.СтатьяДоходов
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ДанныеРегистра.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, Подразделение, Статья) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.Подразделение,
	|				ТаблицаНастроек.СтатьяДоходов
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ДанныеРегистра.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Обороты(, &ДатаОкончания, Регистратор,
	|		(Организация, КорПодразделение, КорСтатья) В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация,
	|				ТаблицаНастроек.Подразделение,
	|				ТаблицаНастроек.СтатьяДоходов
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ДанныеРегистра.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаНастроек КАК ТаблицаНастроек
	|	ПО
	|		ДанныеРегистра.Организация = ТаблицаНастроек.Организация
	|		И ДанныеРегистра.Подразделение = ТаблицаНастроек.Подразделение
	|		И ДанныеРегистра.СтатьяДоходов = ТаблицаНастроек.СтатьяДоходов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ДанныеРегистра.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|ГДЕ
	|	(ДанныеРегистра.Период <= &ДатаОкончания ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ
	|;");
	ИсходнаяТаблица = ТаблицаНастроек.Выгрузить(, "Организация, Подразделение, СтатьяДоходов, ИзмененныеДанные");
	Запрос.УстановитьПараметр("ИсходнаяТаблица", ИсходнаяТаблица);
	Запрос.УстановитьПараметр("ДатаОкончания", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает признак наличия ошибок заполнения настроек отражения доходов от целевого финансирования НМА в
// регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения доходов.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполенния настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияДоходовЦелевогоФинансированияНМА(МассивОрганизаций, Период) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаНМА.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМА.СчетУчета,
	|	ПараметрыЦелевогоФинансированияНМА.СчетУчета КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования, ЛОЖЬ) КАК ПрименениеЦелевогоФинансирования
	|ПОМЕСТИТЬ втСчетаБухгалтерскогоУчетаНМА
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК СчетаБухгалтерскогоУчетаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&НачалоМесяца, ) КАК ПараметрыЦелевогоФинансированияНМА
	|	ПО СчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ЕСТЬNULL(ДанныеСчетУчета.Подразделение, ЕСТЬNULL(ДанныеСчетУчетаЦФ.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахожденияНМА
	|ИЗ
	|	втСчетаБухгалтерскогоУчетаНМА КАК втСчетаБухгалтерскогоУчетаНМА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втСчетаБухгалтерскогоУчетаНМА КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчета
	|	ПО втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ДанныеСчетУчета.Субконто1
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчетаЦФ
	|				ИЗ
	|					втСчетаБухгалтерскогоУчетаНМА КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация В (&МассивОрганизаций)) КАК ДанныеСчетУчетаЦФ
	|	ПО втСчетаБухгалтерскогоУчетаНМА.НематериальныйАктив = ДанныеСчетУчетаЦФ.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ЕСТЬNULL(МестонахождениеНМА.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов
	|ПОМЕСТИТЬ втСтатьиНМАКОтражению
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК МестонахождениеНМА
	|		ПО ПервоначальныеСведения.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(&НачалоМесяца) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.НематериальныйАктив = ПараметрыЦелевогоФинансирования.НематериальныйАктив
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиНМАКОтражению.СтатьяДоходов
	|ИЗ
	|	втСтатьиНМАКОтражению КАК втСтатьиНМАКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтраженияДоходов
	|		ПО втСтатьиНМАКОтражению.Организация = ПорядокОтраженияДоходов.Организация
	|			И втСтатьиНМАКОтражению.Подразделение = ПорядокОтраженияДоходов.Подразделение
	|			И втСтатьиНМАКОтражению.СтатьяДоходов = ПорядокОтраженияДоходов.СтатьяДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО втСтатьиНМАКОтражению.СтатьяДоходов.СчетУчета = Хозрасчетный.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ПорядокОтраженияДоходов.СчетУчета, Хозрасчетный.Ссылка) ЕСТЬ NULL ";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Возвращает признак наличия ошибок заполнения настроек отражения доходов от целевого финансирования ОС в
// регламентированном учете.
//
// Параметры:
// 		МассивОрганизаций - Массив, СправочникСсылка.Организации - Массив или ссылка на элемент справочника организаций, по которым выполняется проверка
// 		Период - Дата - Период отражения доходов.
//
// Возвращаемое значение:
// 		Булево - Истина, если имеются ошибки заполенния настроек отражения расходов.
//
Функция ЕстьОшибкиЗаполненияДоходовЦелевогоФинансированияОС(МассивОрганизаций, Период) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрОрганизации = Неопределено;
	Если ТипЗнч(МассивОрганизаций) = Тип("Массив") Тогда
		ПараметрОрганизации = МассивОрганизаций;
	Иначе
		ПараметрОрганизации = Новый Массив;
		ПараметрОрганизации.Добавить(МассивОрганизаций);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрОрганизации);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.Текст =
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведения.Организация КАК Организация,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов
	|ПОМЕСТИТЬ втСтатьиОсновныхСредствКОтражению
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК ПервоначальныеСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&НачалоМесяца, Организация В (&МассивОрганизаций)) КАК МестонахождениеОС
	|		ПО ПервоначальныеСведения.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство 
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(&НачалоМесяца) КАК ПараметрыЦелевогоФинансирования
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСтатьиОсновныхСредствКОтражению.СтатьяДоходов
	|ИЗ
	|	втСтатьиОсновныхСредствКОтражению КАК втСтатьиОсновныхСредствКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтраженияДоходов
	|		ПО втСтатьиОсновныхСредствКОтражению.Организация = ПорядокОтраженияДоходов.Организация
	|			И втСтатьиОсновныхСредствКОтражению.Подразделение = ПорядокОтраженияДоходов.Подразделение
	|			И втСтатьиОсновныхСредствКОтражению.СтатьяДоходов = ПорядокОтраженияДоходов.СтатьяДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО втСтатьиОсновныхСредствКОтражению.СтатьяДоходов.СчетУчета = Хозрасчетный.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ПорядокОтраженияДоходов.СчетУчета, Хозрасчетный.Ссылка) ЕСТЬ NULL ";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли