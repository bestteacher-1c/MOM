#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Назначает спецификацию основной для указанного изделия и подразделения
//
// Параметры:
//  СтруктураЗаписи - Структура - структура записи, см. СтруктураЗаписи().
//
// Возвращаемое значение:
//   Булево - Истина, если спецификация назначена основной.
//
Функция НазначитьДляИзделия(СтруктураЗаписи) Экспорт
	
	Спецификация = СтруктураЗаписи.Спецификация;
	
	Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаписи);
	
	Попытка
		
		Запись.Записать();
		
	Исключение
		
		СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеНазначениеОсновныхСпецификаций();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
							Спецификация,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
		
		Возврат Ложь;
		
	КонецПопытки;
	
	УправлениеДаннымиОбИзделиях.ПересчитатьДлительностьПриНазначенииОсновнойСпецификации(Спецификация);
	
	Возврат Истина;
	
КонецФункции

// Назначает спецификации основными, для указанных изделий и подразделений
//
// Параметры:
//  НаборДанных	 - Массив	 - содержит набор структур, см. СтруктураЗаписи().
// 
// Возвращаемое значение:
//  Булево - Истина, если все спецификации назначены основными.
//
Функция НазначитьДляИзделий(НаборДанных) Экспорт
	
	ЕстьОшибки = Ложь;
	СписокСпецификаций = Новый Массив;
	
	Для каждого СтруктураЗаписи Из НаборДанных Цикл
		
		Спецификация = СтруктураЗаписи.Спецификация;
		
		Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаписи);
		
		Попытка
			
			Запись.Записать();
			Если СписокСпецификаций.Найти(Спецификация) = Неопределено Тогда
				СписокСпецификаций.Добавить(Спецификация);
			КонецЕсли;
			
		Исключение
		
			СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеНазначениеОсновныхСпецификаций();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
								Спецификация,
								ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
			
			ЕстьОшибки = Истина;
			
		КонецПопытки;
		
	КонецЦикла;
	
	УправлениеДаннымиОбИзделиях.ПересчитатьДлительностьПриНазначенииОсновнойСпецификации(СписокСпецификаций);
	Возврат Не ЕстьОшибки;
	
КонецФункции

// Снимает признак "Основная спецификация" для указанной спецификации
//
// Параметры:
//  Спецификация	 - СправочникСсылка.РесурсныеСпецификации	 - спецификация.
//
// Возвращаемое значение:
//   Булево - Истина, если признак снят успешно.
//
Функция УбратьПризнакДляСпецификации(Спецификация) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОсновныеСпецификации.Номенклатура,
	|	ОсновныеСпецификации.Характеристика,
	|	ОсновныеСпецификации.Подразделение
	|ИЗ
	|	РегистрСведений.ОсновныеСпецификации КАК ОсновныеСпецификации
	|ГДЕ
	|	ОсновныеСпецификации.Спецификация = &Спецификация");
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	ЕстьОшибки = Ложь;
	ЛокальнаяТранзакция = Не ТранзакцияАктивна();
	Если ЛокальнаяТранзакция Тогда
		НачатьТранзакцию();
	КонецЕсли;
	Попытка
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			Запись.Удалить();
			
		КонецЦикла;
		
		Если ЛокальнаяТранзакция Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		Если ЛокальнаяТранзакция Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ЕстьОшибки = Истина;
		СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеНазначениеОсновныхСпецификаций();
	
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
							Спецификация,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
		
	КонецПопытки;
	
	Возврат Не ЕстьОшибки;
	
КонецФункции

// Снимает отметку "Основная спецификация" для указанного изделия и подразделения
//
// Параметры:
//  СтруктураЗаписи - Структура - структура записи, см. СтруктураЗаписи().
//
// Возвращаемое значение:
//   Булево - Истина, если признак снят успешно.
//
Функция УбратьПризнакДляИзделия(СтруктураЗаписи) Экспорт
	
	Спецификация = СтруктураЗаписи.Спецификация;
	
	Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, СтруктураЗаписи);
	
	Попытка
		
		Запись.Удалить();
		
	Исключение
		
		СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеНазначениеОсновныхСпецификаций();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
							Спецификация,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СтруктураЗаписи() Экспорт
	
	СоставПолей = "
		|Номенклатура,
		|Характеристика,
		|Подразделение,
		|
		|Период,
		|Спецификация,
		|
		|МодельФормированияСтоимости,
		|ПравилоРаспределения,
		|ОтражатьЗатратыДокументом,
		|ПолноеНаименованиеМодели,
		|ТребуетсяНастройка
		|";
	Возврат Новый Структура(СоставПолей);
	
КонецФункции

Процедура ПроверитьНазначитьСпецификациюПриЗаписи(Объект, Отказ) Экспорт
	
	Спецификация = Объект.Ссылка;
	ВыходныеИзделия = Объект.ВыходныеИзделия.Выгрузить(,"Номенклатура,Характеристика");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВТВыходныеИзделия
	|ИЗ
	|	&ВыходныеИзделия КАК ВыходныеИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.Характеристика КАК Характеристика
	|ИЗ
	|	ВТВыходныеИзделия КАК ВыходныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСпецификации КАК ОсновныеСпецификации
	|		ПО ВыходныеИзделия.Номенклатура = ОсновныеСпецификации.Номенклатура
	|			И ВыходныеИзделия.Характеристика = ОсновныеСпецификации.Характеристика
	|			И ОсновныеСпецификации.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|ГДЕ
	|	ОсновныеСпецификации.Спецификация ЕСТЬ NULL");
	Запрос.УстановитьПараметр("ВыходныеИзделия", ВыходныеИзделия);
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОсновныеСпецификации");
		
		ЭлементБлокировки.ИсточникДанных = ВыходныеИзделия;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		
		ЭлементБлокировки.УстановитьЗначение("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
		
		Блокировка.Заблокировать();
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи(); // для всех подразделений
			Запись.Номенклатура   = Выборка.Номенклатура;
			Запись.Характеристика = Выборка.Характеристика;
			Запись.Спецификация   = Спецификация;
			Запись.Записать();
			
		КонецЦикла;
		
	Исключение
		
		СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеНазначениеОсновныхСпецификаций();
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
							Спецификация,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли