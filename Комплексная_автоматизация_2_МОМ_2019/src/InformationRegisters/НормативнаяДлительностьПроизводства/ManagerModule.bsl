#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Рассчитывает нормативную длительность производства
//
// Параметры:
//  ОбъектРасчета - СправочникСсылка.РесурсныеСпецификации, СправочникСсылка.СтруктураПредприятия,
//                  СправочникСсылка.Календари, Массив - объект расчета или список объектов.
//
Процедура Рассчитать(ОбъектРасчета) Экспорт
	
	КоличествоИтераций = 0;
	ЗамерВремени = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("РегистрСведений.НормативнаяДлительностьПроизводства.МодульМенеджера.Рассчитать");
	
	РассчитатьВнутриЗамераВремени(ОбъектРасчета, КоличествоИтераций);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ЗамерВремени, КоличествоИтераций);

КонецПроцедуры

// Возвращает длительность производства по спецификации
//
// Параметры:
//  Спецификация - СправочникСсылка.РесурсныеСпецификация, Массив - спецификации.
// 
// Возвращаемое значение:
//   - Структура, Соответствие - длительность производства.
//
Функция ПолучитьДлительность(Спецификация) Экспорт
	
	ТекстЗапроса = ТекстЗапросаДлительностиПроизводстваПоСпецификации();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", ПроизводствоСервер.МассивЗначений(Спецификация));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если ТипЗнч(Спецификация) <> Тип("Массив") Тогда
		
		Результат = СтруктураДанныхЗаписиРегистра();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЗаполнитьЗначенияСвойств(Результат, Выборка);
		КонецЕсли;
		
	Иначе
		
		Результат = Новый Соответствие;
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Данные = СтруктураДанныхЗаписиРегистра();
				ЗаполнитьЗначенияСвойств(Данные, Выборка);
				Результат.Вставить(Выборка.Спецификация, Данные);
			КонецЦикла;
		КонецЕсли;
		
		Для каждого Элемент Из Спецификация Цикл
			Если Результат.Получить(Элемент) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Данные = СтруктураДанныхЗаписиРегистра();
			Результат.Вставить(Элемент, Данные);
		КонецЦикла;

	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РасчетДлительности

Процедура РассчитатьВнутриЗамераВремени(ОбъектыРасчета, КоличествоИтераций = 0)
	
	Очередь = СоздатьОчередь(ОбъектыРасчета);
	
	УстановитьПривилегированныйРежим(Истина);
	Пока Очередь.ВГраница() <> -1 Цикл
		
		ЕстьОшибки = Ложь;
		ЕстьИзменения = Ложь;
		
		ОбъектРасчета = Очередь[0];
		РасчетПоСпецификации = Ложь;
		
		Задание = РегистрыСведений.ЗаданияКРасчетуДлительностиПроизводства.ПолучитьЗадание(ОбъектРасчета);
		
		// расчет нормативной длительности производства по спецификации
		Если ТипЗнч(ОбъектРасчета) = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда 
			
			Спецификация = ОбъектРасчета;
			РасчетПоСпецификации = Истина;
			
			Если Задание.РасчетДнейДоОкончания Тогда
				ЕстьОшибки = ЕстьОшибки ИЛИ Не РегистрыСведений.НормативнаяДлительностьЭтаповПроизводства.Рассчитать(Спецификация);
			КонецЕсли;
			
			Если Не ЕстьОшибки Тогда
				
				РезультатРасчета = ВычислитьДлительность(Спецификация);
				
				НачатьТранзакцию();
				Попытка
					
					Блокировка = Новый БлокировкаДанных;
					
					ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НормативнаяДлительностьПроизводства");
					ЭлементБлокировки.УстановитьЗначение("Спецификация", Спецификация);
					
					Блокировка.Заблокировать();
					
					ДлительностьДоИзменения = ПолучитьДлительность(Спецификация);
					
					ЕстьИзменения = Не ДлительностиРавны(РезультатРасчета, ДлительностьДоИзменения);
					Если ЕстьИзменения Тогда
						ЗаписатьРезультатРасчета(Спецификация, РезультатРасчета);
					КонецЕсли;
					
					ЗафиксироватьТранзакцию();
					
				Исключение
					
					ОтменитьТранзакцию();
					
					СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеРасчетНормативнойДлительности();
					
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось обработать спецификацию: %1 по причине: %2'"),
										Спецификация,
										ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
					ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, Спецификация.Метаданные(), Спецификация, ТекстСообщения);
					
					ЕстьОшибки = Истина;
					ЕстьИзменения = Ложь;
					
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// добавление в очередь расчета зависимых объектов
		Если ЕстьИзменения Или Не РасчетПоСпецификации Тогда
			
			ДлительностьЗависимых = Новый Соответствие;
			ЗависимыеОбъекты = ЗависимыеОбъектыРасчета(ОбъектРасчета);
			Если ЗначениеЗаполнено(ЗависимыеОбъекты) Тогда
				
				Если РасчетПоСпецификации Тогда
					ДлительностьЗависимых = ПолучитьДлительность(ЗависимыеОбъекты);
					Для каждого КлючИЗначение Из ДлительностьЗависимых Цикл
						Если КлючИЗначение.Значение.Предел  >  Макс(РезультатРасчета.ПлановаяДлительность,
																	ДлительностьДоИзменения.ПлановаяДлительность) Тогда
							ЗависимыеОбъекты.Удалить(ЗависимыеОбъекты.Найти(КлючИЗначение.Ключ));
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ПараметрыРасчета = РегистрыСведений.ЗаданияКРасчетуДлительностиПроизводства.ПараметрыРасчета();
				Для каждого ЗависимыйОбъект Из ЗависимыеОбъекты Цикл
					ПараметрыРасчета.РасчетДнейДоОкончания = Не РасчетПоСпецификации ИЛИ (ДлительностьЗависимых[ЗависимыйОбъект] <> Неопределено
																						И ДлительностьЗависимых[ЗависимыйОбъект].ЕстьВложенныеСпецификации);
					НомерЗадания = РегистрыСведений.ЗаданияКРасчетуДлительностиПроизводства.ДобавитьОтложенноеЗадание(ЗависимыйОбъект, ПараметрыРасчета);
					Если НомерЗадания <> 1 Тогда
						Продолжить;
					КонецЕсли;
					Очередь.Добавить(ЗависимыйОбъект);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЕстьЗаданияКРасчету = Ложь;
		Если Не ЕстьОшибки Тогда
			ОсталосьВыполнить = 0;
			РегистрыСведений.ЗаданияКРасчетуДлительностиПроизводства.УдалитьЗадание(Задание, ОсталосьВыполнить);
			ЕстьЗаданияКРасчету = ОсталосьВыполнить > 0;
		КонецЕсли;
		
		Если Не ЕстьЗаданияКРасчету Тогда
			Очередь.Удалить(0);
		КонецЕсли;
		КоличествоИтераций = КоличествоИтераций + 1;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаДлительностиПроизводстваПоСпецификации()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДлительностьПроизводства.Спецификация КАК Спецификация,
		|
		|	ДлительностьПроизводства.Длительность             КАК Длительность,
		|	ДлительностьПроизводства.ПлановаяДлительность     КАК ПлановаяДлительность,
		|	ДлительностьПроизводства.МаксимальнаяДлительность КАК МаксимальнаяДлительность,
		|
		|	ДлительностьПроизводства.Предел                    КАК Предел,
		|	ДлительностьПроизводства.ЕстьВложенныеСпецификации КАК ЕстьВложенныеСпецификации
		|ИЗ
		|	РегистрСведений.НормативнаяДлительностьПроизводства КАК ДлительностьПроизводства
		|ГДЕ
		|	ДлительностьПроизводства.Спецификация В (&МассивСсылок)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетДлительностиПроизводстваПоСпецификации()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Номенклатура                                   КАК Номенклатура,
		|	Таблица.Характеристика                                 КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	&НачалоПроизводства                                    КАК НачалоПроизводства
		|ПОМЕСТИТЬ ВтАвтоподборСпецификаций
		|ИЗ
		|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ПроизводитсяВПроцессе
		|	И Таблица.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
		|	И Таблица.ИсточникПолученияПолуфабриката = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|;
		|
		|//////////////////////////////////////////////////
		|" 
		+ УправлениеДаннымиОбИзделиях.ТекстЗапросаСоздатьВТСпецификацииНоменклатурыПоУмолчанию("ВтАвтоподборСпецификаций", Истина) +
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.Этап   КАК Этап,
		|
		|	Таблица.Спецификация   КАК Спецификация,
		|	Таблица.Альтернативная КАК Альтернативная,
		|
		|	МАКСИМУМ(Таблица.ВходящаяСпецификация)  КАК ВходящаяСпецификация,
		|	МАКСИМУМ(Таблица.ИсходящаяСпецификация) КАК ИсходящаяСпецификация,
		|	МАКСИМУМ(Таблица.ВложеннаяСпецификация) КАК ВложеннаяСпецификация
		|
		|ПОМЕСТИТЬ ВтСвязанныеСпецификации
		|ИЗ
		|(
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.Этап КАК Этап,
		|	Таблица.Спецификация КАК Спецификация,
		|	ЛОЖЬ КАК Альтернативная,
		|	ЛОЖЬ КАК ВходящаяСпецификация,
		|	ИСТИНА КАК ИсходящаяСпецификация,
		|	ЛОЖЬ КАК ВложеннаяСпецификация
		|ИЗ
		|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ОбработатьПоСпецификации
		|	И Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап,
		|	Таблица.Спецификация,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.РесурсныеСпецификации.ВозвратныеОтходы КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ОбработатьПоСпецификации
		|	И Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап,
		|	Таблица.ИсточникПолученияПолуфабриката,
		|	Таблица.Альтернативный,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ПроизводитсяВПроцессе
		|	И Таблица.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
		|	И Таблица.ИсточникПолученияПолуфабриката <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап,
		|	Таблица.СпецификацияРемонта,
		|	Таблица.Альтернативный,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ИСТИНА
		|ИЗ
		|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ПроизводитсяВПроцессе
		|	И Таблица.СпецификацияРемонта <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап,
		|	СпецификацииПоУмолчанию.Спецификация,
		|	Таблица.Альтернативный,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСпецификацииНоменклатурыПоУмолчанию КАК СпецификацииПоУмолчанию
		|		ПО Таблица.Номенклатура      = СпецификацииПоУмолчанию.Номенклатура
		|			И Таблица.Характеристика = СпецификацииПоУмолчанию.Характеристика
		|			И СпецификацииПоУмолчанию.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|ГДЕ
		|	Таблица.Ссылка = &Спецификация
		|	И Таблица.ПроизводитсяВПроцессе
		|	И Таблица.СпособПолученияМатериала = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации)
		|	И Таблица.ИсточникПолученияПолуфабриката = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|
		|) КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.Этап,
		|	Таблица.Спецификация,
		|	Таблица.Альтернативная
		|;
		|
		|////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.Этап   КАК Этап,
		|
		|	Таблица.Спецификация   КАК Спецификация,
		|	Таблица.Альтернативная КАК Альтернативная,
		|
		|	Таблица.ВходящаяСпецификация  КАК ВходящаяСпецификация,
		|	Таблица.ИсходящаяСпецификация КАК ИсходящаяСпецификация,
		|	Таблица.ВложеннаяСпецификация КАК ВложеннаяСпецификация,
		|
		|	ISNULL(ДлительностьСпецификаций.ПлановаяДлительность, 0)     КАК ПлановаяДлительность,
		|	ISNULL(ДлительностьСпецификаций.МаксимальнаяДлительность, 0) КАК МаксимальнаяДлительность
		|
		|ПОМЕСТИТЬ ВтДлительностьСпецификаций
		|ИЗ
		|	ВтСвязанныеСпецификации КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативнаяДлительностьПроизводства КАК ДлительностьСпецификаций
		|		ПО Таблица.Спецификация = ДлительностьСпецификаций.Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ПроизводственныйПроцесс.Спецификация КАК Спецификация,
		|
		|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания) КАК Длительность,
		|
		|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания + ВЫБОР
		|			КОГДА ЕСТЬNULL(ДлительностьСпецификаций.ВходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная, ЛОЖЬ)
		|				ТОГДА ЕСТЬNULL(ДлительностьСпецификаций.ПлановаяДлительность, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ)
		|		+ ВЫБОР КОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
		|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная
		|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
		|							ИНАЧЕ 0
		|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончания + ПроизводственныйПроцесс.ДнейОтНачала, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания) > 0
		|			ТОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
		|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация И НЕ ДлительностьСпецификаций.Альтернативная
		|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
		|							ИНАЧЕ 0
		|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончания + ПроизводственныйПроцесс.ДнейОтНачала, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончания)
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|			КАК ПлановаяДлительность,
		|
		|	МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ВЫБОР
		|			КОГДА ЕСТЬNULL(ДлительностьСпецификаций.ВходящаяСпецификация, ЛОЖЬ)
		|				ТОГДА ЕСТЬNULL(ДлительностьСпецификаций.МаксимальнаяДлительность, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ)
		|		+ ВЫБОР КОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
		|						КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация
		|							ТОГДА ДлительностьСпецификаций.МаксимальнаяДлительность
		|						ИНАЧЕ 0
		|					КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ПроизводственныйПроцесс.ДнейОтНачалаМакс, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс) > 0
		|			ТОГДА МАКСИМУМ(ЕСТЬNULL(ВЫБОР
		|							КОГДА ДлительностьСпецификаций.ИсходящаяСпецификация
		|								ТОГДА ДлительностьСпецификаций.МаксимальнаяДлительность
		|							ИНАЧЕ 0
		|						КОНЕЦ + ПроизводственныйПроцесс.ДнейДоОкончанияМакс + ПроизводственныйПроцесс.ДнейОтНачалаМакс, 0)) - МАКСИМУМ(ПроизводственныйПроцесс.ДнейДоОкончанияМакс)
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|			КАК МаксимальнаяДлительность,
		|
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПроизводственныйПроцесс.Этап) > 1
		|			ТОГДА 0
		|		ИНАЧЕ МАКСИМУМ(ЕСТЬNULL(ВЫБОР
		|						КОГДА НЕ ДлительностьСпецификаций.Альтернативная
		|							ТОГДА ДлительностьСпецификаций.ПлановаяДлительность
		|						ИНАЧЕ 0
		|					КОНЕЦ, 0))
		|	КОНЕЦ
		|			КАК Предел,
		|
		|	МАКСИМУМ(ЕСТЬNULL(ДлительностьСпецификаций.ВложеннаяСпецификация, ЛОЖЬ)) КАК ЕстьВложенныеСпецификации
		|
		|ИЗ
		|	РегистрСведений.НормативнаяДлительностьЭтаповПроизводства КАК ПроизводственныйПроцесс
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДлительностьСпецификаций КАК ДлительностьСпецификаций
		|
		|			ПО ПроизводственныйПроцесс.Спецификация = ДлительностьСпецификаций.Ссылка
		|				И ПроизводственныйПроцесс.Этап      = ДлительностьСпецификаций.Этап
		|ГДЕ
		|	ПроизводственныйПроцесс.Спецификация = &Спецификация
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводственныйПроцесс.Спецификация";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВычислитьДлительность(Спецификация)
	
	ТекстЗапроса = ТекстЗапросаРасчетДлительностиПроизводстваПоСпецификации();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("НачалоПроизводства", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Результат = СтруктураДанныхЗаписиРегистра();
		
	Иначе
		
		Результат = СтруктураДанныхЗаписиРегистра();
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписатьРезультатРасчета(Спецификация, РезультатРасчета, ВызовИзОбработчикаОбновления = Ложь)
	
	Набор = РегистрыСведений.НормативнаяДлительностьПроизводства.СоздатьНаборЗаписей();
	
	Набор.Отбор.Спецификация.Установить(Спецификация);
	
	НоваяЗапись = Набор.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатРасчета);
	НоваяЗапись.Спецификация = Спецификация;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ВызовИзОбработчикаОбновления Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
	Иначе
		Набор.Записать(Истина);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ЗависимыеОбъектыРасчета

Функция ЗависимыеОбъектыРасчета(ОбъектРасчета)
	
	ТипИсточника = ТипЗнч(ОбъектРасчета);
	
	Если ТипИсточника <> Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Владелец КАК Спецификация
		|ИЗ
		|	Справочник.ЭтапыПроизводства КАК Таблица
		|	//ТекстСоединение
		|ГДЕ
		|	Таблица.Владелец.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует)
		|	И НЕ Таблица.ПометкаУдаления
		|	И НЕ Таблица.Владелец.ПометкаУдаления
		|	И //ТекстОтбор";
		
		ТекстСоединение = "";
		Если ТипИсточника = Тип("СправочникСсылка.Календари") Тогда
			ТекстСоединение = "
			|ЛЕВОЕ СОЕДИНЕНИЕ Константа.ОсновнойКалендарьПредприятия КАК ОсновнойКалендарьПредприятия
			|ПО ИСТИНА";
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстСоединение", ТекстСоединение);
		
		ТекстОтбор = "ЛОЖЬ";
		Если ТипИсточника = Тип("СправочникСсылка.Календари") Тогда
			ТекстОтбор = "
			|ВЫБОР
			|	КОГДА Таблица.Подразделение.ГрафикРаботы = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
			|		ТОГДА ОсновнойКалендарьПредприятия.Значение
			|	ИНАЧЕ Таблица.Подразделение.ГрафикРаботы
			|КОНЕЦ = &ОбъектРасчета";
		ИначеЕсли ТипИсточника = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			ТекстОтбор = "Таблица.Подразделение = &ОбъектРасчета";
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ТекстОтбор", ТекстОтбор);
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ОбъектРасчета", ОбъектРасчета);
		
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		
		Возврат Справочники.РесурсныеСпецификации.ЗависимыеСпецификации(ОбъектРасчета);
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция СоздатьОчередь(ОбъектыРасчета)
	
	Возврат ПроизводствоСервер.МассивЗначений(ОбъектыРасчета, Истина);

КонецФункции

Функция СтруктураДанныхЗаписиРегистра()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Длительность", 0);
	Результат.Вставить("ПлановаяДлительность", 0);
	Результат.Вставить("МаксимальнаяДлительность", 0);

	Результат.Вставить("Предел", -1);
	Результат.Вставить("ЕстьВложенныеСпецификации", Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция ДлительностиРавны(Длительность1, Длительность2)
	
	Для Каждого Свойство Из Длительность1 Цикл
		
		Если Длительность1[Свойство.Ключ] <> Длительность2[Свойство.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
