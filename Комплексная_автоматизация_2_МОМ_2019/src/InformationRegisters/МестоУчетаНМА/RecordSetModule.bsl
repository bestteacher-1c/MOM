#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПодготовитьДанныеДляФормированияЗаданийПередЗаписью();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьДанныеДляФормированияЗаданийПриЗаписи();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьДанныеДляФормированияЗаданийПередЗаписью()

	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПередЗаписью.Период КАК Период,
	|	ТаблицаПередЗаписью.Организация КАК Организация,
	|	ТаблицаПередЗаписью.НематериальныйАктив КАК НематериальныйАктив,
	|	ТаблицаПередЗаписью.Подразделение КАК Подразделение,
	|	ТаблицаПередЗаписью.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ТаблицаПередЗаписью.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете
	|ПОМЕСТИТЬ МестоУчетаНМАПередЗаписью
	|ИЗ
	|	РегистрСведений.МестоУчетаНМА КАК ТаблицаПередЗаписью
	|ГДЕ
	|	ТаблицаПередЗаписью.Регистратор = &Регистратор";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляФормированияЗаданийПриЗаписи()

	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период                 КАК Период,
	|	Таблица.Организация            КАК Организация,
	|	Таблица.НематериальныйАктив    КАК НематериальныйАктив,
	|	Таблица.ОтражатьВРеглУчете     КАК ОтражатьВРеглУчете,
	|	Таблица.ОтражатьВУпрУчете      КАК ОтражатьВУпрУчете,
	|	&Регистратор                   КАК Документ
	|ПОМЕСТИТЬ МестоУчетаНМАИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПередЗаписью.Период                 КАК Период,
	|		ТаблицаПередЗаписью.Организация            КАК Организация,
	|		ТаблицаПередЗаписью.НематериальныйАктив    КАК НематериальныйАктив,
	|		ТаблицаПередЗаписью.ОтражатьВРеглУчете     КАК ОтражатьВРеглУчете,
	|		ТаблицаПередЗаписью.ОтражатьВУпрУчете      КАК ОтражатьВУпрУчете
	|	ИЗ
	|		МестоУчетаНМАПередЗаписью КАК ТаблицаПередЗаписью
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА КАК ТаблицаПриЗаписи
	|			ПО ТаблицаПриЗаписи.НематериальныйАктив = ТаблицаПередЗаписью.НематериальныйАктив
	|				И ТаблицаПриЗаписи.Организация = ТаблицаПередЗаписью.Организация
	|				И ТаблицаПриЗаписи.Регистратор = &Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
	|			ПО ИСТИНА
	|		ГДЕ
	|			(ТаблицаПриЗаписи.Период ЕСТЬ NULL
	|				ИЛИ ТаблицаПриЗаписи.Подразделение <> ТаблицаПередЗаписью.Подразделение
	|				ИЛИ ПорядокУчетаВНАВУпрУчете.Значение = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ) 
	|					И ТаблицаПередЗаписью.ОтражатьВУпрУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, ДЕНЬ)
	|				ИЛИ ПорядокУчетаВНАВУпрУчете.Значение = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамРегл) 
	|					И ТаблицаПередЗаписью.ОтражатьВУпрУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, МЕСЯЦ)
	|				ИЛИ ТаблицаПередЗаписью.ОтражатьВРеглУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, МЕСЯЦ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПриЗаписи.Период,
	|		ТаблицаПриЗаписи.Организация,
	|		ТаблицаПриЗаписи.НематериальныйАктив,
	|		ТаблицаПриЗаписи.ОтражатьВРеглУчете,
	|		ТаблицаПриЗаписи.ОтражатьВУпрУчете
	|	ИЗ
	|		РегистрСведений.МестоУчетаНМА КАК ТаблицаПриЗаписи
	|			ЛЕВОЕ СОЕДИНЕНИЕ МестоУчетаНМАПередЗаписью КАК ТаблицаПередЗаписью
	|			ПО ТаблицаПриЗаписи.НематериальныйАктив = ТаблицаПередЗаписью.НематериальныйАктив
	|				И ТаблицаПриЗаписи.Организация = ТаблицаПередЗаписью.Организация
	|			ЛЕВОЕ СОЕДИНЕНИЕ Константа.ПорядокУчетаВНАВУпрУчете КАК ПорядокУчетаВНАВУпрУчете
	|			ПО ИСТИНА
	|		ГДЕ
	|			(ТаблицаПередЗаписью.Период ЕСТЬ NULL
	|				ИЛИ ТаблицаПриЗаписи.Подразделение <> ТаблицаПередЗаписью.Подразделение
	|				ИЛИ ПорядокУчетаВНАВУпрУчете.Значение = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамМУ) 
	|					И ТаблицаПриЗаписи.ОтражатьВУпрУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, ДЕНЬ)
	|				ИЛИ ПорядокУчетаВНАВУпрУчете.Значение = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНАВУпрУчете.ПоСтандартамРегл) 
	|					И ТаблицаПриЗаписи.ОтражатьВУпрУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, МЕСЯЦ)
	|				ИЛИ ТаблицаПриЗаписи.ОтражатьВРеглУчете
	|					И НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Период, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Период, МЕСЯЦ))
	|			И ТаблицаПриЗаписи.Регистратор = &Регистратор
	|
	|	) КАК Таблица
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ МестоУчетаНМАПередЗаписью";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();
	
	СтруктураВременныеТаблицы.Вставить("МестоУчетаНМАИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
