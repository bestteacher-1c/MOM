
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Запись, ЭтотОбъект);
	
	Если Параметры.Свойство("ВозвратЗначенияБезЗаписи") Тогда
		ВозвратЗначенияБезЗаписи = Параметры.ВозвратЗначенияБезЗаписи;
	КонецЕсли;

	ДоступныеСчетаУчетаНоменклатуры();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Структура = Новый Структура("
		|СчетУчетаПередачиНаКомиссию,
		|СчетУчетаВыручкиОтПродаж,
		|СчетУчетаСебестоимостиПродаж,
		|СчетУчетаНДСПриПродаже,
		|СчетУчетаЗатратыНаПриобретение,
		|СчетУчетаПередачиВПереработку,
		|СтатьяДоходовОСНО
		|");
	ЗаполнитьЗначенияСвойств(Структура, Запись);
	
	Оповестить("Запись_ПорядокОтраженияНоменклатурыПереданной", Структура);
	
КонецПроцедуры // ПослеЗаписи()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Запись.Организация) Тогда
		Текст = НСтр("ru = 'Поле ""Организация"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Параметры.Ключ, "Запись.Организация", "Запись.Организация", Отказ);
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ВозвратЗначенияБезЗаписи Тогда
		
		Отказ = Истина;
		Модифицированность = Ложь;
		СтруктураВозврата = Новый Структура("Организация, ГруппаФинансовогоУчета, СчетУчетаПередачиНаКомиссию, СчетУчетаВыручкиОтПродаж,
			|	СчетУчетаСебестоимостиПродаж, СчетУчетаНДСПриПродаже, СчетУчетаЗатратыНаПриобретение, СчетУчетаПередачиВПереработку, СтатьяДоходовОСНО");
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Запись);
		Закрыть(СтруктураВозврата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетУчетаВыручкиОтПродажПриИзменении(Элемент)
	
	Элементы.СтатьяДоходовРегл.ТолькоПросмотр = (Запись.СчетУчетаВыручкиОтПродаж <> ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеДоходы"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		ДоступныеДляВыбораОрганизации = УправлениеДоступом.РазрешенныеЗначенияДляДинамическогоСписка(
			"РегистрСведений.ПорядокОтраженияНоменклатурыПереданной", Тип("СправочникСсылка.Организации"));
		Если ДоступныеДляВыбораОрганизации <> Неопределено Тогда
			Элементы.Организация.СписокВыбора.ЗагрузитьЗначения(ДоступныеДляВыбораОрганизации);
			Элементы.Организация.РежимВыбораИзСписка = Истина;
			Если ДоступныеДляВыбораОрганизации.Количество() = 1 Тогда
				Запись.Организация = ДоступныеДляВыбораОрганизации.Получить(0);
				Элементы.Организация.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СтатьяДоходовРегл.ТолькоПросмотр = (Запись.СчетУчетаВыручкиОтПродаж <> ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	Элементы.ФормаЗаписать.Видимость = Не ВозвратЗначенияБезЗаписи;
	
КонецПроцедуры

&НаСервере
Процедура ДоступныеСчетаУчетаНоменклатуры()
	
	СтруктураСчетовУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаНоменклатуры();
	
	// Счета учета передачи на комиссию.
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаПередачиНаКомиссию)));
	Элементы.СчетУчетаПередачиНаКомиссию.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета выручки от продаж.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаВыручкиОтПродаж)));
	Элементы.СчетУчетаВыручкиОтПродаж.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета себестоимости от продаж.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаСебестоимостиПродаж)));
	Элементы.СчетУчетаСебестоимостиПродаж.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета НДС при продаже.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаНДСПриПродаже)));
	Элементы.СчетУчетаНДСПриПродаже.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета затрат на приобретение товаров
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаЗатратыНаПриобретение)));
	Элементы.СчетУчетаЗатратыНаПриобретение.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета передачи в переработку
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаПередачиВПереработку)));
	Элементы.СчетУчетаПередачиВПереработку.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
