#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает результат выполнения анализатора отражения ТМЦ в эксплуатации с настроенными счетами.
//	
//	Параметры:
//		МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям;
//		Период - СтандартныйПериод - период с датой начала и окончания анализа.
//	ВозвращаемоеЗначение:
//		РезультатЗапроса - список всех операций, удовлетворяющий входным параметрам с настроенными для них счетами.
//
Функция РезультатЗапросаПоНастройкамОтраженияВУчете(МассивОрганизаций, Период) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	ПараметрыАнализатора = Новый Структура("МассивОрганизаций, НачалоПериода, КонецПериода", МассивОрганизаций, Период.ДатаНачала, Период.ДатаОкончания);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияТМЦ.Организация КАК Организация,
	|	ДвиженияТМЦ.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ИСТИНА КАК ЕстьПередачи,
	|	
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) <> &ПустойСчет
	|			ТОГДА ПорядокОтражения.СчетУчета
	|		ИНАЧЕ КатегорииЭксплуатации.СчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет
	|				И КатегорииЭксплуатации.СчетУчета <> &ПустойСчет
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаПоУмолчанию,
	|	
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) <> &ПустойСчет
	|			ТОГДА ПорядокОтражения.СчетЗабалансовогоУчета
	|		ИНАЧЕ КатегорииЭксплуатации.СчетЗабалансовогоУчета
	|	КОНЕЦ КАК СчетЗабалансовогоУчета,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) = &ПустойСчет
	|				И КатегорииЭксплуатации.СчетЗабалансовогоУчета <> &ПустойСчет
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетЗабалансовогоУчетаПоУмолчанию
	|	
	|ИЗ
	|	ТаблицаДвижений КАК ДвиженияТМЦ
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения
	|	ПО 
	|		ДвиженияТМЦ.Организация = ПорядокОтражения.Организация
	|		И ДвиженияТМЦ.КатегорияЭксплуатации = ПорядокОтражения.КатегорияЭксплуатации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|	ПО
	|		ДвиженияТМЦ.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.КатегорияЭксплуатации,
	|	ЛОЖЬ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) <> &ПустойСчет
	|			ТОГДА ПорядокОтражения.СчетУчета
	|		ИНАЧЕ КатегорииЭксплуатации.СчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет
	|				И КатегорииЭксплуатации.СчетУчета <> &ПустойСчет
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаПоУмолчанию,
	|	
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) <> &ПустойСчет
	|			ТОГДА ПорядокОтражения.СчетЗабалансовогоУчета
	|		ИНАЧЕ КатегорииЭксплуатации.СчетЗабалансовогоУчета
	|	КОНЕЦ КАК СчетЗабалансовогоУчета,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) = &ПустойСчет
	|				И КатегорииЭксплуатации.СчетЗабалансовогоУчета <> &ПустойСчет
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетЗабалансовогоУчетаПоУмолчанию
	|	
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ДвиженияТМЦ КАК ДвиженияТМЦ
	|	ПО 
	|		ПорядокОтражения.Организация = ДвиженияТМЦ.Организация
	|		И ПорядокОтражения.КатегорияЭксплуатации = ДвиженияТМЦ.КатегорияЭксплуатации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|	ПО
	|		ПорядокОтражения.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
	|	
	|ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И ДвиженияТМЦ.Организация ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	КатегорияЭксплуатации";
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора)
	
	РежимАнализа = Неопределено;
	ПараметрыАнализатора.Свойство("РежимАнализа", РежимАнализа);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации, ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)) КАК КатегорияЭксплуатации
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров.Товары КАК Таблица
	|			ПО ДанныеДокумента.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации, ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка))
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.ТМЦВЭксплуатации КАК Таблица
	|		ПО ДанныеДокумента.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&УсловиеДляДокумента
	|	И ДанныеДокумента.ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации))";
	
	УсловиеВхожденияВДокумент = "ГДЕ" + Символы.ПС + Символы.Таб + "&УсловиеДляДокумента";
	ТекстСоединенияСТаблицейДокументов = "		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументов КАК ТаблицаДокументов
	|		ПО ДанныеДокумента.Организация = ТаблицаДокументов.Организация
	|			И ДанныеДокумента.Ссылка = ТаблицаДокументов.Документ";
	ТекстУсловийПоОрганизацииИПериоду = "ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ДанныеДокумента.Организация В (&Организации)";
	
	Если РежимАнализа = "ПоНеотраженным" Тогда
		
		Статусы = Новый Массив;
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.НеУказаныСчетаУчета);
		Статусы.Добавить(Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете);
		РегистрыСведений.ОтражениеДокументовВРеглУчете.ДобавитьВременнуюТаблицуДокументовСОтборомПоСтатусуОтражения(
			Запрос.МенеджерВременныхТаблиц,
			ПараметрыАнализатора.МассивОрганизаций,
			Статусы);
	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстСоединенияСТаблицейДокументов);
	Иначе
		Запрос.УстановитьПараметр("Организации", ПараметрыАнализатора.МассивОрганизаций);
		Запрос.УстановитьПараметр("ДатаНачала", ПараметрыАнализатора.НачалоПериода);
		Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыАнализатора.КонецПериода);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, УсловиеВхожденияВДокумент, ТекстУсловийПоОрганизацииИПериоду);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвижений;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДвижений.Организация КАК Организация,
	|	ТаблицаДвижений.КатегорияЭксплуатации КАК АналитикаУчета,
	|	ИСТИНА КАК ЕстьПередачи,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикаУчета.СчетУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчета КОНЕЦ КАК СчетУчета,
	|	ВЫБОР КОГДА ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикаУчета.СчетЗабалансовогоУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетЗабалансовогоУчета КОНЕЦ КАК СчетЗабалансовогоУчета,
	|
	|	ЕСТЬNULL(АналитикаУчета.СчетУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет))
	|		= ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет)
	|		ИЛИ ЕСТЬNULL(АналитикаУчета.СчетУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет)) <> &ПустойСчет
	|		И ЕСТЬNULL(ПорядокОтражения.СчетУчета, &ПустойСчет) = &ПустойСчет КАК СчетУчетаПоУмолчанию,
	|	ЕСТЬNULL(АналитикаУчета.СчетЗабалансовогоУчета, ЕСТЬNULL(ОбщаяНастройка.СчетЗабалансовогоУчета, &ПустойСчет))
	|		= ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет)
	|		ИЛИ ЕСТЬNULL(АналитикаУчета.СчетЗабалансовогоУчета, ЕСТЬNULL(ОбщаяНастройка.СчетЗабалансовогоУчета, &ПустойСчет)) <> &ПустойСчет
	|		И ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, &ПустойСчет) = &ПустойСчет КАК СчетЗабалансовогоУчетаПоУмолчанию
	|
	|ПОМЕСТИТЬ ТаблицаДвиженийСоСчетами
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения
	|		ПО ТаблицаДвижений.Организация = ПорядокОтражения.Организация
	|			И ТаблицаДвижений.КатегорияЭксплуатации = ПорядокОтражения.КатегорияЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК АналитикаУчета
	|		ПО ТаблицаДвижений.КатегорияЭксплуатации = АналитикаУчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ОбщаяНастройка
	|		ПО ОбщаяНастройка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ОбщаяНастройка.КатегорияЭксплуатации = ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

// Выполняет анализ всех неотраженных операций отражения ТМЦ в эксплуатации,
//	ищет для них ненастроенные счета учета и заносит эти данные в регистр ненастроенных счетов учета.
//	
//	Параметры:
//		ПараметрыАнализатора - Структура, содержащая следующие значения:
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//			* РежимАнализа - Строка - строка вида "ПоНеотраженным" -
//					необходимо для того, чтобы анализатор работал только по документам, неотраженным в регл. учете.
//
Процедура ЗаполнитьРегистрТребующихНастройкиНаОснованииАнализаНеотраженныхОпераций(ПараметрыАнализатора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализатора);
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчета
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ВидСчета
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.СчетЗабалансовогоУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураВидовСчетовИРезультатаЗапроса = Новый Соответствие;
	СтруктураВидовСчетовИРезультатаЗапроса.Вставить(Перечисления.ВидыСчетовРеглУчета.ТМЦВЭксплуатации, МассивРезультатов.Получить(0));
	СтруктураВидовСчетовИРезультатаЗапроса.Вставить(Перечисления.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом, МассивРезультатов.Получить(1));
	
	ИмяСобытия = НСтр("ru = 'Анализ порядка отражения ТМЦ в эксплуатации, требующего настройки'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ЗаполнитьЗаписиРегистраПоВидамСчетов(СтруктураВидовСчетовИРезультатаЗапроса, ИмяСобытия);
	
КонецПроцедуры

// Выполняет анализ операций отражения ТМЦ в эксплуатации, в зависимости от параметров и дополняет исходную таблицу
// операций новыми строками.
//	
//	Параметры:
//		ПараметрыАнализа - Структура - содержит настройки анализатора со следующими свойствами:
//			* РежимАнализа - Строка - принимает значения вида "ПоНеотраженным" и "ЗаПериод". Причем если не задана, значение по умолчанию "ЗаПериод".
//			* КонецПериода - Дата - по эту дату анализируются операции, причем если режим анализа "ПоНеотраженным" не актуальна;
//			* НачалоПериода - Дата - начиная с этой даты анализируются операции, причем если режим анализа "ПоНеотраженным" не актуальна;
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//		АдресХранилища - Строка - адрес сохранения результата работы метода (ТаблицаЗначений).
//
Процедура ДополнитьТаблицуНаОснованииАнализаОпераций(ПараметрыАнализа, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВременнаяТаблицаДвижений = ВременнаяТаблицаДанныхПоСуществующимОперациям(ПараметрыАнализа);
	 
	ВременнаяТаблицаДвиженийСоСчетами = ВременнаяТаблицаДвиженийСоСчетами(ВременнаяТаблицаДвижений);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", ПараметрыАнализа.ЗаполняемаяТаблица);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблицаДвиженийСоСчетами;
	 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.КатегорияЭксплуатации,
	|
	|	ТекущаяТаблицаСчетовУчета.СчетУчета,
	|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета,
	|	
	|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчетаПоУмолчанию,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
	|
	|ПОМЕСТИТЬ ТекущаяТаблицаСчетовУчета
	|ИЗ
	|	&Таблица КАК ТекущаяТаблицаСчетовУчета;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвиженийСоСчетами.Организация,
	|	ТаблицаДвиженийСоСчетами.АналитикаУчета КАК КатегорияЭксплуатации,
	|
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчета, ТаблицаДвиженийСоСчетами.СчетУчета) КАК СчетУчета,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета, ТаблицаДвиженийСоСчетами.СчетЗабалансовогоУчета) КАК СчетЗабалансовогоУчета,
	|	
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию, ТаблицаДвиженийСоСчетами.СчетУчетаПоУмолчанию) КАК СчетУчетаПоУмолчанию,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчетаПоУмолчанию, ТаблицаДвиженийСоСчетами.СчетЗабалансовогоУчетаПоУмолчанию) КАК СчетЗабалансовогоУчетаПоУмолчанию,
	|
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчета, ТаблицаДвиженийСоСчетами.СчетУчета)
	|		= ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК ТребуетсяНастройкаСчетУчета,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета, ТаблицаДвиженийСоСчетами.СчетЗабалансовогоУчета)
	|		= ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетУчета, ТаблицаДвиженийСоСчетами.СчетУчета) = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ИЛИ ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета, ТаблицаДвиженийСоСчетами.СчетЗабалансовогоУчета)
	|		= ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК ТребуетсяНастройка,
	|	ЕСТЬNULL(ТекущаяТаблицаСчетовУчета.ИзмененныеДанные, ""СчетУчета, СчетЗабалансовогоУчета"") КАК ИзмененныеДанные
	|
	|ИЗ
	|	ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|	ПО
	|		ТаблицаДвиженийСоСчетами.Организация = ТекущаяТаблицаСчетовУчета.Организация
	|		И ТаблицаДвиженийСоСчетами.АналитикаУчета = ТекущаяТаблицаСчетовУчета.КатегорияЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТекущаяТаблицаСчетовУчета.Организация,
	|	ТекущаяТаблицаСчетовУчета.КатегорияЭксплуатации,
	|
	|	ТекущаяТаблицаСчетовУчета.СчетУчета,
	|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета,
	|
	|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
	|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчетаПоУмолчанию,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|
	|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
	|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
	|ИЗ
	|	ТекущаяТаблицаСчетовУчета КАК ТекущаяТаблицаСчетовУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДвиженийСоСчетами КАК ТаблицаДвиженийСоСчетами
	|	ПО
	|		ТекущаяТаблицаСчетовУчета.Организация = ТаблицаДвиженийСоСчетами.Организация
	|		И ТекущаяТаблицаСчетовУчета.КатегорияЭксплуатации = ТаблицаДвиженийСоСчетами.АналитикаУчета
	|ГДЕ
	|	ТаблицаДвиженийСоСчетами.Организация ЕСТЬ NULL";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ПоместитьВоВременноеХранилище(Новый Структура("СчетаУчетаТМЦВЭксплуатации", Таблица), АдресХранилища);
	
КонецПроцедуры

Процедура НайтиДокументыСоответствующиеНастройкам(ТаблицаНастроек, Дата, ТаблицаДокументов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.Организация КАК Организация,
	|	ИсходнаяТаблица.КатегорияЭксплуатации КАК КатегорияЭксплуатации
	|	
	|ПОМЕСТИТЬ ТаблицаНастроек
	|ИЗ
	|	&ИсходнаяТаблица КАК ИсходнаяТаблица
	|ГДЕ
	|	ИсходнаяТаблица.ИзмененныеДанные <> """"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|		,
	|		&ДатаОкончания,
	|		Регистратор,
	|		Организация В (
	|			ВЫБРАТЬ
	|				ТаблицаНастроек.Организация
	|			ИЗ
	|				ТаблицаНастроек КАК ТаблицаНастроек
	|		)
	|	) КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|	ПО
	|		ДанныеРегистра.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор
	|		И ОтражениеДокументовВРеглУчете.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ
	|;");
	
	ИсходнаяТаблица = ТаблицаНастроек.Выгрузить(, "Организация, НазначениеИспользования, ИзмененныеДанные");
	Запрос.УстановитьПараметр("ИсходнаяТаблица", ИсходнаяТаблица);
	Запрос.УстановитьПараметр("ДатаОкончания", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли