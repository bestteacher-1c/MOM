#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


// Определяет ставку налога на прибыль, подлежащего зачислению в федеральный бюджет, указанную в п. 1 ст. 284 НК РФ.
//
// Параметры:
// 	Период - Дата - Период действия ставки.
//
// Возвращаемое значение:
// 	Ставка - Число - Значение ставки по умолчанию.
//
Функция ЗначениеПоУмолчаниюФедеральныйБюджет(Период) Экспорт
	
	Если ПрименяютсяВременныеСтавкиНалога(Период) Тогда
		Возврат 3;
	КонецЕсли;
	
	Возврат 2;
	
КонецФункции

// Определяет ставку налога на прибыль, подлежащего зачислению в бюджеты субъектов Российской Федерации, указанную в п.
// 1 ст. 284 НК РФ.
//
// Параметры:
// 	Период - Дата - Период действия ставки.
//
// Возвращаемое значение:
// 	Ставка - Число - Значение ставки по умолчанию.
//
Функция ЗначениеПоУмолчаниюРегиональныйБюджет(Период) Экспорт
	
	Если ПрименяютсяВременныеСтавкиНалога(Период) Тогда
		Возврат 17;
	КонецЕсли;
	
	Возврат 18;
	
КонецФункции

// Определяет, попадает ли указанный период в интервал, на который установлены особые ставки налога на прибыль (401-ФЗ).
//
// Параметры:
// 	Период - Дата - Период проверки.
//
// Возвращаемое значение:
// 	Результат - Булево - Признак примерения временной ставки.
//
Функция ПрименяютсяВременныеСтавкиНалога(Период) Экспорт
	
	Возврат (НачалоГода(Период) >= '2017-01-01' 
		И НачалоГода(Период) <= '2024-01-01');
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	// регистрация не требуется
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ШаблонЗапроса = 
		"ВЫБРАТЬ
		|	&Период%1 КАК Период,
		|	СтавкиНалогаНаПрибыльСрезПоследних.Период КАК ПериодТекущейЗаписи,
		|	СтавкиНалогаНаПрибыльСрезПоследних.СтавкаФБ КАК СтавкаФБТекущейЗаписи,
		|	СтавкиНалогаНаПрибыльСрезПоследних.СтавкаСубъектРФ КАК СтавкаСубъектРФТекущейЗаписи
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(ДОБАВИТЬКДАТЕ(&Период%1, СЕКУНДА, -1)) КАК СтавкиНалогаНаПрибыльСрезПоследних
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций КАК СтавкиНалогаНаПрибыль%1
		|	ПО
		|		СтавкиНалогаНаПрибыль%1.Период = &Период%1
		|		
		|ГДЕ
		|	СтавкиНалогаНаПрибыль%1.Период ЕСТЬ NULL
		|";
		
		Разделитель = 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		Запрос = Новый Запрос;
		
		МассивЗапросы = Новый Массив;
		ТекущийГод = Дата('20170101');
		Пока ПрименяютсяВременныеСтавкиНалога(ТекущийГод) Цикл
			
			ТекущийГодСтрока = Формат(Год(ТекущийГод),"ЧГ=0");
			
			МассивЗапросы.Добавить(СтрШаблон(ШаблонЗапроса, ТекущийГодСтрока));
			
			Параметр = СтрШаблон("Период%1", ТекущийГодСтрока);
			Запрос.УстановитьПараметр(Параметр, ТекущийГод);
			
			ТекущийГод = КонецГода(ТекущийГод) + 1;
		КонецЦикла;
		
		Запрос.Текст = СтрСоединить(МассивЗапросы, Разделитель);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() <> 0 Тогда
			
			НаборЗаписей = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СоздатьНаборЗаписей();
			НаборЗаписей.Прочитать();

			Пока Выборка.Следующий() Цикл
				
				Если Выборка.СтавкаФБТекущейЗаписи <> ЗначениеПоУмолчаниюФедеральныйБюджет(Выборка.ПериодТекущейЗаписи) Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль")
					И Выборка.СтавкаСубъектРФТекущейЗаписи <> ЗначениеПоУмолчаниюРегиональныйБюджет(Выборка.ПериодТекущейЗаписи) Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Период = Выборка.Период;
				НоваяЗапись.СтавкаФБ = ЗначениеПоУмолчаниюФедеральныйБюджет(Выборка.Период);
				НоваяЗапись.СтавкаСубъектРФ = ЗначениеПоУмолчаниюРегиональныйБюджет(Выборка.Период);
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
		Параметры.ОбработкаЗавершена = Истина;
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Шаблон = НСтр("ru = 'Не удалось записать данные в регистр %1, по причине: %2'");
		ТекстСообщения = СтрШаблон(Шаблон, ПолноеИмяРегистра, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Предупреждение,
			МетаданныеРегистра, 
			, 
			ТекстСообщения);
			
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли


