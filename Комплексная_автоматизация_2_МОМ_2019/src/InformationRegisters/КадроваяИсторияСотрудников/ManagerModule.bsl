#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ГоловнаяОрганизация)
	|	И ЗначениеРазрешено(ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура заполняет интервальный регистр сведений ПлановыеАвансыИнтервальный.
//
Процедура ЗаполнитьИнтервальныйРегистр(ПараметрыОбновления = Неопределено) Экспорт
	
	ПараметрыРесурсов = ЗарплатаКадрыПериодическиеРегистры.ПараметрыНаследованияРесурсов(Метаданные.РегистрыСведений.ЗанятостьПозицийШтатногоРасписания.Имя);
	
	ПараметрыПостроения = ЗарплатаКадрыПериодическиеРегистры.ПараметрыПостроенияИнтервальногоРегистра();
	ПараметрыПостроения.ОсновноеИзмерение = "Сотрудник";
	ПараметрыПостроения.ПараметрыРесурсов = ПараметрыРесурсов;
	
	ЗарплатаКадрыПериодическиеРегистры.ПеренестиВозвратныйРегистрВИнтервальныйРегистрСведений(Метаданные.РегистрыСведений.КадроваяИсторияСотрудников.Имя, ПараметрыПостроения, ПараметрыОбновления);
	
КонецПроцедуры

// Вызывается для формирования интервального регистра из обработчиков обновления основного.
// В передаваемом МенеджерВременныхТаблиц должна быть создана временная таблица ВТОтборДляПереформирования
// с колонкой Сотрудник.
//
Процедура СформироватьДвиженияИнтервальногоРегистра(МенеджерВременныхТаблиц, ПараметрыОбновления) Экспорт
	
	ПараметрыПостроения = ЗарплатаКадрыПериодическиеРегистры.ПараметрыПостроенияИнтервальногоРегистра();
	ПараметрыПостроения.ОсновноеИзмерение = "Сотрудник";
	ПараметрыПостроения.ПараметрыРесурсов = ПараметрыНаследованияРесурсов();
	ПараметрыПостроения.Вставить("ПолноеПереформирование", Истина);
	ПараметрыПостроения.Вставить("РежимЗагрузки", Истина);
	
	ЗарплатаКадрыПериодическиеРегистры.СформироватьДвиженияИнтервальногоРегистра(
		"КадроваяИсторияСотрудников", МенеджерВременныхТаблиц, ПараметрыПостроения, ПараметрыОбновления);
	
КонецПроцедуры

Функция ПараметрыНаследованияРесурсов() Экспорт
	
	ПараметрыРесурсов = ЗарплатаКадрыПериодическиеРегистры.ПараметрыНаследованияРесурсов("КадроваяИсторияСотрудников");
	Для Каждого КлючИЗначение Из ПараметрыРесурсов Цикл
	
		Ресурс = КлючИЗначение.Ключ;
		Наследование = КлючИЗначение.Значение;
		
		Если Ресурс = "ВидСобытия" Тогда
			Наследование.ПравилоНаследования = "Фиксированное";
			Наследование.Значение = Перечисления.ВидыКадровыхСобытий.Увольнение;
		Иначе
			Наследование.ПравилоНаследования = "Наследование";
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрыРесурсов;
	
КонецФункции

#КонецОбласти

#КонецЕсли
