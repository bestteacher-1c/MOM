#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
	Настройки.События.ПередЗаполнениемПанелиБыстрыхНастроек = Истина;
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
Процедура ПередЗагрузкойВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	Планирование.СбалансированностьПлановПередЗагрузкойВариантаНаСервере(Форма, НовыеНастройкиКД);
	
КонецПроцедуры

// Вызывается до перезаполнения панели настроек формы отчета.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   ПараметрыЗаполнения - Структура - Параметры, которые будут загружены в отчет.
//
Процедура ПередЗаполнениемПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
	Если ПараметрыЗаполнения.ИмяСобытия = "ПриОбновленииСоставаПользовательскихНастроекНаСервере" Тогда
		
		Планирование.СбалансированностьПлановПередЗагрузкойПользовательскихНастроекНаСервере(Форма, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Планирование.СбалансированностьПлановОбработкаПроверкиЗаполнения(КомпоновщикНастроек, Отказ);
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Планирование.СбалансированностьПлановПриКомпоновкеРезультата(КомпоновщикНастроек, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
	Сценарий = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.ПользовательскиеНастройки, "Сценарий");
	Период	= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.ПользовательскиеНастройки, "Период");
	
	ВыполнитьФоновоеПроведение(Сценарий.Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
Процедура ВыполнитьФоновоеПроведение(Сценарий)

	УстановитьПривилегированныйРежим(Истина);
	
	ВыводитьОчередь = Ложь;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОчередьРасчетаПланаПроизводства.ПланПроизводства КАК ДокументСсылка
		|ИЗ
		|	РегистрСведений.ОчередьРасчетаПланаПроизводства КАК ОчередьРасчетаПланаПроизводства
		|ГДЕ
		|	ОчередьРасчетаПланаПроизводства.Сценарий = &Сценарий");
		
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		ТаблицаРезультат = Результат.Выгрузить();
		Для каждого Элемент Из ТаблицаРезультат Цикл
			Планирование.ЗапускВыполненияФоновогоПроведения(Элемент.ДокументСсылка);
		КонецЦикла; 
		ВыводитьОчередь = Истина;
		
	Иначе
		ВыводитьОчередь = Ложь;
	КонецЕсли;
	
	Для каждого Элемент Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если Элемент.Имя = "Очередь" Тогда
			Элемент.Использование = ВыводитьОчередь;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти 

#КонецЕсли