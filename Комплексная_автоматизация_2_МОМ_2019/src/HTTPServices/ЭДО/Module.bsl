#Область СлужебныеПроцедурыИФункции

Функция newDocPOST(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентноеЗадание = РегламентноеЗаданиеПоНаименованию("ПроверкаНовыхЭлектронныхДокументов");
	Если РегламентноеЗадание = Неопределено ИЛИ НЕ РегламентноеЗадание.Использование Тогда
		Ответ = Новый HTTPСервисОтвет(500);
		Возврат Ответ;
	КонецЕсли;

	Тело = Запрос.ПолучитьТелоКакСтроку();
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Тело);
	МассивИдентификаторовОрганизаций = ПрочитатьJSON(ЧтениеJSON);
	
	ОбменСКонтрагентамиСлужебный.ПроверитьНаличиеНовыхДокументовВСервисеЭДО(МассивИдентификаторовОрганизаций);
	
	Если СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		СокращенныйМассив = ИдентификаторыОрганизацийСНовымиДокументамиВСервисеЭДО(МассивИдентификаторовОрганизаций);
	
		Если СокращенныйМассив.Количество() Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь КАК Пользователь,
			|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
			|ИЗ
			|	РегистрСведений.СертификатыУчетныхЗаписейЭДО КАК СертификатыУчетныхЗаписейЭДО
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования КАК СертификатыКлючейЭлектроннойПодписиИШифрования
			|		ПО СертификатыУчетныхЗаписейЭДО.Сертификат = СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка
			|ГДЕ
			|	СертификатыУчетныхЗаписейЭДО.ИдентификаторЭДО В(&МассивИдентификаторов)";
			
			Запрос.УстановитьПараметр("МассивИдентификаторов", СокращенныйМассив);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			МассивИдентификаторовПользователей = Новый Массив;
			
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Пользователь)
					ИЛИ Выборка.Пользователь = Пользователи.СсылкаНеуказанногоПользователя() Тогда
					ОповеститьВсехПользователей();
					МассивИдентификаторовПользователей.Очистить();
					Прервать;
				КонецЕсли;
				МассивИдентификаторовПользователей.Добавить(Выборка.ИдентификаторПользователяИБ);
			КонецЦикла;
			
			Если МассивИдентификаторовПользователей.Количество() Тогда
				ДобавитьСообщениеВСистемуВзаимодействия(МассивИдентификаторовПользователей);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Процедура ОповеститьВсехПользователей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.ИдентификаторПользователяИБ КАК ИдентификаторПользователяИБ
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.Служебный";
	
	ТаблицаВыборки = Запрос.Выполнить().Выгрузить();
	ДобавитьСообщениеВСистемуВзаимодействия(ТаблицаВыборки.ВыгрузитьКолонку("ИдентификаторПользователяИБ"));
	
КонецПроцедуры

Процедура ДобавитьСообщениеВСистемуВзаимодействия(МассивИдентификаторовПользователей)
	
	Для каждого ЭлементКоллекции Из МассивИдентификаторовПользователей Цикл
		
		Получатель = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(ЭлементКоллекции);
		
		СобытиеЭДО = ИдентификаторСобытияНаличияНовыхДокументов(ЭлементКоллекции);
	
		Если СобытиеЭДО = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый ОтборСообщенийСистемыВзаимодействия();
		Отбор.Обсуждение = СобытиеЭДО;
		СтарыеСообщения = СистемаВзаимодействия.ПолучитьСообщения(Отбор);
		Для каждого ЭлементКоллекции Из СтарыеСообщения Цикл
			СистемаВзаимодействия.УдалитьСообщение(ЭлементКоллекции.Идентификатор);
		КонецЦикла;
		
		Сообщение = СистемаВзаимодействия.СоздатьСообщение(СобытиеЭДО);
		Сообщение.Текст = НСтр("ru = 'Есть новые документы в сервисе.
							|Запустите синхронизацию для их получения'");
		Сообщение.Получатели.Добавить(Получатель);
		Сообщение.Действия.Добавить("СинхронизироватьЭДО", "Синхронизировать");
		Сообщение.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторСобытияНаличияНовыхДокументов(ИдентификаторПользователя)
	
	СобытиеЭДОИдентификатор = Неопределено;
	
	Ключ = "ЕстьНовыеДокументыЭДО" + Строка(ИдентификаторПользователя);
	
	УстановитьПривилегированныйРежим(Истина);
	Если НЕ СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Возврат СобытиеЭДОИдентификатор;
	КонецЕсли;
	
	Обсуждение = Неопределено;
	
	Попытка
		Обсуждение = СистемаВзаимодействия.ПолучитьОбсуждение(Ключ);
	Исключение
		ВидОперации = НСтр("ru = 'Поиск события новых документов ЭДО Системы взаимодействия по ключу'");
		ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(
			ВидОперации, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Если Обсуждение = Неопределено Тогда
		Обсуждение = СистемаВзаимодействия.СоздатьОбсуждение();
		Обсуждение.Ключ = Ключ;
		Обсуждение.Заголовок = НСтр("ru='ЭДО'");
		Обсуждение.Участники.Добавить(СистемаВзаимодействия.ПолучитьИдентификаторПользователя(ИдентификаторПользователя));
		Попытка
			Обсуждение.Записать();
			СобытиеЭДОИдентификатор = Обсуждение.Идентификатор;
		Исключение
			ВидОперации = НСтр("ru='Создание служебного обсуждения ЭДО'");
			ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(
				ВидОперации, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	Иначе
		СобытиеЭДОИдентификатор = Обсуждение.Идентификатор;
		Если НЕ Обсуждение.Участники.Количество() Тогда
			Обсуждение.Участники.Добавить(СистемаВзаимодействия.ПолучитьИдентификаторПользователя(ИдентификаторПользователя));
			Попытка
				Обсуждение.Записать();
			Исключение
				ВидОперации = НСтр("ru='Добавление пользователя в обсуждение ЭДО'");
				ЭлектронноеВзаимодействиеСлужебныйВызовСервера.ОбработатьОшибку(
					ВидОперации, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);

	Возврат СобытиеЭДОИдентификатор;
	
КонецФункции

Функция ИдентификаторыОрганизацийСНовымиДокументамиВСервисеЭДО(МассивИдентификаторов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО КАК ИдентификаторЭДО
	               |ИЗ
	               |	РегистрСведений.НаличиеНовыхЭлектронныхДокументов КАК НаличиеНовыхЭлектронныхДокументов
	               |ГДЕ
	               |	НаличиеНовыхЭлектронныхДокументов.ИдентификаторЭДО В(&МассивИдентификаторовЭДО)";
	Запрос.УстановитьПараметр("МассивИдентификаторовЭДО", МассивИдентификаторов);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИдентификаторЭДО");
	
КонецФункции

Функция РегламентноеЗаданиеПоНаименованию(ИмяЗадания)
	
	Отбор = Новый Структура("Метаданные", ИмяЗадания);
	Найденные = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Задание = ?(Найденные.Количество() = 0, Неопределено, Найденные[0]);
	
	Возврат Задание;
	
КонецФункции

#КонецОбласти

