#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Подготавливает данные для вывода в рабочее место
//
// Параметры:
//  Параметры	- Структура - содержит необходимые параметры
//  АдресХранилища	- Строка - адрес хранилища в которое будут помещен результат.
//
Процедура ПолучитьДанные(Параметры, АдресХранилища) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиВПодразделении.Организация КАК Организация,
	|	ОстаткиВПодразделении.Подразделение КАК Подразделение,
	|	ОстаткиВПодразделении.Номенклатура КАК Номенклатура,
	|	ОстаткиВПодразделении.Характеристика КАК Характеристика,
	|	ОстаткиВПодразделении.Назначение КАК Назначение,
	|	СУММА(ОстаткиВПодразделении.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиВПодразделении
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве.Остатки(
	|		,
	|		Подразделение ССЫЛКА Справочник.СтруктураПредприятия
	|		И (&НеИспользоватьПодразделение
	|			ИЛИ Подразделение = &Подразделение)
	|		И (&НеИспользоватьОрганизацию
	|			ИЛИ Организация = &Организация)) КАК ОстаткиВПодразделении
	|
	|ГДЕ
	|	ОстаткиВПодразделении.КоличествоОстаток <> 0
	|	И ОстаткиВПодразделении.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВПодразделении.Организация,
	|	ОстаткиВПодразделении.Номенклатура,
	|	ОстаткиВПодразделении.Характеристика,
	|	ОстаткиВПодразделении.Назначение,
	|	ОстаткиВПодразделении.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Подразделение
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ЗаказыМатериаловОстаткиПоРаспоряжениям
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыМатериаловОстатки.Распоряжение.Организация     КАК Организация,
	|	ЗаказыМатериаловОстатки.Распоряжение                 КАК Распоряжение,
	|	ЗаказыМатериаловОстатки.КодСтроки                    КАК КодСтроки,
	|	ЗаказыМатериаловОстатки.Номенклатура                 КАК Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика               КАК Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение                   КАК Назначение,
	|	ЗаказыМатериаловОстатки.Подразделение                КАК Подразделение,
	|	ЗаказыМатериаловОстатки.Склад                        КАК Склад,
	|	ЗаказыМатериаловОстатки.ЗаказаноОстаток              КАК Заказано,
	|	ЗаказыМатериаловОстатки.ВРезервеОстаток              КАК ВРезерве,
	|	ЗаказыМатериаловОстатки.КОформлениюОстаток           КАК КОтгрузке
	|ПОМЕСТИТЬ ЗаказыМатериаловОстаткиПоРаспоряжениям
	|ИЗ
	|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(
	|			,
	|			(&НеИспользоватьПодразделение
	|				ИЛИ Подразделение = &Подразделение)
	|			И (&НеИспользоватьСклад
	|				ИЛИ Склад = &Склад)
	|			И Получатель ССЫЛКА Справочник.СтруктураПредприятия
	|		) КАК ЗаказыМатериаловОстатки
	|ГДЕ
	|	&НеИспользоватьОрганизацию
	|		ИЛИ ЗаказыМатериаловОстатки.Распоряжение.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// МатериалыКОтгрузке
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Организация         КАК Организация,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Номенклатура        КАК Номенклатура,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Характеристика      КАК Характеристика,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Назначение          КАК Назначение,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Подразделение       КАК Подразделение,
	|	СУММА(ЗаказыМатериаловОстаткиПоРаспоряжениям.КОтгрузке)    КАК КОтгрузке
	|ПОМЕСТИТЬ МатериалыКОтгрузке
	|ИЗ
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям КАК ЗаказыМатериаловОстаткиПоРаспоряжениям
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Организация,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Подразделение,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Номенклатура,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Характеристика,
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ЗаказыМатериаловОстаткиКДате
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыМатериаловОстатки.Организация                  КАК Организация,
	|	ЗаказыМатериаловОстатки.Номенклатура                 КАК Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика               КАК Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение                   КАК Назначение,
	|	ЗаказыМатериаловОстатки.Подразделение                КАК Подразделение,
	|	ЗаказыМатериаловОстатки.Склад                        КАК Склад,
	|	ЗаказыМатериаловОстатки.Заказано                     КАК Заказано,
	|	ЗаказыМатериаловОстатки.ВРезерве                     КАК ВРезерве
	|ПОМЕСТИТЬ ЗаказыМатериаловОстаткиКДате
	|ИЗ
	|	ЗаказыМатериаловОстаткиПоРаспоряжениям КАК ЗаказыМатериаловОстатки 
	|
	|ГДЕ
	|	// сюда добавляется условие которое формируется программно
	|	&УсловиеЗаказыМатериаловОстаткиКДате
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ЗаказыМатериаловОстатки
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыМатериаловОстатки.Организация                  КАК Организация,
	|	ЗаказыМатериаловОстатки.Номенклатура                 КАК Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика               КАК Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение                   КАК Назначение,
	|	ЗаказыМатериаловОстатки.Подразделение                КАК Подразделение,
	|	СУММА(ЗаказыМатериаловОстатки.Заказано)              КАК Заказано,
	|	СУММА(ЗаказыМатериаловОстатки.ВРезерве)              КАК ВРезерве,
	|	МАКСИМУМ(ЗаказыМатериаловОстатки.Склад)              КАК Склад,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказыМатериаловОстатки.Склад)  КАК КоличествоСкладов
	|ПОМЕСТИТЬ ЗаказыМатериаловОстатки
	|ИЗ
	|	ЗаказыМатериаловОстаткиКДате КАК ЗаказыМатериаловОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыМатериаловОстатки.Организация,
	|	ЗаказыМатериаловОстатки.Подразделение,
	|	ЗаказыМатериаловОстатки.Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// СписокНомеклатуры
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНомеклатуры.Организация,
	|	СписокНомеклатуры.Номенклатура,
	|	СписокНомеклатуры.Характеристика,
	|	СписокНомеклатуры.Назначение,
	|	СписокНомеклатуры.Подразделение
	|ПОМЕСТИТЬ СписокНомеклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиВПодразделении.Организация КАК Организация,
	|		ОстаткиВПодразделении.Номенклатура КАК Номенклатура,
	|		ОстаткиВПодразделении.Характеристика КАК Характеристика,
	|		ОстаткиВПодразделении.Назначение КАК Назначение,
	|		ОстаткиВПодразделении.Подразделение КАК Подразделение
	|	ИЗ
	|		ОстаткиВПодразделении КАК ОстаткиВПодразделении
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыМатериаловОстатки.Организация,
	|		ЗаказыМатериаловОстатки.Номенклатура,
	|		ЗаказыМатериаловОстатки.Характеристика,
	|		ЗаказыМатериаловОстатки.Назначение,
	|		ЗаказыМатериаловОстатки.Подразделение
	|	ИЗ
	|		ЗаказыМатериаловОстатки КАК ЗаказыМатериаловОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МатериалыКОтгрузке.Организация,
	|		МатериалыКОтгрузке.Номенклатура,
	|		МатериалыКОтгрузке.Характеристика,
	|		МатериалыКОтгрузке.Назначение,
	|		МатериалыКОтгрузке.Подразделение
	|	ИЗ
	|		МатериалыКОтгрузке КАК МатериалыКОтгрузке
	|
	|
	|	) КАК СписокНомеклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// ЗаказыМатериаловОстаткиПоСкладам
	|ВЫБРАТЬ
	|	ЗаказыМатериаловОстатки.Организация            КАК Организация,
	|	ЗаказыМатериаловОстатки.Номенклатура           КАК Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика         КАК Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение             КАК Назначение,
	|	ЗаказыМатериаловОстатки.Подразделение          КАК Подразделение,
	|	ЗаказыМатериаловОстатки.Склад                  КАК Склад
	|ИЗ
	|	ЗаказыМатериаловОстаткиКДате КАК ЗаказыМатериаловОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыМатериаловОстатки.Организация,
	|	ЗаказыМатериаловОстатки.Номенклатура,
	|	ЗаказыМатериаловОстатки.Характеристика,
	|	ЗаказыМатериаловОстатки.Назначение,
	|	ЗаказыМатериаловОстатки.Подразделение,
	|	ЗаказыМатериаловОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокНомеклатуры.Организация,
	|	СписокНомеклатуры.Подразделение,
	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыМатериаловОстатки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|			ТОГДА 
	|				ВЫБОР КОГДА ЕСТЬNULL(ЗаказыМатериаловОстатки.КоличествоСкладов, 0) = 1
	|					ТОГДА ЗаказыМатериаловОстатки.Склад
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				КОНЕЦ
	|	ИНАЧЕ 
	|			ЕСТЬNULL(НастройкаПередачиМатериаловСклад.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	КОНЕЦ КАК Склад,
	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаказыМатериаловОстатки.КоличествоСкладов, 0) > 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НесколькоСкладов,
	
	|			ЕСТЬNULL(НастройкаПередачиМатериаловСклад.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|		КАК СкладПоУмолчанию,
	
	|	ЕСТЬNULL(ЗаказыМатериаловОстатки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладИзРаспоряжений,
	|	ЕСТЬNULL(ЗаказыМатериаловОстатки.КоличествоСкладов, 0) КАК КоличествоСкладов,
	
	|	СписокНомеклатуры.Номенклатура,
	|	СписокНомеклатуры.Характеристика,
	|	СписокНомеклатуры.Назначение,
	|	ВЫРАЗИТЬ(СписокНомеклатуры.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины,
	|	ЕСТЬNULL(ОстаткиВПодразделении.КоличествоОстаток, 0) КАК Остаток,
	|	ЕСТЬNULL(МатериалыКОтгрузке.КОтгрузке, 0) КАК КПолучению,
	|	ЕСТЬNULL(ЗаказыМатериаловОстатки.ВРезерве, 0) КАК ВРезерве,
	
	
	|	ЕСТЬNULL(ОстаткиВПодразделении.КоличествоОстаток, 0)
	|		+ ЕСТЬNULL(МатериалыКОтгрузке.КОтгрузке, 0) 
	|	КАК ТекущийИзлишекДефицит,
	
	|	ЕСТЬNULL(ЗаказыМатериаловОстатки.Заказано, 0) 
	|		- ЕСТЬNULL(МатериалыКОтгрузке.КОтгрузке, 0) КАК ОжидаетсяКПолучению,
	
	|		0
	|		КАК ПотребностьПоЗаказамНаПроизводство,
	
	|	ЕСТЬNULL(ОстаткиВПодразделении.КоличествоОстаток, 0)
	|		+ ЕСТЬNULL(ЗаказыМатериаловОстатки.Заказано, 0)
	|		КАК ОжидаемыйИзлишекДефицит,
	
	|	ВЫБОР
	|		КОГДА СписокНомеклатуры.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|				ИЛИ СписокНомеклатуры.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|				ИЛИ СписокНомеклатуры.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	СписокНомеклатуры КАК СписокНомеклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиВПодразделении КАК ОстаткиВПодразделении
	|		ПО (ОстаткиВПодразделении.Номенклатура = СписокНомеклатуры.Номенклатура)
	|			И (ОстаткиВПодразделении.Характеристика = СписокНомеклатуры.Характеристика)
	|			И (ОстаткиВПодразделении.Назначение = СписокНомеклатуры.Назначение)
	|			И (ОстаткиВПодразделении.Подразделение = СписокНомеклатуры.Подразделение)
	|			И (ОстаткиВПодразделении.Организация = СписокНомеклатуры.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказыМатериаловОстатки КАК ЗаказыМатериаловОстатки
	|		ПО (ЗаказыМатериаловОстатки.Номенклатура = СписокНомеклатуры.Номенклатура)
	|			И (ЗаказыМатериаловОстатки.Характеристика = СписокНомеклатуры.Характеристика)
	|			И (ЗаказыМатериаловОстатки.Назначение = СписокНомеклатуры.Назначение)
	|			И (ЗаказыМатериаловОстатки.Подразделение = СписокНомеклатуры.Подразделение)
	|			И (ЗаказыМатериаловОстатки.Организация = СписокНомеклатуры.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ МатериалыКОтгрузке КАК МатериалыКОтгрузке
	|		ПО (МатериалыКОтгрузке.Номенклатура = СписокНомеклатуры.Номенклатура)
	|			И (МатериалыКОтгрузке.Характеристика = СписокНомеклатуры.Характеристика)
	|			И (МатериалыКОтгрузке.Назначение = СписокНомеклатуры.Назначение)
	|			И (МатериалыКОтгрузке.Подразделение = СписокНомеклатуры.Подразделение)
	|			И (МатериалыКОтгрузке.Организация = СписокНомеклатуры.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиМатериаловСклад
	|		ПО (НастройкаПередачиМатериаловСклад.Подразделение = СписокНомеклатуры.Подразделение)
	|			И (НастройкаПередачиМатериаловСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|			И (НастройкаПередачиМатериаловСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (&НеИспользоватьСклад ИЛИ НастройкаПередачиМатериаловСклад.Склад = &Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписокНомеклатуры.Номенклатура.Наименование,
	|	СписокНомеклатуры.Характеристика.Наименование";
	
	Если Параметры.ЗаказыПоДату <> '000101010000' Тогда
		УсловиеЗаказыМатериаловОстаткиКДате = 
		"(ЗаказыМатериаловОстатки.Распоряжение, ЗаказыМатериаловОстатки.КодСтроки) В (
		|	ВЫБРАТЬ
		|		ДанныеЗаказов.Распоряжение КАК Распоряжение,
		|		ДанныеЗаказов.КодСтроки КАК КодСтроки
		|	ИЗ	
		|		РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(,,,
		|			(Распоряжение, КодСтрокиРаспоряжения) В (
		|				ВЫБРАТЬ
		|					Фильтр.Распоряжение,
		|					Фильтр.КодСтроки
		|				ИЗ
		|					ЗаказыМатериаловОстаткиПоРаспоряжениям КАК Фильтр)) КАК ДанныеЗаказов
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК ТаблицаЗаказМатериаловМатериалы
		|			ПО ТаблицаЗаказМатериаловМатериалы.Ссылка = ДанныеЗаказов.Распоряжение
		|				И ТаблицаЗаказМатериаловМатериалы.КодСтроки = ДанныеЗаказов.КодСтрокиРаспоряжения
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеЗаказов.Распоряжение,
		|		ДанныеЗаказов.КодСтроки
		|	ИМЕЮЩИЕ
		|		МИНИМУМ(
		|					ЕСТЬNULL(ТаблицаЗаказМатериаловМатериалы.НачалоОтгрузки, ДАТАВРЕМЯ(1, 1, 1))
		|				) <= &ЗаказыПоДатуКонецДня)";
	Иначе
		УсловиеЗаказыМатериаловОстаткиКДате = "ИСТИНА";
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеЗаказыМатериаловОстаткиКДате", УсловиеЗаказыМатериаловОстаткиКДате);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("Склад", Параметры.Склад);
	Запрос.УстановитьПараметр("НеИспользоватьПодразделение", Параметры.Подразделение.Пустая());
	Запрос.УстановитьПараметр("НеИспользоватьОрганизацию", Параметры.Организация.Пустая());
	Запрос.УстановитьПараметр("НеИспользоватьСклад", Параметры.Склад.Пустая());
	Запрос.УстановитьПараметр("ЗаказыПоДатуКонецДня", ?(Параметры.ЗаказыПоДату <> '000101010000', КонецДня(Параметры.ЗаказыПоДату), '000101010000'));
	
	Результат = Запрос.ВыполнитьПакет();
	
	ЗаказыМатериаловПоСкладам = Результат[Результат.ВГраница()-1].Выгрузить();
	
	ТаблицаПолучениеИВозвратМатериалов = Результат[Результат.ВГраница()].Выгрузить();
	ТаблицаПолучениеИВозвратМатериалов.Колонки.Добавить("ОстатокНаСкладе", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 3));
	
	СкладПоУмолчанию = Справочники.Склады.СкладПоУмолчанию();
	
	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаТаблицы Из ТаблицаПолучениеИВозвратМатериалов Цикл
		
		// Удаление строк по которым нет данных
		Если СтрокаТаблицы.Остаток = 0
			И СтрокаТаблицы.КПолучению = 0 
			И СтрокаТаблицы.ТекущийИзлишекДефицит = 0 
			И СтрокаТаблицы.ОжидаетсяКПолучению = 0 
			И СтрокаТаблицы.ОжидаемыйИзлишекДефицит = 0 Тогда
			
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли; 
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
			СтрокаТаблицы.Склад = СкладПоУмолчанию;
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СкладПоУмолчанию) Тогда
			СтрокаТаблицы.СкладПоУмолчанию = СкладПоУмолчанию;
		КонецЕсли; 
		
		Если НЕ Параметры.Склад.Пустая() И СтрокаТаблицы.Склад <> Параметры.Склад Тогда
			СтрокиКУдалению.Добавить(СтрокаТаблицы);
		КонецЕсли; 
		
	КонецЦикла; 
	Для каждого СтрокаТаблицы Из СтрокиКУдалению Цикл
		ТаблицаПолучениеИВозвратМатериалов.Удалить(СтрокаТаблицы);
	КонецЦикла; 
	
	// Формирование таблицы аналитики остатков в списке "Получение и возврат".
	ТаблицаДляОбеспечения = Новый ТаблицаЗначений();
	ТаблицаДляОбеспечения.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляОбеспечения.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляОбеспечения.Колонки.Добавить("Склад",          Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДляОбеспечения.Колонки.Добавить("Назначение",     Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	ТаблицаДляОбеспечения.Колонки.Добавить("Подразделение",  Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаДляОбеспечения.Колонки.Добавить("Идентификатор",  ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 0));
	ТаблицаДляОбеспечения.Колонки.Добавить("КПолучению",     ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 3));
	
	СоответствиеСтрок = Новый Соответствие;
	
	Идентификатор = 1;
	Для Каждого СтрокаТаблицы Из ТаблицаПолучениеИВозвратМатериалов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
			СтруктураПоиска = Новый Структура("Номенклатура,Характеристика,Назначение,Подразделение,Организация");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицы);
   			СписокСтрок = ЗаказыМатериаловПоСкладам.НайтиСтроки(СтруктураПоиска);
			Для каждого СтрокаЗаказМатериала Из СписокСтрок Цикл
				НоваяСтрока = ТаблицаДляОбеспечения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				НоваяСтрока.Идентификатор = Идентификатор;
				НоваяСтрока.Склад = СтрокаЗаказМатериала.Склад;
				Идентификатор = Идентификатор + 1;
				СоответствиеСтрок.Вставить(НоваяСтрока.Идентификатор, СтрокаТаблицы);
			КонецЦикла; 
			Если СписокСтрок.Количество() = 0 Тогда
				Идентификатор = Идентификатор + 1;
			КонецЕсли; 
		Иначе
			НоваяСтрока = ТаблицаДляОбеспечения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Идентификатор = Идентификатор;
			Идентификатор = Идентификатор + 1;
			СоответствиеСтрок.Вставить(НоваяСтрока.Идентификатор, СтрокаТаблицы);
		КонецЕсли; 
	КонецЦикла;
	
	// Получение остатков склада.
	ТаблицаОстатков = СвободныйОстатокНаСкладе(ТаблицаДляОбеспечения);
	
	// Загрузка остатков в список "Получение и возврат".
	Для Каждого СтрокаТаблицы Из ТаблицаОстатков Цикл
		СтрокаПолучениеИВозврат = СоответствиеСтрок.Получить(СтрокаТаблицы.Идентификатор);
		СтрокаПолучениеИВозврат.ОстатокНаСкладе = СтрокаПолучениеИВозврат.ОстатокНаСкладе + СтрокаТаблицы.Количество;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаПолучениеИВозвратМатериалов, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СвободныйОстатокНаСкладе(ТаблицаДляОбеспечения) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаДляОбеспечения", ТаблицаДляОбеспечения);
	Запрос.Текст =
		// Строки списка "Получение и возврат".
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Подразделение  КАК Подразделение,
		|	Таблица.Идентификатор  КАК Идентификатор,
		|	Таблица.КПолучению     КАК Количество
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаДляОбеспечения КАК Таблица
		|
		|;
		|/////////////////////////////////////////////////////////
		// Аналитика потребностей строк списка "Получение и возврат".
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Подразделение  КАК Подразделение
		|ПОМЕСТИТЬ ВтТоварыПодразделений
		|ИЗ
		|	ВтТовары КАК Таблица
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Номенклатура, Характеристика, Склад, Назначение
		|
		|;
		|/////////////////////////////////////////////////////////
		// Материалы заказов заданной аналитики
		|ВЫБРАТЬ
		|	Набор.Подразделение         КАК Подразделение,
		|	Набор.Распоряжение          КАК Распоряжение,
		|
		|	Набор.Номенклатура          КАК Номенклатура,
		|	Набор.Характеристика        КАК Характеристика,
		|	Набор.Склад                 КАК Склад,
		|	Набор.Назначение            КАК Назначение,
		|
		|	СУММА(Набор.КоличествоОборот) КАК Количество,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                           КАК ЗарезервированоНаСкладе,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                           КАК ЗарезервированоКДате,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|				Набор.ДатаПотребности
		|			КОНЕЦ                       КАК ДатаОтгрузки
		|
		|ПОМЕСТИТЬ ВтПотребностиПодразделений
		|ИЗ(
		// Материалы заказов на производство заданной аналитики.
		|	ВЫБРАТЬ
		|		РегистрЗаказы.Подразделение         КАК Подразделение,
		|		РегистрЗаказы.Распоряжение          КАК Распоряжение,
		|
		|		РегистрЗаказы.Номенклатура          КАК Номенклатура,
		|		РегистрЗаказы.Характеристика        КАК Характеристика,
		|		РегистрЗаказы.Склад                 КАК Склад,
		|		РегистрЗаказы.Назначение            КАК Назначение,
		|
		|		РегистрЗаказы.КоличествоОборот      КАК КоличествоОборот,
		|
		|		РегистрЗаказы.ВариантОбеспечения    КАК ВариантОбеспечения,
		|		РегистрЗаказы.ДатаПотребности       КАК ДатаПотребности
		|	ИЗ
		|		РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(,,,
		|			(Номенклатура, Характеристика, Склад, Назначение, Подразделение) В(
		|				ВЫБРАТЬ
		|					Фильтр.Номенклатура   КАК Номенклатура,
		|					Фильтр.Характеристика КАК Характеристика,
		|					Фильтр.Склад          КАК Склад,
		|					Фильтр.Назначение     КАК Назначение,
		|					Фильтр.Подразделение  КАК Подразделение
		|				ИЗ
		|					ВтТоварыПодразделений КАК Фильтр)) КАК РегистрЗаказы
		// Материалы заказов на внутреннее потребление заданной аналитики.
		// ...
		|) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Подразделение, Набор.Распоряжение,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад, Набор.Назначение,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|			Набор.ДатаПотребности
		|		КОНЕЦ,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ,
		|
		|	ВЫБОР КОГДА Набор.ВариантОбеспечения В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ
		|
		|;
		|///////////////////////////////////////////////////////////
		// Материалы заказов на внутреннее потреление заданной аналитики.
		|ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Подразделение  КАК Подразделение,
		|	Таблица.Идентификатор  КАК Идентификатор,
		|
		|	ТаблицаПотребностей.ДатаОтгрузки КАК ДатаОтгрузки,
		|
		|	ЕСТЬNULL(ТаблицаПотребностей.ЗарезервированоНаСкладе, ЛОЖЬ) КАК ЗарезервированоНаСкладе,
		|	ЕСТЬNULL(ТаблицаПотребностей.ЗарезервированоКДате,    ЛОЖЬ) КАК ЗарезервированоКДате,
		|
		|	МАКСИМУМ(ЕСТЬNULL(ТаблицаПотребностей.Количество, 0))
		|		- СУММА(ВЫБОР КОГДА ТаблицаПотребностей.ЗарезервированоНаСкладе И НЕ РегистрКОтгрузке.КОтгрузке ЕСТЬ NULL ТОГДА // вычет отгруженного.
		|					ВЫБОР КОГДА РегистрКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|								
		|								РегистрКОтгрузке.КОтгрузке
		|								
		|						КОГДА РегистрКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|								И РегистрКОтгрузке.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство ТОГДА
		|								
		|								-РегистрКОтгрузке.КОтгрузке
		|						ИНАЧЕ
		|								0
		|					КОНЕЦ
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)         КАК Количество
		|ИЗ
		|	ВтТовары КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПотребностиПодразделений КАК ТаблицаПотребностей
		|		ПО ТаблицаПотребностей.Номенклатура     = Таблица.Номенклатура
		|		 И ТаблицаПотребностей.Характеристика   = Таблица.Характеристика
		|		 И ТаблицаПотребностей.Склад            = Таблица.Склад
		|		 И ТаблицаПотребностей.Назначение       = Таблица.Назначение
		|		 И ТаблицаПотребностей.Подразделение    = Таблица.Подразделение
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК РегистрКОтгрузке
		|		ПО РегистрКОтгрузке.ДокументОтгрузки = ТаблицаПотребностей.Распоряжение
		|		 И РегистрКОтгрузке.Номенклатура     = ТаблицаПотребностей.Номенклатура
		|		 И РегистрКОтгрузке.Характеристика   = ТаблицаПотребностей.Характеристика
		|		 И РегистрКОтгрузке.Склад            = ТаблицаПотребностей.Склад
		|		 И РегистрКОтгрузке.Назначение       = ТаблицаПотребностей.Назначение
		|		 И РегистрКОтгрузке.Получатель       = ТаблицаПотребностей.Подразделение
		|		 И РегистрКОтгрузке.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Идентификатор, Таблица.Подразделение,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад, Таблица.Назначение,
		|	ТаблицаПотребностей.ДатаОтгрузки, ТаблицаПотребностей.Распоряжение,
		|	ЕСТЬNULL(ТаблицаПотребностей.ЗарезервированоНаСкладе, ЛОЖЬ),
		|	ЕСТЬNULL(ТаблицаПотребностей.ЗарезервированоКДате, ЛОЖЬ)
		|УПОРЯДОЧИТЬ ПО
		|	Таблица.Идентификатор";
	
	ТаблицаПотребностей = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСостояниеОбеспечения = ОбеспечениеСервер.СостояниеОбеспеченияНаличием(ТаблицаПотребностей);
	
	Возврат ТаблицаСостояниеОбеспечения;
	
КонецФункции

// Определяет, возможно ли оформление накладных для выделенных документов списка распоряжений к оформлению
// Исходя из состава выделенных распоряжений и параметров оформления накладных.
//
//  Параметры:
//   ДокументыПоВидам - Структура - структура с полями: "Заказы" и "Накладные", ссылки на выделенные документы в спсике рапоряжений.
//   ПоОрдерам - Булево - Истина, если необходимо оформлять накладную по ордерам, ложь, если необходимо оформлять
//                        накладную по заказам.
//
//  Возвращаемое значение:
//   Структура - содержит поля: "ЕстьОшибки" - Истина, если нельзя оформить накладную, "ТекстОшибки" - текст ошибки при наличии.
//
Функция ПроверитьСоставДокументовКОформлениюНакладной(ДокументыПоВидам, ПоОрдерам)
	
	ДокументыДляОбработки = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДокументыДляОбработки, ДокументыПоВидам.Накладные);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДокументыДляОбработки, ДокументыПоВидам.Заказы);
	
	ТекстОшибки = "";
	Если ПоОрдерам Тогда
		
		Если ДокументыДляОбработки.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Оформление по ордерам недоступно для выделенных документов.
			                                 |Для оформления накладных по ордерам необходимо выделить
			                                 |либо заказы на отгрузку с ордерного склада, либо накладную,
			                                 |которую необходимо перезаполнить по ордерам.'");
			
		ИначеЕсли ДокументыПоВидам.Заказы.Количество() > 0 И ДокументыПоВидам.Накладные.Количество() > 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Оформление по ордерам недоступно для документов различных видов.
			                                 |Для оформления накладных по ордерам необходимо выделить
			                                 |либо заказы на отгрузку с ордерного склада, либо накладную,
			                                 |которую необходимо перезаполнить по ордерам.'");
			
		ИначеЕсли ДокументыПоВидам.СоответствиеОрдера = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Оформление по ордерам недоступно, так как ордера соответствуют накладным.'");
			
		КонецЕсли;
		
	ИначеЕсли ДокументыПоВидам.Заказы.Количество() = 0 Тогда
		
		ТекстОшибки = НСтр("ru = 'Оформление по заказам недоступно для выделенных документов.
		                                 |Для оформления накладных по заказам необходимо выделить
		                                 |хотя бы один заказ из списка заказов и накладных.'");
		
	КонецЕсли;
	
	Результат = Новый Структура("ЕстьОшибки, ТекстОшибки", ТекстОшибки <> "", ТекстОшибки);
	Возврат Результат;
	
КонецФункции

Функция ЗаказыНаОтгрузкуСОрдерныхСкладов(Заказы, СвойстваЗаказов, ПриемкаИОтгрузка = Ложь)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ДокументОтгрузки КАК Ссылка,
		|	Таблица.Склад КАК Склад
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке КАК Таблица
		|ГДЕ
		|	Таблица.ДокументОтгрузки В(&Заказы)
		|	И (Таблица.Склад В (&Склады)
		|			ИЛИ НЕ &ОтборПоСкладу)
		|	И Таблица.Активность
		|	И Таблица.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|	И Таблица.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня";
	
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	
	МассивСкладов = Новый Массив;
	Для каждого ЗначенияСвойств Из СвойстваЗаказов Цикл
		Если ЗначенияСвойств.Свойство("Склад") И МассивСкладов.Найти(ЗначенияСвойств.Склад) = Неопределено Тогда
			МассивСкладов.Добавить(ЗначенияСвойств.Склад);
		КонецЕсли; 
	КонецЦикла; 
	Запрос.УстановитьПараметр("Склады", МассивСкладов);
	Запрос.УстановитьПараметр("ОтборПоСкладу", МассивСкладов.Количество() <> 0);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить().Выгрузить();
	
	// Нужно удалить строки по неордерным складам
	Если МассивСкладов.Количество() <> 0 Тогда
		СтрокиКУдалению = Новый Массив;
		Для ИндексСтроки = -СвойстваЗаказов.ВГраница() По 0 Цикл
			Отбор = Новый Структура("Склад", СвойстваЗаказов[-ИндексСтроки].Склад);
			Если Результат.НайтиСтроки(Отбор).Количество() = 0 Тогда
				СтрокиКУдалению.Добавить(-ИндексСтроки);
			КонецЕсли; 
		КонецЦикла; 
		Для каждого ИндексСтроки Из СтрокиКУдалению Цикл
			СвойстваЗаказов.Удалить(ИндексСтроки);
		КонецЦикла; 
	КонецЕсли; 
	
	Возврат ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Результат.ВыгрузитьКолонку("Ссылка"));
	
КонецФункции

// Проверяет возможность выполнения команды "Оформить" для выделенных документов в списке.
//
//  Параметры:
//   Контекст - Структура - определяет контекст (рабочее место) вызова команды. Содержит поля:
//                          "ИмяТипаНакладной" - для использования экспортных функций модуля менеджера накладной.
//                          "НастройкиФормыПереоформления" - настройки формы переоформления накладных
//                                                           (см. функцию "НакладныеСервер.НастройкиФормыПереоформленияНакладных").
//   ПараметрыВыполненияКоманды - Структура - определяет действие, выбранное пользователем в рабочем месте. Содержит поля:
//                                            "ПоОрдерам" - Булево, признак, что заполнение необходимо производить по ордерам.
//                                            "ДокументыПоВидам" - Структура - выбранные документы в спсике для
//                                                                             оформления накладных. (см. функцию "НакладныеКлиент.СсылкиВыделенныхСтрокСпискаПоВидам").
//                                            "Склад" - Склад, отобранный в рабочем месте.
//  Возвращаемое значение:
//   Струкутра - Структура с полями "ЕстьОшибки", "ТекстОшибки".
//
Функция ПроверитьВозможностьВыполненияКомандыОформить(Контекст, ПараметрыВыполненияКоманды) Экспорт
	
	ПоОрдерам        = ПараметрыВыполненияКоманды.ПоОрдерам;
	ДокументыПоВидам = ПараметрыВыполненияКоманды.ДокументыПоВидам;
	Склад            = ПараметрыВыполненияКоманды.Склад;
	
	Если ПоОрдерам Тогда
		
		// Исключение распоряжений на отгрузку с неордерных складов.
		ДокументыПоВидам.Вставить("Заказы",    ЗаказыНаОтгрузкуСОрдерныхСкладов(ДокументыПоВидам.Заказы, ДокументыПоВидам.СвойстваЗаказов));
		ДокументыПоВидам.Вставить("Накладные", ЗаказыНаОтгрузкуСОрдерныхСкладов(ДокументыПоВидам.Накладные, Новый Массив));
		
	КонецЕсли;
	
	// Проверка возможности оформления накладной.
	РезультатПроверки = ПроверитьСоставДокументовКОформлениюНакладной(ДокументыПоВидам, ПоОрдерам);
	РезультатПроверки.Вставить("РеквизитыШапки", Неопределено);
	
	Если Не РезультатПроверки.ЕстьОшибки И ДокументыПоВидам.Заказы.Количество() > 0 Тогда // дополнительная проверка возможности оформления одной накладной по нескольким заказам.
		
		МенеджерНакладной = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Документ." + Контекст.ИмяТипаНакладной);
		РеквизитыШапки = МенеджерНакладной.ДанныеЗаполненияНакладной(ДокументыПоВидам.Заказы, ДокументыПоВидам.СвойстваЗаказов);
		РезультатПроверки = МенеджерНакладной.ПроверитьДанныеЗаполненияНакладной(РеквизитыШапки);
		РезультатПроверки.Вставить("РеквизитыШапки", РеквизитыШапки);
		
	КонецЕсли;
	
	Если Не РезультатПроверки.ЕстьОшибки И ПоОрдерам
		И Не НакладныеСервер.ЕстьРасходныйОрдерДляЗаказовНаОтгрузку(ДокументыПоВидам.Заказы, Ложь)
		И Не НакладныеСервер.ЕстьРасходныйОрдерДляЗаказовНаОтгрузку(ДокументыПоВидам.Накладные, Ложь) Тогда
		
		РезультатПроверки.ЕстьОшибки = Истина;
		РезультатПроверки.ТекстОшибки = НСтр("ru = 'Оформление по ордерам недоступно, так как отгрузка
		                                           |по выбранным распоряжениям еще не начата.'");
	КонецЕсли;
	
	Возврат РезультатПроверки;
	
КонецФункции

// Определяет параметры и имя формы, которую необходимо открыть при выполеннии команд оформления накладных в списке
// распоряжений к оформлению.
//
//  Параметры:
//   Контекст - Структура - определяет контекст (рабочее место) вызова команды. Содержит поля:
//                          "ИмяТипаНакладной" - для использования экспортных функций модуля менеджера накладной.
//                          "НастройкиФормыПереоформления" - настройки формы переоформления накладных
//                                                           (см. функцию "НакладныеСервер.НастройкиФормыПереоформленияНакладных").
//   ПараметрыВыполненияКоманды - Структура - определяет действие, выбранное пользователем в рабочем месте. Содержит поля:
//                                            "ПоОрдерам" - Булево, признак, что заполнение необходимо производить по ордерам.
//                                            "ДокументыПоВидам" - Структура - выбранные документы в спсике для
//                                                                             оформления накладных. (см. функцию "НакладныеКлиент.СсылкиВыделенныхСтрокСпискаПоВидам").
//                                            "Склад" - Склад, отобранный в рабочем месте.
//   РеквизитыШапки - Стркутура - содержит данные заполнения накладной по заказам.
//
//  Возвращаемое значение:
//   Струкутра - Структура с полями "Имя", "Параметры".
//
Функция ПараметрыИИмяФормыОформленияНакладной(Контекст, ПараметрыВыполненияКоманды, РеквизитыШапки) Экспорт
	
	ПоОрдерам        = ПараметрыВыполненияКоманды.ПоОрдерам;
	ДокументыПоВидам = ПараметрыВыполненияКоманды.ДокументыПоВидам;
	Склад            = ПараметрыВыполненияКоманды.Склад;
	
	ПараметрыИИмяФормы = Новый Структура("ЕстьОшибки, Имя, Параметры", Ложь);
	Если ПоОрдерам И ДокументыПоВидам.Накладные.Количество() > 0 Тогда // перезаполнение по ордерам выделенной накладной
		
		ПараметрыИИмяФормы.Имя = Контекст.НастройкиФормыПереоформления.ИмяФормыНакладной;
		ПерезаполняемаяНакладная = ДокументыПоВидам.Накладные[0];
		МассивЗаказов = Новый Массив();
		МассивЗаказов.Добавить(ПерезаполняемаяНакладная);
		ЗначенияЗаполнения = Новый Структура("ЗаполнятьПоОрдеру, МассивЗаказов", Истина, МассивЗаказов);
		ПараметрыИИмяФормы.Параметры = Новый Структура("Ключ, ЗначенияЗаполнения", ПерезаполняемаяНакладная, ЗначенияЗаполнения);
		
	Иначе // оформление накладной по выделенным заказам
		
		Если Не ПоОрдерам Или ДокументыПоВидам.СостояниеНакладной = 1 Тогда // накладных нет, оформление новой накладной
		
			ПараметрыИИмяФормы.Имя = Контекст.НастройкиФормыПереоформления.ИмяФормыНакладной;
			ДанныеЗаполнения = Новый Структура("МассивЗаказов, ЗаполнятьПоОрдеру, РеквизитыШапки",
				ДокументыПоВидам.Заказы, ПоОрдерам, РеквизитыШапки);
			ПараметрыИИмяФормы.Параметры = Новый Структура("Основание", ДанныеЗаполнения);
		
		Иначе // переоформление накладных
		
			ПараметрыИИмяФормы.Имя = "ОбщаяФорма.ПереоформлениеНакладныхПоРаспоряжениям";
			ПараметрыИИмяФормы.Параметры = Новый Структура("Заказы, Склад, РеквизитыШапки, НастройкиФормы");
			ПараметрыИИмяФормы.Параметры.Заказы         = ДокументыПоВидам.Заказы;
			ПараметрыИИмяФормы.Параметры.Склад          = Склад;
			ПараметрыИИмяФормы.Параметры.РеквизитыШапки = РеквизитыШапки;
			ПараметрыИИмяФормы.Параметры.НастройкиФормы = Контекст.НастройкиФормыПереоформления;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПараметрыИИмяФормы;
	
КонецФункции

#КонецОбласти

#КонецЕсли
