#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДоступныеСчетаУчета

// Функция формирует массивы доступных счетов учета для номенклатуры.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаНоменклатуры() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета товаров на складе
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|	И НЕ ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета товаров в пути
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И НЕ ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета передачи на комиссию
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И НЕ ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета передачи в переработку
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	НЕ ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И НЕ ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета выручки от продаж
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета себестоимости продаж
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета НДС продаж
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета НДС при закупке
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета НДС товаров в пути
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета затрат на приобретения товаров
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЗаготовлениеИПриобретениеМЦ))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаУчетаНаСкладе", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[0])); 
	СтруктураСчетовУчета.Вставить("СчетаУчетаВПути", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[1]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаПередачиНаКомиссию", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[2]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаПередачиВПереработку", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[3]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаВыручкиОтПродаж", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[4]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаСебестоимостиПродаж", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[5]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаНДСПриПродаже", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[6]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаНДСПриЗакупке", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[7]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаНДСВПути", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[8]));
	СтруктураСчетовУчета.Вставить("СчетаУчетаЗатратыНаПриобретение", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[9]));
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета для расчетов с клиентами.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаРасчетов() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов с поставщиками
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по авансам, выданным поставщикам
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФинансовыеВложения)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов с клиентами
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФинансовыеВложения)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по авансам, полученным от клиентов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по комиссионному вознаграждению
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по основному долгу - кредиторы
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по процентам - кредиторы
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по комиссии - кредиторы
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И ПланСчетов.Вид <> ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по основному долгу, процентам, комиссии - дебиторы
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И ПланСчетов.Вид <> ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СпециальныеСчета))
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФинансовыеВложения))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСПоставщиками", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[0]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоАвансаВыданным", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[1]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСКлиентами", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[2]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоАвансаПолученным", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[3]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоКомиссии", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[4]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСКредиторамиОсновнойДолг", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[5]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСКредиторамиПроценты", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[6]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСКредиторамиКомиссия", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[7]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСДебиторамиОсновнойДолг", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[8]));
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСДебиторамиПроценты", СтруктураСчетовУчета.СчетаРасчетовСДебиторамиОсновнойДолг);
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСДебиторамиКомиссия", СтруктураСчетовУчета.СчетаРасчетовСДебиторамиОсновнойДолг);
	
	Возврат СтруктураСчетовУчета;

КонецФункции

// Функция формирует массивы доступных счетов учета для прочих доходов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаПрочихДоходов() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|");
	
	Результат = Запрос.Выполнить();
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаПрочихДоходов", МассивСчетовИзРезультатаЗапроса(Результат));
	
	Возврат СтруктураСчетовУчета;

КонецФункции

// Функция формирует массивы доступных счетов учета для расходов.
//
// Параметры
// 	 СтатьяРасходов - ПланВидовХарактеристик.СтатьиРасходов - Статья для которой необходимо получить доступные счета учета.
// 											Если Неопределено, то формируется общий список доступных счетов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаРасходов(СтатьяРасходов = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка,
	|	ВЫБОР 
	|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаВнеоборотныеАктивы,
	|	ВЫБОР 
	|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаОбъектыЭксплуатации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасходыНаОбъектыЭксплуатации,
	|	ВЫБОР 
	|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаОбъектыСтроительства
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасходыНаОбъектыСтроительства,
	|	ВЫБОР 
	|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаОбъектыЭксплуатации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасходыНаНМАиНИОКР,
	|	ВЫБОР 
	|		КОГДА СтатьиРасходов.ВидДеятельностиРасходов В (
	|					ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиРасходов.ПрочаяДеятельность),
	|					ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоПрочейДеятельности
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	Ссылка = &СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Счета учета Расходов
	// Прочие расходы
	|ВЫБРАТЬ
	|	""СчетаПрочихРасходов"" КАК РазделСчета,
	|	План.Ссылка КАК Ссылка,
	|	План.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды
	|	ПО
	|		План.Ссылка = Виды.Ссылка
	|		И Виды.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы))
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(Статьи.НаВнеоборотныеАктивы, ЛОЖЬ)
	|	И ЕСТЬNULL(Статьи.ПоПрочейДеятельности, ИСТИНА)
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""СчетаРасходов"" КАК РазделСчета,
	|	План.Ссылка КАК Ссылка,
	|	План.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды
	|	ПО
	|		План.Ссылка = Виды.Ссылка
	|		И Виды.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|							  ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов))
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(Статьи.НаВнеоборотныеАктивы, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(Статьи.ПоПрочейДеятельности, ЛОЖЬ)
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|	И НЕ План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеЗемельныхУчастков),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовПриродопользования),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
	|								 ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Недостачи и расходы на продажу
	|ВЫБРАТЬ
	|	""СчетаРасходов"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	НЕ ЕСТЬNULL(Статьи.НаВнеоборотныеАктивы, ЛОЖЬ)
	|	И НЕ ЕСТЬNULL(Статьи.ПоПрочейДеятельности, ЛОЖЬ)
	|	И План.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ОС
	|ВЫБРАТЬ
	|	""СчетаОС"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.НомерСтроки = 1
	|			И ХозрасчетныйВидыСубконто.ВидСубконто В (
	|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаОбъектыЭксплуатации, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Объекты строительсва
	|ВЫБРАТЬ
	|	""СчетаОбъектыСтроительства"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.НомерСтроки = 1
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаОбъектыСтроительства, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// НМА
	|ВЫБРАТЬ
	|	""СчетаНМА"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаНМАиНИОКР, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов),
	|								ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыполнениеНИОКР),
	|								ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеПоисковыеАктивы))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""СчетаНМА"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = План.Ссылка
	|			И ХозрасчетныйВидыСубконто.НомерСтроки = 1
	|			И ХозрасчетныйВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаНМАиНИОКР, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Счета списания расходов
	|ВЫБРАТЬ
	|	""СчетаСписания"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|	
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_РасходыНаПродажу),
	|							ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи_УправленческиеРасходы),
	|							ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|;
	|");
	
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаРасходов",				Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаПрочихРасходов",		Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаОС",					Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаОбъектыСтроительства",  Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаНМА",					Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаСписания",				Новый Массив);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураСчетовУчета[Выборка.РазделСчета].Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета ТМЦ в эксплуатации.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаТМЦВЭксплуатации() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета в эксплуатации
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации)
	|	И НЕ ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета забалансового учета в эксплуатации
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации)
	|	И ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаУчета", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[0])); 
	СтруктураСчетовУчета.Вставить("СчетаЗабалансовогоУчета", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[1]));
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета НЗП.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаНЗП() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|									ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|									ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбслуживающиеПроизводства),
	|									ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БракВПроизводстве))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код";
	
	Результат = Запрос.Выполнить();
	
	Возврат МассивСчетовИзРезультатаЗапроса(Результат);
	
КонецФункции

// Функция формирует массивы доступных счетов учета денежных средств.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаДенежныхСредств() Экспорт
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета безналичных денежных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета наличных денежных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеДокументы)
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаБезналичныхДенежныхСредств", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[0]));
	СтруктураСчетовУчета.Вставить("СчетаНаличныхДенежныхСредств", МассивСчетовИзРезультатаЗапроса(МассивРезультатов[1]));
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета внеоборотных активов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаВнеоборотныхАктивов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"/////////////////////////////////////////////////////////////////////////////
	|// Счета учета стоимости основных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета стоимости основных средств (целевое финансирование)
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета стоимости нематериальных активов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеАктивы))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета стоимости нематериальных активов (целевое финансирование)
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НематериальныеАктивы))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета амортизации основных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияОсновныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета амортизации основных средств (целевое финансирование)
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияОсновныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета амортизации нематериальных активов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета амортизации нематериальных активов (целевое финансирование)
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета выбытия основных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета резерва дооценки основных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета резерва дооценки нематериальных активов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета забалансового учета ОС
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ПланСчетовВидыСубконто
	|		ПО ПланСчетов.Ссылка = ПланСчетовВидыСубконто.Ссылка
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто В (
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты))
	|	И ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|	И НЕ ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредстваСданныеВАренду))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланСчетов.Ссылка,
	|	ПланСчетов.Код
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ПланСчетовВидыСубконто.Ссылка) = 2 И
	|	СУММА(ВЫБОР
	|			КОГДА ПланСчетовВидыСубконто.ВидСубконто В (
	|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|					ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) = 2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	СтруктураСчетовУчета = Новый Структура;
	
	СтруктураСчетовУчета.Вставить("СчетаСтоимость_ОС",			МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(0)));
	СтруктураСчетовУчета.Вставить("СчетаСтоимость_ОС_ЦФ",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(1)));
	СтруктураСчетовУчета.Вставить("СчетаСтоимость_НМА",			МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(2)));
	СтруктураСчетовУчета.Вставить("СчетаСтоимость_НМА_ЦФ",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(3)));
	СтруктураСчетовУчета.Вставить("СчетаАмортизация_ОС",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(4)));
	СтруктураСчетовУчета.Вставить("СчетаАмортизация_ОС_ЦФ",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(5)));
	СтруктураСчетовУчета.Вставить("СчетаАмортизация_НМА",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(6)));
	СтруктураСчетовУчета.Вставить("СчетаАмортизация_НМА_ЦФ",	МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(7)));
	СтруктураСчетовУчета.Вставить("СчетаВыбытие_ОС",			МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(8)));
	СтруктураСчетовУчета.Вставить("СчетаРезервДооценки_ОС",		МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(9)));
	СтруктураСчетовУчета.Вставить("СчетаРезервДооценки_НМА",	МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(10)));
	СтруктураСчетовУчета.Вставить("СчетаЗабалансовогоУчета_ОС",	МассивСчетовИзРезультатаЗапроса(РезультатыЗапроса.Получить(11)));
	
	Возврат СтруктураСчетовУчета;

КонецФункции

// Функция формирует массивы доступных счетов учета резервов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета.
//
Функция ДоступныеСчетаУчетаРезервов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"/////////////////////////////////////////////////////////////////////////////
	|// Счета учета резервов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	НЕ ПланСчетов.Забалансовый
	|		И НЕ ПланСчетов.ЗапретитьИспользоватьВПроводках
	|		И ПланСчетов.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РезервыПредстоящихРасходов))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код";
	
	Результат = Запрос.Выполнить();
	
	Возврат МассивСчетовИзРезультатаЗапроса(Результат);

КонецФункции

#КонецОбласти

// Функция определяет период, в котором находятся документы к отражению в регл. учете.
// 
// Параметры:
// 	МассивОрганизаций - Массив - Организации для отбора
// 	ОрганичениеПериода - СтандартнаяДатаНачала - ограничение периода "сверху".
//
// Возвращаемое значение:
// 	Период - Структура - Структура с полями ДатаНачала и ДатаОкончания.
// 	
Функция ПериодКОтражениюВРеглУчете(МассивОрганизаций, ОрганичениеПериода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МИНИМУМ(Строки.ДатаОтражения) КАК ДатаНачала,
	|	МАКСИМУМ(Строки.ДатаОтражения) КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
	|		ПО Передачи.Ссылка = Строки.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
	|		ПО Возвраты.Ссылка = Строки.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетыПоКомиссии
	|		ПО ОтчетыПоКомиссии.Ссылка = Строки.Регистратор
	|ГДЕ
	|	(Строки.Организация В (&МассивОрганизаций)
	|		ИЛИ Передачи.ОрганизацияПолучатель В (&МассивОрганизаций)
	|		ИЛИ Возвраты.ОрганизацияПолучатель В (&МассивОрганизаций)
	|		ИЛИ ОтчетыПоКомиссии.Комиссионер В (&МассивОрганизаций))
	|	И Строки.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(Строки.ДатаОтражения) ЕСТЬ NULL
	|	ИЛИ НЕ МАКСИМУМ(Строки.ДатаОтражения) ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Период = Новый Структура("ДатаНачала, ДатаОкончания", Дата(1,1,1), Дата(2029, 12, 31));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Период.ДатаНачала = НачалоДня(Выборка.ДатаНачала);
		Период.ДатаОкончания = КонецДня(Выборка.ДатаОкончания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОрганичениеПериода.Дата) И Период.ДатаОкончания > КонецДня(ОрганичениеПериода.Дата) Тогда
		Период.ДатаОкончания = КонецДня(ОрганичениеПериода.Дата);
	КонецЕсли;
	Если Период.ДатаНачала > Период.ДатаОкончания Тогда
		Период.ДатаНачала = Период.ДатаОкончания;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Период;
	
КонецФункции

Функция СоответствиеТаблицИИспользуемыхМетаданных() Экспорт
	
	СоответствиеТаблицИИспользуемыхМетаданных = Новый Соответствие;

	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаНоменклатуры", "РегистрСведений.ПорядокОтраженияНоменклатуры");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаНоменклатуры", "Справочник.ГруппыФинансовогоУчетаНоменклатуры");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаНоменклатурыПереданной", "РегистрСведений.ПорядокОтраженияНоменклатурыПереданной");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаНоменклатурыПереданной", "Справочник.ГруппыФинансовогоУчетаНоменклатуры");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаТМЦВЭксплуатации", "РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаТМЦВЭксплуатации", "Справочник.КатегорииЭксплуатации");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаДенежныхСредств", "Справочник.БанковскиеСчетаОрганизаций,Справочник.Кассы");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаПодарочныхСертификатов", "РегистрСведений.ПорядокОтраженияПодарочныхСертификатов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаПодарочныхСертификатов", "Справочник.ВидыПодарочныхСертификатов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаРасчетовСПартнерами", "РегистрСведений.ПорядокОтраженияРасчетовСПартнерами");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаРасчетовСПартнерами", "Справочник.ГруппыФинансовогоУчетаРасчетов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаПроизводства", "РегистрСведений.ПорядокОтраженияПроизводства");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаВнеоборотныхАктивов", "Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаРасходов", "РегистрСведений.ПорядокОтраженияРасходов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаРасходов", "ПланВидовХарактеристик.СтатьиРасходов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаДоходов", "РегистрСведений.ПорядокОтраженияДоходов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаДоходов", "ПланВидовХарактеристик.СтатьиДоходов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("СчетаУчетаРезервов", "РегистрСведений.ПорядокОтраженияРезервов");
	СоответствиеТаблицИИспользуемыхМетаданных.Вставить("ОбщиеСчетаУчетаРезервов", "Справочник.Резервы");
	
	Возврат СоответствиеТаблицИИспользуемыхМетаданных;
	
КонецФункции

// Функция обновляет таблицы счетов учета, используемые в форме обработки "ФормаНастройки". При обновлении анализируется
// регистр
//	"СчетаРеглУчетаТребующиеНастройки" и на основании данных в нем заполняется информация о требовании настройки. Для таблиц исключений
//	получаются данных по умолчанию (соответствующих счетов учета, указанных непосредственно в общих настройках - аналитиках).
//
//	Параметры:
//		СтруктураТаблиц - Структура - содержит следующие значения:
//			* Ключ - Строка - Имя соответствующей таблицы для заполнения. На основании переданного имени отрабывается тот или иной запрос;
//			* Значение - ТаблицаЗначений - текущая таблица настроек. Если значение заполнено, то исходные данные берутся из этой таблицы
//				и для нее лишь обновляется информация по необходимости настройки и значения по умолчанию;
//		Организации - Массив - СправочникСсылка.Организации - отбор по организациям.
//
//	Возвращаемое значение:
//		Структура - ключ структуры содержит имя соответствующей таблицы, а значение - обновленную таблицу значений для нее.
//
Функция ТаблицыНастроекСчетов(СтруктураТаблиц, Организации, ОрганизацияОтбора = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("ОрганизацияОтбора", ОрганизацияОтбора);
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ДополнитьВременныеТаблицыЗапросаОбщимиСчетамиУчета(Запрос.МенеджерВременныхТаблиц);
	
	// Таблицы, анализирующие общие настройки:
	ТекстЗапросаОбщиеСчетаУчетаНоменклатуры(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаНоменклатурыПереданной(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаТМЦВЭксплуатации(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаПодарочныхСертификатов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаРасчетовСПартнерами(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаДоходов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаРасходов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаОбщиеСчетаУчетаРезервов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	
	// Смежные таблицы (применяются и в общих настройках и в исключениях):
	ТекстЗапросаСчетаУчетаДенежныхСредств(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаНезавершенногоПроизводства(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаВнеоборотныхАктивов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	
	// Таблицы, анализирующие настройки исключений:
	ТекстЗапросаСчетаУчетаНоменклатуры(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаНоменклатурыПереданной(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаТМЦВЭксплуатации(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаПодарочныхСертификатов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаРасчетовСПартнерами(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаДоходов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаРасходов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	ТекстЗапросаСчетаУчетаРезервов(СтруктураТаблиц, ТекстыЗапроса, Запрос);
	
	ТаблицыЗапроса = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, Истина);
	
	Возврат ТаблицыЗапроса;
	
КонецФункции

// Выполняет анализ всех неотраженных операций,
//	ищет для них ненастроенные счета учета и заносит эти данные в регистр ненастроенных счетов учета, после чего обновляет данные по таблицам
//	настройки счетов учета.
//
//	Параметры:
//		СтруктураПараметров - Структура - содержит следующие значения:
//			* Таблицы - Структура - ключ содержит имя таблицы для обновления, значение - не используется.
//			* МассивОрганизаций - Массив - СправочникСсылка.Организации - отбор по организациям, операции которых будут анализироваться;
//			* ДатаОкончанияПериода - СтандартнаяДатаНачала - конец периода определяется на основании этой даты
//				(см. метод "Обработки.НастройкаОтраженияДокументовВРеглУчете.ПериодКОтражениюВРеглУчете");
//		АдресХранилища - результаты обновления таблиц (см. функцию "ТаблицыНастроекСчетов") будут записаны во временное хранилище по этому адресу.
//
Процедура АнализСчетовТребующихНастройкиИОбновлениеТаблиц(СтруктураПараметров, АдресХранилища) Экспорт
	
	ПараметрыАнализа = Новый Структура("МассивОрганизаций, ДатаОкончанияПериода");
	ЗаполнитьЗначенияСвойств(ПараметрыАнализа, СтруктураПараметров);
	ПараметрыАнализа.Вставить("РежимАнализа", "ПоНеотраженным");
	
	СоответствиеТаблицИИспользуемыхМетаданных = СоответствиеТаблицИИспользуемыхМетаданных();
	
	Для каждого Таблица Из СтруктураПараметров.Таблицы Цикл
		
		Если Не СтрНачинаетсяС(Таблица.Ключ, "Общие") Тогда
			
			// Для общих таблиц анализ не делается, так как для них будет отрабатывать анализ исключений (в порядке отражения).
			МетаданныеСтрокой = СоответствиеТаблицИИспользуемыхМетаданных.Получить(Таблица.Ключ);
			СписокМетаданныхТаблицы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МетаданныеСтрокой, ",");
			Для каждого МетаданныеТаблицы Из СписокМетаданныхТаблицы Цикл
				МенеджерОбъектаМетаданных = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(МетаданныеТаблицы);
				МенеджерОбъектаМетаданных.ЗаполнитьРегистрТребующихНастройкиНаОснованииАнализаНеотраженныхОпераций(ПараметрыАнализа);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновленныеТаблицыЗапроса = ТаблицыНастроекСчетов(СтруктураПараметров.Таблицы, СтруктураПараметров.МассивОрганизаций);
	
	ПоместитьВоВременноеХранилище(ОбновленныеТаблицыЗапроса, АдресХранилища);
	
КонецПроцедуры

#Область ПолучениеСостоянийНастройкиОтраженияДокументовВРеглУчете

Процедура СостояниеОффлайновыхРасчетов(Параметры, АдресРезультата) Экспорт
	
	СостояниеОффлайновыхОпераций = "";
	НеВыполненныеОперации = Новый Массив;
	
	ЭтапыЗакрытияМесяца = Новый Массив;
	ЭтапыЗакрытияМесяца.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоРасчетамСПартнерамиИПереоценкаРасчетов);
	ЭтапыЗакрытияМесяца.Добавить(Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	
	Дата = ?(ЗначениеЗаполнено(Параметры.ДатаОкончанияПериода), Параметры.ДатаОкончанияПериода.Дата, ТекущаяДатаСеанса());
	СостояниеЭтапов = ЗакрытиеМесяцаСервер.ОпределитьСостояниеЭтаповРасчета(ЭтапыЗакрытияМесяца, Дата, Параметры.МассивОрганизаций);
	
	Для Каждого КлючИЗначение Из СостояниеЭтапов Цикл
		
		Если КлючИЗначение.Значение = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоСОшибками
		 ИЛИ КлючИЗначение.Значение = Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено Тогда
			
			Если КлючИЗначение.Ключ = Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоРасчетамСПартнерамиИПереоценкаРасчетов Тогда
				НеВыполненныеОперации.Добавить(НСтр("ru = 'восстановления последовательности расчетов с контрагентами'"));
			Иначе
				НеВыполненныеОперации.Добавить(НСтр("ru = 'расчета себестоимости'"));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(НеВыполненныеОперации, АдресРезультата);
	
КонецПроцедуры

Процедура СостояниеОтраженияДокументов(Параметры, АдресРезультата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ОтражениеДокументов.ДатаОтражения) КАК ДатаНачала,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтражениеДокументов.Регистратор) КАК Количество
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументов
	|ГДЕ
	|	ОтражениеДокументов.Организация В(&МассивОрганизаций)
	|	И ОтражениеДокументов.ДатаОтражения <= &ДатаОкончания
	|	И (&ТекстУсловийПоВидуОперации)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтражениеДокументов.Регистратор) > 0";
	
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(Параметры.ДатаОкончанияПериода), Параметры.ДатаОкончанияПериода.Дата, Дата(2399, 1, 1)));
	
	СтрокиУсловийПоВидуОперации = Новый Массив;
	СтрокиУсловийПоВидуОперации.Добавить("ОтражениеДокументов.Статус = &СтатусОтражения");
	
	Если Параметры.ВидЗадания = "ОтраженныеВручную" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВУчетеВручную);
		СтрокиУсловийПоВидуОперации.Добавить("И НЕ ОтражениеДокументов.Регистратор ССЫЛКА Документ.ОперацияБух");
	ИначеЕсли Параметры.ВидЗадания = "НеОтраженныеВручную" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВУчетеВручную);
		СтрокиУсловийПоВидуОперации.Добавить("И НЕ ОтражениеДокументов.Регистратор ССЫЛКА Документ.ОперацияБух");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
	ИначеЕсли Параметры.ВидЗадания = "Отраженные" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете);
	ИначеЕсли Параметры.ВидЗадания = "НеОтраженные" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
		Если ПолучитьФункциональнуюОпцию("ОтражатьВРеглУчетеТолькоПроверенныеДокументы") Тогда
			// Добавим внутреннее соединение с регистром проверенных документов, для того, чтобы выбрать только проверенные:
			СтрокаВыборкиТаблицы = "РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументов";
			СтрокиНовойВыборки = Новый Массив;
			СтрокиНовойВыборки.Добавить(СтрокаВыборкиТаблицы);
			СтрокиНовойВыборки.Добавить("ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПроверкиДокументов КАК ПроверкаДокументов");
			СтрокиНовойВыборки.Добавить("ПО ОтражениеДокументов.Регистратор = ПроверкаДокументов.Документ");
			СтрокиНовойВыборки.Добавить("И ОтражениеДокументов.Организация = ПроверкаДокументов.Организация");
			Для каждого ИсключаемыйТип Из ПроверкаДокументовСервер.ИсключаемыеТипыДляПроверки() Цикл
				СтрокиНовойВыборки.Добавить("И ТИПЗНАЧЕНИЯ(ПроверкаДокументов.Документ) <> ТИП(Документ." + Метаданные.НайтиПоТипу(ИсключаемыйТип).Имя + ")");
			КонецЦикла;
			НоваяСтрокаВыборки = СтрСоединить(СтрокиНовойВыборки, Символы.ПС + Символы.Таб + Символы.Таб);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, СтрокаВыборкиТаблицы, НоваяСтрокаВыборки);
			Запрос.УстановитьПараметр("СтатусПроверки", Перечисления.ЭтапыПроверкиДокументаВРеглУчете.Проверен);
			СтрокиУсловийПоВидуОперации.Добавить("И ЕСТЬNULL(ПроверкаДокументов.СтатусПроверки, &СтатусПроверки) = &СтатусПроверки");
		КонецЕсли;
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРучнуюКорректировкуПроводокПоРеглУчету") Тогда
			// Если снята галка ручного отражения, но ранее документы были отражены вручную они не будут попадать ни в один из
			// списков, учтем их:
			СтрокиУсловийПоВидуОперации.Добавить("ИЛИ НЕ ОтражениеДокументов.Регистратор ССЫЛКА Документ.ОперацияБух");
		Иначе
			// Могут быть документы, проводки которых в начале корректировались вручную, а потом такое поведение было изменено:
			СтрокиУсловийПоВидуОперации.Добавить("ИЛИ ТИПЗНАЧЕНИЯ(ОтражениеДокументов.Регистратор) В (");
			МассивСтрокДокументовИсключений = Новый Массив;
			Для каждого ИсключаемыйТип Из РеглУчетВыборкиСерверПовтИсп.ИсключенияИзРучнойКорректировкиПроводок() Цикл
				МассивСтрокДокументовИсключений.Добавить("ТИП(Документ." + Метаданные.НайтиПоТипу(ИсключаемыйТип).Имя + ")");
			КонецЦикла;
			СтрокиУсловийПоВидуОперации.Добавить(СтрСоединить(МассивСтрокДокументовИсключений, ","));
			СтрокиУсловийПоВидуОперации.Добавить(")");
		КонецЕсли;
		СтрокиУсловийПоВидуОперации.Добавить("И ОтражениеДокументов.Статус В ("); 
		СтрокиУсловийПоВидуОперации.Добавить("ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВУчетеВручную),");
		СтрокиУсловийПоВидуОперации.Добавить("ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВУчетеВручную))");
	ИначеЕсли Параметры.ВидЗадания = "ОтраженныеОперациейБух" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВУчетеВручную);
		СтрокиУсловийПоВидуОперации.Добавить("И ОтражениеДокументов.Регистратор ССЫЛКА Документ.ОперацияБух");
	ИначеЕсли Параметры.ВидЗадания = "НеОтраженныеОперациейБух" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВУчетеВручную);
		СтрокиУсловийПоВидуОперации.Добавить("И ОтражениеДокументов.Регистратор ССЫЛКА Документ.ОперацияБух");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
	ИначеЕсли Параметры.ВидЗадания = "НеУказаныСчетаУчета" Тогда
		Запрос.УстановитьПараметр("СтатусОтражения", Перечисления.СтатусыОтраженияДокументовВРеглУчете.НеУказаныСчетаУчета);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
	КонецЕсли;
	
	ТекстУсловияПоВидуОперации = СтрСоединить(СтрокиУсловийПоВидуОперации, Символы.ПС + Символы.Таб);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловийПоВидуОперации", ТекстУсловияПоВидуОперации);
	
	Результат = Запрос.Выполнить();
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

Процедура СостояниеПроверкиДокументов(Параметры, АдресРезультата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ОтражениеДокументов.ДатаОтражения) КАК ДатаНачала,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтражениеДокументов.Регистратор) КАК Количество
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПроверкиДокументов КАК ПроверкаДокументов
	|		ПО
	|			ОтражениеДокументов.Регистратор = ПроверкаДокументов.Документ
	|			И ОтражениеДокументов.Организация = ПроверкаДокументов.Организация
	|			И НЕ ТИПЗНАЧЕНИЯ(ПроверкаДокументов.Документ) В (&СписокИсключаемыхДокументов)
	|			И (&ТекстСоединенияПоВидуОперации)
	|ГДЕ
	|	ОтражениеДокументов.Организация В(&МассивОрганизаций)
	|	И ОтражениеДокументов.ДатаОтражения <= &ДатаОкончания
	|	И (&ТекстУсловийПоВидуОперации)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОтражениеДокументов.Регистратор) > 0";
	
	Запрос.УстановитьПараметр("МассивОрганизаций", Параметры.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(Параметры.ДатаОкончанияПериода), Параметры.ДатаОкончанияПериода.Дата, Дата(2399, 1, 1)));
	
	СписокИсключаемыхДокументов = ПроверкаДокументовСервер.ИсключаемыеТипыДляПроверки();
	МассивИменТиповДокументов = Новый Массив;
	
	Для Каждого ИсключаемыйТип Из СписокИсключаемыхДокументов Цикл
		МассивИменТиповДокументов.Добавить("ТИП(Документ."+Метаданные.НайтиПоТипу(ИсключаемыйТип).Имя+")");
	КонецЦикла;
	
	СтрокаИменИсключаемыхТипов = СтрСоединить(МассивИменТиповДокументов, ",");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СписокИсключаемыхДокументов", СтрокаИменИсключаемыхТипов);
	
	ТекстУсловияПоВидуОперации = "ПроверкаДокументов.СтатусПроверки = &СтатусПроверки";
	Разделитель = Символы.ПС + Символы.Таб;
	
	Если Параметры.ВидЗадания = "Проверенные" Тогда
		Запрос.УстановитьПараметр("СтатусПроверки", Перечисления.ЭтапыПроверкиДокументаВРеглУчете.Проверен);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСоединенияПоВидуОперации", ТекстУсловияПоВидуОперации);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловийПоВидуОперации", ТекстУсловияПоВидуОперации);
	ИначеЕсли Параметры.ВидЗадания = "НеПроверенные" Тогда
		Запрос.УстановитьПараметр("СтатусПроверки", Перечисления.ЭтапыПроверкиДокументаВРеглУчете.НеПроверен);
		Если Не ПолучитьФункциональнуюОпцию("РазрешатьИзменятьПроверенныеДокументыПоРеглУчету") Тогда
			ТекстУсловияПоВидуОперации = ТекстУсловияПоВидуОперации + Разделитель +
				"ИЛИ ПроверкаДокументов.СтатусПроверки = ЗНАЧЕНИЕ(Перечисление.ЭтапыПроверкиДокументаВРеглУчете.КПовторнойПроверке)";
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСоединенияПоВидуОперации", "ИСТИНА");
		Запрос.УстановитьПараметр("СписокПроверяемыхТипов", Метаданные.РегистрыСведений.СтатусыПроверкиДокументов.Измерения.Документ.Тип.Типы());
		ТекстУсловияПоВидуОперации = ТекстУсловияПоВидуОперации + Разделитель +
			"ИЛИ ПроверкаДокументов.СтатусПроверки ЕСТЬ NULL И ТИПЗНАЧЕНИЯ(ОтражениеДокументов.Регистратор) В (&СписокПроверяемыхТипов)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВНУТРЕННЕЕ", "ЛЕВОЕ");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловийПоВидуОперации", ТекстУсловияПоВидуОперации);
	ИначеЕсли Параметры.ВидЗадания = "КПовторнойПроверке" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "МАКСИМУМ", "МИНИМУМ");
		Запрос.УстановитьПараметр("СтатусПроверки", Перечисления.ЭтапыПроверкиДокументаВРеглУчете.КПовторнойПроверке);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстСоединенияПоВидуОперации", ТекстУсловияПоВидуОперации);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстУсловийПоВидуОперации", ТекстУсловияПоВидуОперации);
	КонецЕсли;
		
	Результат = Запрос.Выполнить();
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

Процедура СостояниеРегламентногоЗадания(Параметры, АдресРезультата) Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	УстановитьПривилегированныйРежим(Истина);
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
	
	Задание = РегламентныеЗаданияСервер.Задание(Метаданные.РегламентныеЗадания.ОтражениеДокументовВРеглУчете);
	Если РазделениеВключено И ЗначениеЗаполнено(Задание.Шаблон) Тогда
		РасписаниеРегламентногоЗадания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задание.Шаблон, "Расписание").Получить();
	Иначе
		РасписаниеРегламентногоЗадания	= Задание.Расписание;
	КонецЕсли;
	ИспользоватьАвтоматическоеОтражениеВУчете = Задание.Использование;	
	СвойстваПоследнегоФоновогоЗадания = ОбщегоНазначенияУТ.ПолучитьСостояниеПоследнегоЗадания(Задание);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураВозврата.Вставить("ИспользоватьАвтоматическоеОтражениеВУчете", ИспользоватьАвтоматическоеОтражениеВУчете);
	СтруктураВозврата.Вставить("РазделениеВключено", РазделениеВключено);
	СтруктураВозврата.Вставить("РасписаниеРегламентногоЗадания", РасписаниеРегламентногоЗадания);
	СтруктураВозврата.Вставить("СвойстваПоследнегоФоновогоЗадания", СвойстваПоследнегоФоновогоЗадания);
	
	ПоместитьВоВременноеХранилище(СтруктураВозврата, АдресРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МассивСчетовИзРезультатаЗапроса(РезультатЗапроса)
	
	МассивВозврата = Новый Массив;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивВозврата.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

#Область ТекстыЗапросовПолученияНастроекСчетовУчета

Функция ТекстЗапросаОбщиеСчетаУчетаНоменклатуры(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаНоменклатуры", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНаСкладе,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВПути,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСВПути,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовОСНО,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНаСкладе,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыручкиОтПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаСебестоимостиПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВПути,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНДСВПути,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаНоменклатуры
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаНоменклатуры КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
		
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыФинансовогоУчетаНоменклатуры.Ссылка КАК АналитикаУчета,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНаСкладе,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВыручкиОтПродаж,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаСебестоимостиПродаж,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВыручкиОтПродажЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаСебестоимостиПродажЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНДСПриПродаже,
	|	ГруппыФинансовогоУчетаНоменклатуры.СтатьяДоходовОСНО,
	|	ГруппыФинансовогоУчетаНоменклатуры.СтатьяДоходовЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВПути,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНДСВПути,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)) КАК ТребуетсяНастройкаСчетУчетаНаСкладе,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж), ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж), ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродажЕНВД,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродажЕНВД,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже), ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродажеКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаВПути,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаНДСВПути,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчетаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ГруппыФинансовогоУчетаНоменклатуры.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродажеКомиссионера),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ ГруппыФинансовогоУчетаНоменклатуры.ЭтоГруппа
	|	И НЕ (ГруппыФинансовогоУчетаНоменклатуры.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) 
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыФинансовогоУчетаНоменклатуры.Ссылка,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНаСкладе,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВыручкиОтПродаж,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаСебестоимостиПродаж,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВыручкиОтПродажЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаСебестоимостиПродажЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНДСПриПродаже,
	|	ГруппыФинансовогоУчетаНоменклатуры.СтатьяДоходовОСНО,
	|	ГруппыФинансовогоУчетаНоменклатуры.СтатьяДоходовЕНВД,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаВПути,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНДСВПути,
	|	""""";
	
	Если ТаблицаИсточник = Неопределено Тогда
		// Таблица - источник не задана, значит нам необходимо дополнить элементы справочника пустым значением, счета учета
		//           которого будут взяты из соотв. регистра порядка отражения:
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
		"ВЫБРАТЬ
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНаСкладе, &ПустойСчет) КАК СчетУчетаНаСкладе,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродаж, &ПустойСчет) КАК СчетУчетаВыручкиОтПродаж,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродаж, &ПустойСчет) КАК СчетУчетаСебестоимостиПродаж,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД, &ПустойСчет) КАК СчетУчетаВыручкиОтПродажЕНВД,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД, &ПустойСчет) КАК СчетУчетаСебестоимостиПродажЕНВД,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНДСПриПродаже, &ПустойСчет) КАК СчетУчетаНДСПриПродаже,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходовОСНО,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СтатьяДоходовЕНВД, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходовЕНВД,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВПути, &ПустойСчет) КАК СчетУчетаВПути,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНДСВПути, &ПустойСчет) КАК СчетУчетаНДСВПути,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)) КАК ТребуетсяНастройкаСчетУчетаНаСкладе,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродажЕНВД,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродажЕНВД,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродажеКомиссионера))) КАК ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаВПути,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаНДСВПути,
		|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
		|	""""
		|ИЗ
		|	ОбщаяНастройкаНоменклатуры КАК ДанныеПустойАналитикиУчета
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
		|	ПО (СчетаТребующиеНастройки.АналитикаУчета = ДанныеПустойАналитикиУчета.АналитикаУчета)
		|		И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродажеКомиссионера),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)))
		|		И (СчетаТребующиеНастройки.Организация В (&Организации))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ДанныеПустойАналитикиУчета.СчетУчетаНаСкладе,
		|	ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродаж,
		|	ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродаж,
		|	ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД,
		|	ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД,
		|	ДанныеПустойАналитикиУчета.СчетУчетаНДСПриПродаже,
		|	ДанныеПустойАналитикиУчета.СтатьяДоходовОСНО,
		|	ДанныеПустойАналитикиУчета.СтатьяДоходовЕНВД,
		|	ДанныеПустойАналитикиУчета.СчетУчетаВПути,
		|	ДанныеПустойАналитикиУчета.СчетУчетаНДСВПути";
	Иначе
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаНоменклатуры", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ГруппыФинансовогоУчетаНоменклатуры", "ТаблицаОбщиеСчетаУчетаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГруппыФинансовогоУчетаНоменклатуры.Ссылка", "ГруппыФинансовогоУчетаНоменклатуры.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ГруппыФинансовогоУчетаНоменклатуры.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
									|	НЕ ГруппыФинансовогоУчетаНоменклатуры.ЭтоГруппа
									|	И НЕ (ГруппыФинансовогоУчетаНоменклатуры.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаНоменклатуры");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаНоменклатурыПереданной(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаНоменклатурыПереданной", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиНаКомиссию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаЗатратыНаПриобретение,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиВПереработку,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаПередачиНаКомиссию,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаЗатратыНаПриобретение,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаПередачиВПереработку,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|	
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаНоменклатурыПереданной
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаНоменклатурыПереданной КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыФинансовогоУчетаНоменклатуры.Ссылка КАК АналитикаУчета,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаПередачиНаКомиссию,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаЗатратыНаПриобретение,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаПередачиВПереработку,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию)) КАК ТребуетсяНастройкаСчетУчетаПередачиНаКомиссию,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)) КАК ТребуетсяНастройкаСчетУчетаЗатратыНаПриобретение,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку)) КАК ТребуетсяНастройкаСчетУчетаПередачиВПереработку,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчетаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ГруппыФинансовогоУчетаНоменклатуры.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ ГруппыФинансовогоУчетаНоменклатуры.ЭтоГруппа
	|	И НЕ (ГруппыФинансовогоУчетаНоменклатуры.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыФинансовогоУчетаНоменклатуры.Ссылка,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаПередачиНаКомиссию,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаЗатратыНаПриобретение,
	|	ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаПередачиВПереработку,
	|	""""";
	
	Если ТаблицаИсточник = Неопределено Тогда
		// Таблица - источник не задана, значит нам необходимо дополнить элементы справочника пустым значением, счета учета
		//           которого будут взяты из соотв. регистра порядка отражения:
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
		"ВЫБРАТЬ
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаПередачиНаКомиссию, &ПустойСчет) КАК СчетУчетаПередачиНаКомиссию,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаЗатратыНаПриобретение, &ПустойСчет) КАК СчетУчетаЗатратыНаПриобретение,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаПередачиВПереработку, &ПустойСчет) КАК СчетУчетаПередачиВПереработку,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию)) КАК ТребуетсяНастройкаСчетУчетаПередачиНаКомиссию,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)) КАК ТребуетсяНастройкаСчетУчетаЗатратыНаПриобретение,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку)) КАК ТребуетсяНастройкаСчетУчетаПередачиВПереработку,
		|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
		|	""""
		|ИЗ
		|	ОбщаяНастройкаНоменклатурыПереданной КАК ДанныеПустойАналитикиУчета
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
		|	ПО (СчетаТребующиеНастройки.АналитикаУчета = ДанныеПустойАналитикиУчета.АналитикаУчета)
		|		И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку)))
		|		И (СчетаТребующиеНастройки.Организация В (&Организации))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ДанныеПустойАналитикиУчета.СчетУчетаПередачиНаКомиссию,
		|	ДанныеПустойАналитикиУчета.СчетУчетаЗатратыНаПриобретение,
		|	ДанныеПустойАналитикиУчета.СчетУчетаПередачиВПереработку";
	Иначе
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаНоменклатурыПереданной", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ГруппыФинансовогоУчетаНоменклатуры", "ТаблицаОбщиеСчетаУчетаНоменклатурыПереданной");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГруппыФинансовогоУчетаНоменклатуры.Ссылка", "ГруппыФинансовогоУчетаНоменклатуры.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ГруппыФинансовогоУчетаНоменклатуры.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ ГруппыФинансовогоУчетаНоменклатуры.ЭтоГруппа
	|	И НЕ (ГруппыФинансовогоУчетаНоменклатуры.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаНоменклатурыПереданной");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаТМЦВЭксплуатации(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаТМЦВЭксплуатации", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетЗабалансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаТМЦВЭксплуатации
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаТМЦВЭксплуатации КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КатегорииЭксплуатации.Ссылка КАК АналитикаУчета,
	|	КатегорииЭксплуатации.СчетУчета,
	|	КатегорииЭксплуатации.СчетЗабалансовогоУчета,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации)) КАК ТребуетсяНастройкаСчетУчета,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)) КАК ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = КатегорииЭксплуатации.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ КатегорииЭксплуатации.ЭтоГруппа
	|	И НЕ (КатегорииЭксплуатации.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	КатегорииЭксплуатации.Ссылка,
	|	КатегорииЭксплуатации.СчетУчета,
	|	КатегорииЭксплуатации.СчетЗабалансовогоУчета,
	|	""""";
	
	Если ТаблицаИсточник = Неопределено Тогда
		// Таблица - источник не задана, значит нам необходимо дополнить элементы справочника пустым значением, счета учета
		//           которого будут взяты из соотв. регистра порядка отражения:
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
		"ВЫБРАТЬ
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчета, &ПустойСчет) КАК СчетУчета,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетЗабалансовогоУчета, &ПустойСчет) КАК СчетЗабалансовогоУчета,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации)) КАК ТребуетсяНастройкаСчетУчета,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)) КАК ТребуетсяНастройкаСчетЗабалансовогоУчета,
		|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
		|	""""
		|ИЗ
		|	ОбщаяНастройкаТМЦВЭксплуатации КАК ДанныеПустойАналитикиУчета
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
		|	ПО (СчетаТребующиеНастройки.АналитикаУчета = ДанныеПустойАналитикиУчета.АналитикаУчета)
		|		И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)))
		|		И (СчетаТребующиеНастройки.Организация В (&Организации))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ДанныеПустойАналитикиУчета.СчетУчета,
		|	ДанныеПустойАналитикиУчета.СчетЗабалансовогоУчета";
	Иначе
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаТМЦВЭксплуатации", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.КатегорииЭксплуатации", "ТаблицаОбщиеСчетаУчетаТМЦВЭксплуатации");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КатегорииЭксплуатации.Ссылка", "КатегорииЭксплуатации.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "КатегорииЭксплуатации.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ КатегорииЭксплуатации.ЭтоГруппа
	|	И НЕ (КатегорииЭксплуатации.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
								
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаТМЦВЭксплуатации");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаПодарочныхСертификатов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаПодарочныхСертификатов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаПодарочныхСертификатов
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаПодарочныхСертификатов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыПодарочныхСертификатов.Ссылка КАК АналитикаУчета,
	|	ВидыПодарочныхСертификатов.СчетУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ВидыПодарочныхСертификатов.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ (ВидыПодарочныхСертификатов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыПодарочныхСертификатов.Ссылка,
	|	ВидыПодарочныхСертификатов.СчетУчета,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаПодарочныхСертификатов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ВидыПодарочныхСертификатов", "ТаблицаОбщиеСчетаУчетаПодарочныхСертификатов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВидыПодарочныхСертификатов.Ссылка", "ВидыПодарочныхСертификатов.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ВидыПодарочныхСертификатов.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ (ВидыПодарочныхСертификатов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаПодарочныхСертификатов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаРасчетовСПартнерами(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаРасчетовСПартнерами", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовПолученных,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовВыданных,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовПоПретензиям,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНеотфактурованныеПоставки,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентамиТара,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщикамиТара,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАвансовПолученных,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАвансовВыданных,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовПоПретензиям,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНеотфактурованныеПоставки,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКлиентамиТара,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСПоставщикамиТара,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКомиссионерами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКомитентами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКредиторами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСДебиторами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСЛизингодателями,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКомиссионерами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКомитентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКредиторами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСДебиторами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСЛизингодателями,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаРасчетовСПартнерами
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаРасчетовСПартнерами КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбщиеНастройки.Ссылка КАК АналитикаУчета,
	|
	|	ОбщиеНастройки.СчетУчетаРасчетовСКлиентами,
	|	ОбщиеНастройки.СчетУчетаАвансовПолученных,
	|	ОбщиеНастройки.СчетУчетаРасчетовСПоставщиками,
	|	ОбщиеНастройки.СчетУчетаАвансовВыданных,
	|	ОбщиеНастройки.СчетУчетаРасчетовПоПретензиям,
	|	ОбщиеНастройки.СчетУчетаНеотфактурованныеПоставки,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКлиентамиТара,
	|	ОбщиеНастройки.СчетУчетаРасчетовСПоставщикамиТара,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиПроценты,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиПроценты,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)) КАК ТребуетсяНастройкаСчетУчетаАвансовПолученных,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщиками,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)) КАК ТребуетсяНастройкаСчетУчетаАвансовВыданных,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям)) КАК ТребуетсяНастройкаСчетУчетаРасчетовПоПретензиям,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки)) КАК ТребуетсяНастройкаСчетУчетаНеотфактурованныеПоставки,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентамиТара,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщикамиТара,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиПроценты,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиКомиссия,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиПроценты,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиКомиссия,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|
	|	ОбщиеНастройки.РасчетыСКлиентами,
	|	ОбщиеНастройки.РасчетыСПоставщиками,
	|	ОбщиеНастройки.РасчетыСКомиссионерами,
	|	ОбщиеНастройки.РасчетыСКомитентами,
	|	ОбщиеНастройки.РасчетыСКредиторами,
	|	ОбщиеНастройки.РасчетыСДебиторами,
	|	ОбщиеНастройки.РасчетыСЛизингодателями,
	|
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара))
	|	И ОбщиеНастройки.РасчетыСКлиентами) КАК ТребуетсяНастройкаРасчетыСКлиентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара))
	|	И ОбщиеНастройки.РасчетыСПоставщиками) КАК ТребуетсяНастройкаРасчетыСПоставщиками,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные))
	|	И ОбщиеНастройки.РасчетыСКомиссионерами) КАК ТребуетсяНастройкаРасчетыСКомиссионерами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные))
	|	И ОбщиеНастройки.РасчетыСКомитентами) КАК ТребуетсяНастройкаРасчетыСКомитентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты))
	|	И ОбщиеНастройки.РасчетыСКредиторами) КАК ТребуетсяНастройкаРасчетыСКредиторами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты))
	|	И ОбщиеНастройки.РасчетыСДебиторами) КАК ТребуетсяНастройкаРасчетыСДебиторами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу))
	|	И ОбщиеНастройки.РасчетыСЛизингодателями) КАК ТребуетсяНастройкаРасчетыСЛизингодателями,
	|
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ОбщиеНастройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ОбщиеНастройки.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ ОбщиеНастройки.ЭтоГруппа
	|	И НЕ (ОбщиеНастройки.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщиеНастройки.Ссылка,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКлиентами,
	|	ОбщиеНастройки.СчетУчетаАвансовПолученных,
	|	ОбщиеНастройки.СчетУчетаРасчетовСПоставщиками,
	|	ОбщиеНастройки.СчетУчетаАвансовВыданных,
	|	ОбщиеНастройки.СчетУчетаРасчетовПоПретензиям,
	|	ОбщиеНастройки.СчетУчетаНеотфактурованныеПоставки,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКлиентамиТара,
	|	ОбщиеНастройки.СчетУчетаРасчетовСПоставщикамиТара,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиПроценты,
	|	ОбщиеНастройки.СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиПроценты,
	|	ОбщиеНастройки.СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ОбщиеНастройки.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|	ОбщиеНастройки.РасчетыСКлиентами,
	|	ОбщиеНастройки.РасчетыСПоставщиками,
	|	ОбщиеНастройки.РасчетыСКомиссионерами,
	|	ОбщиеНастройки.РасчетыСКомитентами,
	|	ОбщиеНастройки.РасчетыСКредиторами,
	|	ОбщиеНастройки.РасчетыСДебиторами,
	|	ОбщиеНастройки.РасчетыСЛизингодателями,
	|	""""";
	
	Если ТаблицаИсточник = Неопределено Тогда
		// Таблица - источник не задана, значит нам необходимо дополнить элементы справочника пустым значением, счета учета
		//           которого будут взяты из соотв. регистра порядка отражения:
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() +
		"ВЫБРАТЬ
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентами, &ПустойСчет) КАК СчетУчетаРасчетовСКлиентами,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаАвансовПолученных, &ПустойСчет) КАК СчетУчетаАвансовПолученных,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщиками, &ПустойСчет) КАК СчетУчетаРасчетовСПоставщиками,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаАвансовВыданных, &ПустойСчет) КАК СчетУчетаАвансовВыданных,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовПоПретензиям, &ПустойСчет) КАК СчетУчетаРасчетовПоПретензиям,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНеотфактурованныеПоставки, &ПустойСчет) КАК СчетУчетаНеотфактурованныеПоставки,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентамиТара, &ПустойСчет) КАК СчетУчетаРасчетовСКлиентамиТара,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара, &ПустойСчет) КАК СчетУчетаРасчетовСПоставщикамиТара,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиПроценты,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиКомиссия,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиПроценты,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиКомиссия,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)) КАК ТребуетсяНастройкаСчетУчетаАвансовПолученных,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщиками,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)) КАК ТребуетсяНастройкаСчетУчетаАвансовВыданных,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям)) КАК ТребуетсяНастройкаСчетУчетаРасчетовПоПретензиям,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки)) КАК ТребуетсяНастройкаСчетУчетаНеотфактурованныеПоставки,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентамиТара,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщикамиТара,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиПроценты,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиКомиссия,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиПроценты,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиКомиссия,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|	ИСТИНА,
		|
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара))) КАК ТребуетсяНастройкаРасчетыСКлиентами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара))) КАК ТребуетсяНастройкаРасчетыСПоставщиками,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные))) КАК ТребуетсяНастройкаРасчетыСКомиссионерами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные))) КАК ТребуетсяНастройкаРасчетыСКомитентами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты))) КАК ТребуетсяНастройкаРасчетыСКредиторами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты))) КАК ТребуетсяНастройкаРасчетыСДебиторами,
		|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
		|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу))) КАК ТребуетсяНастройкаРасчетыСЛизингодателями,
		|
		|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
		|	""""
		|ИЗ
		|	ОбщаяНастройкаРасчетовСПартнерами КАК ДанныеПустойАналитикиУчета
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
		|	ПО (СчетаТребующиеНастройки.АналитикаУчета = ДанныеПустойАналитикиУчета.АналитикаУчета)
		|		И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
		|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)))
		|		И (СчетаТребующиеНастройки.Организация В (&Организации)) 
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПустойАналитикиУчета.АналитикаУчета,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентами,
		|	ДанныеПустойАналитикиУчета.СчетУчетаАвансовПолученных,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщиками,
		|	ДанныеПустойАналитикиУчета.СчетУчетаАвансовВыданных,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовПоПретензиям,
		|	ДанныеПустойАналитикиУчета.СчетУчетаНеотфактурованныеПоставки,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентамиТара,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства";
	Иначе
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаРасчетовСПартнерами", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ГруппыФинансовогоУчетаРасчетов", "ТаблицаОбщиеСчетаУчетаРасчетовСПартнерами");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбщиеНастройки.Ссылка", "ОбщиеНастройки.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ОбщиеНастройки.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ ОбщиеНастройки.ЭтоГруппа
	|	И НЕ (ОбщиеНастройки.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаРасчетовСПартнерами");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаДоходов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаДоходов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаДоходов
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаДоходов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиДоходов.Ссылка КАК АналитикаУчета,
	|	СтатьиДоходов.СчетУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = СтатьиДоходов.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ СтатьиДоходов.ЭтоГруппа
	|	И НЕ (СтатьиДоходов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиДоходов.Ссылка,
	|	СтатьиДоходов.СчетУчета,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаДоходов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПланВидовХарактеристик.СтатьиДоходов", "ТаблицаОбщиеСчетаУчетаДоходов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтатьиДоходов.Ссылка", "СтатьиДоходов.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "СтатьиДоходов.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ СтатьиДоходов.ЭтоГруппа
	|	И НЕ (СтатьиДоходов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаДоходов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаРасходов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("ОбщиеСчетаУчетаРасходов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|	ТекущаяТаблицаСчетовУчета.ВидДеятельностиРасходов,
		|	ТекущаяТаблицаСчетовУчета.РасходыНаОбъектыЭксплуатации,
		|	ТекущаяТаблицаСчетовУчета.РасходыНаОбъектыСтроительства,
		|	ТекущаяТаблицаСчетовУчета.РасходыНаНМАиНИОКР,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияОСНО,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетСписанияОСНО,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетСписанияЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаРасходов
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаРасходов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиРасходов.Ссылка КАК АналитикаУчета,
	|	СтатьиРасходов.ВидДеятельностиРасходов,
	|	
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыЭксплуатации КАК РасходыНаОбъектыЭксплуатации,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыСтроительства КАК РасходыНаОбъектыСтроительства,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаНМАиНИОКР КАК РасходыНаНМАиНИОКР,
	|
	|	СтатьиРасходов.СчетУчета,
	|	СтатьиРасходов.СчетСписанияОСНО,
	|	СтатьиРасходов.СчетСписанияЕНВД,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетСписанияОСНО,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетСписанияЕНВД,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = СтатьиРасходов.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ СтатьиРасходов.ЭтоГруппа
	|	И НЕ (СтатьиРасходов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиРасходов.Ссылка,
	|	СтатьиРасходов.ВидДеятельностиРасходов,
	|	СтатьиРасходов.СчетУчета,
	|	СтатьиРасходов.СчетСписанияОСНО,
	|	СтатьиРасходов.СчетСписанияЕНВД,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыЭксплуатации,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыСтроительства,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаНМАиНИОКР,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаРасходов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПланВидовХарактеристик.СтатьиРасходов", "ТаблицаОбщиеСчетаУчетаРасходов");
		// В таблице счетов учета уже заданы варианты расходов, поэтому будет брать не анализируя вариант расходов:
		СтрокаПоиска = "СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И ";		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, СтрокаПоиска, "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтатьиРасходов.Ссылка", "СтатьиРасходов.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "СтатьиРасходов.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ СтатьиРасходов.ЭтоГруппа
	|	И НЕ (СтатьиРасходов.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОбщиеСчетаУчетаРасходов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбщиеСчетаУчетаРезервов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ИмяТаблицы = "ОбщиеСчетаУчетаРезервов";
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство(ИмяТаблицы, ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаОбщиеСчетаУчетаРезервов
		|ИЗ
		|	&ТаблицаОбщиеСчетаУчетаРезервов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбщаяНастройка.Ссылка КАК АналитикаУчета,
	|	
	|	ОбщаяНастройка.СчетУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.Резервы КАК ОбщаяНастройка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ОбщаяНастройка.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Резервы))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ (ОбщаяНастройка.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|	И ОбщаяНастройка.Ссылка <> ЗНАЧЕНИЕ(Справочник.Резервы.РезервЕжегодныхОтпусков)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщаяНастройка.Ссылка,
	|	ОбщаяНастройка.СчетУчета,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаОбщиеСчетаУчетаРезервов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.Резервы КАК", "ТаблицаОбщиеСчетаУчетаРезервов КАК");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбщаяНастройка.Ссылка", "ОбщаяНастройка.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ОбщаяНастройка.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ (ОбщаяНастройка.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаСчетаУчетаДенежныхСредств(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаДенежныхСредств", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник = Неопределено Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
		|	БанковскиеСчетаОрганизаций.Ссылка КАК Ссылка,
		|	БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств КАК Валюта,
		|	БанковскиеСчетаОрганизаций.Наименование,
		|	БанковскиеСчетаОрганизаций.Подразделение,
		|	БанковскиеСчетаОрганизаций.Владелец КАК Организация,
		|	БанковскиеСчетаОрганизаций.СчетУчета,
		|	БанковскиеСчетаОрганизаций.ПометкаУдаления
		|ПОМЕСТИТЬ ВременнаяТаблицаАналитикиДенежныхСредств
		|ИЗ
		|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные),
		|	Кассы.Ссылка,
		|	Кассы.ВалютаДенежныхСредств,
		|	Кассы.Наименование,
		|	Кассы.Подразделение,
		|	Кассы.Владелец,
		|	Кассы.СчетУчета,
		|	Кассы.ПометкаУдаления
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСчетаУчетаДенежныхСредств.АналитикаУчета,
		|	ТаблицаСчетаУчетаДенежныхСредств.Организация,
		|	ТаблицаСчетаУчетаДенежныхСредств.ТипДенежныхСредств,
		|	ТаблицаСчетаУчетаДенежныхСредств.Валюта,
		|	ТаблицаСчетаУчетаДенежныхСредств.Подразделение,
		|	ТаблицаСчетаУчетаДенежныхСредств.СчетУчета,
		|	ТаблицаСчетаУчетаДенежныхСредств.ТребуетсяНастройка,
		|	ТаблицаСчетаУчетаДенежныхСредств.ИзмененныеДанные
		|	
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаДенежныхСредств
		|ИЗ
		|	&ТаблицаСчетаУчетаДенежныхСредств КАК ТаблицаСчетаУчетаДенежныхСредств";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АналитикаДенежныхСредств.СчетУчета,
	|	МАКСИМУМ(НЕ СчетаРеглУчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	АналитикаДенежныхСредств.Ссылка КАК АналитикаУчета,
	|	АналитикаДенежныхСредств.ТипДенежныхСредств,
	|	АналитикаДенежныхСредств.Валюта,
	|	АналитикаДенежныхСредств.Организация,
	|	АналитикаДенежныхСредств.Подразделение,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	ВременнаяТаблицаАналитикиДенежныхСредств КАК АналитикаДенежныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|		ПО (СчетаРеглУчетаТребующиеНастройки.АналитикаУчета = АналитикаДенежныхСредств.Ссылка)
	|			И (СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства))
	|			И (СчетаРеглУчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ (АналитикаДенежныхСредств.ПометкаУдаления И СчетаРеглУчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаДенежныхСредств.СчетУчета,
	|	АналитикаДенежныхСредств.Ссылка,
	|	АналитикаДенежныхСредств.ТипДенежныхСредств,
	|	АналитикаДенежныхСредств.Валюта,
	|	АналитикаДенежныхСредств.Организация,
	|	АналитикаДенежныхСредств.Подразделение,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаДенежныхСредств", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблицаАналитикиДенежныхСредств", "ТаблицаСчетаУчетаДенежныхСредств");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "АналитикаДенежныхСредств.Ссылка", "АналитикаДенежныхСредств.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "АналитикаДенежныхСредств.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ (АналитикаДенежныхСредств.ПометкаУдаления И СчетаРеглУчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаДенежныхСредств");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаНезавершенногоПроизводства(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаПроизводства", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.МестоПроизводства,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|	
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНезавершенногоПроизводства
		|ИЗ
		|	&ТаблицаСчетаУчетаНезавершенногоПроизводства КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтраженияПроизводства.Организация,
	|	ПорядокОтраженияПроизводства.МестоПроизводства,
	|	МАКСИМУМ(ПорядокОтраженияПроизводства.СчетУчета),
	|	МАКСИМУМ(ПорядокОтраженияПроизводства.ТребуетсяНастройка) КАК ТребуетсяНастройка,
	|	МАКСИМУМ(ПорядокОтраженияПроизводства.ИзмененныеДанные) КАК ИзмененныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокОтражения.Организация КАК Организация,
	|		ПорядокОтражения.МестоПроизводства КАК МестоПроизводства,
	|		ПорядокОтражения.СчетУчета КАК СчетУчета,
	|		ЛОЖЬ КАК ТребуетсяНастройка,
	|		"""" КАК ИзмененныеДанные
	|	ИЗ
	|		РегистрСведений.ПорядокОтраженияПроизводства КАК ПорядокОтражения
	|	ГДЕ
	|		ПорядокОтражения.Организация В (&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаРеглУчетаТребующиеНастройки.Организация,
	|		СчетаРеглУчетаТребующиеНастройки.МестоУчета,
	|		&ПустойСчет,
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство),
	|		NULL
	|	ИЗ
	|		РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|	ГДЕ
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		И СчетаРеглУчетаТребующиеНастройки.Организация В(&Организации)) КАК ПорядокОтраженияПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияПроизводства.Организация,
	|	ПорядокОтраженияПроизводства.МестоПроизводства";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаНезавершенногоПроизводства", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияПроизводства", "ТаблицаСчетаУчетаНезавершенногоПроизводства");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|		ПорядокОтражения.Организация В(&Организации)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаПроизводства");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаВнеоборотныхАктивов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаВнеоборотныхАктивов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.АналитикаУчета,
		|	ТекущаяТаблицаСчетовУчета.ВидАктива,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаЦФ,
		|	
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАмортизации,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАмортизацииЦФ,
		|	
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыбытия,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРезерваДооценки,
		|	
		|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаЦФ,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАмортизации,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАмортизацииЦФ,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыбытия,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРезерваДооценки,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетЗабалансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаВнеоборотныхАктивов
		|ИЗ
		|	&ТаблицаСчетаУчетаВнеоборотныхАктивов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСчетовУчетаПоУмолчанию.Ссылка КАК АналитикаУчета,
	|	ТаблицаСчетовУчетаПоУмолчанию.ВидАктива,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчета,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаЦФ,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаАмортизации,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаАмортизацииЦФ,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаВыбытия,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаРезерваДооценки,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетЗабалансовогоУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчетаЦФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчетаАмортизации,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчетаАмортизацииЦФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыбытиеВНА)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчетаВыбытия,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДооценкиВНА)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетУчетаРезерваДооценки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов КАК ТаблицаСчетовУчетаПоУмолчанию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ТаблицаСчетовУчетаПоУмолчанию.Ссылка)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыбытиеВНА),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РезервДооценкиВНА),
	|															ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗабалансовыйУчетВНА)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|ГДЕ
	|	НЕ ТаблицаСчетовУчетаПоУмолчанию.ЭтоГруппа
	|	И НЕ (ТаблицаСчетовУчетаПоУмолчанию.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСчетовУчетаПоУмолчанию.Ссылка,
	|	ТаблицаСчетовУчетаПоУмолчанию.ВидАктива,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчета,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаЦФ,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаАмортизации,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаАмортизацииЦФ,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаВыбытия,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетУчетаРезерваДооценки,
	|	ТаблицаСчетовУчетаПоУмолчанию.СчетЗабалансовогоУчета,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчета";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаВнеоборотныхАктивов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Справочник.ГруппыФинансовогоУчетаВнеоборотныхАктивов", "ТаблицаСчетаУчетаВнеоборотныхАктивов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаСчетовУчетаПоУмолчанию.Ссылка", "ТаблицаСчетовУчетаПоУмолчанию.АналитикаУчета");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ТаблицаСчетовУчетаПоУмолчанию.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	НЕ ТаблицаСчетовУчетаПоУмолчанию.ЭтоГруппа
	|	И НЕ (ТаблицаСчетовУчетаПоУмолчанию.ПометкаУдаления И СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL)",
									"");
	КонецЕсли;
	
	// Переопределим ТекстЗапроса, если задана ОрганизацияОтбора, с тем, чтобы данные из регистра ошибок брались только по
	// этой организации:
	Если ЗначениеЗаполнено(Запрос.Параметры.ОрганизацияОтбора) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"СчетаТребующиеНастройки.Организация В (&Организации)",
									"СчетаТребующиеНастройки.Организация = &ОрганизацияОтбора");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаВнеоборотныхАктивов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаНоменклатуры(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаНоменклатуры", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.Склад,
		|	ТекущаяТаблицаСчетовУчета.ГруппаФинансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНаСкладе,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВПути,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСВПути,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовОСНО,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНаСкладеПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродажПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродажПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродажЕНВДПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродажЕНВДПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСПриПродажеПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВПутиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСВПутиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовОСНОПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовЕНВДПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНаСкладе,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыручкиОтПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаСебестоимостиПродажЕНВД,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВПути,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНДСВПути,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНоменклатуры
		|ИЗ
		|	&ТаблицаСчетаУчетаНоменклатуры КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.Склад,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаНаСкладе = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаНаСкладе, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНаСкладе, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаНаСкладе КОНЕЦ КАК СчетУчетаНаСкладе,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаВыручкиОтПродаж = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродаж, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаВыручкиОтПродаж КОНЕЦ КАК СчетУчетаВыручкиОтПродаж,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаСебестоимостиПродаж = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродаж, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаСебестоимостиПродаж КОНЕЦ КАК СчетУчетаСебестоимостиПродаж,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаВыручкиОтПродажЕНВД = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродажЕНВД, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаВыручкиОтПродажЕНВД КОНЕЦ КАК СчетУчетаВыручкиОтПродажЕНВД,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаСебестоимостиПродажЕНВД = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродажЕНВД, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаСебестоимостиПродажЕНВД КОНЕЦ КАК СчетУчетаСебестоимостиПродажЕНВД,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаНДСПриПродаже = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСПриПродаже, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСПриПродаже, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаНДСПриПродаже КОНЕЦ КАК СчетУчетаНДСПриПродаже,
	|	ВЫБОР КОГДА ПорядокОтражения.СтатьяДоходовОСНО = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СтатьяДоходовОСНО, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)))
	|		ИНАЧЕ ПорядокОтражения.СтатьяДоходовОСНО КОНЕЦ КАК СтатьяДоходовОСНО,
	|	ВЫБОР КОГДА ПорядокОтражения.СтатьяДоходовЕНВД = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СтатьяДоходовЕНВД, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовЕНВД, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)))
	|		ИНАЧЕ ПорядокОтражения.СтатьяДоходовЕНВД КОНЕЦ КАК СтатьяДоходовЕНВД,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаВПути = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаВПути, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВПути, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаВПути КОНЕЦ КАК СчетУчетаВПути,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаНДСВПути = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСВПути, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСВПути, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаНДСВПути КОНЕЦ КАК СчетУчетаНДСВПути,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаНаСкладе, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНаСкладе, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаНаСкладе = &ПустойСчет КАК СчетУчетаНаСкладеПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродаж, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаВыручкиОтПродаж = &ПустойСчет КАК СчетУчетаВыручкиОтПродажПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродаж, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаСебестоимостиПродаж = &ПустойСчет КАК СчетУчетаСебестоимостиПродажПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродажЕНВД, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаВыручкиОтПродажЕНВД = &ПустойСчет КАК СчетУчетаВыручкиОтПродажЕНВДПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродажЕНВД, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаСебестоимостиПродажЕНВД = &ПустойСчет КАК СчетУчетаСебестоимостиПродажЕНВДПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСПриПродаже, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСПриПродаже, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаНДСПриПродаже = &ПустойСчет КАК СчетУчетаНДСПриПродажеПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СтатьяДоходовОСНО, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ПорядокОтражения.СтатьяДоходовОСНО = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходовОСНОПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СтатьяДоходовЕНВД, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовЕНВД, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ПорядокОтражения.СтатьяДоходовЕНВД = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходовЕНВДПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаВПути, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВПути, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаВПути = &ПустойСчет КАК СчетУчетаВПутиПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСВПути, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСВПути, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаНДСВПути = &ПустойСчет КАК СчетУчетаНДСВПутиПоУмолчанию,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)) КАК ТребуетсяНастройкаСчетУчетаНаСкладе,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж)) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж)) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродажЕНВД,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД)) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродажЕНВД,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже)) КАК ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаВПути,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)) КАК ТребуетсяНастройкаСчетУчетаНДСВПути,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК АналитикиУчета
	|		ПО (ПорядокОтражения.ГруппаФинансовогоУчета = АналитикиУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ОбщаяНастройка
	|		ПО (ОбщаяНастройка.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|			И ОбщаяНастройка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ОбщаяНастройка.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ПорядокОтражения.ГруппаФинансовогоУчета)
	|			И (СчетаТребующиеНастройки.МестоУчета = ПорядокОтражения.Склад)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|			И (ПорядокОтражения.Организация В (&Организации))
	|			И (СчетаТребующиеНастройки.Организация = ПорядокОтражения.Организация)
	|ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПорядокОтражения.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.Склад,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	АналитикиУчета.СчетУчетаНаСкладе,
	|	АналитикиУчета.СчетУчетаВыручкиОтПродаж,
	|	АналитикиУчета.СчетУчетаСебестоимостиПродаж,
	|	АналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД,
	|	АналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД,
	|	АналитикиУчета.СчетУчетаНДСПриПродаже,
	|	АналитикиУчета.СтатьяДоходовОСНО,
	|	АналитикиУчета.СтатьяДоходовЕНВД,
	|	АналитикиУчета.СчетУчетаВПути,
	|	АналитикиУчета.СчетУчетаНДСВПути,
	|	ПорядокОтражения.СчетУчетаНаСкладе,
	|	ПорядокОтражения.СчетУчетаВыручкиОтПродаж,
	|	ПорядокОтражения.СчетУчетаСебестоимостиПродаж,
	|	ПорядокОтражения.СчетУчетаВыручкиОтПродажЕНВД,
	|	ПорядокОтражения.СчетУчетаСебестоимостиПродажЕНВД,
	|	ПорядокОтражения.СчетУчетаНДСПриПродаже,
	|	ПорядокОтражения.СтатьяДоходовОСНО,
	|	ПорядокОтражения.СтатьяДоходовЕНВД,
	|	ПорядокОтражения.СчетУчетаВПути,
	|	ПорядокОтражения.СчетУчетаНДСВПути,
	|	ОбщаяНастройка.СчетУчетаНаСкладе,
	|	ОбщаяНастройка.СчетУчетаВыручкиОтПродаж,
	|	ОбщаяНастройка.СчетУчетаСебестоимостиПродаж,
	|	ОбщаяНастройка.СчетУчетаВыручкиОтПродажЕНВД,
	|	ОбщаяНастройка.СчетУчетаСебестоимостиПродажЕНВД,
	|	ОбщаяНастройка.СчетУчетаНДСПриПродаже,
	|	ОбщаяНастройка.СтатьяДоходовОСНО,
	|	ОбщаяНастройка.СтатьяДоходовЕНВД,
	|	ОбщаяНастройка.СчетУчетаВПути,
	|	ОбщаяНастройка.СчетУчетаНДСВПути,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.Склад";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаНоменклатуры", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения", "ТаблицаСчетаУчетаНоменклатуры КАК ПорядокОтражения");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПорядокОтражения.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаНоменклатуры");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаНоменклатурыПереданной(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаНоменклатурыПереданной", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.ГруппаФинансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиНаКомиссию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиВПереработку,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаЗатратыНаПриобретение,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовОСНО,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиНаКомиссиюПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПередачиВПереработкуПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаВыручкиОтПродажПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаСебестоимостиПродажПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНДСПриПродажеПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаЗатратыНаПриобретениеПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходовОСНОПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаПередачиНаКомиссию,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаПередачиВПереработку,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаЗатратыНаПриобретение,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаНоменклатурыПереданной
		|ИЗ
		|	&ТаблицаСчетаУчетаНоменклатурыПереданной КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаПередачиНаКомиссию = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаПередачиНаКомиссию, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаПередачиНаКомиссию, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаПередачиНаКомиссию КОНЕЦ КАК СчетУчетаПередачиНаКомиссию,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаПередачиВПереработку = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаПередачиВПереработку, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаПередачиВПереработку, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаПередачиВПереработку КОНЕЦ КАК СчетУчетаПередачиВПереработку,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаВыручкиОтПродаж = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродаж, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаВыручкиОтПродаж КОНЕЦ КАК СчетУчетаВыручкиОтПродаж,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаСебестоимостиПродаж = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродаж, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаСебестоимостиПродаж КОНЕЦ КАК СчетУчетаСебестоимостиПродаж,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаНДСПриПродаже = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСПриПродаже, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСПриПродаже, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаНДСПриПродаже КОНЕЦ КАК СчетУчетаНДСПриПродаже,
	|	ВЫБОР КОГДА ПорядокОтражения.СтатьяДоходовОСНО = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СтатьяДоходовОСНО, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)))
	|		ИНАЧЕ ПорядокОтражения.СтатьяДоходовОСНО КОНЕЦ КАК СтатьяДоходовОСНО,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаЗатратыНаПриобретение = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаЗатратыНаПриобретение, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаЗатратыНаПриобретение, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаЗатратыНаПриобретение КОНЕЦ КАК СчетУчетаЗатратыНаПриобретение,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаПередачиНаКомиссию, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаПередачиНаКомиссию, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаПередачиНаКомиссию = &ПустойСчет КАК СчетУчетаПередачиНаКомиссиюПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаПередачиВПереработку, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаПередачиВПереработку, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаПередачиВПереработку = &ПустойСчет КАК СчетУчетаПередачиВПереработкуПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаВыручкиОтПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаВыручкиОтПродаж, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаВыручкиОтПродаж = &ПустойСчет КАК СчетУчетаВыручкиОтПродажПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаСебестоимостиПродаж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаСебестоимостиПродаж, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаСебестоимостиПродаж = &ПустойСчет КАК СчетУчетаСебестоимостиПродажПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаНДСПриПродаже, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНДСПриПродаже, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаНДСПриПродаже = &ПустойСчет КАК СчетУчетаНДСПриПродажеПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СтатьяДоходовОСНО, ЕСТЬNULL(ОбщаяНастройка.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))) <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ПорядокОтражения.СтатьяДоходовОСНО = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходовОСНОПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаЗатратыНаПриобретение, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаЗатратыНаПриобретение, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаЗатратыНаПриобретение = &ПустойСчет КАК СчетУчетаЗатратыНаПриобретениеПоУмолчанию,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию)) КАК ТребуетсяНастройкаСчетУчетаПередачиНаКомиссию,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку)) КАК ТребуетсяНастройкаСчетУчетаПередачиВПереработку,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж)) КАК ТребуетсяНастройкаСчетУчетаВыручкиОтПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж)) КАК ТребуетсяНастройкаСчетУчетаСебестоимостиПродаж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже)) КАК ТребуетсяНастройкаСчетУчетаНДСПриПродаже,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)) КАК ТребуетсяНастройкаСчетУчетаЗатратыНаПриобретение,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатурыПереданной КАК ПорядокОтражения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатурыПереданной КАК ОбщаяНастройка
	|		ПО ОбщаяНастройка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ОбщаяНастройка.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК АналитикиУчета
	|		ПО (ПорядокОтражения.ГруппаФинансовогоУчета = АналитикиУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ПорядокОтражения.ГруппаФинансовогоУчета)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаВПереработку),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|			И (ПорядокОтражения.Организация В (&Организации))
	|			И (СчетаТребующиеНастройки.Организация = ПорядокОтражения.Организация)
	|ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	АналитикиУчета.СчетУчетаПередачиНаКомиссию,
	|	АналитикиУчета.СчетУчетаПередачиВПереработку,
	|	АналитикиУчета.СчетУчетаВыручкиОтПродаж,
	|	АналитикиУчета.СчетУчетаСебестоимостиПродаж,
	|	АналитикиУчета.СчетУчетаНДСПриПродаже,
	|	АналитикиУчета.СтатьяДоходовОСНО,
	|	АналитикиУчета.СчетУчетаЗатратыНаПриобретение,
	|	ПорядокОтражения.СчетУчетаПередачиНаКомиссию,
	|	ПорядокОтражения.СчетУчетаПередачиВПереработку,
	|	ПорядокОтражения.СчетУчетаВыручкиОтПродаж,
	|	ПорядокОтражения.СчетУчетаСебестоимостиПродаж,
	|	ПорядокОтражения.СчетУчетаНДСПриПродаже,
	|	ПорядокОтражения.СтатьяДоходовОСНО,
	|	ПорядокОтражения.СчетУчетаЗатратыНаПриобретение,
	|	ОбщаяНастройка.СчетУчетаПередачиНаКомиссию,
	|	ОбщаяНастройка.СчетУчетаПередачиВПереработку,
	|	ОбщаяНастройка.СчетУчетаВыручкиОтПродаж,
	|	ОбщаяНастройка.СчетУчетаСебестоимостиПродаж,
	|	ОбщаяНастройка.СчетУчетаНДСПриПродаже,
	|	ОбщаяНастройка.СтатьяДоходовОСНО,
	|	ОбщаяНастройка.СчетУчетаЗатратыНаПриобретение,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ПорядокОтражения.Организация";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаНоменклатурыПереданной", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияНоменклатурыПереданной КАК ПорядокОтражения", "ТаблицаСчетаУчетаНоменклатурыПереданной КАК ПорядокОтражения");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаНоменклатурыПереданной");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаТМЦВЭксплуатации(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаТМЦВЭксплуатации", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.КатегорияЭксплуатации,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчета,
		|	
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетЗабалансовогоУчетаПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетЗабалансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаТМЦВЭксплуатации
		|ИЗ
		|	&ТаблицаСчетаУчетаТМЦВЭксплуатации КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.КатегорияЭксплуатации,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчета = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчета КОНЕЦ КАК СчетУчета,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетЗабалансовогоУчета = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетЗабалансовогоУчета, ЕСТЬNULL(ОбщаяНастройка.СчетЗабалансовогоУчета, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетЗабалансовогоУчета КОНЕЦ КАК СчетЗабалансовогоУчета,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчета, ЕСТЬNULL(ОбщаяНастройка.СчетУчета, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчета = &ПустойСчет КАК СчетУчетаПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетЗабалансовогоУчета, ЕСТЬNULL(ОбщаяНастройка.СчетЗабалансовогоУчета, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетЗабалансовогоУчета = &ПустойСчет КАК СчетЗабалансовогоУчетаПоУмолчанию,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации)) КАК ТребуетсяНастройкаСчетУчета,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)) КАК ТребуетсяНастройкаСчетЗабалансовогоУчета,
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ОбщаяНастройка
	|		ПО ОбщаяНастройка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ОбщаяНастройка.КатегорияЭксплуатации = ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК АналитикиУчета
	|		ПО (ПорядокОтражения.КатегорияЭксплуатации = АналитикиУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ПорядокОтражения.КатегорияЭксплуатации)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|			И (ПорядокОтражения.Организация В (&Организации))
	|			И (СчетаТребующиеНастройки.Организация = ПорядокОтражения.Организация)
	|ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.КатегорияЭксплуатации = ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.КатегорияЭксплуатации,
	|	АналитикиУчета.СчетУчета,
	|	АналитикиУчета.СчетЗабалансовогоУчета,
	|	ПорядокОтражения.СчетУчета,
	|	ПорядокОтражения.СчетЗабалансовогоУчета,
	|	ОбщаяНастройка.СчетУчета,
	|	ОбщаяНастройка.СчетЗабалансовогоУчета,
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОтражения.КатегорияЭксплуатации,
	|	ПорядокОтражения.Организация";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаТМЦВЭксплуатации", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения", "ТаблицаСчетаУчетаТМЦВЭксплуатации КАК ПорядокОтражения");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.КатегорияЭксплуатации = ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаТМЦВЭксплуатации");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаПодарочныхСертификатов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаПодарочныхСертификатов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.ВидСертификата,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаПодарочныхСертификатов
		|ИЗ
		|	&ТаблицаСчетаУчетаПодарочныхСертификатов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтраженияПодарочныхСертификатов.Организация,
	|	ПорядокОтраженияПодарочныхСертификатов.ВидСертификата,
	|	ВЫБОР КОГДА МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.СчетУчета) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(ВидыПодарочныхСертификатов.СчетУчета, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.СчетУчета) КОНЕЦ КАК СчетУчета,
	|	МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.СчетУчета) = &ПустойСчет
	|		И НЕ ВидыПодарочныхСертификатов.Ссылка ЕСТЬ NULL КАК СчетУчетаПоУмолчанию,
	|	МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.ТребуетсяНастройка) КАК ТребуетсяНастройка,
	|	МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.ИзмененныеДанные) КАК ИзмененныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокОтражения.Организация КАК Организация,
	|		ПорядокОтражения.ВидСертификата КАК ВидСертификата,
	|		ПорядокОтражения.СчетУчета КАК СчетУчета,
	|		ЛОЖЬ КАК ТребуетсяНастройка,
	|		"""" КАК ИзмененныеДанные
	|	ИЗ
	|		РегистрСведений.ПорядокОтраженияПодарочныхСертификатов КАК ПорядокОтражения
	|	ГДЕ
	|		ПорядокОтражения.Организация В(&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаРеглУчетаТребующиеНастройки.Организация,
	|		ВЫБОР
	|			КОГДА СчетаРеглУчетаТребующиеНастройки.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыПодарочныхСертификатов.ПустаяСсылка)
	|			ИНАЧЕ СчетаРеглУчетаТребующиеНастройки.АналитикаУчета
	|		КОНЕЦ,
	|		&ПустойСчет,
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам),
	|		NULL
	|	ИЗ
	|		РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|	ГДЕ
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам)
	|		И СчетаРеглУчетаТребующиеНастройки.Организация В(&Организации)) КАК ПорядокОтраженияПодарочныхСертификатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов
	|		ПО (ПорядокОтраженияПодарочныхСертификатов.ВидСертификата = ВидыПодарочныхСертификатов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияПодарочныхСертификатов.Организация,
	|	ПорядокОтраженияПодарочныхСертификатов.ВидСертификата,
	|	ВидыПодарочныхСертификатов.СчетУчета,
	|	ВидыПодарочныхСертификатов.Ссылка
	|
	|ИМЕЮЩИЕ
	|	(ВидыПодарочныхСертификатов.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ МАКСИМУМ(ПорядокОтраженияПодарочныхСертификатов.ИзмененныеДанные) ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидСертификата,
	|	Организация";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаПодарочныхСертификатов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияПодарочныхСертификатов", "ТаблицаСчетаУчетаПодарочныхСертификатов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаПодарочныхСертификатов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаРасчетовСПартнерами(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаРасчетовСПартнерами", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.ГруппаФинансовогоУчета,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовПолученных,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовВыданных,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовПоПретензиям,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНеотфактурованныеПоставки,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентамиТара,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщикамиТара,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентамиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовПолученныхПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщикамиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаАвансовВыданныхПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовПоПретензиямПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаНеотфактурованныеПоставкиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКлиентамиТараПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСПоставщикамиТараПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолгПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиПроцентыПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСКредиторамиКомиссияПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолгПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиПроцентыПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСДебиторамиКомиссияПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслугиПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатежПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизингаПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательстваПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАвансовПолученных,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаАвансовВыданных,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовПоПретензиям,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаНеотфактурованныеПоставки,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКлиентамиТара,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСПоставщикамиТара,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиОсновнойДолг,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиПроценты,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиКомиссия,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
		|
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКомиссионерами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКомитентами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСКредиторами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСДебиторами,
		|	ТекущаяТаблицаСчетовУчета.РасчетыСЛизингодателями,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКлиентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСПоставщиками,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКомиссионерами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКомитентами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСКредиторами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСДебиторами,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаРасчетыСЛизингодателями,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаРасчетовСПартнерами
		|ИЗ
		|	&ТаблицаСчетаУчетаРасчетовСПартнерами КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСКлиентами = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКлиентами, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКлиентами, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСКлиентами КОНЕЦ КАК СчетУчетаРасчетовСКлиентами,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаАвансовПолученных = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаАвансовПолученных, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаАвансовПолученных, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаАвансовПолученных КОНЕЦ КАК СчетУчетаАвансовПолученных,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСПоставщиками = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСПоставщиками, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСПоставщиками, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСПоставщиками КОНЕЦ КАК СчетУчетаРасчетовСПоставщиками,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаАвансовВыданных = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаАвансовВыданных, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаАвансовВыданных, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаАвансовВыданных КОНЕЦ КАК СчетУчетаАвансовВыданных,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовПоПретензиям = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовПоПретензиям, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовПоПретензиям, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовПоПретензиям КОНЕЦ КАК СчетУчетаРасчетовПоПретензиям,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаНеотфактурованныеПоставки = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаНеотфактурованныеПоставки, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНеотфактурованныеПоставки, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаНеотфактурованныеПоставки КОНЕЦ КАК СчетУчетаНеотфактурованныеПоставки,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСКлиентамиТара = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКлиентамиТара, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКлиентамиТара, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСКлиентамиТара КОНЕЦ КАК СчетУчетаРасчетовСКлиентамиТара,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСПоставщикамиТара = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСПоставщикамиТара, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСПоставщикамиТара КОНЕЦ КАК СчетУчетаРасчетовСПоставщикамиТара,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСКредиторамиОсновнойДолг = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиОсновнойДолг, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСКредиторамиОсновнойДолг КОНЕЦ КАК СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСКредиторамиПроценты = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиПроценты, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСКредиторамиПроценты КОНЕЦ КАК СчетУчетаРасчетовСКредиторамиПроценты,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСКредиторамиКомиссия = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиКомиссия, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСКредиторамиКомиссия КОНЕЦ КАК СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСДебиторамиОсновнойДолг = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиОсновнойДолг, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСДебиторамиОсновнойДолг КОНЕЦ КАК СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСДебиторамиПроценты = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиПроценты, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСДебиторамиПроценты КОНЕЦ КАК СчетУчетаРасчетовСДебиторамиПроценты,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСДебиторамиКомиссия = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиКомиссия, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСДебиторамиКомиссия КОНЕЦ КАК СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги КОНЕЦ КАК СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж КОНЕЦ КАК СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга КОНЕЦ КАК СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ВЫБОР КОГДА ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, &ПустойСчет))
	|		ИНАЧЕ ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства КОНЕЦ КАК СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКлиентами, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКлиентами, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСКлиентами = &ПустойСчет КАК СчетУчетаРасчетовСКлиентамиПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаАвансовПолученных, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаАвансовПолученных, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаАвансовПолученных = &ПустойСчет КАК СчетУчетаАвансовПолученныхПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСПоставщиками, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСПоставщиками, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСПоставщиками = &ПустойСчет КАК СчетУчетаРасчетовСПоставщикамиПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаАвансовВыданных, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаАвансовВыданных, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаАвансовВыданных = &ПустойСчет КАК СчетУчетаАвансовВыданныхПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовПоПретензиям, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовПоПретензиям, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовПоПретензиям = &ПустойСчет КАК СчетУчетаРасчетовПоПретензиямПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаНеотфактурованныеПоставки, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаНеотфактурованныеПоставки, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаНеотфактурованныеПоставки = &ПустойСчет КАК СчетУчетаНеотфактурованныеПоставкиПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКлиентамиТара, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКлиентамиТара, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСКлиентамиТара = &ПустойСчет КАК СчетУчетаРасчетовСКлиентамиТараПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСПоставщикамиТара, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСПоставщикамиТара = &ПустойСчет КАК СчетУчетаРасчетовСПоставщикамиТараПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиОсновнойДолг, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСКредиторамиОсновнойДолг = &ПустойСчет КАК СчетУчетаРасчетовСКредиторамиОсновнойДолгПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиПроценты, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСКредиторамиПроценты = &ПустойСчет КАК СчетУчетаРасчетовСКредиторамиПроцентыПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиКомиссия, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСКредиторамиКомиссия = &ПустойСчет КАК СчетУчетаРасчетовСКредиторамиКомиссияПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиОсновнойДолг, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСДебиторамиОсновнойДолг = &ПустойСчет КАК СчетУчетаРасчетовСДебиторамиОсновнойДолгПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиПроценты, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСДебиторамиПроценты = &ПустойСчет КАК СчетУчетаРасчетовСДебиторамиПроцентыПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиКомиссия, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСДебиторамиКомиссия = &ПустойСчет КАК СчетУчетаРасчетовСДебиторамиКомиссияПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги = &ПустойСчет КАК СчетУчетаРасчетовСЛизингодателемЛизинговыеУслугиПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж = &ПустойСчет КАК СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатежПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга = &ПустойСчет КАК СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизингаПоУмолчанию,
	|	ЕСТЬNULL(АналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, ЕСТЬNULL(ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, &ПустойСчет)) <> &ПустойСчет
	|	И ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства = &ПустойСчет КАК СчетУчетаРасчетовСЛизингодателемАрендныеОбязательстваПоУмолчанию,
	|
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)) КАК ТребуетсяНастройкаСчетУчетаАвансовПолученных,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщиками,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)) КАК ТребуетсяНастройкаСчетУчетаАвансовВыданных,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям)) КАК ТребуетсяНастройкаСчетУчетаРасчетовПоПретензиям,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки)) КАК ТребуетсяНастройкаСчетУчетаНеотфактурованныеПоставки,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКлиентамиТара,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСПоставщикамиТара,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиПроценты,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСКредиторамиКомиссия,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиПроценты,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСДебиторамиКомиссия,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)) КАК ТребуетсяНастройкаСчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКлиентами, ИСТИНА) КАК РасчетыСКлиентами,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСПоставщиками, ИСТИНА) КАК РасчетыСПоставщиками,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКомиссионерами, ИСТИНА) КАК РасчетыСКомиссионерами,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКомитентами, ИСТИНА) КАК РасчетыСКомитентами,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКредиторами, ИСТИНА) КАК РасчетыСКредиторами,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСДебиторами, ИСТИНА) КАК РасчетыСДебиторами,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСЛизингодателями, ИСТИНА) КАК РасчетыСЛизингодателями,
	|
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСКлиентами, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСКлиентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСПоставщиками, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСПоставщиками,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСКомиссионерами, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСКомиссионерами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСКомитентами, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСКомитентами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСКредиторами, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСКредиторами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСДебиторами, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСДебиторами,
	|	МАКСИМУМ(СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
	|												ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу))
	|	И ЕСТЬNULL(АналитикиУчета.РасчетыСЛизингодателями, ИСТИНА)) КАК ТребуетсяНастройкаРасчетыСЛизингодателями,
	|
	|	МАКСИМУМ(НЕ СчетаТребующиеНастройки.ВидСчета ЕСТЬ NULL) КАК ТребуетсяНастройка,
	|	"""" КАК ИзмененныеДанные
	|
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокОтражения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ОбщаяНастройка
	|		ПО ОбщаяНастройка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И ОбщаяНастройка.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаРасчетов КАК АналитикиУчета
	|		ПО (ПорядокОтражения.ГруппаФинансовогоУчета = АналитикиУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаТребующиеНастройки
	|		ПО (СчетаТребующиеНастройки.АналитикаУчета = ПорядокОтражения.ГруппаФинансовогоУчета)
	|			И (СчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЛизинговыеУслуги),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга),
	|													ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу)))
	|			И (СчетаТребующиеНастройки.Организация В (&Организации))
	|			И (ПорядокОтражения.Организация В (&Организации))
	|			И (СчетаТребующиеНастройки.Организация = ПорядокОтражения.Организация)
	|ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	АналитикиУчета.СчетУчетаРасчетовСКлиентами,
	|	АналитикиУчета.СчетУчетаАвансовПолученных,
	|	АналитикиУчета.СчетУчетаРасчетовСПоставщиками,
	|	АналитикиУчета.СчетУчетаАвансовВыданных,
	|	АналитикиУчета.СчетУчетаРасчетовПоПретензиям,
	|	АналитикиУчета.СчетУчетаНеотфактурованныеПоставки,
	|	АналитикиУчета.СчетУчетаРасчетовСКлиентамиТара,
	|	АналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара,
	|	АналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	АналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты,
	|	АналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия,
	|	АналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	АналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты,
	|	АналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия,
	|	АналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	АналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	АналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	АналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|	ПорядокОтражения.СчетУчетаРасчетовСКлиентами,
	|	ПорядокОтражения.СчетУчетаАвансовПолученных,
	|	ПорядокОтражения.СчетУчетаРасчетовСПоставщиками,
	|	ПорядокОтражения.СчетУчетаАвансовВыданных,
	|	ПорядокОтражения.СчетУчетаРасчетовПоПретензиям,
	|	ПорядокОтражения.СчетУчетаНеотфактурованныеПоставки,
	|	ПорядокОтражения.СчетУчетаРасчетовСКлиентамиТара,
	|	ПорядокОтражения.СчетУчетаРасчетовСПоставщикамиТара,
	|	ПорядокОтражения.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ПорядокОтражения.СчетУчетаРасчетовСКредиторамиПроценты,
	|	ПорядокОтражения.СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ПорядокОтражения.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ПорядокОтражения.СчетУчетаРасчетовСДебиторамиПроценты,
	|	ПорядокОтражения.СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ПорядокОтражения.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|	ОбщаяНастройка.СчетУчетаРасчетовСКлиентами,
	|	ОбщаяНастройка.СчетУчетаАвансовПолученных,
	|	ОбщаяНастройка.СчетУчетаРасчетовСПоставщиками,
	|	ОбщаяНастройка.СчетУчетаАвансовВыданных,
	|	ОбщаяНастройка.СчетУчетаРасчетовПоПретензиям,
	|	ОбщаяНастройка.СчетУчетаНеотфактурованныеПоставки,
	|	ОбщаяНастройка.СчетУчетаРасчетовСКлиентамиТара,
	|	ОбщаяНастройка.СчетУчетаРасчетовСПоставщикамиТара,
	|	ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиПроценты,
	|	ОбщаяНастройка.СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиПроценты,
	|	ОбщаяНастройка.СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ОбщаяНастройка.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства,
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКлиентами, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСПоставщиками, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКомиссионерами, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКомитентами, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСКредиторами, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСДебиторами, ИСТИНА),
	|	ЕСТЬNULL(АналитикиУчета.РасчетыСЛизингодателями, ИСТИНА),
	|	""""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ПорядокОтражения.Организация";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаРасчетовСПартнерами", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокОтражения", "ТаблицаСчетаУчетаРасчетовСПартнерами КАК ПорядокОтражения");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)
	|	И НЕ (ПорядокОтражения.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	И ПорядокОтражения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаРасчетовСПартнерами");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаДоходов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаДоходов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.Подразделение,
		|	ТекущаяТаблицаСчетовУчета.СтатьяДоходов,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаДоходов
		|ИЗ
		|	&ТаблицаСчетаУчетаДоходов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтраженияДоходов.Организация,
	|	ПорядокОтраженияДоходов.СтатьяДоходов,
	|	ПорядокОтраженияДоходов.Подразделение,
	|	ВЫБОР КОГДА МАКСИМУМ(ПорядокОтраженияДоходов.СчетУчета) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(СтатьиДоходов.СчетУчета, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ПорядокОтраженияДоходов.СчетУчета) КОНЕЦ КАК СчетУчета,
	|	МАКСИМУМ(ПорядокОтраженияДоходов.СчетУчета) = &ПустойСчет
	|		И НЕ СтатьиДоходов.Ссылка ЕСТЬ NULL КАК СчетУчетаПоУмолчанию,
	|	МАКСИМУМ(ПорядокОтраженияДоходов.ТребуетсяНастройка) КАК ТребуетсяНастройка,
	|	МАКСИМУМ(ПорядокОтраженияДоходов.ИзмененныеДанные) КАК ИзмененныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокОтражения.Организация КАК Организация,
	|		ПорядокОтражения.Подразделение КАК Подразделение,
	|		ПорядокОтражения.СтатьяДоходов КАК СтатьяДоходов,
	|		ПорядокОтражения.СчетУчета КАК СчетУчета,
	|		ЛОЖЬ КАК ТребуетсяНастройка,
	|		"""" КАК ИзмененныеДанные
	|	ИЗ
	|		РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокОтражения
	|	ГДЕ
	|		ПорядокОтражения.Организация В(&Организации)
	|		И ПорядокОтражения.Подразделение Ссылка Справочник.СтруктураПредприятия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаРеглУчетаТребующиеНастройки.Организация,
	|		СчетаРеглУчетаТребующиеНастройки.МестоУчета,
	|		ВЫБОР
	|			КОГДА СчетаРеглУчетаТребующиеНастройки.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|			ИНАЧЕ СчетаРеглУчетаТребующиеНастройки.АналитикаУчета
	|		КОНЕЦ,
	|		&ПустойСчет,
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы),
	|		NULL
	|	ИЗ
	|		РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|	ГДЕ
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы)
	|		И СчетаРеглУчетаТребующиеНастройки.Организация В(&Организации)
	|		И СчетаРеглУчетаТребующиеНастройки.АналитикаУчета <> НЕОПРЕДЕЛЕНО
	|		И СчетаРеглУчетаТребующиеНастройки.МестоУчета Ссылка Справочник.СтруктураПредприятия) КАК ПорядокОтраженияДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|		ПО (ПорядокОтраженияДоходов.СтатьяДоходов = СтатьиДоходов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияДоходов.Организация,
	|	ПорядокОтраженияДоходов.СтатьяДоходов,
	|	ПорядокОтраженияДоходов.Подразделение,
	|	СтатьиДоходов.СчетУчета,
	|	СтатьиДоходов.Ссылка
	|
	|ИМЕЮЩИЕ
	|	(СтатьиДоходов.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ МАКСИМУМ(ПорядокОтраженияДоходов.ИзмененныеДанные) ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьяДоходов,
	|	Организация,
	|	Подразделение";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаДоходов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияДоходов", "ТаблицаСчетаУчетаДоходов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаДоходов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаРасходов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство("СчетаУчетаРасходов", ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.Подразделение,
		|	ТекущаяТаблицаСчетовУчета.СтатьяРасходов,
		|	ТекущаяТаблицаСчетовУчета.ВидДеятельностиРасходов,
		|	
		|	ТекущаяТаблицаСчетовУчета.РасходыНаОбъектыЭксплуатации,
		|	ТекущаяТаблицаСчетовУчета.РасходыНаОбъектыСтроительства,
		|	ТекущаяТаблицаСчетовУчета.РасходыНаНМАиНИОКР,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияОСНО,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияОСНОПоУмолчанию,
		|	ТекущаяТаблицаСчетовУчета.СчетСписанияЕНВДПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетУчета,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетСписанияОСНО,
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройкаСчетСписанияЕНВД,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаРасходов
		|ИЗ
		|	&ТаблицаСчетаУчетаРасходов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтраженияРасходов.Организация,
	|	ПорядокОтраженияРасходов.СтатьяРасходов,
	|	ПорядокОтраженияРасходов.Подразделение,
	|	СтатьиРасходов.ВидДеятельностиРасходов,
	|	
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыЭксплуатации КАК РасходыНаОбъектыЭксплуатации,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаОбъектыСтроительства КАК РасходыНаОбъектыСтроительства,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаНМАиНИОКР КАК РасходыНаНМАиНИОКР,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(ПорядокОтраженияРасходов.СчетУчета) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(СтатьиРасходов.СчетУчета, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ПорядокОтраженияРасходов.СчетУчета) КОНЕЦ КАК СчетУчета,
	|	ВЫБОР КОГДА МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияОСНО) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(СтатьиРасходов.СчетСписанияОСНО, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияОСНО) КОНЕЦ КАК СчетСписанияОСНО,
	|	ВЫБОР КОГДА МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияЕНВД) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(СтатьиРасходов.СчетСписанияЕНВД, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияЕНВД) КОНЕЦ КАК СчетСписанияЕНВД,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.СчетУчета) = &ПустойСчет
	|		И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL КАК СчетУчетаПоУмолчанию,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияОСНО) = &ПустойСчет
	|		И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL КАК СчетСписанияОСНОПоУмолчанию,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.СчетСписанияЕНВД) = &ПустойСчет
	|		И НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL КАК СчетСписанияЕНВДПоУмолчанию,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.ТребуетсяНастройкаСчетУчета) КАК ТребуетсяНастройкаСчетУчета,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.ТребуетсяНастройкаСчетСписанияОСНО) КАК ТребуетсяНастройкаСчетСписанияОСНО,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.ТребуетсяНастройкаСчетСписанияЕНВД) КАК ТребуетсяНастройкаСчетСписанияЕНВД,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.ТребуетсяНастройка) КАК ТребуетсяНастройка,
	|	МАКСИМУМ(ПорядокОтраженияРасходов.ИзмененныеДанные) КАК ИзмененныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокОтражения.Организация КАК Организация,
	|		ПорядокОтражения.Подразделение КАК Подразделение,
	|		ПорядокОтражения.СтатьяРасходов КАК СтатьяРасходов,
	|		ПорядокОтражения.СчетУчета КАК СчетУчета,
	|		ПорядокОтражения.СчетСписанияОСНО КАК СчетСписанияОСНО,
	|		ПорядокОтражения.СчетСписанияЕНВД КАК СчетСписанияЕНВД,
	|		ЛОЖЬ КАК ТребуетсяНастройкаСчетУчета,
	|		ЛОЖЬ КАК ТребуетсяНастройкаСчетСписанияОСНО,
	|		ЛОЖЬ КАК ТребуетсяНастройкаСчетСписанияЕНВД,
	|		ЛОЖЬ КАК ТребуетсяНастройка,
	|		"""" КАК ИзмененныеДанные
	|	ИЗ
	|		РегистрСведений.ПорядокОтраженияРасходов КАК ПорядокОтражения
	|	ГДЕ
	|		ПорядокОтражения.Организация В(&Организации)
	|		И ПорядокОтражения.Подразделение Ссылка Справочник.СтруктураПредприятия
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаРеглУчетаТребующиеНастройки.Организация,
	|		СчетаРеглУчетаТребующиеНастройки.МестоУчета,
	|		ВЫБОР
	|			КОГДА СчетаРеглУчетаТребующиеНастройки.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ИНАЧЕ СчетаРеглУчетаТребующиеНастройки.АналитикаУчета
	|		КОНЕЦ,
	|		&ПустойСчет,
	|		&ПустойСчет,
	|		&ПустойСчет,
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы),
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО),
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД),
	|		ИСТИНА,
	|		NULL
	|	ИЗ
	|		РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|	ГДЕ
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы),
	|													 ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО),
	|													 ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД))
	|		И СчетаРеглУчетаТребующиеНастройки.Организация В(&Организации)
	|		И СчетаРеглУчетаТребующиеНастройки.АналитикаУчета <> НЕОПРЕДЕЛЕНО
	|		И СчетаРеглУчетаТребующиеНастройки.МестоУчета Ссылка Справочник.СтруктураПредприятия) КАК ПорядокОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО (ПорядокОтраженияРасходов.СтатьяРасходов = СтатьиРасходов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияРасходов.Организация,
	|	ПорядокОтраженияРасходов.СтатьяРасходов,
	|	ПорядокОтраженияРасходов.Подразделение,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И СтатьиРасходов.РасходыНаОбъектыЭксплуатации,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаОбъектыСтроительства,
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			И СтатьиРасходов.РасходыНаНМАиНИОКР,
	|	СтатьиРасходов.ВидДеятельностиРасходов,
	|	СтатьиРасходов.СчетУчета,
	|	СтатьиРасходов.СчетСписанияОСНО,
	|	СтатьиРасходов.СчетСписанияЕНВД,
	|	СтатьиРасходов.Ссылка
	|
	|ИМЕЮЩИЕ
	|	(СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ МАКСИМУМ(ПорядокОтраженияРасходов.ИзмененныеДанные) ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокОтраженияРасходов.СтатьяРасходов,
	|	Организация,
	|	Подразделение";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаРасходов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияРасходов", "ТаблицаСчетаУчетаРасходов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "СчетаУчетаРасходов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетаУчетаРезервов(СтруктураТаблиц, ТекстыЗапроса, Запрос)
	
	ИмяТаблицы = "СчетаУчетаРезервов";
	
	ТаблицаИсточник = Неопределено;
	Если Не СтруктураТаблиц.Свойство(ИмяТаблицы, ТаблицаИсточник) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТаблицаИсточник <> Неопределено Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТекущаяТаблицаСчетовУчета.Организация,
		|	ТекущаяТаблицаСчетовУчета.ВидРезервов,
		|
		|	ТекущаяТаблицаСчетовУчета.СчетУчета,
		|	ТекущаяТаблицаСчетовУчета.СчетУчетаПоУмолчанию,
		|
		|	ТекущаяТаблицаСчетовУчета.ТребуетсяНастройка,
		|	ТекущаяТаблицаСчетовУчета.ИзмененныеДанные
		|
		|ПОМЕСТИТЬ ТаблицаСчетаУчетаРезервов
		|ИЗ
		|	&ТаблицаСчетаУчетаРезервов КАК ТекущаяТаблицаСчетовУчета";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСчетовУчета.Организация,
	|	ДанныеСчетовУчета.ВидРезервов,
	|	
	|	ВЫБОР КОГДА МАКСИМУМ(ДанныеСчетовУчета.СчетУчета) = &ПустойСчет
	|		ТОГДА ЕСТЬNULL(ДанныеАналитики.СчетУчета, &ПустойСчет)
	|		ИНАЧЕ МАКСИМУМ(ДанныеСчетовУчета.СчетУчета) КОНЕЦ КАК СчетУчета,
	|	МАКСИМУМ(ДанныеСчетовУчета.СчетУчета) = &ПустойСчет
	|		И НЕ ДанныеАналитики.Ссылка ЕСТЬ NULL КАК СчетУчетаПоУмолчанию,
	|	МАКСИМУМ(ДанныеСчетовУчета.ТребуетсяНастройка) КАК ТребуетсяНастройка,
	|	МАКСИМУМ(ДанныеСчетовУчета.ИзмененныеДанные) КАК ИзмененныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокОтражения.Организация КАК Организация,
	|		ПорядокОтражения.ВидРезервов КАК ВидРезервов,
	|		ПорядокОтражения.СчетУчета КАК СчетУчета,
	|		ЛОЖЬ КАК ТребуетсяНастройка,
	|		"""" КАК ИзмененныеДанные
	|	ИЗ
	|		РегистрСведений.ПорядокОтраженияРезервов КАК ПорядокОтражения
	|	ГДЕ
	|		ПорядокОтражения.Организация В(&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетаРеглУчетаТребующиеНастройки.Организация,
	|		ВЫБОР
	|			КОГДА СчетаРеглУчетаТребующиеНастройки.АналитикаУчета = НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.Резервы.ПустаяСсылка)
	|			ИНАЧЕ СчетаРеглУчетаТребующиеНастройки.АналитикаУчета
	|		КОНЕЦ,
	|		&ПустойСчет,
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Резервы),
	|		NULL
	|	ИЗ
	|		РегистрСведений.СчетаРеглУчетаТребующиеНастройки КАК СчетаРеглУчетаТребующиеНастройки
	|	ГДЕ
	|		СчетаРеглУчетаТребующиеНастройки.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Резервы)
	|		И СчетаРеглУчетаТребующиеНастройки.Организация В(&Организации)
	|		И СчетаРеглУчетаТребующиеНастройки.АналитикаУчета <> НЕОПРЕДЕЛЕНО) КАК ДанныеСчетовУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК ДанныеАналитики
	|		ПО (ДанныеСчетовУчета.ВидРезервов = ДанныеАналитики.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСчетовУчета.Организация,
	|	ДанныеСчетовУчета.ВидРезервов,
	|	ДанныеАналитики.СчетУчета,
	|	ДанныеАналитики.Ссылка
	|
	|ИМЕЮЩИЕ
	|	(ДанныеАналитики.Ссылка ЕСТЬ NULL
	|			ИЛИ НЕ МАКСИМУМ(ДанныеСчетовУчета.ИзмененныеДанные) ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеСчетовУчета.ВидРезервов,
	|	Организация";
	
	Если ТаблицаИсточник <> Неопределено Тогда
		// Задана таблица - источник, значит данные по счетам берем из представленной таблицы и лишь обновляем требуемые счета
		// по данным регистра с ошибками:
		Запрос.УстановитьПараметр("ТаблицаСчетаУчетаРезервов", ТаблицаИсточник);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ПорядокОтраженияРезервов", "ТаблицаСчетаУчетаРезервов");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, """""", "ПорядокОтражения.ИзмененныеДанные");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"ГДЕ
	|	ПорядокОтражения.Организация В(&Организации)",
									"");
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Процедура ДополнитьВременныеТаблицыЗапросаОбщимиСчетамиУчета(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПустаяАналитикаУчета.АналитикаУчета КАК АналитикаУчета,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНаСкладе, &ПустойСчет) КАК СчетУчетаНаСкладе,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродаж, &ПустойСчет) КАК СчетУчетаВыручкиОтПродаж,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродаж, &ПустойСчет) КАК СчетУчетаСебестоимостиПродаж,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВыручкиОтПродажЕНВД, &ПустойСчет) КАК СчетУчетаВыручкиОтПродажЕНВД,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаСебестоимостиПродажЕНВД, &ПустойСчет) КАК СчетУчетаСебестоимостиПродажЕНВД,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНДСПриПродаже, &ПустойСчет) КАК СчетУчетаНДСПриПродаже,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СтатьяДоходовОСНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходовОСНО,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СтатьяДоходовЕНВД, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходовЕНВД,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаВПути, &ПустойСчет) КАК СчетУчетаВПути,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНДСВПути, &ПустойСчет) КАК СчетУчетаНДСВПути
	|ПОМЕСТИТЬ ОбщаяНастройкаНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчета) КАК ПустаяАналитикаУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ДанныеПустойАналитикиУчета
	|		ПО (ДанныеПустойАналитикиУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			И (ДанныеПустойАналитикиУчета.ГруппаФинансовогоУчета = ПустаяАналитикаУчета.АналитикаУчета)
	|			И (ДанныеПустойАналитикиУчета.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка));
	|
	|ВЫБРАТЬ
	|	ПустаяАналитикаУчета.АналитикаУчета,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаПередачиНаКомиссию, &ПустойСчет) КАК СчетУчетаПередачиНаКомиссию,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаЗатратыНаПриобретение, &ПустойСчет) КАК СчетУчетаЗатратыНаПриобретение,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаПередачиВПереработку, &ПустойСчет) КАК СчетУчетаПередачиВПереработку
	|ПОМЕСТИТЬ ОбщаяНастройкаНоменклатурыПереданной
	|ИЗ
	|	(ВЫБРАТЬ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчета) КАК ПустаяАналитикаУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатурыПереданной КАК ДанныеПустойАналитикиУчета
	|	ПО ДанныеПустойАналитикиУчета.ГруппаФинансовогоУчета = ПустаяАналитикаУчета.АналитикаУчета
	|		И ДанныеПустойАналитикиУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка);
	|
	|ВЫБРАТЬ
	|	ПустаяАналитикаУчета.АналитикаУчета,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчета, &ПустойСчет) КАК СчетУчета,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетЗабалансовогоУчета, &ПустойСчет) КАК СчетЗабалансовогоУчета
	|ПОМЕСТИТЬ ОбщаяНастройкаТМЦВЭксплуатации
	|ИЗ
	|	(ВЫБРАТЬ ЗНАЧЕНИЕ(Справочник.КатегорииЭксплуатации.ПустаяСсылка) КАК АналитикаУчета) КАК ПустаяАналитикаУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ДанныеПустойАналитикиУчета
	|	ПО ДанныеПустойАналитикиУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ДанныеПустойАналитикиУчета.КатегорияЭксплуатации = ПустаяАналитикаУчета.АналитикаУчета;
	|
	|ВЫБРАТЬ
	|	ПустаяАналитикаУчета.АналитикаУчета,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентами, &ПустойСчет) КАК СчетУчетаРасчетовСКлиентами,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаАвансовПолученных, &ПустойСчет) КАК СчетУчетаАвансовПолученных,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщиками, &ПустойСчет) КАК СчетУчетаРасчетовСПоставщиками,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаАвансовВыданных, &ПустойСчет) КАК СчетУчетаАвансовВыданных,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовПоПретензиям, &ПустойСчет) КАК СчетУчетаРасчетовПоПретензиям,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаНеотфактурованныеПоставки, &ПустойСчет) КАК СчетУчетаНеотфактурованныеПоставки,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКлиентамиТара, &ПустойСчет) КАК СчетУчетаРасчетовСКлиентамиТара,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСПоставщикамиТара, &ПустойСчет) КАК СчетУчетаРасчетовСПоставщикамиТара,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиОсновнойДолг, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиОсновнойДолг,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиПроценты, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиПроценты,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСКредиторамиКомиссия, &ПустойСчет) КАК СчетУчетаРасчетовСКредиторамиКомиссия,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиОсновнойДолг, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиОсновнойДолг,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиПроценты, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиПроценты,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСДебиторамиКомиссия, &ПустойСчет) КАК СчетУчетаРасчетовСДебиторамиКомиссия,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга,
	|	ЕСТЬNULL(ДанныеПустойАналитикиУчета.СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства, &ПустойСчет) КАК СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства
	|ПОМЕСТИТЬ ОбщаяНастройкаРасчетовСПартнерами
	|ИЗ
	|	(ВЫБРАТЬ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК АналитикаУчета) КАК ПустаяАналитикаУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ДанныеПустойАналитикиУчета
	|	ПО ДанныеПустойАналитикиУчета.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ДанныеПустойАналитикиУчета.ГруппаФинансовогоУчета = ПустаяАналитикаУчета.АналитикаУчета";
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли