#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый", ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Подразделение КАК Подразделение,
	|	Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Таблица.Партия КАК Партия,
	|	Таблица.Количество КАК КоличествоПередЗаписью
	|ПОМЕСТИТЬ ДвиженияТМЦВЭксплуатацииПередЗаписью
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|	И НЕ &ЭтоНовый";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстЗапроса = "";
	
	Если ПроведениеСерверУТ.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
		// и помещается во временную таблицу.
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаИзменений.Организация КАК Организация,
		|	ТаблицаИзменений.Подразделение КАК Подразделение,
		|	ТаблицаИзменений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаИзменений.Партия КАК Партия,
		|	СУММА(ТаблицаИзменений.КоличествоИзменение) КАК КоличествоИзменение
		|ПОМЕСТИТЬ ДвиженияТМЦВЭксплуатацииИзменение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Организация КАК Организация,
		|		Таблица.Подразделение КАК Подразделение,
		|		Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
		|		Таблица.Партия КАК Партия,
		|		Таблица.КоличествоПередЗаписью КАК КоличествоИзменение
		|	ИЗ
		|		ДвиженияТМЦВЭксплуатацииПередЗаписью КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Организация,
		|		Таблица.Подразделение,
		|		Таблица.ФизическоеЛицо,
		|		Таблица.Партия,
		|		-Таблица.Количество
		|	ИЗ
		|		РегистрНакопления.ТМЦВЭксплуатации КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Организация,
		|	ТаблицаИзменений.Подразделение,
		|	ТаблицаИзменений.ФизическоеЛицо,
		|	ТаблицаИзменений.Партия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.КоличествоИзменение) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	//++ НЕ УТ
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ТаблицаИзменений.Организация КАК Организация,
	|	&Регистратор КАК Документ,
	|	ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0) КАК НомерПакета,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ВнутреннееПотреблениеТоваров)
	|				ТОГДА ДОБАВИТЬКДАТЕ(ТаблицаИзменений.Период, МЕСЯЦ, 1)
	|			КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ВводОстатков)
	|				ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатков.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|			КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПрочееОприходованиеТоваров)
	|					И НАЧАЛОПЕРИОДА(ПрочееОприходованиеТоваров.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТаблицаИзменений.Партия.Дата, МЕСЯЦ)
	|				ТОГДА НАЧАЛОПЕРИОДА(ПрочееОприходованиеТоваров.Дата, МЕСЯЦ)
	|			КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПеремещениеВЭксплуатации)
	|					И НАЧАЛОПЕРИОДА(ПеремещениеВЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТаблицаИзменений.Партия.Дата, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ПеремещениеВЭксплуатации.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|			КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.СписаниеИзЭксплуатации)
	|					И НАЧАЛОПЕРИОДА(СписаниеИзЭксплуатации.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТаблицаИзменений.Партия.Дата, МЕСЯЦ)
	|				ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СписаниеИзЭксплуатации.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|			ИНАЧЕ ТаблицаИзменений.Период
	|		КОНЕЦ) КАК Месяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаИзменений.Организация КАК Организация,
	|		ТаблицаИзменений.Партия КАК Партия,
	|		ТаблицаИзменений.Период КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Период,
	|			Таблица.Организация КАК Организация,
	|			Таблица.Подразделение КАК Подразделение,
	|			Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
	|			Таблица.Партия КАК Партия,
	|			Таблица.КоличествоПередЗаписью КАК КоличествоИзменение
	|		ИЗ
	|			ДвиженияТМЦВЭксплуатацииПередЗаписью КАК Таблица
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ),
	|			Таблица.Организация,
	|			Таблица.Подразделение,
	|			Таблица.ФизическоеЛицо,
	|			Таблица.Партия,
	|			-Таблица.Количество
	|		ИЗ
	|			РегистрНакопления.ТМЦВЭксплуатации КАК Таблица
	|		ГДЕ
	|			Таблица.Регистратор = &Регистратор) КАК ТаблицаИзменений
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаИзменений.Период,
	|		ТаблицаИзменений.Организация,
	|		ТаблицаИзменений.Подразделение,
	|		ТаблицаИзменений.ФизическоеЛицо,
	|		ТаблицаИзменений.Партия
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаИзменений.КоличествоИзменение) <> 0) КАК ТаблицаИзменений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|		ПО (ВводОстатков.Ссылка = &Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходованиеТоваров
	|		ПО (ПрочееОприходованиеТоваров.Ссылка = &Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеВЭксплуатации КАК ПеремещениеВЭксплуатации
	|		ПО (ПеремещениеВЭксплуатации.Ссылка = &Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|		ПО (СписаниеИзЭксплуатации.Ссылка = &Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыПогашенияСтоимостиТМЦ КАК ПакетыПогашенияСтоимостиТМЦ
	|		ПО (ПакетыПогашенияСтоимостиТМЦ.Организация = ТаблицаИзменений.Организация)
	|			И (ПакетыПогашенияСтоимостиТМЦ.Партия = ТаблицаИзменений.Партия)
	|ГДЕ
	|	(ТаблицаИзменений.Партия.СпособПогашенияСтоимостиБУ В (
	|						ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоСроку), 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоНаработке))
	|			ИЛИ ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПрочееОприходованиеТоваров)
	|			ИЛИ ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.ПеремещениеВЭксплуатации)
	|			ИЛИ ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.СписаниеИзЭксплуатации))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Организация,
	|	ЕСТЬNULL(ПакетыПогашенияСтоимостиТМЦ.НомерПакета, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияТМЦВЭксплуатацииПередЗаписью";
	
	//-- НЕ УТ
	
	Если НЕ ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	//++ НЕ УТ
	Если ПроведениеСерверУТ.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		// Новые изменения были помещены во временную таблицу.
		// Добавляется информация о ее существовании и наличии в ней записей об изменении.
		Выборка = РезультатЗапроса[0].Выбрать();
		Выборка.Следующий();
		СтруктураВременныеТаблицы.Вставить("ДвиженияТМЦВЭксплуатацииИзменение", Выборка.Количество > 0);
		
		РегистрыСведений.ЗаданияКПогашениюСтоимостиТМЦВЭксплуатации.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[1].Выбрать());
	Иначе
		РегистрыСведений.ЗаданияКПогашениюСтоимостиТМЦВЭксплуатации.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[0].Выбрать());
	КонецЕсли;
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли