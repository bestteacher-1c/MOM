#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	//++ НЕ УТ
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	ТекстыЗапросовДляПолученияТаблицыИзменений = 
		ЗакрытиеМесяцаСервер.ТекстыЗапросовДляПолученияТаблицыИзмененийРегистра(ЭтотОбъект.Метаданные(), ЭтотОбъект.Отбор);
	
	Запрос = Новый Запрос;
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиНачальныхДанных;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();
	
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	ДополнительныеСвойства.Вставить("ТекстВыборкиТаблицыИзменений", ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиТаблицыИзменений);
	
	//-- НЕ УТ

КонецПроцедуры

//++ НЕ УТ

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
		
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	Запрос = Новый Запрос;
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Если НЕ ПланыОбмена.ГлавныйУзел() = Неопределено Тогда // В РИБ данный регистр обрабатывается только в главном узле.
		
		// Уничтожаем таблицу начальных записей регистра:
		Запрос.Текст = "УНИЧТОЖИТЬ НачальныеЗаписи" + ИмяРегистра;
		Запрос.Выполнить();
		Возврат;
		
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу для последующей записи в регистрах заданий.	
	Запрос.Текст = ДополнительныеСвойства.ТекстВыборкиТаблицыИзменений;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		
	// Дополним временные таблицы данными по организациям на УСН, для последующей актуализации данных, при необходимости:
	УчетУСНСервер.ДополнитьМенеджерВременныхТаблицДаннымиПоОрганизациямНаУСНДоходыМинусРасходы(СтруктураВременныеТаблицы.МенеджерВременныхТаблиц);
	
	ТекстАктуализацииРасходовПриУСН = УчетУСНСервер.ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра(ИмяРегистра+"ЗаданияКЗакрытиюМесяца");
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "#ТаблицаИзмененийРегистра", "ТаблицаИзменений"+ИмяРегистра);
	
	ДопУсловия = "(ТаблицаИзменений.СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов" + Символы.ПС + Символы.Таб +
	"ИЛИ ВЫРАЗИТЬ(ТаблицаИзменений.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов) В" + Символы.ПС + Символы.Таб + Символы.Таб +
	"(ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)," + Символы.ПС + Символы.Таб + Символы.Таб +
	"ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)," + Символы.ПС + Символы.Таб + Символы.Таб +
	"ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата)))";
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "&ДополнительныеУсловия", ДопУсловия);
	
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() + ТекстАктуализацииРасходовПриУСН;
		
	// Уничтожаем таблицу изменений регистра:
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() + "УНИЧТОЖИТЬ ТаблицаИзменений" + ИмяРегистра;
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#КонецЕсли
