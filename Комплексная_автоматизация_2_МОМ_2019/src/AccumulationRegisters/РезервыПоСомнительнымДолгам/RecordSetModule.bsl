#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстыЗапросовДляПолученияТаблицыИзменений = 
		ЗакрытиеМесяцаСервер.ТекстыЗапросовДляПолученияТаблицыИзмененийРегистра(Метаданные(), Отбор);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиНачальныхДанных;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();
	
	ДополнительныеСвойства.Вставить("ТекстВыборкиТаблицыИзменений",
		ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиТаблицыИзменений);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Или Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ДополнительныеСвойства.ТекстВыборкиТаблицыИзменений;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	//++ НЕ УТ
	ИмяТаблицыИзменений = ПодготовитьТаблицуИзменений(Запрос, "ТаблицаИзмененийРезервыПоСомнительнымДолгам",
		ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	НачислениеСписаниеРезервовПоСомнительнымДолгамСервер.СформироватьЗаданияКЗакрытиюМесяцаПриИзмененииРасчетов(Запрос, ИмяТаблицыИзменений);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(Запрос, ИмяТаблицыИзменений);
	//-- НЕ УТ
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(Запрос, "ТаблицаИзмененийРезервыПоСомнительнымДолгам");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ
Функция ПодготовитьТаблицуИзменений(Запрос, ИмяТаблицыИзменений, ОтменаПроведения = Ложь)
	
	ИмяПодготовленнойТаблицыИзменений = "_" + ИмяТаблицыИзменений;
	
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ), МЕСЯЦ, ВЫБОР
	|			КОГДА &ЭтоРегламентнаяОперация И НЕ &ОтменаПроведения
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Период,
	|	ТаблицаИзменений.АналитикаУчетаПоПартнерам.Организация КАК Организация
	|ПОМЕСТИТЬ #ПодготовленнаяТаблицаИзменений
	|ИЗ
	|	#ТаблицаИзменений КАК ТаблицаИзменений";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаИзменений", ИмяТаблицыИзменений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПодготовленнаяТаблицаИзменений", ИмяПодготовленнойТаблицыИзменений);
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоРегламентнаяОперация", ТипЗнч(Отбор.Регистратор.Значение) =
		Тип("ДокументСсылка.НачислениеСписаниеРезервовПоСомнительнымДолгам"));
	Запрос.УстановитьПараметр("ОтменаПроведения", ОтменаПроведения);
	Запрос.Выполнить();
	
	Возврат ИмяПодготовленнойТаблицыИзменений;
	
КонецФункции
//-- НЕ УТ

#КонецОбласти

#КонецЕсли
