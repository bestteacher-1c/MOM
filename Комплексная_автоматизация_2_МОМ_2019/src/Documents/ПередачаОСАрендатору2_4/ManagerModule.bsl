#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ВозвратОСОтАрендатора2_4.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Передача ОС арендатору".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаОСАрендатору2_4) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПередачаОСАрендатору2_4.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПередачаОСАрендатору2_4);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнеоборотныеАктивы2_4";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Вычисляет значения свойств при изменении значений реквизитов.
// Используется в форме документа и при проверке заполнения.
//
// Параметры:
//  Объект					 - ДокументОбъект.ПринятиеКУчетуОС2_4, ДанныеФормыСтруктура - Данные документа.
//  ВспомогательныеРеквизиты - Структура - Содержит значения вспомогательных реквизитов
//  ИзмененныеРеквизиты		 - Строка - Список измененных реквизитов.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит новые значения свойств реквизитов:
//					*ИмяРеквизита	- Строка	- Имя реквизита объекта
//					*ИмяЭлемента	- Строка	- Имя элемента формы
//					*Свойство	- Строка	- Свойство, например, "Видимость", "ТолькоПросмотр" 
//					*Значение	- Булево	- Значение свойства.
//
Функция ЗначенияСвойствЗависимыхРеквизитов(Объект, ИзмененныеРеквизиты = "", Знач ВидУчета = Неопределено) Экспорт

	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыРеквизитовОбъекта = Новый Массив;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("РасчетыМеждуОрганизациямиАрендатор") ИЛИ ОбновитьВсе Тогда
		
		АрендаторОрганизация = Объект.РасчетыМеждуОрганизациямиАрендатор;
		
		ТипСсылкаКонтрагенты = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		ТипСсылкаОрганизации = Новый ОписаниеТипов("СправочникСсылка.Организации");
		ТипАрендатора = ?(АрендаторОрганизация, ТипСсылкаОрганизации, ТипСсылкаКонтрагенты);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"Арендатор", "Арендатор", "ОграничениеТипа", ТипАрендатора, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАрендатора", "ПодразделениеАрендатора", "Видимость", АрендаторОрганизация, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МОЛАрендатора", "МОЛАрендатора", "Видимость", АрендаторОрганизация, ПараметрыРеквизитовОбъекта);
		
		ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АдресМестонахождения", "АдресМестонахождения", "Видимость", АрендаторОрганизация, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("НачислятьАмортизацию") ИЛИ ОбновитьВсе Тогда
		
		ВидыУчетов = Новый Массив;
		Если ВидУчета = Неопределено Тогда
			ВидыУчетов.Добавить("УУ");
			Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
				ВидыУчетов.Добавить("БУ");
			КонецЕсли;
		Иначе
			ВидыУчетов.Добавить(ВидУчета);
		КонецЕсли;
		
		Для Каждого ВидУчета Из ВидыУчетов Цикл
			НачислятьАмортизацию = Объект["НачислятьАмортизацию" + ВидУчета];
			РеквизитСтатьяРасходов = "СтатьяРасходов" + ВидУчета;
			РеквизитАналитикаРасходов = "АналитикаРасходов" + ВидУчета;
			
			ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				РеквизитСтатьяРасходов, РеквизитСтатьяРасходов, "ТолькоПросмотр", НЕ НачислятьАмортизацию, ПараметрыРеквизитовОбъекта);
			
			ВнеоборотныеАктивыКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
				РеквизитАналитикаРасходов, РеквизитАналитикаРасходов, "ТолькоПросмотр", НЕ НачислятьАмортизацию, ПараметрыРеквизитовОбъекта);
			
			ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(Объект, Объект[РеквизитСтатьяРасходов], Объект[РеквизитАналитикаРасходов]);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ПараметрыРеквизитовОбъекта;
	
КонецФункции

// Формирует таблицы движений при отложенном проведении.
//
// Параметры:
//  ДокументСсылка			 - ДокументСсылка.ПеремещениеОС2_4 - Документ, для которого формируются движения
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - Содержит вспомогательные временные таблицы, которые могут использоваться для формирования движений.
//
Функция ТаблицыОтложенногоФормированияДвижений(ДокументСсылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса);
	ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса);
	ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса);
	
	ТаблицыДляДвижений = Новый Структура;
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ТаблицыДляДвижений, Истина);
	
	Возврат ТаблицыДляДвижений;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПередачаОСАрендатору2_4";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Дата                    КАК Период,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.МОЛ                     КАК МОЛ,
	|	ДанныеДокумента.Арендатор               КАК Арендатор,
	|	ДанныеДокумента.МОЛАрендатора           КАК МОЛАрендатора,
	|	ДанныеДокумента.ПодразделениеАрендатора КАК ПодразделениеАрендатора,
	|	ДанныеДокумента.АдресМестонахождения    КАК АдресМестонахождения,
	|	ДанныеДокумента.АдресМестонахожденияЗначение КАК АдресМестонахожденияЗначение,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.ОтражатьВРеглУчете      КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете       КАК ОтражатьВУпрУчете,
	|	ДанныеДокумента.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.СтатьяРасходовБУ        КАК СтатьяРасходовБУ,
	|	ДанныеДокумента.АналитикаРасходовБУ     КАК АналитикаРасходовБУ,
	|	ДанныеДокумента.СтатьяРасходовУУ        КАК СтатьяРасходовУУ,
	|	ДанныеДокумента.АналитикаРасходовУУ     КАК АналитикаРасходовУУ,
	|	ДанныеДокумента.НачислятьАмортизациюБУ  КАК НачислятьАмортизациюБУ,
	|	ДанныеДокумента.НачислятьАмортизациюУУ  КАК НачислятьАмортизациюУУ,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|		ТОГДА ДанныеДокумента.Арендатор
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ                                   КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор КАК РасчетыМеждуОрганизациямиАрендатор,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства) КАК СтатьяАП_ОС
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КонецДня", Новый Граница(КонецДня(Реквизиты.Период),ВидГраницы.Включая));
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПередачаОСАрендатору2_4"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Передача ОС арендатору'"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПередачаОСАрендатору);
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперацияСтоимость", Перечисления.ХозяйственныеОперации.ИзменениеПараметровСтоимостиОС);
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперацияАмортизация", Перечисления.ХозяйственныеОперации.ИзменениеПараметровАмортизацииОС);

	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Период                          КАК Дата,
	|	&Ссылка                          КАК Ссылка,
	|	&Организация                     КАК Организация,
	|	&Подразделение                   КАК Подразделение,
	|	&Проведен                        КАК Проведен,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	ЛОЖЬ                             КАК ДополнительнаяЗапись
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСАрендатору2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0) КАК НомерЗаписи,
	|	&Период                          КАК Дата,
	|	&Ссылка                          КАК Ссылка,
	|	&ОрганизацияПолучатель           КАК Организация,
	|	&ПодразделениеПолучатель         КАК Подразделение,
	|	&Проведен                        КАК Проведен,
	|	&ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ИдентификаторМетаданных         КАК ТипСсылки,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&ОтражатьВРеглУчете              КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете               КАК ОтражатьВУпрУчете,
	|	ИСТИНА                           КАК ДополнительнаяЗапись
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОСАрендатору2_4.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Организация <> &ОрганизацияПолучатель";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.Дата   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер,
	|	&ИдентификаторМетаданных,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|			ТОГДА ДанныеДокумента.Арендатор
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.ПодразделениеПолучатель,
	|	ДанныеДокумента.Ответственный,
	|	ДанныеДокумента.Комментарий,
	|	ДанныеДокумента.Проведен,
	|	ДанныеДокумента.ПометкаУдаления,
	|	ИСТИНА,
	|	ДанныеДокумента.Дата,
	|	&НомерНаПечать,
	|	ДанныеДокумента.Дата
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.Организация <> ВЫБОР
	|			КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиАрендатор
	|				ТОГДА ДанныеДокумента.Арендатор
	|			ИНАЧЕ ДанныеДокумента.Организация
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаМестонахождениеОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаМестонахождениеОС(ТекстыЗапроса, "Документ.ПередачаОСАрендатору2_4");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                          КАК Период,
	|	&Организация                     КАК Организация,
	|	ТаблицаОС.ОсновноеСредство       КАК ОсновноеСредство,
	|	&МОЛ                             КАК МОЛ,
	|	&ПодразделениеПолучатель         КАК Местонахождение,
	|	&Арендатор                       КАК Арендатор,
	|	&ПодразделениеАрендатора         КАК ПодразделениеАрендатора,
	|	&МОЛАрендатора                   КАК МОЛАрендатора,
	|	ВЫБОР 
	|		КОГДА &РасчетыМеждуОрганизациямиАрендатор И &АдресМестонахождения <> """"	
	|			ТОГДА &АдресМестонахождения
	|		ИНАЧЕ втМестонахождениеОС.АдресМестонахождения
	|	КОНЕЦ КАК АдресМестонахождения,
	|	ВЫБОР 
	|		КОГДА &РасчетыМеждуОрганизациямиАрендатор И &АдресМестонахождения <> """"
	|			ТОГДА &АдресМестонахожденияЗначение
	|		ИНАЧЕ втМестонахождениеОС.АдресМестонахожденияЗначение
	|	КОНЕЦ КАК АдресМестонахожденияЗначение
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втМестонахождениеОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаОС.ПоказательНаработки           КАК ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки                КАК ОбъемНаработки,
	|	ТаблицаОС.ОтражатьВРеглУчете            КАК ОтражатьВРеглУчете,
	|	ТаблицаОС.ОтражатьВУпрУчете             КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСБУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|
	// НачислятьАмортизациюБУ
	|	ВЫБОР 
	|		КОГДА &НачислятьАмортизациюБУ
	|			И (ПорядокУчета.НачислятьАмортизациюБУ
	|				ИЛИ ПервоначальныеСведенияОС.ПорядокУчетаБУ В (
	|					ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации),
	|					ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена)))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизациюБУ,
	|
	// НачислятьАмортизациюНУ
	|	ВЫБОР 
	|		КОГДА &НачислятьАмортизациюБУ
	|			И (ПорядокУчета.НачислятьАмортизациюНУ
	|				ИЛИ ПервоначальныеСведенияОС.ПорядокУчетаНУ В (
	|					ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации),
	|					ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена)))
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизациюНУ,
	|
	|	&СтатьяРасходовБУ                       КАК СтатьяРасходов,
	|	&АналитикаРасходовБУ                    КАК АналитикаРасходов,
	|
	|	ПорядокУчета.СтатьяРасходовАмортизационнойПремии    КАК СтатьяРасходовАмортизационнойПремии,
	|	ПорядокУчета.АналитикаРасходовАмортизационнойПремии КАК АналитикаРасходовАмортизационнойПремии,
	|
	|	ПорядокУчета.НалогообложениеНДС         КАК НалогообложениеНДС
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&КонецДня,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВтТаблицаОС КАК Т)
	|		) КАК ПорядокУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|			И ПорядокУчета.Организация = &Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВтТаблицаОС КАК Т)
	|		) КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|			И (ПервоначальныеСведенияОС.Организация = &Организация)
	|ГДЕ
	|	&ОтражатьВРеглУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПорядокУчетаОСУУ(ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПорядокУчетаОСУУ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние,
	|	&НачислятьАмортизациюУУ                 КАК НачислятьАмортизациюУУ,
	|	&СтатьяРасходовУУ                       КАК СтатьяРасходов,
	|	&АналитикаРасходовУУ                    КАК АналитикаРасходов
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|		&КонецДня,
	|		Регистратор <> &Ссылка
	|			И Организация = &Организация
	|			И ОсновноеСредство В (ВЫБРАТЬ Т.ОсновноеСредство ИЗ ВтТаблицаОС КАК Т)
	|	) КАК ПорядокУчета
	|	ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|		И ПорядокУчета.Организация = &Организация
	|ГДЕ
	|	&ОтражатьВУпрУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСтоимостьОС(Запрос, ТекстыЗапроса, Регистры = Неопределено)

	ИмяРегистра = "СтоимостьОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаПустаяТаблицаСтоимости(ТекстыЗапроса, Запрос, "ВТ_СтоимостьВНА");
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&Подразделение                                     КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК ГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                              КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                          КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                            КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                            КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                            КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                            КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                          КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                          КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                          КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия                  КАК АмортизационнаяПремия,
	|	СтоимостьОС.ПредварительнаяСтоимость               КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.РезервПереоценкиСтоимости              КАК РезервПереоценкиСтоимости,
	|	0                                                  КАК ЗалоговаяСтоимость,
	|
	|	&Арендатор                                         КАК КорОрганизация,
	|	&ПодразделениеПолучатель                           КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	НЕ СтоимостьОС.ОбъектУчета ЕСТЬ NULL               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО ТаблицаОС.ОсновноеСредство = СтоимостьОС.ОбъектУчета
	|		И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&ПодразделениеПолучатель                           КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК ГруппаФинансовогоУчета,
	|	&Арендатор                                         КАК Арендатор,
	|
	|	СтоимостьОС.Стоимость                              КАК Стоимость,
	|	СтоимостьОС.СтоимостьРегл                          КАК СтоимостьРегл,
	|	СтоимостьОС.СтоимостьНУ                            КАК СтоимостьНУ,
	|	СтоимостьОС.СтоимостьПР                            КАК СтоимостьПР,
	|	СтоимостьОС.СтоимостьВР                            КАК СтоимостьВР,
	|	СтоимостьОС.СтоимостьЦФ                            КАК СтоимостьЦФ,
	|	СтоимостьОС.СтоимостьНУЦФ                          КАК СтоимостьНУЦФ,
	|	СтоимостьОС.СтоимостьПРЦФ                          КАК СтоимостьПРЦФ,
	|	СтоимостьОС.СтоимостьВРЦФ                          КАК СтоимостьВРЦФ,
	|	СтоимостьОС.АмортизационнаяПремия                  КАК АмортизационнаяПремия,
	|	СтоимостьОС.ПредварительнаяСтоимость               КАК ПредварительнаяСтоимость,
	|	СтоимостьОС.РезервПереоценкиСтоимости              КАК РезервПереоценкиСтоимости,
	|	0                                                  КАК ЗалоговаяСтоимость,
	|
	|	&Организация                                       КАК КорОрганизация,
	|	&Подразделение                                     КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	НЕ СтоимостьОС.ОбъектУчета ЕСТЬ NULL               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|		И СтоимостьОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Ссылка                                            КАК Регистратор,
	|	&Период                                            КАК Период,
	|	&ХозяйственнаяОперацияСтоимость                    КАК ХозяйственнаяОперация,
	|	ТаблицаОС.ОсновноеСредство                         КАК ОсновноеСредство,
	|	&Организация                                       КАК Организация,
	|	&ПодразделениеПолучатель                           КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК НаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                            КАК ГруппаФинансовогоУчета,
	|	&Арендатор                                         КАК Арендатор,
	|
	|	0                                                  КАК Стоимость,
	|	0                                                  КАК СтоимостьРегл,
	|	0                                                  КАК СтоимостьНУ,
	|	0                                                  КАК СтоимостьПР,
	|	0                                                  КАК СтоимостьВР,
	|	0                                                  КАК СтоимостьЦФ,
	|	0                                                  КАК СтоимостьНУЦФ,
	|	0                                                  КАК СтоимостьПРЦФ,
	|	0                                                  КАК СтоимостьВРЦФ,
	|	0                                                  КАК АмортизационнаяПремия,
	|	0                                                  КАК ПредварительнаяСтоимость,
	|	0                                                  КАК РезервПереоценкиСтоимости,
	|	ТаблицаОС.ЗалоговаяСтоимость                       КАК ЗалоговаяСтоимость,
	|
	|	НЕОПРЕДЕЛЕНО                                       КАК КорОрганизация,
	|	&ПодразделениеАрендатора                           КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности                  КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаРасходов,
	|	ЛОЖЬ                                               КАК РасчетСтоимости,
	|	&ОтражатьВРеглУчете                                КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                                 КАК ОтражатьВУпрУчете
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

КонецПроцедуры

Процедура ТекстЗапросаТаблицаАмортизацияОС(ТекстыЗапроса)

	ИмяРегистра = "АмортизацияОС";
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&ХозяйственнаяОперацияАмортизация         КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	&Подразделение                            КАК Подразделение,
	|	ТаблицаОС.ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	АмортизацияОС.Амортизация                 КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл             КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ               КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР               КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР               КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ               КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ             КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ             КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ             КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	&Организация                              КАК КорОрганизация,
	|	&ПодразделениеПолучатель                  КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	&ГруппаФинансовогоУчета                   КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос              КАК НачислятьИзнос
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Ссылка                                   КАК Регистратор,
	|	&Период                                   КАК Период,
	|	&ХозяйственнаяОперацияАмортизация         КАК ХозяйственнаяОперация,
	|	&Организация                              КАК Организация,
	|	ТаблицаОС.ОсновноеСредство                КАК ОсновноеСредство,
	|	&ПодразделениеПолучатель                  КАК Подразделение,
	|	&ГруппаФинансовогоУчета                   КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	АмортизацияОС.Амортизация                 КАК Амортизация,
	|	АмортизацияОС.АмортизацияРегл             КАК АмортизацияРегл,
	|	АмортизацияОС.АмортизацияНУ               КАК АмортизацияНУ,
	|	АмортизацияОС.АмортизацияПР               КАК АмортизацияПР,
	|	АмортизацияОС.АмортизацияВР               КАК АмортизацияВР,
	|	АмортизацияОС.АмортизацияЦФ               КАК АмортизацияЦФ,
	|	АмортизацияОС.АмортизацияНУЦФ             КАК АмортизацияНУЦФ,
	|	АмортизацияОС.АмортизацияПРЦФ             КАК АмортизацияПРЦФ,
	|	АмортизацияОС.АмортизацияВРЦФ             КАК АмортизацияВРЦФ,
	|	АмортизацияОС.РезервПереоценкиАмортизации КАК РезервПереоценкиАмортизации,
	|	&Организация                              КАК КорОрганизация,
	|	&Подразделение                            КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.ГруппаФинансовогоУчета          КАК КорГруппаФинансовогоУчета,
	|	АмортизацияОС.НачислятьИзнос              КАК НачислятьИзнос
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаВтТаблицаОС(ТекстыЗапроса, ПолноеИмяОбъекта());
	
	ТекстЗапроса =
	"// Перемещение амортизации
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХозяйственнаяОперацияАмортизация КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	АмортизацияОС.Амортизация         КАК Сумма,
	|	АмортизацияОС.Амортизация         КАК СуммаУпр,
	|	АмортизацияОС.АмортизацияРегл + АмортизацияОС.АмортизацияЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияВНА КАК АмортизацияОС
	|		ПО АмортизацияОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И АмортизацияОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Перемещение стоимости
	|ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&ХозяйственнаяОперацияСтоимость   КАК ХозяйственнаяОперация,
	|	&Организация                      КАК Организация,
	|
	|	&Подразделение                    КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК Статья,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК АналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|
	|	&ПодразделениеПолучатель          КАК КорПодразделение,
	|	ТаблицаОС.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяАП_ОС                      КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                      КАК КорАналитикаРасходов,
	|	ТаблицаОС.ОсновноеСредство        КАК КорАналитикаАктивовПассивов,
	|	ТаблицаОС.ГруппаФинансовогоУчета  КАК КорГруппаФинансовогоУчета,
	|
	|	&ОрганизацияПолучатель            КАК КорОрганизация,
	|
	|	СтоимостьОС.Стоимость             КАК Сумма,
	|	СтоимостьОС.Стоимость             КАК СуммаУпр,
	|	СтоимостьОС.СтоимостьРегл + СтоимостьОС.СтоимостьЦФ КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьВНА КАК СтоимостьОС
	|		ПО СтоимостьОС.ОбъектУчета = ТаблицаОС.ОсновноеСредство
	|			И СтоимостьОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)

	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Регистратор,
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство,
	|	&ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Арендатор                   КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&Арендатор) = ТИП(Справочник.Организации)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолноеИмяОбъекта()

	Возврат "Документ.ПередачаОСАрендатору2_4";

КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыСозданияВременныхТаблиц = Новый Массив;
	ТекстыСозданияВременныхТаблиц.Добавить(ВнеоборотныеАктивыЛокализация.ТекстЗапросаВтДоходыОСЗаСчетЦФ());
	ТекстыСозданияВременныхТаблиц.Добавить(Символы.ПС);
	
	ТекстЗапроса = СтрСоединить(ТекстыСозданияВременныхТаблиц, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	СписокЗапросов = Новый Массив;
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаПеремещениеСтоимостиОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаПеремещениеАмортизацииОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаПеремещениеДоходовОСЗаСчетЦФ(СписокЗапросов);
	ЗабалансовыйУчетАрендованныхОС(СписокЗапросов);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

Процедура ЗабалансовыйУчетАрендованныхОС(СписокЗапросов)
	
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет у арендатора ОС (Дт 001 :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Арендатор КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ЗалоговаяСтоимость КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.КорПодразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АрендованныеОсновныеСредства) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.Организация КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Поступление на забалансовый учет у арендатора ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС КАК Строки
	|			ПО Строки.Регистратор = ДокументыКОтражению.Ссылка
	|ГДЕ
	|	Строки.ЗалоговаяСтоимость <> 0
	|	И ТИПЗНАЧЕНИЯ(Строки.Арендатор) = ТИП(Справочник.Организации)
	|	И Строки.Арендатор <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ОС-1 (Акт о приеме-передаче ОС)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС1";
	КомандаПечати.Идентификатор = "ОС1";
	КомандаПечати.Представление = НСтр("ru = 'ОС-1 (Акт о приеме-передаче ОС)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьРеглУчет";
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОС1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетДрагоценныхМатериалов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетДрагоценныхМатериалов"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Дата,
	|	Операция.Организация КАК Организация,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	Операция.ГруппаФинансовогоУчета.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ втОбъектыДокументов
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСАрендатору2_4.ОС КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";
	
	Запрос.Выполнить();
	
	ВнеоборотныеАктивыЛокализация.ПолучитьСведенияОбОсновныхСредствахВДокументах(Запрос.МенеджерВременныхТаблиц, МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Шапка.Ссылка КАК Ссылка,
	|	Шапка.Номер КАК НомерДокумента,
	|	Шапка.Дата КАК ДатаДокумента,
	|	Шапка.Дата КАК ДатаВвода,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПередачи,
	|	Шапка.Организация.Префикс КАК Префикс,
	|	Шапка.Организация КАК Сдатчик,
	|	Шапка.Подразделение КАК ПодразделениеСдатчика,
	|	Шапка.Подразделение КАК МестонахождениеОС,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетСдатчика,
	|	Шапка.Арендатор КАК Получатель,
	|	ВЫБОР
	|		КОГДА Шапка.РасчетыМеждуОрганизациямиАрендатор
	|			ТОГДА Шапка.ПодразделениеАрендатора
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьРуководителя,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА втОбщиеСведенияОбъектовДокументов.КоличествоРазличныхМОЛ = 1
	|			ТОГДА втОбщиеСведенияОбъектовДокументов.МОЛ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СдалМОЛ,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьСдалМОЛ,
	|	НЕОПРЕДЕЛЕНО КАК ПринялМОЛ,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьПринялМОЛ
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК Шапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбщиеСведенияОбъектовДокументов КАК втОбщиеСведенияОбъектовДокументов
	|		ПО Шапка.Ссылка = втОбщиеСведенияОбъектовДокументов.Ссылка
	|ГДЕ
	|	Шапка.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА втОсновныеСредства.ОсновноеСредство.НаименованиеПолное = """"
	|			ТОГДА втОсновныеСредства.ОсновноеСредство
	|		ИНАЧЕ втОсновныеСредства.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОС,
	|	втСведенияОбъектовДокументов.ГруппаОС КАК ГруппаОС,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.АмортизационнаяГруппа.Порядок + 1, 0) КАК АмортизационнаяГруппа,
	|	втСведенияОбъектовДокументов.КодПоОКОФ.Код КАК КодОКОФ,
	|	втСведенияОбъектовДокументов.ИнвентарныйНомер КАК НомерИнвентарный,
	|	втОсновныеСредства.ОсновноеСредство.ЗаводскойНомер КАК НомерЗаводской,
	|	НЕОПРЕДЕЛЕНО КАК ДатаНачалаСтроительства,
	|	втОсновныеСредства.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
	|	втСведенияОбъектовДокументов.ДатаПринятияКУчету КАК ДатаВводаВЭксплуатацию,
	|	НЕОПРЕДЕЛЕНО КАК ДатаМодернизации,
	|	НЕОПРЕДЕЛЕНО КАК ДатаКапитальногоРемонта,
	|	РАЗНОСТЬДАТ(втСведенияОбъектовДокументов.ДатаПринятияКУчету, втОсновныеСредства.Дата, МЕСЯЦ) КАК СрокИспользованияФакт,
	|	втСведенияОбъектовДокументов.СрокПолезногоИспользования КАК СрокИспользования,
	|	втСведенияОбъектовДокументов.СрокПолезногоИспользования КАК СрокИспользованияРаздел2,
	|	втСведенияОбъектовДокументов.НакопленнаяСтоимость КАК СтоимостьПервоначальная,
	|	втСведенияОбъектовДокументов.ОстаточнаяСтоимость КАК СтоимостьОстаточная,
	|	втОсновныеСредства.СчетУчета КАК СчетУчетаОС,
	|	0 КАК ЦенаПродажи,
	|	втСведенияОбъектовДокументов.НакопленнаяАмортизация КАК АмортизацияСумма,
	|	втСведенияОбъектовДокументов.СпособНачисленияАмортизации КАК АмортизацияСпособ,
	|	втСведенияОбъектовДокументов.КоэффициентАмортизации КАК АмортизацияНорма,
	|	ЕСТЬNULL(втСведенияОбъектовДокументов.СведенияАктуальны, ЛОЖЬ) КАК СведенияАктуальны
	|ИЗ
	|	втОбъектыДокументов КАК втОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО втОсновныеСредства.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|		ПО втОсновныеСредства.Ссылка = втСведенияОбъектовДокументов.Ссылка
	|			И втОсновныеСредства.ОсновноеСредство = втСведенияОбъектовДокументов.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	втОсновныеСредства.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ДрагоценныеМатериалы.ДрагоценныйМатериал КАК ДрагоценныйМатериал,
	|	ДрагоценныеМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ДрагоценныеМатериалы.Количество) КАК Количество
	|ИЗ
	|	Документ.ПередачаОСАрендатору.ОС КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации.ДрагоценныеМатериалы КАК ДрагоценныеМатериалы
	|		ПО ТабличнаяЧасть.ОсновноеСредство = ДрагоценныеМатериалы.Ссылка
	|ГДЕ
	|	&ИспользоватьУчетДрагоценныхМатериалов
	|	И ТабличнаяЧасть.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ДрагоценныеМатериалы.ДрагоценныйМатериал,
	|	ДрагоценныеМатериалы.ЕдиницаИзмерения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТабличнаяЧасть.Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечатнойФормы = Новый Структура;
	ДанныеДляПечатнойФормы.Вставить("РезультатПоШапке", РезультатыЗапроса[0]);
	ДанныеДляПечатнойФормы.Вставить("РезультатПоТабличнойЧасти", РезультатыЗапроса[1]);
	ДанныеДляПечатнойФормы.Вставить("РезультатПоДрагоценнымМатериалам", РезультатыЗапроса[2]);
	
	Возврат ДанныеДляПечатнойФормы;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.ПередачаОСАрендатору2_4.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.4.9.34";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("3497c9bb-7ce7-41a0-9fd7-4b7ddd39a586");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПередачаОСАрендатору2_4.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Обновляет документы ""Передача ОС арендатору"":
	|- Заполняет новый реквизит ""Адрес местонахождения (значение)""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ПередачаОСАрендатору2_4.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.ПередачаОСАрендатору2_4.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.ПередачаОСАрендатору2_4.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.ПередачаОСАрендатору2_4";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаОСАрендатору2_4 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.АдресМестонахождения <> """"
	|	И (ВЫРАЗИТЬ(ДанныеДокумента.АдресМестонахожденияЗначение КАК СТРОКА(100))) = """"";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Документ.ПередачаОСАрендатору2_4";
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Для каждого Выборка Из ОбновляемыеДанные Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Документ.ПередачаОСАрендатору2_4");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
 			
			ДанныеОбъекта = Выборка.Ссылка.ПолучитьОбъект();
			Если ДанныеОбъекта = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
 				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахождения)
				И НЕ ЗначениеЗаполнено(ДанныеОбъекта.АдресМестонахожденияЗначение) Тогда
				
				ДанныеОбъекта.АдресМестонахожденияЗначение = 
					УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(
						ДанныеОбъекта.АдресМестонахождения,
						Перечисления.ТипыКонтактнойИнформации.Адрес);
			КонецЕсли; 
			
			Если ДанныеОбъекта.Модифицированность() Тогда
	 			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДанныеОбъекта);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли; 
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.Ссылка.Метаданные(),
									Выборка.Ссылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли