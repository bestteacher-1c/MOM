#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",		ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи",	РежимЗаписи);
	
	Если ДополнительныеСвойства.ЭтоНовый Тогда
		ЭтотОбъект.ПолучитьСсылкуНового();
	КонецЕсли;
	
	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются Тогда
		ПобочныеИзделия.Очистить();
		МатериалыИРаботы.Очистить();
		Трудозатраты.Очистить();
	КонецЕсли;
	
	ПараметрыОкругления = Документы.ПроизводствоБезЗаказа.ПараметрыТЧДляОкругления();
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(
		ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["ВыходныеИзделия"]);
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(
		ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["ПобочныеИзделия"]);
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(
		ЭтотОбъект, РежимЗаписи, ПараметрыОкругления["МатериалыИРаботы"]);
	
	
	ПараметрыУказанияСерий =
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПроизводствоБезЗаказа);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.ВыходныеИзделия);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.ПобочныеИзделия);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.МатериалыИРаботы);
	
	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект,
													"ВыходныеИзделия",
													"МаксимальныйКодСтрокиВыходныеИзделия");
	
	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект,
													"Трудозатраты",
													"МаксимальныйКодСтрокиТрудозатраты");
	
	НайденныеСтроки = ВыходныеИзделия.НайтиСтроки(
		Новый Структура("НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию));
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Назначение = Неопределено;
	КонецЦикла;
	
	НайденныеСтроки = ПобочныеИзделия.НайтиСтроки(
		Новый Структура("НаправлениеВыпуска",
		Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию));
	Для Каждого Строка Из НайденныеСтроки Цикл
		Строка.Назначение = Неопределено;
	КонецЦикла;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВыходныеИзделия);
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ПобочныеИзделия);
		ЗаполнитьКлючиАналитики();
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасовВыходныеИзделия.Очистить();
			ВидыЗапасовПобочныеИзделия.Очистить();
			ВидыЗапасовМатериалыИРаботы.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьПризнакЕстьМаркируемаяПродукция();
	
	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
	
	ПроизводствоБезЗаказаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ОбщегоНазначенияУТ.СинхронизироватьКлючи(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ
		И Не ПометкаУдаления Тогда
		Документы.ПроизводствоБезЗаказа.СформироватьПартииПроизводства(ЭтотОбъект);
	КонецЕсли;
	
	Если Не Отказ И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	ЕстьМаркируемаяПродукцияГИСМ = Ложь;
	РаспоряжениеДляТрудозатрат = Истина;
	
	ПроизводствоБезЗаказаЛокализация.ПриКопировании(ЭтотОбъект, ОбъектКопирования);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС") Тогда
		
		ИнтеграцияВЕТИСУТ.ЗаполнитьПроизводствоБезЗаказаНаОснованииПроизводственнойОперацииВЕТИС(ЭтотОбъект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.МаркировкаТоваровИСМП") Тогда
		
		ИнтеграцияИСМПУТ.ЗаполнитьПроизводствоБезЗаказаНаОснованииМаркировкиТоваровИСМП(
			ЭтотОбъект,
			ДанныеЗаполнения);
			
	КонецЕсли;
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	ИнициализироватьДокумент();
	
	Если Не ЗначениеЗаполнено(СпособРаспределенияЗатратНаВыходныеИзделия)
		И (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациям
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу
			Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются) Тогда
		СпособРаспределенияЗатратНаВыходныеИзделия = Перечисления.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости;
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	#Область ПроверкаПолейГруппЗатрат

	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу
		ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.НомерГруппыЗатрат");
		МассивНепроверяемыхРеквизитов.Добавить("МатериалыИРаботы.НомерГруппыЗатрат");
		МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.НомерГруппыЗатрат");
		
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		
	ИначеЕсли ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Спецификация");
		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Назначение");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		ПроверитьЗаполнениеНазначения(Отказ);
	КонецЕсли;
	
	#КонецОбласти

	#Область ПроверкаСклада

	МассивНепроверяемыхРеквизитов.Добавить("МатериалыИРаботы.Склад");
	ПроверитьСклады(Отказ);
	
	#КонецОбласти

	#Область ПроверкаХарактеристик

	ПараметрыПроверкиХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "ВыходныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "ПобочныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	ПараметрыПроверкиХарактеристик.ИмяТЧ = "МатериалыИРаботы";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,
														МассивНепроверяемыхРеквизитов,
														Отказ,
														ПараметрыПроверкиХарактеристик);
	
	#КонецОбласти

	#Область ПроверкаСерий

	ПараметрыУказанияСерий =
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПроизводствоБезЗаказа);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.ВыходныеИзделия,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.ПобочныеИзделия,
		Отказ,
		МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ЭтотОбъект,
		ПараметрыУказанияСерий.МатериалыИРаботы,
		Отказ,
		МассивНепроверяемыхРеквизитов);

	#КонецОбласти

	#Область ПроверкаНазначенийДавальца

	ПроверитьВозможностьВыбораНазначенияДавальца("ВыходныеИзделия", Отказ);
	ПроверитьВозможностьВыбораНазначенияДавальца("ПобочныеИзделия", Отказ);
	ПроверитьВозможностьВыбораНазначенияДавальца("МатериалыИРаботы", Отказ);
	ПроверитьОтнесениеМатериаловДавальца(Отказ);
	
	#КонецОбласти

	#Область ПроверкаКоличеств

	ПараметрыПроверкиКоличества = Документы.ПроизводствоБезЗаказа.ПараметрыТЧДляОкругления();
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(
		ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["ВыходныеИзделия"]);
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(
		ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["ПобочныеИзделия"]);
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(
		ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверкиКоличества["МатериалыИРаботы"]);
	
	#КонецОбласти

	#Область ПроверкаПолучателейИАналитик
	
	РеквизитыПроверкиАналитик = Новый Массив;
	РеквизитыПроверкиАналитик.Добавить(Новый Структура("ВыходныеИзделия", "Получатель, АналитикаРасходов"));
	РеквизитыПроверкиАналитик.Добавить(Новый Структура("ПобочныеИзделия", "Получатель, АналитикаРасходов"));
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, РеквизитыПроверкиАналитик, МассивНепроверяемыхРеквизитов, Отказ);
	
	#КонецОбласти

#Область ПроверкаНДС
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяТабличнойЧасти						= "ВыходныеИзделия";
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов			= "Получатель";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов			= "АналитикаРасходов";
	ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов		= "Получатель";
	ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
	
	ПараметрыПроверки.ИмяТабличнойЧасти = "ПобочныеИзделия";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
#КонецОбласти
	
	ЗапасыСервер.ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ЭтотОбъект, Отказ, "ВыходныеИзделия");
	ЗапасыСервер.ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ЭтотОбъект, Отказ, "ПобочныеИзделия");
	
	Если Не РаспоряжениеДляТрудозатрат Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.Исполнитель");
	КонецЕсли;
	
	ПроверитьДолиСтоимости(Отказ);
	
	Если ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции
		Или ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособРаспределенияЗатратНаВыходныеИзделия");
	КонецЕсли;
	
	МассивВсехРеквизитов = Новый Массив;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ПроизводствоБезЗаказа.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗатратыСервер.ОтразитьВыпускПродукции(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗатратыСервер.ОтразитьМатериалыИРаботыВПроизводстве(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ);
	ОперативныйУчетПроизводства.ОтразитьТрудозатратыКОформлению(ДополнительныеСвойства, Движения, Отказ);
	
	
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураДоходыРасходы(ДополнительныеСвойства, Движения, Отказ);
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ);
	
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.Проведение);
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("Проведение");
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	
	ПроизводствоБезЗаказаЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("Проведение");
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

#Область ЗаполнениеВидовЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	ПерезаполнитьВидыЗапасов = ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	#Область ВидыЗапасовВыходныеИзделия
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхВыходныеИзделия();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыВыходныеИзделия(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("ВыходныеИзделия");
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект,
																МенеджерВременныхТаблиц,
																Ложь,
																ПараметрыЗаполнения);
		
		ВидыЗапасовВыходныеИзделия.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов", "Количество");
		ЗаполнитьДополнительныеПоляВидовЗапасовВыходныеИзделия(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	#КонецОбласти

	#Область ВидыЗапасовПобочныеИзделия
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхПобочныеИзделия();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыПобочныеИзделия(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("ПобочныеИзделия");
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект, МенеджерВременныхТаблиц, Ложь, ПараметрыЗаполнения);
		
		ВидыЗапасовПобочныеИзделия.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов", "Количество");
		ЗаполнитьДополнительныеПоляВидовЗапасовПобочныеИзделия(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	#КонецОбласти

	#Область ВидыЗапасовМатериалы
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхМатериалыИРаботы();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыМатериалыИРаботы(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов("МатериалыИРаботы");
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполнения);
		
		ВидыЗапасовМатериалыИРаботы.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД", "Количество");
		
		Если Не Отказ Тогда
			ЗаполнитьДополнительныеПоляВидовЗапасовМатериалыИРаботы(МенеджерВременныхТаблиц);
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Функция ПараметрыЗаполненияВидовЗапасов(ИмяТЧ)
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Очистить();
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	
	Если ИмяТЧ = "ВыходныеИзделия"
		ИЛИ ИмяТЧ = "ПобочныеИзделия"
		ИЛИ ИмяТЧ = "МатериалыИРаботы" Тогда
		
		ПараметрыЗаполнения.ИмяТЧВидыЗапасов = "ВидыЗапасов" + ИмяТЧ;
		ПараметрыЗаполнения.ДокументДелаетИПриходИРасход = Истина;
		
		Если ИмяТЧ = "ВыходныеИзделия"
			ИЛИ ИмяТЧ = "ПобочныеИзделия" Тогда
			
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
			ПараметрыЗаполнения.ИмяТаблицыОстатков = "ПродукцияКОформлениюВыпуска";
			ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
			ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Ложь;
			ПараметрыЗаполнения.ВладелецТовараВШапке = Ложь;
			ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию =
				ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение(ИмяТЧ);
			
		Иначе
			
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
			ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
			
			ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = "ПоХозяйственнойОперации";
			
			ДействияПоХозяйственнойОперации = Новый Соответствие;
			ДействияПоХозяйственнойОперации.Вставить(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство, "Всегда");
			ДействияПоХозяйственнойОперации.Вставить(Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства, "Никогда");
			
			ПараметрыЗаполнения.ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации =
				ДействияПоХозяйственнойОперации; 
			
			ПараметрыЗаполнения.ЕстьТаблицаПриходуемыхВидовЗапасов = Истина;
			ПараметрыЗаполнения.ИмяТаблицыПриходуемыхВидовЗапасов  = "ВТПриходуемыеВидыЗапасовИзделия";
			
		КонецЕсли;
		
	ИначеЕсли ИмяТЧ = "Проведение" Тогда
		
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.МатериалДавальца);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
		ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска = Истина;
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'Неизвестное имя табличной части видов запасов: ""%ИмяТЧ%""'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяТЧ%", ИмяТЧ);
		Возврат ТекстИсключения;
	
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовВыходныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель					КАК Получатель,
	|	ТаблицаТоваров.Спецификация					КАК Спецификация,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.ПередатьДавальцу				КАК ПередатьДавальцу,
	|	ТаблицаТоваров.КодСтроки					КАК КодСтроки,
	|	СУММА(ТаблицаТоваров.ДоляСтоимости)			КАК ДоляСтоимости,
	|	СУММА(ТаблицаТоваров.Количество)			КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.Спецификация,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.ПередатьДавальцу,
	|	ТаблицаТоваров.КодСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НаправлениеВыпуска,
	|	Получатель,
	|	Спецификация,
	|	Подразделение,
	|	АналитикаРасходов,
	|	АналитикаАктивовПассивов,
	|	ИдентификаторСтроки,
	|	НомерГруппыЗатрат,
	|	ПередатьДавальцу,
	|	ТаблицаТоваров.КодСтроки,
	|	Количество УБЫВ";
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		ДоляСтоимостиТоваров = ВыборкаТовары.ДоляСтоимости;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовВыходныеИзделия.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовВыходныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.НаправлениеВыпуска			= ВыборкаТовары.НаправлениеВыпуска;
			НоваяСтрока.Получатель					= ВыборкаТовары.Получатель;
			НоваяСтрока.Спецификация				= ВыборкаТовары.Спецификация;
			НоваяСтрока.Подразделение				= ВыборкаТовары.Подразделение;
			НоваяСтрока.АналитикаРасходов			= ВыборкаТовары.АналитикаРасходов;
			НоваяСтрока.АналитикаАктивовПассивов	= ВыборкаТовары.АналитикаАктивовПассивов;
			НоваяСтрока.ИдентификаторСтроки			= ВыборкаТовары.ИдентификаторСтроки;
			НоваяСтрока.ПередатьДавальцу			= ВыборкаТовары.ПередатьДавальцу;
			НоваяСтрока.КодСтроки					= ВыборкаТовары.КодСтроки;
			НоваяСтрока.НомерГруппыЗатрат			= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество					= Количество;
			НоваяСтрока.ДоляСтоимости				= Количество * ДоляСтоимостиТоваров / КоличествоТоваров;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров		= КоличествоТоваров - НоваяСтрока.Количество;
			ДоляСтоимостиТоваров	= ДоляСтоимостиТоваров - НоваяСтрока.ДоляСтоимости;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасовВыходныеИзделия.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовВыходныеИзделия.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовПобочныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение				КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель					КАК Получатель,
	|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.ПередатьДавальцу				КАК ПередатьДавальцу,
	|	СУММА(ТаблицаТоваров.Количество)			КАК Количество,
	|	СУММА(ТаблицаТоваров.Сумма)					КАК Сумма
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.ПередатьДавальцу,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Подразделение,
	|	НаправлениеВыпуска,
	|	ПодразделениеПолучатель,
	|	Получатель,
	|	СтатьяКалькуляции,
	|	АналитикаРасходов,
	|	АналитикаАктивовПассивов,
	|	ИдентификаторСтроки,
	|	НомерГруппыЗатрат,
	|	ПередатьДавальцу,
	|	Количество УБЫВ";
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		СуммаТоваров = ВыборкаТовары.Сумма;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовПобочныеИзделия.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовПобочныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Подразделение				= ВыборкаТовары.Подразделение;
			НоваяСтрока.НаправлениеВыпуска			= ВыборкаТовары.НаправлениеВыпуска;
			НоваяСтрока.ПодразделениеПолучатель		= ВыборкаТовары.ПодразделениеПолучатель;
			НоваяСтрока.Получатель					= ВыборкаТовары.Получатель;
			НоваяСтрока.СтатьяКалькуляции			= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.АналитикаРасходов			= ВыборкаТовары.АналитикаРасходов;
			НоваяСтрока.АналитикаАктивовПассивов	= ВыборкаТовары.АналитикаАктивовПассивов;
			НоваяСтрока.ИдентификаторСтроки			= ВыборкаТовары.ИдентификаторСтроки;
			НоваяСтрока.ПередатьДавальцу			= ВыборкаТовары.ПередатьДавальцу;
			НоваяСтрока.НомерГруппыЗатрат			= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество					= Количество;
			НоваяСтрока.Сумма						= Количество * СуммаТоваров / КоличествоТоваров;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров	= КоличествоТоваров - НоваяСтрока.Количество;
			СуммаТоваров		= СуммаТоваров - НоваяСтрока.Сумма;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасовПобочныеИзделия.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовПобочныеИзделия.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПоляВидовЗапасовМатериалыИРаботы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции					КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.Подразделение						КАК Подразделение,
	|	ТаблицаТоваров.НомерГруппыЗатрат					КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|	СУММА(ТаблицаТоваров.Количество)					КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.НомерГруппыЗатрат,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	СтатьяКалькуляции,
	|	Подразделение,
	|	НомерГруппыЗатрат,
	|	Количество УБЫВ";
	
	МассивВЗ = ВидыЗапасовМатериалыИРаботы.Выгрузить(, "ВидЗапасов").ВыгрузитьКолонку("ВидЗапасов");
	ТипыЗапасов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивВЗ, "ТипЗапасов");
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасовМатериалыИРаботы.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			
			НоваяСтрока = ВидыЗапасовМатериалыИРаботы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			Если ТипыЗапасов[СтрокаЗапасов.ВидЗапасов] = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
				НоваяСтрока.ВидЗапасовПолучателя = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Организация, , ВыборкаТовары);
			Иначе
				НоваяСтрока.ВидЗапасовПолучателя = НоваяСтрока.ВидЗапасов;
			КонецЕсли;

			НоваяСтрока.СтатьяКалькуляции	= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.Подразделение		= ВыборкаТовары.Подразделение;
			НоваяСтрока.НомерГруппыЗатрат	= ВыборкаТовары.НомерГруппыЗатрат;
			НоваяСтрока.Количество			= Количество;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасовМатериалыИРаботы.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасовМатериалыИРаботы.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, Дата, Подразделение, ВыпускПодДеятельность";

	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТаблицыВыходныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|	ТаблицаТоваров.Получатель					КАК Получатель,
		|	ТаблицаТоваров.Спецификация					КАК Спецификация,
		|	ТаблицаТоваров.Подразделение				КАК Подразделение,
		|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|	ТаблицаТоваров.ПередатьДавальцу				КАК ПередатьДавальцу,
		|	ТаблицаТоваров.КодСтроки					КАК КодСтроки,
		|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаТоваров.Получатель					КАК Получатель,
		|		ТаблицаТоваров.Спецификация					КАК Спецификация,
		|		ТаблицаТоваров.Подразделение				КАК Подразделение,
		|		ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.ПередатьДавальцу				КАК ПередатьДавальцу,
		|		ТаблицаТоваров.КодСтроки					КАК КодСтроки,
		|		ТаблицаТоваров.ДоляСтоимости				КАК ДоляСтоимости,
		|		ТаблицаТоваров.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаВидыЗапасов.Получатель					КАК Получатель,
		|		ТаблицаВидыЗапасов.Спецификация					КАК Спецификация,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.ПередатьДавальцу				КАК ПередатьДавальцу,
		|		ТаблицаВидыЗапасов.КодСтроки					КАК КодСтроки,
		|		-ТаблицаВидыЗапасов.ДоляСтоимости				КАК ДоляСтоимости,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.НаправлениеВыпуска,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.Спецификация,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.ПередатьДавальцу,
		|	ТаблицаТоваров.КодСтроки
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
		|	ИЛИ НЕ СУММА(ТаблицаТоваров.ДоляСтоимости) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеТаблицыПобочныеИзделия(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение				КАК Подразделение,
		|	ТаблицаТоваров.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|	ТаблицаТоваров.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
		|	ТаблицаТоваров.Получатель					КАК Получатель,
		|	ТаблицаТоваров.АналитикаРасходов			КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|	ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|	ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.Подразделение					КАК Подразделение,
		|		ТаблицаТоваров.НаправлениеВыпуска				КАК НаправлениеВыпуска,
		|		ТаблицаТоваров.ПодразделениеПолучатель			КАК ПодразделениеПолучатель,
		|		ТаблицаТоваров.Получатель						КАК Получатель,
		|		ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.ПередатьДавальцу					КАК ПередатьДавальцу,
		|		ТаблицаТоваров.Количество						КАК Количество,
		|		ТаблицаТоваров.Сумма							КАК Сумма
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
		|		ТаблицаВидыЗапасов.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
		|		ТаблицаВидыЗапасов.Получатель					КАК Получатель,
		|		ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.ПередатьДавальцу				КАК ПередатьДавальцу,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество,
		|		-ТаблицаВидыЗапасов.Сумма						КАК Сумма
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.НаправлениеВыпуска,
		|	ТаблицаТоваров.ПодразделениеПолучатель,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.ПередатьДавальцу
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
		|	ИЛИ НЕ СУММА(ТаблицаТоваров.Сумма) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеТаблицыМатериалыИРаботы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаТоваров.Склад						КАК Склад,
		|		ТаблицаТоваров.Подразделение				КАК Подразделение,
		|		ТаблицаТоваров.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
		|		ТаблицаВидыЗапасов.СкладОтгрузки				КАК СкладОтгрузки,
		|		ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
		|		-ТаблицаВидыЗапасов.Количество					КАК Количество
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.НомерГруппыЗатрат,
		|	ТаблицаТоваров.Склад
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ВременныеТаблицыДанныхВыходныеИзделия()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата																КАК Дата,
	|	&Организация														КАК Организация,
	|	НЕОПРЕДЕЛЕНО														КАК Партнер,
	|	НЕОПРЕДЕЛЕНО														КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)			КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)							КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК ВыпускПодДеятельность,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)		КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение														КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)						КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)					КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)							КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Получатель												КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Спецификация												КАК Спецификация,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов									КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.ПередатьДавальцу											КАК ПередатьДавальцу,
	|	ТаблицаТоваров.КодСтроки												КАК КодСтроки,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.ДоляСтоимости											КАК ДоляСтоимости,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Склад													КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Спецификация												КАК Спецификация,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов									КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.ПередатьДавальцу											КАК ПередатьДавальцу,
	|	ТаблицаТоваров.КодСтроки												КАК КодСтроки,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.ДоляСтоимости											КАК ДоляСтоимости,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска				КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.Спецификация						КАК Спецификация,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ПередатьДавальцу					КАК ПередатьДавальцу,
	|	ТаблицаВидыЗапасов.КодСтроки						КАК КодСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.ДоляСтоимости					КАК ДоляСтоимости,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.Спецификация					КАК Спецификация,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ПередатьДавальцу				КАК ПередатьДавальцу,
	|	ТаблицаВидыЗапасов.КодСтроки					КАК КодСтроки,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.ДоляСтоимости				КАК ДоляСтоимости,
	|	Аналитика.МестоХранения							КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			ВыходныеИзделия);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовВыходныеИзделия);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременныеТаблицыДанныхПобочныеИзделия()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация														КАК Организация,
	|	НЕОПРЕДЕЛЕНО														КАК Партнер,
	|	НЕОПРЕДЕЛЕНО														КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)			КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)							КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК ВыпускПодДеятельность,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)		КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение														КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)						КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)					КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)							КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Получатель												КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель									КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов									КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.ПередатьДавальцу											КАК ПередатьДавальцу,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ТаблицаТоваров.Склад													КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.НаправлениеВыпуска										КАК НаправлениеВыпуска,
	|	ТаблицаТоваров.ПодразделениеПолучатель									КАК ПодразделениеПолучатель,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.НомерГруппыЗатрат										КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.АналитикаРасходов										КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов									КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки										КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.ПередатьДавальцу											КАК ПередатьДавальцу,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ТаблицаТоваров.Сумма													КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска				КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.ПодразделениеПолучатель			КАК ПодразделениеПолучатель,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат				КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ПередатьДавальцу					КАК ПередатьДавальцу,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма							КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов					КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.Подразделение				КАК Подразделение,
	|	ТаблицаВидыЗапасов.НаправлениеВыпуска			КАК НаправлениеВыпуска,
	|	ТаблицаВидыЗапасов.ПодразделениеПолучатель		КАК ПодразделениеПолучатель,
	|	ТаблицаВидыЗапасов.Получатель					КАК Получатель,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат			КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции			КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.ПередатьДавальцу				КАК ПередатьДавальцу,
	|	Аналитика.Номенклатура							КАК Номенклатура,
	|	Аналитика.Характеристика						КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД						КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество					КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма						КАК Сумма,
	|	Аналитика.МестоХранения							КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка						КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			ПобочныеИзделия);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовПобочныеИзделия);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВременныеТаблицыДанныхМатериалыИРаботы()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата																															КАК Дата,
	|	&Организация																											КАК Организация,
	|	НЕОПРЕДЕЛЕНО																										КАК Партнер,
	|	НЕОПРЕДЕЛЕНО																										КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)	КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)											КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																														КАК ВыпускПодДеятельность,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																														КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																															КАК ЕстьСделкиВТабличнойЧасти,
	|	&Подразделение																										КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)								КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)												КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки														КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура														КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика													КАК Характеристика,
	|	ТаблицаТоваров.Назначение															КАК Назначение,
	|	ТаблицаТоваров.Серия																		КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий											КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Склад																		КАК Склад,
	|	ТаблицаТоваров.Подразделение														КАК Подразделение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции												КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.НомерГруппыЗатрат											КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Количество															КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки														КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура														КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика													КАК Характеристика,
	|	ТаблицаТоваров.Назначение															КАК Назначение,
	|	ТаблицаТоваров.Серия																		КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий											КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Склад																		КАК Склад,
	|	ТаблицаТоваров.Подразделение														КАК Подразделение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтатьяКалькуляции												КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.НомерГруппыЗатрат											КАК НомерГруппыЗатрат,
	|	ТаблицаТоваров.Количество															КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)						КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)	КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)			КАК СтавкаНДС,
	|	0																												КАК СуммаСНДС,
	|	0																												КАК СуммаНДС,
	|	0																												КАК СуммаВознаграждения,
	|	0																												КАК СуммаНДСВознаграждения,
	|	ИСТИНА																								КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)				КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|
	|ГДЕ
	|	НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции									КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.Подразделение											КАК Подразделение,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат									КАК НомерГруппыЗатрат,
	|	ТаблицаВидыЗапасов.ВидЗапасов													КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД													КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество													КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ																										КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки									КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции						КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.Подразделение								КАК Подразделение,
	|	ТаблицаВидыЗапасов.НомерГруппыЗатрат						КАК НомерГруппыЗатрат,
	|	Аналитика.Номенклатура														КАК Номенклатура,
	|	Аналитика.Характеристика													КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов										КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД										КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество										КАК Количество,
	|	Аналитика.МестоХранения													КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Сделка												КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную	КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов										КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД										КАК НомерГТД,
	|	ВТВидыЗапасовИзделия.Количество										КАК Количество
	|ПОМЕСТИТЬ ВидыЗапасовВыходныеИзделия
	|ИЗ
	|	&ВидыЗапасовВыходныеИзделия КАК ВТВидыЗапасовИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов										КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД										КАК НомерГТД,
	|	ВТВидыЗапасовИзделия.Количество										КАК Количество
	|ПОМЕСТИТЬ ВидыЗапасовПобочныеИзделия
	|ИЗ
	|	&ВидыЗапасовПобочныеИзделия КАК ВТВидыЗапасовИзделия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)											КАК Период,
	|	&Организация																				КАК Организация,
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов										КАК ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД										КАК НомерГТД,
	|	СУММА(ВТВидыЗапасовИзделия.Количество)					КАК Количество
	|ПОМЕСТИТЬ ВТПриходуемыеВидыЗапасовИзделия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ВТВидыЗапасовИзделия.ВидЗапасов										КАК ВидЗапасов,
	|		ВТВидыЗапасовИзделия.НомерГТД										КАК НомерГТД,
	|		ВТВидыЗапасовИзделия.Количество										КАК Количество
	|	ИЗ
	|		ВидыЗапасовВыходныеИзделия КАК ВТВидыЗапасовИзделия
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|		ВТВидыЗапасовИзделия.ВидЗапасов										КАК ВидЗапасов,
	|		ВТВидыЗапасовИзделия.НомерГТД										КАК НомерГТД,
	|		ВТВидыЗапасовИзделия.Количество										КАК Количество
	|	ИЗ
	|		ВидыЗапасовПобочныеИзделия КАК ВТВидыЗапасовИзделия
	|	) КАК ВТВидыЗапасовИзделия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТВидыЗапасовИзделия.АналитикаУчетаНоменклатуры,
	|	ВТВидыЗапасовИзделия.ВидЗапасов,
	|	ВТВидыЗапасовИзделия.НомерГТД
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",					Дата);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",	ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",			МатериалыИРаботы);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ВидыЗапасовМатериалыИРаботы);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	РеквизитыТЧ = "АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Количество";
	Запрос.УстановитьПараметр("ВидыЗапасовВыходныеИзделия",		ВидыЗапасовВыходныеИзделия.Выгрузить(, РеквизитыТЧ));
	Запрос.УстановитьПараметр("ВидыЗапасовПобочныеИзделия",		ВидыЗапасовПобочныеИзделия.Выгрузить(, РеквизитыТЧ));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение(ИмяТЧ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Назначение			КАК Назначение
		|ПОМЕСТИТЬ ВтТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки						КАК НомерСтроки,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	&Организация									КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СпрНазначения.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) <>
		|				ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			И НЕ ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) =
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Собственное)
		|			ТОГДА СпрНазначения.Партнер
		|		ИНАЧЕ &Организация
		|	КОНЕЦ											КАК ВладелецТовара,
		|	СпрДоговора.Контрагент							КАК Контрагент,
		|	СпрНазначения.Договор							КАК Договор,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СпрНазначения.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) <>
		|				ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			И НЕ ЕСТЬNULL(СпрНазначения.ТипНазначения, ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПустаяСсылка)) =
		|				ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Собственное)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|	КОНЕЦ											КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска) КАК ТипЗапасовРезервы
		|ИЗ
		|	ВтТаблицаТоваров КАК ТаблицаТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
		|	ПО СпрНазначения.Ссылка = ТаблицаТоваров.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК СпрДоговора
		|	ПО СпрНазначения.Договор = СпрДоговора.Ссылка";
	
	Запрос.УстановитьПараметр("Организация",    Организация);
	ПараметрТаблицаТоваров = ЭтотОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, АналитикаУчетаНоменклатуры, Назначение");
	Запрос.УстановитьПараметр("ТаблицаТоваров", ПараметрТаблицаТоваров);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

Процедура ЗаполнитьКлючиАналитики()
	
#Область ЗаполнениеКлючейАналитикиУчетаНоменклатуры

	МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета
								(Перечисления.ХозяйственныеОперации.ВыпускПродукции,
								Подразделение,
								Подразделение,
								Неопределено);
	
	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.Вставить("Назначение", "Назначение");
	ИменаПолей.Вставить("Серия", "Серия");
	ИменаПолей.Вставить("СтатусУказанияСерий", "СтатусУказанияСерий");
	
	//ВыходныеИзделия
	ПроизвольныйСклад =
	"ВЫБОР
	|	КОГДА Коллекция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ Коллекция.Получатель
	|КОНЕЦ";
	
	ИменаПолей.Вставить("Товар", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("МногооборотнаяТара", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("Работа", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ВыходныеИзделия, МестаУчета, ИменаПолей);
	
	//ПобочныеИзделия
	ПроизвольныйСклад =
	"ВЫБОР
	|	КОГДА Коллекция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ТОГДА Коллекция.Подразделение
	|	ИНАЧЕ Коллекция.Получатель
	|КОНЕЦ";
	
	ИменаПолей.Вставить("Товар", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("МногооборотнаяТара", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	ИменаПолей.Вставить("Работа", Новый Структура("ТекстПоля", ПроизвольныйСклад));
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ПобочныеИзделия, МестаУчета, ИменаПолей);
	
	//МатериалыИРаботы
	ИменаПолей.Вставить("Товар", "Склад");
	ИменаПолей.Вставить("МногооборотнаяТара", "Склад");
	ИменаПолей.Вставить("Работа", "Подразделение");
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(МатериалыИРаботы, МестаУчета, ИменаПолей);
	
#КонецОбласти
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата          = ТекущаяДатаСеанса();
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Ответственный = Пользователи.ТекущийПользователь();
	ВидЦены       = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(ВидЦены);
	ВалютаЦены    = Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены).ВалютаЦены;
	Валюта        = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(ВалютаЦены);
	ГруппировкаЗатрат = ?(ЗначениеЗаполнено(ГруппировкаЗатрат), ГруппировкаЗатрат, Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются);
	
	ПараметрыЗаполнения = Документы.ПроизводствоБезЗаказа.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВыпускПодДеятельность, ПараметрыЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполнения

Процедура ПроверитьВозможностьВыбораНазначенияДавальца(ИмяТЧ, Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти[ИмяТЧ].Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	ИсключатьЗаказыДавальца =
		НЕ (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям
			ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям
			ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ЗатратыНеУказываются);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки,
		|	ТаблицаТоваров.Назначение КАК Назначение
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО (Назначения.Ссылка = ТаблицаТоваров.Назначение)
		|ГДЕ
		|	&ИсключатьЗаказыДавальца
		|	И Назначения.ТипНазначения В (ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалы22),
		|									ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ДавальческоеМатериалыПодЭтап22))";
	
	Запрос.УстановитьПараметр("ИсключатьЗаказыДавальца", ИсключатьЗаказыДавальца);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЭтотОбъект[ИмяТЧ].Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" выбрано давальческое назначение.
							|Давальческое назначение может быть выбрано только при группировке затрат по назначениям.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Назначение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле, "Объект", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОтнесениеМатериаловДавальца(Отказ)
	
	ПредставлениеПобочныеИзделия = ЭтотОбъект.Метаданные().ТабличныеЧасти.ПобочныеИзделия.Синоним;
	ПредставлениеМатериалыИРаботы = ЭтотОбъект.Метаданные().ТабличныеЧасти.МатериалыИРаботы.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыходныеИзделия.НомерГруппыЗатрат,
		|	ВЫРАЗИТЬ(ВыходныеИзделия.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ ВыходныеИзделия
		|ИЗ
		|	&ВыходныеИзделия КАК ВыходныеИзделия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПобочныеИзделия.НомерГруппыЗатрат,
		|	ПобочныеИзделия.НомерСтроки,
		|	ВЫРАЗИТЬ(ПобочныеИзделия.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ ПобочныеИзделия
		|ИЗ
		|	&ПобочныеИзделия КАК ПобочныеИзделия
		|ГДЕ
		|	НЕ ПобочныеИзделия.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МатериалыИРаботы.НомерГруппыЗатрат,
		|	МатериалыИРаботы.НомерСтроки,
		|	ВЫРАЗИТЬ(МатериалыИРаботы.Назначение КАК Справочник.Назначения) КАК Назначение
		|ПОМЕСТИТЬ МатериалыИРаботы
		|ИЗ
		|	&МатериалыИРаботы КАК МатериалыИРаботы
		|ГДЕ
		|	НЕ МатериалыИРаботы.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПобочныеИзделия.НомерГруппыЗатрат,
		|	ПобочныеИзделия.НомерСтроки,
		|	ПобочныеИзделия.Назначение,
		|	ЛОЖЬ КАК Материал
		|ИЗ
		|	ПобочныеИзделия КАК ПобочныеИзделия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделия КАК ВыходныеИзделия
		|		ПО ПобочныеИзделия.НомерГруппыЗатрат = ВыходныеИзделия.НомерГруппыЗатрат
		|ГДЕ
		|	НЕ ПобочныеИзделия.Назначение.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|	И НЕ ПобочныеИзделия.Назначение.Партнер =
		|		ЕСТЬNULL(ВыходныеИзделия.Назначение.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МатериалыИРаботы.НомерГруппыЗатрат,
		|	МатериалыИРаботы.НомерСтроки,
		|	МатериалыИРаботы.Назначение,
		|	ИСТИНА
		|ИЗ
		|	МатериалыИРаботы КАК МатериалыИРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделия КАК ВыходныеИзделия
		|		ПО МатериалыИРаботы.НомерГруппыЗатрат = ВыходныеИзделия.НомерГруппыЗатрат
		|ГДЕ
		|	НЕ МатериалыИРаботы.Назначение.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|	И НЕ МатериалыИРаботы.Назначение.Партнер =
		|		ЕСТЬNULL(ВыходныеИзделия.Назначение.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("ВыходныеИзделия", ЭтотОбъект.ВыходныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("ПобочныеИзделия", ЭтотОбъект.ПобочныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("МатериалыИРаботы", ЭтотОбъект.МатериалыИРаботы.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" неправильно указана группировка затрат.
									|Материалы давальца должны быть включены в себестоимость продукции того же давальца.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ?(Выборка.Материал,
																			ПредставлениеМатериалыИРаботы,
																			ПредставлениеПобочныеИзделия));
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(?(Выборка.Материал, "МатериалыИРаботы", "ПобочныеИзделия"),
																Выборка.НомерСтроки,
																"Назначение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле, "Объект", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьДолиСтоимости(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.ВыходныеИзделия.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерГруппыЗатрат	КАК НомерГруппыЗатрат,
		|	ТаблицаТоваров.НомерСтроки			КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура			КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика		КАК Характеристика,
		|	ТаблицаТоваров.ДоляСтоимости		КАК ДоляСтоимости
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|ГДЕ
		|	НЕ &ГруппировкаЗатрат В (ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукции),
		|							ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерГруппыЗатрат					КАК НомерГруппыЗатрат,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаТоваров.Номенклатура)	КАК КоличествоНоменклатура,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаТоваров.Характеристика)	КАК КоличествоХарактеристика
		|ПОМЕСТИТЬ ИтогиПоГруппеЗатрат
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.НомерГруппыЗатрат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИтогиПоГруппеЗатрат КАК ИтогиПоГруппеЗатрат
		|		ПО ТаблицаТоваров.НомерГруппыЗатрат = ИтогиПоГруппеЗатрат.НомерГруппыЗатрат
		|ГДЕ
		|	ТаблицаТоваров.ДоляСтоимости = 0
		|	И (ИтогиПоГруппеЗатрат.КоличествоНоменклатура > 1
		|		ИЛИ ИтогиПоГруппеЗатрат.КоличествоХарактеристика > 1)
		|";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",		ЭтотОбъект.ВыходныеИзделия.Выгрузить());
	Запрос.УстановитьПараметр("ГруппировкаЗатрат",	ЭтотОбъект.ГруппировкаЗатрат);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не указана доля стоимости.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыходныеИзделия", Выборка.НомерСтроки, "ДоляСтоимости");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле, "Объект", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеНазначения(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.ВыходныеИзделия.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Для Каждого ТекИзделие Из ВыходныеИзделия Цикл
		Если (ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоПродукцииИНазначениям
				ИЛИ ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям)
			И Не ЗначениеЗаполнено(ТекИзделие.Назначение)
			И Не ТекИзделие.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию Тогда
			
			ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не заполнено назначение.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", ТекИзделие.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыходныеИзделия", ТекИзделие.НомерСтроки, "Назначение");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьСклады(Отказ)
	
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.МатериалыИРаботы.Синоним;
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТоваров.Склад КАК Склад,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|	ПО СпрНоменклатура.Ссылка = ТаблицаТоваров.Номенклатура
		|ГДЕ
		|	ТаблицаТоваров.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	И НЕ СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЭтотОбъект.МатериалыИРаботы.Выгрузить(, "НомерСтроки, Склад, Номенклатура"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% списка ""%ПредставлениеТЧ%"" не указан склад.'");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеТЧ%", ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("МатериалыИРаботы", Выборка.НомерСтроки, "Склад");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , Поле, "Объект", Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Массив.Добавить(Движения.СвободныеОстатки);
		Массив.Добавить(Движения.ТрудозатратыНезавершенногоПроизводства);
		
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПроизводствоБезЗаказа);
		Если ПараметрыУказанияСерий.МатериалыИРаботы.ИспользоватьСерииНоменклатуры Тогда
			Массив.Добавить(Движения.ТоварыНаСкладах);
		КонецЕсли;
		
	КонецЕсли;
	
	// Приходы в регистр контролируем при перепроведении и отмене проведения
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Массив.Добавить(Движения.ТоварыОрганизаций);
	КонецЕсли;
	
	// Контроль выполняется при перепроведении, отмене проведения или если используются серии, чтобы проверить возможность
	// резервирования серий.
	Если Не ДополнительныеСвойства.ЭтоНовый
		Или ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура()) Тогда
		Массив.Добавить(Движения.ТоварыКОтгрузке);
	КонецЕсли;
	
	Массив.Добавить(Движения.ОбеспечениеЗаказов);
	Массив.Добавить(Движения.ОбеспечениеЗаказовРаботами);
	Массив.Добавить(Движения.ТрудозатратыКОформлению);
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

// ИнтеграцияГИСМ
Процедура ЗаполнитьПризнакЕстьМаркируемаяПродукция()
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаНоменклатура
		|ГДЕ
		|	ТаблицаНоменклатура.ПродукцияМаркируемаяДляГИСМ
		|	И ТаблицаНоменклатура.Ссылка В(&ВыходныеИзделия)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаНоменклатура
		|ГДЕ
		|	ТаблицаНоменклатура.ПродукцияМаркируемаяДляГИСМ
		|	И ТаблицаНоменклатура.Ссылка В(&ПобочныеИзделия)";
	
	Запрос.УстановитьПараметр("ВыходныеИзделия", ВыходныеИзделия.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ПобочныеИзделия", ПобочныеИзделия.ВыгрузитьКолонку("Номенклатура"));
	ЕстьМаркируемаяПродукцияГИСМ = НЕ Запрос.Выполнить().Пустой();
	
КонецПроцедуры
// Конец ИнтеграцияГИСМ

Функция ПараметрыСинхронизацииКлючей()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("Справочник.ПартииПроизводства", "ПометкаУдаления");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
