#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Запись книги покупок".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаписьКнигиПокупок) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЗаписьКнигиПокупок);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьОтчетностьПоНДС";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры


// Возвращает представление счета-фактуры с учетом состояния проведения.
//
// Параметры:
// 	Номер - Строка - Номер счета-фактуры.
// 	Дата - Дата - Дата счета-фактуры.
// 	Проведен - Булево - Признак проведения документа.
//
Функция ПредставлениеЗаписиКнигиПокупок(Номер, Дата, Проведен) Экспорт
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(СтрШаблон(НСтр("ru='Запись книги покупок № %1 от %2 г.'"), СокрЛП(Номер), Формат(Дата, "ДЛФ=D")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	
	Возврат СтрСоединить(МассивПодстрок, " ");
	
КонецФункции

// Функция находит записи книги покупок, созданные на основании документа.
//
// Параметры:
//	ДокументОснование - ДокументСсылка - Документ, для которого необходимо найти запись книги покупок;
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется запись книги покупок;
//	Проведен - Булево - Поиск только проведенных документов.
//
// Возвращаемое значение:
//	ТаблицаДокументов - Таблица найденных документов.
//
Функция ЗаписиКнигиПокупокПоОснованию(ДокументОснование, Организация = Неопределено, Проведен = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаписьКнигиПокупок.Ссылка КАК Ссылка,
	|	ЗаписьКнигиПокупок.Дата КАК Дата,
	|	ЗаписьКнигиПокупок.Номер КАК Номер,
	|	ЗаписьКнигиПокупок.Проведен КАК Проведен
	|
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ЗаписьКнигиПокупок.ДокументОснование = &ДокументОснование
	|	И (ЗаписьКнигиПокупок.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|";
	Запрос.УстановитьПараметр("ДокументОснование",   ДокументОснование);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПометкаУдаления = ЛОЖЬ", "Проведен");
	КонецЕсли;
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаДокументов;
	
КонецФункции

//++ НЕ УТ

// Возвращает порядок отражения в регл. учете по виду ценности НДС
//
// Параметры:
// 	ВидЦенности - ПеречислениеСсылка.ВидыЦенностей - Вид ценности НДС
// 	Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации -  Значение заполнения субконто "Контрагенты"
// 	ДокументРасчетов - ДокументСсылка -  Значение для заполнения субконто "СФПолученный".
//
// Возращаемое значение:
// 	ПорядокОтражения - Структура - Значения Счета учета, Субконто1, Субконто2, Субконто3.
//
Функция ОтражениеВРеглУчете(ВидЦенности, Контрагент, ДокументРасчетов) Экспорт
	
	СчетУчета = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	Если ВидЦенности = Перечисления.ВидыЦенностей.ОбъектыНезавершенногоСтроительства Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСприСтроительствеОсновныхСредств;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.ОС Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСприПриобретенииОсновныхСредств;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.НМА Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымНематериальнымАктивам;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.Товары Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.Возврат Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.Материалы Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.ТаможенныеПлатежи Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСуплачиваемыйТаможеннымОрганам;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.АвансыВыданные Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным;
	ИначеЕсли ВидЦенности = Перечисления.ВидыЦенностей.НалоговыйАгентАренда
			ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы
			ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги
			ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.НалоговыйАгентКомитент
			ИЛИ ВидЦенности = Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества Тогда
		СчетУчета = ПланыСчетов.Хозрасчетный.НДСУплачиваемыйНалоговымАгентом;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("СчетУчета", СчетУчета);
	Результат.Вставить("Субконто1", Контрагент);
	Результат.Вставить("Субконто2", ДокументРасчетов);
	Результат.Вставить("Субконто3", Неопределено);
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстПринятиеНДСКВычету = "
	|ВЫБРАТЬ //// Принятие НДС к вычету (Дт <68.2> :: Кт <19.х>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА Операция.ЗаписьДополнительногоЛиста
	|			ТОГДА Операция.Дата
	|		КОГДА Операция.ПредъявленСчетФактура
	|			ТОГДА Операция.ДатаПолучения
	|		ИНАЧЕ Операция.Дата
	|	КОНЕЦ КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС)
	|		ИНАЧЕ 
	|			ЕСТЬNULL(-Суммы.СуммаНДСРегл, -Строки.СуммаНДС)
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Операция.СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаНДСУпр, Строки.СуммаНДС / КурсВалютыУпрУчета.Курс)
	|		ИНАЧЕ 
	|			ЕСТЬNULL(-Суммы.СуммаНДСУпр, -Строки.СуммаНДС / КурсВалютыУпрУчета.Курс)
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	&ВалютаРеглУчета КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР
	|		КОГДА Операция.СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС)
	|		ИНАЧЕ 
	|			ЕСТЬNULL(-Суммы.СуммаНДСРегл, -Строки.СуммаНДС)
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Строки.НаправлениеДеятельности
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	Строки.СчетУчета КАК СчетКт,
	|	Строки.Субконто1 КАК СубконтоКт1,
	|	Строки.Субконто2 КАК СубконтоКт2,
	|	Строки.Субконто3 КАК СубконтоКт3,
	|
	|	Строки.СуммаНДС КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Принятие НДС к вычету"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПокупок КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПокупок.Ценности КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = Операция.Организация
	|		И ДанныеПервичныхДокументов.Документ = Строки.Субконто2
	|ГДЕ
	|	Строки.СуммаНДС <> 0
	|	И (ВЫБОР
	|		КОГДА Операция.ПредъявленСчетФактура
	|			ТОГДА Операция.ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|";
	
	Возврат ТекстПринятиеНДСКВычету;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.Валюта                 КАК Валюта,
	|	ДанныеДокумента.ДокументРасчетов       КАК ДокументРасчетов,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЗаписьДополнительногоЛиста
	|			ТОГДА ДанныеДокумента.КорректируемыйПериод
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ                                      КАК КорректируемыйПериод,
	|	ДанныеДокумента.КодВидаОперации            КАК КодВидаОперации,
	|	ДанныеДокумента.ПредъявленСчетФактура      КАК ПредъявленСчетФактура,
	|	ДанныеДокумента.ДатаСчетаФактуры           КАК ДатаСчетаФактуры,
	|	ДанныеДокумента.НомерСчетаФактуры          КАК НомерСчетаФактуры,
	|	ДанныеДокумента.ДатаПолучения              КАК ДатаПолучения,
	|	ДанныеДокумента.ПолученВЭлектронномВиде    КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.СпособКорректировкиНДС     КАК СпособКорректировкиНДС,
	|	ДанныеДокумента.КППКонтрагента             КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента             КАК ИННКонтрагента
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",                       Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта",                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактура",                     ?(ЗначениеЗаполнено(Реквизиты.ДокументРасчетов), Реквизиты.ДокументРасчетов, ДокументСсылка));
	Запрос.УстановитьПараметр("ЗаписьДополнительногоЛиста",      Реквизиты.ЗаписьДополнительногоЛиста);
	Запрос.УстановитьПараметр("КорректируемыйПериод",            Реквизиты.КорректируемыйПериод);
	Запрос.УстановитьПараметр("КодВидаОперации",                 Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ПредъявленСчетФактура",           Реквизиты.ПредъявленСчетФактура);
	Запрос.УстановитьПараметр("ДатаСчетаФактуры",                Реквизиты.ДатаСчетаФактуры);
	Запрос.УстановитьПараметр("НомерСчетаФактуры",               Реквизиты.НомерСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаПолучения",                   Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",         ?(Реквизиты.ПолученВЭлектронномВиде,2,1));
	Запрос.УстановитьПараметр("СпособКорректировкиНДС",          Реквизиты.СпособКорректировкиНДС);
	Запрос.УстановитьПараметр("ЭтоТаможеннаяДекларация",         ЗначениеЗаполнено(Реквизиты.ДокументРасчетов) 
	                                                               И ТипЗнч(Реквизиты.ДокументРасчетов) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                 Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("КППКонтрагента",                  Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ИННКонтрагента",                  Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ",    Реквизиты.РучнаяКорректировкаЖурналаСФ);
	
	ВидыЦенностиНалоговыйАгент = Новый Массив;
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	ВидыЦенностиНалоговыйАгент.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	Запрос.УстановитьПараметр("ВидыЦенностиНалоговыйАгент", ВидыЦенностиНалоговыйАгент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДокументовВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &ЭтоТаможеннаяДекларация
	|			ТОГДА 0
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаБезНДСРегл
	|		ИНАЧЕ -Суммы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА Суммы.СуммаНДСРегл
	|		ИНАЧЕ -Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	NULL КАК НомерДокументаОплаты,
	|	NULL КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|		И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&СчетФактура КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА &Период
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения
	|		ИНАЧЕ &Период
	|	КОНЕЦ КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	&КорректируемыйПериод КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.ВидЦенности
	|		КОГДА ТаблицаЦенности.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|			ТОГДА ТаблицаЦенности.Событие
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|	КОНЕЦ КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ТаблицаЦенности.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Период
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТаблицаЦенности.ВидЦенности В (&ВидыЦенностиНалоговыйАгент)
	|			ТОГДА &Ссылка
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ДокументОплаты,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокументаОплаты,
	|	&КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЗаписьКнигиПокупок.ДокументыОплаты КАК ТаблицаДокументыОплаты
	|	ПО
	|		ТаблицаЦенности.Ссылка = ТаблицаДокументыОплаты.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = &Организация
	|		И ТаблицаДокументыОплаты.ДокументОплаты = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И (ВЫБОР
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА &ДатаПолучения <> ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДокументовВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.УдалитьСчетФактураВыданныйПокупателю КАК УдалитьСчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаПолучения,
	|	&Организация,
	|	&Поставщик,
	|	ТаблицаЦенности.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры),
	|	&НомерСчетаФактуры,
	|	&ДатаСчетаФактуры,
	|	&КодВидаОперации,
	|	NULL,
	|	&ПолученВЭлектронномВиде,
	|	&Валюта,
	|	СУММА(ВЫБОР
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					И Суммы.СуммаСНДСРегл < 0
	|				ТОГДА -Суммы.СуммаСНДСРегл
	|			ИНАЧЕ Суммы.СуммаСНДСРегл
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА &СпособКорректировкиНДС = ЗНАЧЕНИЕ(Перечисление.СпособыКорректировкиНДС.Скорректировать)
	|					И Суммы.СуммаНДСРегл < 0
	|				ТОГДА -Суммы.СуммаНДСРегл
	|			ИНАЧЕ Суммы.СуммаНДСРегл
	|		КОНЕЦ),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&ДатаПолучения,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&КППКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	&ИННКонтрагента,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК ТаблицаЦенности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК Суммы
	|		ПО ТаблицаЦенности.Ссылка = Суммы.Ссылка
	|			И ТаблицаЦенности.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаЦенности.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &ПредъявленСчетФактура
	|	И &ДатаПолучения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЦенности.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДокументовВалютахУчета(Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Суммы.Дата КАК Период,
	|	Суммы.ВалютаДокумента КАК Валюта,
	|	Суммы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Суммы.СуммаБезНДС КАК СуммаБезНДС,
	|	Суммы.СтавкаНДС КАК СтавкаНДС,
	|	Суммы.СуммаНДС КАК СуммаНДС,
	|	Суммы.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	Суммы.СуммаНДСРегл КАК СуммаНДСРегл,
	|	Суммы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	Суммы.СуммаНДСУпр КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|ИЗ
	|	ВтСуммыДокументовВВалютахУчета  КАК Суммы
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Процедура ИнициализироватьВтСуммыДокументовВалютахУчета(Запрос, ТекстыЗапроса)
	
	ТекстЗапросаДанных =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Ссылка,
	|	Ценности.Ссылка.Дата КАК Дата,
	|	Ценности.Ссылка.Валюта КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаВзаиморасчетов,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.Сумма + Ценности.СуммаНДС КАК СуммаСНДС ,
	|	Ценности.СуммаНДС КАК СуммаНДС,
	|	Ценности.Сумма КАК СуммаБезНДС,
	|	0 КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок.Ценности КАК Ценности
	|ГДЕ
	|	Ценности.Ссылка = &Ссылка
	|";
	
	ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса, ТекстЗапросаДанных);
	
КонецПроцедуры

//++ НЕ УТ
Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Организация                            КАК Организация,
	|	ВЫБОР 
	|		КОГДА &ЗаписьДополнительногоЛиста
	|			ТОГДА НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|		КОГДА &ПредъявленСчетФактура
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаПолучения, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ                                   КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

#КонецОбласти

#КонецОбласти

#КонецЕсли