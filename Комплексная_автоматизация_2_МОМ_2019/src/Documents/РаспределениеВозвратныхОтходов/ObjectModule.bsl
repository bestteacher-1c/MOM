#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ПрочиеРасходы);
		
		УстановитьПривилегированныйРежим(Истина);
		
		ПараметрыАналитики = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
		ЗаполнитьЗначенияСвойств(ПараметрыАналитики, ЭтотОбъект);
		ПараметрыАналитики.Склад = Получатель;
		АналитикаУчетаНоменклатуры = РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗаполнитьВидыЗапасов(Отказ);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		ВидыЗапасов.Очистить();
	КонецЕсли;
	
	РаспределениеВозвратныхОтходовЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли; 
	
	ИнициализироватьДокумент();
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	#Область ПроверкаХарактеристик
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры")
		И Не Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаСерий

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												ПараметрыУказанияСерий,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	#КонецОбласти

	#Область ПроверкаКоличеств
	
	Если Не Количество = КоличествоПоПравилу + ПартииПроизводства.Итог("Количество") + ПрочиеРасходы.Итог("Количество") Тогда
		
		ТекстСообщения = НСтр("ru = 'Не совпадает количество выпущенных и распределенных возвратных отходов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Количество", "Объект", Отказ);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПолучателяРабот
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ТипНоменклатуры") = Перечисления.ТипыНоменклатуры.Работа
		И Подразделение = Получатель
		И Не КоличествоПоПравилу = 0 Тогда
		КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'При распределении по правилам подразделение-получатель работы не может совпадать с выпускающим подразделением.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных , "Получатель", "Объект", Отказ);
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПравил
	
	Если КоличествоПоПравилу = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоРаспределения");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	Если Не КоличествоПоПравилу = 0 И НЕ ЗначениеЗаполнено(ПравилоРаспределения) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПолучателейИАналитик
	
	РеквизитыПроверкиАналитик = Новый Массив;
	РеквизитыПроверкиАналитик.Добавить(Новый Структура("ПрочиеРасходы", "СтатьяРасходов, АналитикаРасходов"));
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, РеквизитыПроверкиАналитик, МассивНепроверяемыхРеквизитов, Отказ);
	
	#КонецОбласти
	
#Область ПроверкаНДС
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяТабличнойЧасти						= "ПрочиеРасходы";
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов			= "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов			= "АналитикаРасходов";
	ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов		= "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов	= "АналитикаАктивовПассивов";
	
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ЭтотОбъект,
		ВыпускПодДеятельность,
		ПараметрыПроверки,
		Отказ);
#КонецОбласти
	
	ЗапасыСервер.ПроверитьНаличиеИзделийВШапкеСУчетомПоГТД(ЭтотОбъект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеВозвратныхОтходов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗапасыСервер.ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗатратыСервер.ОтразитьМатериалыИРаботыВПроизводстве(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.Проведение);
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.ОтменаПроведения);
	
	РаспределениеВозвратныхОтходовЛокализация.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	РаспределениеВозвратныхОтходовЛокализация.ПриЗаписи(ЭтотОбъект, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата           = ТекущаяДатаСеанса();
	Организация    = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	ВидЦены        = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(ВидЦены);
	Валюта         = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены).ВалютаЦены);
	Ответственный  = Пользователи.ТекущийПользователь();
	
	ПараметрыЗаполнения = Документы.РаспределениеВозвратныхОтходов.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ВыпускПодДеятельность, ПараметрыЗаполнения);
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	Если Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа Тогда
		ВидыЗапасов.Очистить();
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ПерезаполнитьВидыЗапасов = ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанных();
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТаблицыИзделий(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ЭтотОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполнения);
		
		ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов", "Количество");
		ЗаполнитьДополнительныеПоляВидовЗапасов(МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДополнительныеПоляВидовЗапасов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение					КАК Подразделение,
	|	ТаблицаТоваров.Получатель						КАК Получатель,
	|	ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.СтатьяРасходов					КАК СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	СУММА(ТаблицаТоваров.Количество)				КАК Количество
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение,
	|	ТаблицаТоваров.Получатель,
	|	ТаблицаТоваров.ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции,
	|	ТаблицаТоваров.СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.АналитикаАктивовПассивов,
	|	ТаблицаТоваров.ИдентификаторСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Подразделение,
	|	Получатель,
	|	ПартияПроизводства,
	|	СтатьяКалькуляции,
	|	СтатьяРасходов,
	|	АналитикаРасходов,
	|	АналитикаАктивовПассивов,
	|	ИдентификаторСтроки,
	|	Количество УБЫВ";
	
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	ОтборТоваров = Новый Структура("АналитикаУчетаНоменклатуры");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		КоличествоТоваров = ВыборкаТовары.Количество;
		СуммаТоваров = КоличествоТоваров * Сумма / Количество;
		
		ЗаполнитьЗначенияСвойств(ОтборТоваров, ВыборкаТовары);
		
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(ОтборТоваров) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоСписания	= Мин(КоличествоТоваров, СтрокаЗапасов.Количество);
			СуммаСписания		= Мин(СуммаТоваров, КоличествоСписания * СуммаТоваров / КоличествоТоваров);
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Подразделение						= ВыборкаТовары.Подразделение;
			НоваяСтрока.Получатель							= ВыборкаТовары.Получатель;
			НоваяСтрока.СтатьяКалькуляции					= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.ПартияПроизводства					= ВыборкаТовары.ПартияПроизводства;
			НоваяСтрока.СтатьяКалькуляции					= ВыборкаТовары.СтатьяКалькуляции;
			НоваяСтрока.СтатьяРасходов						= ВыборкаТовары.СтатьяРасходов;
			НоваяСтрока.АналитикаРасходов					= ВыборкаТовары.АналитикаРасходов;
			НоваяСтрока.АналитикаАктивовПассивов			= ВыборкаТовары.АналитикаАктивовПассивов;
			НоваяСтрока.ИдентификаторСтроки					= ВыборкаТовары.ИдентификаторСтроки;
			НоваяСтрока.Количество							= КоличествоСписания;
			НоваяСтрока.Сумма								= СуммаСписания;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			КоличествоТоваров	= КоличествоТоваров - НоваяСтрока.Количество;
			СуммаТоваров		= СуммаТоваров - НоваяСтрока.Сумма;
			
			Если КоличествоТоваров = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, Дата, ВыпускПодДеятельность, Сумма";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТаблицыИзделий(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение					КАК Подразделение,
		|	ТаблицаТоваров.Получатель						КАК Получатель,
		|	ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
		|	ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|	ТаблицаТоваров.СтатьяРасходов					КАК СтатьяРасходов,
		|	ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаТоваров.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаТоваров.Подразделение					КАК Подразделение,
		|		ТаблицаТоваров.Получатель						КАК Получатель,
		|		ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
		|		ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаТоваров.СтатьяРасходов					КАК СтатьяРасходов,
		|		ТаблицаТоваров.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаТоваров.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаТоваров.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		ТаблицаТоваров.Количество						КАК Количество
		|	ИЗ
		|		ТаблицаТоваров КАК ТаблицаТоваров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
		|		ТаблицаВидыЗапасов.Получатель						КАК Получатель,
		|		ТаблицаВидыЗапасов.ПартияПроизводства				КАК ПартияПроизводства,
		|		ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
		|		ТаблицаВидыЗапасов.СтатьяРасходов					КАК СтатьяРасходов,
		|		ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
		|		ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
		|		ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
		|		-ТаблицаВидыЗапасов.Количество						КАК Количество
		|	ИЗ
		|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов) КАК ТаблицаТоваров
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.Подразделение,
		|	ТаблицаТоваров.Получатель,
		|	ТаблицаТоваров.ПартияПроизводства,
		|	ТаблицаТоваров.СтатьяКалькуляции,
		|	ТаблицаТоваров.СтатьяРасходов,
		|	ТаблицаТоваров.АналитикаРасходов,
		|	ТаблицаТоваров.АналитикаАктивовПассивов,
		|	ТаблицаТоваров.ИдентификаторСтроки
		|
		|ИМЕЮЩИЕ
		|	НЕ СУММА(ТаблицаТоваров.Количество) = 0");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ВременныеТаблицыДанных()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Дата																КАК Дата,
	|	&Организация														КАК Организация,
	|	&Сумма																КАК Сумма,
	|	НЕОПРЕДЕЛЕНО														КАК Партнер,
	|	НЕОПРЕДЕЛЕНО														КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)			КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)				КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)							КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК ВыпускПодДеятельность,
	|	ВЫБОР
	|		КОГДА &ИспользоватьРаздельныйУчетПоНалогообложению
	|			ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ																КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)	КАК ХозяйственнаяОперация,
	|	ЛОЖЬ																КАК ЕстьСделкиВТабличнойЧасти,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)				КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)						КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)					КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)							КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки + 1					КАК НомерСтроки,
	|	&Номенклатура									КАК Номенклатура,
	|	&Характеристика									КАК Характеристика,
	|	&Серия											КАК Серия,
	|	&АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение					КАК Подразделение,
	|	&Получатель										КАК Получатель,
	|	ТаблицаТоваров.ПартияПроизводства				КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	&СтатусУказанияСерий							КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.Количество						КАК Количество
	|ПОМЕСТИТЬ ТаблицаПартийПроизводства
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПрочихРасходов.НомерСтроки + &КоличествоПартий + 1	КАК НомерСтроки,
	|	&Номенклатура												КАК Номенклатура,
	|	&Характеристика												КАК Характеристика,
	|	&Серия														КАК Серия,
	|	&АналитикаУчетаНоменклатуры									КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПрочихРасходов.Подразделение							КАК Подразделение,
	|	&Получатель													КАК Получатель,
	|	&СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	ТаблицаПрочихРасходов.СтатьяРасходов						КАК СтатьяРасходов,
	|	ТаблицаПрочихРасходов.АналитикаРасходов						КАК АналитикаРасходов,
	|	ТаблицаПрочихРасходов.АналитикаАктивовПассивов				КАК АналитикаАктивовПассивов,
	|	ТаблицаПрочихРасходов.ИдентификаторСтроки					КАК ИдентификаторСтроки,
	|	ТаблицаПрочихРасходов.Количество							КАК Количество
	|ПОМЕСТИТЬ ТаблицаПрочихРасходов
	|ИЗ
	|	&ТаблицаПрочихРасходов КАК ТаблицаПрочихРасходов
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика											КАК Характеристика,
	|	ТаблицаТоваров.Серия													КАК Серия,
	|	ТаблицаТоваров.Получатель												КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Подразделение											КАК Подразделение,
	|	ТаблицаТоваров.Получатель												КАК Получатель,
	|	ТаблицаТоваров.ПартияПроизводства										КАК ПартияПроизводства,
	|	ТаблицаТоваров.СтатьяКалькуляции										КАК СтатьяКалькуляции,
	|	ТаблицаТоваров.СтатусУказанияСерий										КАК СтатусУказанияСерий,
	|	НЕОПРЕДЕЛЕНО															КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО															КАК ИдентификаторСтроки,
	|	ТаблицаТоваров.Количество												КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаПартийПроизводства КАК ТаблицаТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПрочихРасходов.НомерСтроки										КАК НомерСтроки,
	|	ТаблицаПрочихРасходов.Номенклатура										КАК Номенклатура,
	|	ТаблицаПрочихРасходов.Характеристика									КАК Характеристика,
	|	ТаблицаПрочихРасходов.Серия												КАК Серия,
	|	ТаблицаПрочихРасходов.Получатель										КАК Склад,
	|	ТаблицаПрочихРасходов.АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаПрочихРасходов.Подразделение										КАК Подразделение,
	|	ТаблицаПрочихРасходов.Получатель										КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)					КАК ПартияПроизводства,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)						КАК СтатьяКалькуляции,
	|	ТаблицаПрочихРасходов.СтатусУказанияСерий								КАК СтатусУказанияСерий,
	|	ТаблицаПрочихРасходов.СтатьяРасходов									КАК СтатьяРасходов,
	|	ТаблицаПрочихРасходов.АналитикаРасходов									КАК АналитикаРасходов,
	|	ТаблицаПрочихРасходов.АналитикаАктивовПассивов							КАК АналитикаАктивовПассивов,
	|	ТаблицаПрочихРасходов.ИдентификаторСтроки								КАК ИдентификаторСтроки,
	|	ТаблицаПрочихРасходов.Количество										КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ИЗ
	|	ТаблицаПрочихРасходов КАК ТаблицаПрочихРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0																		КАК НомерСтроки,
	|	&Номенклатура															КАК Номенклатура,
	|	&Характеристика															КАК Характеристика,
	|	&Серия																	КАК Серия,
	|	&Получатель																КАК Склад,
	|	&АналитикаУчетаНоменклатуры												КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение															КАК Подразделение,
	|	&Получатель																КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)					КАК ПартияПроизводства,
	|	&СтатьяКалькуляции														КАК СтатьяКалькуляции,
	|	&СтатусУказанияСерий													КАК СтатусУказанияСерий,
	|	НЕОПРЕДЕЛЕНО															КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО															КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО															КАК ИдентификаторСтроки,
	|	&КоличествоПоПравилу													КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)			КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)							КАК СтавкаНДС,
	|	0																		КАК СуммаСНДС,
	|	0																		КАК СуммаНДС,
	|	0																		КАК СуммаВознаграждения,
	|	0																		КАК СуммаНДСВознаграждения,
	|	ИСТИНА																	КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)								КАК НомерГТД
	|ГДЕ
	|	НЕ &КоличествоПоПравилу = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.ПартияПроизводства				КАК ПартияПроизводства,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.СтатьяРасходов					КАК СтатьяРасходов,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура	КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.МестоХранения КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.Подразделение					КАК Подразделение,
	|	ТаблицаВидыЗапасов.Получатель						КАК Получатель,
	|	ТаблицаВидыЗапасов.ПартияПроизводства				КАК ПартияПроизводства,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции				КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.СтатьяРасходов					КАК СтатьяРасходов,
	|	ТаблицаВидыЗапасов.АналитикаРасходов				КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.АналитикаАктивовПассивов			КАК АналитикаАктивовПассивов,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки				КАК ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)			КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество						КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)	КАК Сделка,
	|	ЛОЖЬ												КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата",						Дата);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("Сумма",						Сумма);
	Запрос.УстановитьПараметр("ВыпускПодДеятельность",		ВыпускПодДеятельность);
	Запрос.УстановитьПараметр("ТаблицаТоваров",				ПартииПроизводства);
	Запрос.УстановитьПараметр("КоличествоПартий",			ПартииПроизводства.Количество());
	Запрос.УстановитьПараметр("ТаблицаПрочихРасходов",		ПрочиеРасходы);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",			ВидыЗапасов);
	Запрос.УстановитьПараметр("Номенклатура",				Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",				Характеристика);
	Запрос.УстановитьПараметр("Серия",						Серия);
	Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры",	АналитикаУчетаНоменклатуры);
	Запрос.УстановитьПараметр("Подразделение",				Подразделение);
	Запрос.УстановитьПараметр("Получатель",					Получатель);
	Запрос.УстановитьПараметр("СтатьяКалькуляции",			СтатьяКалькуляции);
	Запрос.УстановитьПараметр("СтатусУказанияСерий",		СтатусУказанияСерий);
	Запрос.УстановитьПараметр("КоличествоПоПравилу",		КоличествоПоПравилу);
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению",
		РегистрыСведений.УчетнаяПолитикаОрганизаций.РаздельныйУчетТоваровПоНалогообложениюНДС(Организация, Дата));
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПараметрыЗаполненияВидовЗапасов()
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ПараметрыЗаполнения.ОтборыВидовЗапасов.НалогообложениеНДС = ВыпускПодДеятельность;
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ПродукцияДавальца);
	ПараметрыЗаполнения.ИмяТаблицыОстатков = "ПродукцияКОформлениюВыпуска";
	ПараметрыЗаполнения.ДокументДелаетИПриходИРасход = Ложь;
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина;
	ПараметрыЗаполнения.СообщатьОбОшибкахЗаполнения = Ложь;
	ПараметрыЗаполнения.ВладелецТовараВШапке = Ложь;
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию = ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение();
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	0												КАК НомерСтроки,
		|	&АналитикаУчетаНоменклатуры						КАК АналитикаУчетаНоменклатуры,
		|	&Организация									КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)	КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)		КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			ТОГДА &Партнер
		|		ИНАЧЕ &Организация
		|	КОНЕЦ											КАК ВладелецТовара,
		|	&Контрагент										КАК Контрагент,
		|	&Договор										КАК Договор,
		|	ВЫБОР
		|		КОГДА &Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|	КОНЕЦ											КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска) КАК ТипЗапасовРезервы
		|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры",	АналитикаУчетаНоменклатуры);
	
	РеквизитыДавальца = Неопределено;
	Если РеквизитыДавальца = Неопределено Тогда
		Запрос.УстановитьПараметр("Партнер",       Справочники.Партнеры.ПустаяСсылка());
		Запрос.УстановитьПараметр("Контрагент",    Справочники.Контрагенты.ПустаяСсылка());
		Запрос.УстановитьПараметр("Договор",       Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	0							КАК НомерСтроки,
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	&Организация				КАК Организация,
		|	ТаблицаТоваров.ВидЗапасов	КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			ТОГДА &Партнер
		|		ИНАЧЕ &Организация
		|	КОНЕЦ						КАК ВладелецТовара,
		|	&Контрагент					КАК Контрагент,
		|	&Договор					КАК Договор,
		|	ВЫБОР
		|		КОГДА &Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|	КОНЕЦ						КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска) КАК ТипЗапасовРезервы
		|ИЗ
		|	Документ.РаспределениеВозвратныхОтходов.ВидыЗапасов КАК ТаблицаТоваров
		|ГДЕ
		|	ТаблицаТоваров.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
		|	ТаблицаТоваров.ВидЗапасов";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	
	РеквизитыДавальца = Неопределено;
	Если РеквизитыДавальца = Неопределено Тогда
		Запрос.УстановитьПараметр("Партнер",       Справочники.Партнеры.ПустаяСсылка());
		Запрос.УстановитьПараметр("Контрагент",    Справочники.Контрагенты.ПустаяСсылка());
		Запрос.УстановитьПараметр("Договор",       Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
