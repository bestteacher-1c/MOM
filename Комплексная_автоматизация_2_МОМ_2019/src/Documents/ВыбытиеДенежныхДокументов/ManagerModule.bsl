#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Выбытие денежных документов".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыбытиеДенежныхДокументов) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ВыбытиеДенежныхДокументов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ВыбытиеДенежныхДокументов);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

#Область Заполнение

// Заполняет переданный документ
//
// Параметры:
//    Объект - ДокументОбъект - заполнямый документ
//    Ссылка - ДокументСсылка - документ-основание "Выбытие денежных документов".
//
Процедура ЗаполнитьПоОснованию(Объект, Ссылка) Экспорт
	
	// Заполним данные шапки документа
	ТекстЗапросаШапки = "";
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер") Тогда
		ТекстЗапросаШапки = ТекстЗапросаПриходныйКассовыйОрдер();
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
		ТекстЗапросаШапки = ТекстЗапросаПоступлениеБезналичныхДенежныхСредств();
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекстЗапросаШапки) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не предусмотрен ввод документа %1 на основании документа %2.'"),
			Объект.Метаданные().Синоним,
			Ссылка);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаШапки);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ввод документа %1 предусмотрен только на основании возврата денежных документов поставщику.'"),
				Объект.Метаданные().Синоним);
			ВызватьИсключение ТекстОшибки;
			
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не требуется вводить документ %1 на основании документа %2.'"),
				Объект.Метаданные().Синоним,
				Ссылка);
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	
	// Заполним табличную часть
	ДопРеквизиты = Новый Структура;
	
	ВзаиморасчетыСервер.ЗаполнитьРасшифровкуПлатежаПоВозвратуПоставщику(
		Выборка.ОбъектРасчетов,
		Выборка.Валюта,
		Выборка.СуммаВзаиморасчетов,
		Выборка.Партнер,
		Объект.РасшифровкаПлатежа);
		
	ДопРеквизиты.Вставить("СуммаДокумента", Объект.РасшифровкаПлатежа.Итог("Сумма"));
	
	ЗаполнитьЗначенияСвойств(Объект, ДопРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("АналитикаДоходов");
	МассивВсехРеквизитов.Добавить("АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("Валюта");
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДенежныеДокументы.ЦенаВозврата");
	МассивВсехРеквизитов.Добавить("ДенежныеДокументы.СуммаВозврата");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("МОЛПолучатель");
	МассивВсехРеквизитов.Добавить("Партнер");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("ПодразделениеПолучатель");
	МассивВсехРеквизитов.Добавить("Соглашение");
	МассивВсехРеквизитов.Добавить("СпособКомпенсации");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СтатьяДоходов");
	МассивВсехРеквизитов.Добавить("СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("ПодразделениеДоходовРасходов");
	МассивВсехРеквизитов.Добавить("ПорядокОплаты");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ПодразделениеПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику Тогда
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("Соглашение");
		МассивРеквизитовОперации.Добавить("Валюта");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ДенежныеДокументы.ЦенаВозврата");
		МассивРеквизитовОперации.Добавить("ДенежныеДокументы.СуммаВозврата");
		МассивРеквизитовОперации.Добавить("СтатьяДоходов");
		МассивРеквизитовОперации.Добавить("АналитикаДоходов");
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("СпособКомпенсации");
		МассивРеквизитовОперации.Добавить("ПорядокОплаты");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов Тогда
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПодразделениеДоходовРасходов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов Тогда
		МассивРеквизитовОперации.Добавить("МОЛПолучатель");
		МассивРеквизитовОперации.Добавить("ПодразделениеПолучатель");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

#Область ТекстВозвратПоставщику // (Дт 76.ХХ :: Кт 50.03)
	ТекстВозвратПоставщику = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (Дт 76.ХХ :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
#КонецОбласти

#Область ТекстВозвратПоставщикуРасходы // (Дт 2Х.ХХ :: Кт 76.ХХ)
	ТекстВозвратПоставщикуРасходы = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (расходы на разницу стоимости) (Дт 2Х.ХХ :: Кт 76.ХХ)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(-Суммы.СуммаБезНДСРегл, Строки.Сумма - Строки.СуммаВозврата)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(-Суммы.СуммаБезНДСУпр, (Строки.Сумма - Строки.СуммаВозврата) / КурсВалютыУпрУчета.Курс)) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	Операция.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СУММА(Строки.Сумма - Строки.СуммаВозврата) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику (расходы на разницу стоимости)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтрокиНаРазницу = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И Строки.Сумма - Строки.СуммаВозврата <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.СтатьяРасходов,
	|	Операция.АналитикаРасходов,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	Операция.Контрагент,
	|	Операция.Договор
	|
	|ИМЕЮЩИЕ
	|	СУММА(Строки.Сумма - Строки.СуммаВозврата) > 0
	|";
#КонецОбласти

#Область ТекстВозвратПоставщикуДоходы // (Дт 76.ХХ :: Кт 91.01)
	ТекстВозвратПоставщикуДоходы = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (доходы на разницу стоимости) (Дт 76.ХХ :: Кт 91.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВозврата - Строки.Сумма)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСУпр, (Строки.СуммаВозврата - Строки.Сумма) / КурсВалютыУпрУчета.Курс)) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	СУММА(Строки.СуммаВозврата - Строки.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Операция.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Операция.СтатьяДоходов КАК СубконтоКт1,
	|	Операция.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику (доходы на разницу стоимости)"" КАК Содержание
	|	
	|ИЗ
	|	
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтрокиНаРазницу = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И Строки.СуммаВозврата - Строки.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.Контрагент,
	|	Операция.Договор,
	|	Операция.СтатьяДоходов,
	|	Операция.АналитикаДоходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(Строки.СуммаВозврата - Строки.Сумма) > 0
	|";
#КонецОбласти

#Область ТекстВыдачаПодотчетнику // (Дт 71.01 :: Кт 50.03)
	ТекстВыдачаПодотчетнику = "
	|ВЫБРАТЬ //// Выдача подотчетному лицу (Дт 71.01 :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетДт,
	|
	|	Операция.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выдача подотчетному лицу"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|";
#КонецОбласти

#Область ТекстСписаниеНаРасходы // (Дт 2Х.ХХ :: Кт 50.03)
	ТекстСписаниеНаРасходы = "
	|ВЫБРАТЬ //// Списание ДД на расходы (Дт 2Х.ХХ :: Кт 50.03)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеДоходовРасходов КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиСтроительства.Ссылка ЕСТЬ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	Операция.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на расходы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Операция.АналитикаРасходов
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";
#КонецОбласти

#Область ТекстСписаниеНаПрочиеАктивы // (Дт <Прочие счета> :: Кт 50.03)
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы".
	ТекстСписаниеНаПрочиеАктивы = "
	|ВЫБРАТЬ ////Списание ДД на прочие активы (Дт <Прочие счета> :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеДоходовРасходов КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на прочие активы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";
#КонецОбласти

#Область ТекстСписаниеНаСтатьиАктивовПассивов // (Дт <Прочие счета> :: Кт 50.03)
	ТекстСписаниеНаСтатьиАктивовПассивов = "
	|ВЫБРАТЬ //// Списание ДД на прочие активы и пассивы (Дт <Прочие счета> :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеДоходовРасходов КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Операция.СчетУчета КАК СчетДт,
	|	Операция.Субконто1 КАК СубконтоДт1,
	|	Операция.Субконто2 КАК СубконтоДт2,
	|	Операция.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на прочие активы и пассивы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|";
#КонецОбласти

#Область ТекстПереносПретензииНаРасчеты // (Дт 60.ХХ :: Кт 76.ХХ)
	ТекстПереносПретензииНаРасчеты = "
	|ВЫБРАТЬ //// Перенос претензии на авансы (Дт 60.02 :: Кт 76.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПредоплата.ПредоплатаРегл, Расчеты.СуммаРегл) КАК Сумма,
	|	ЕСТЬNULL(РасчетыПредоплата.ПредоплатаУпр, Расчеты.СуммаУУ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(РасчетыПредоплата.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перенос претензии на авансы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Расчеты КАК Расчеты
	|	ПО
	|		Операция.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК РасчетыПредоплата
	|	ПО
	|		Расчеты.Ссылка = РасчетыПредоплата.Ссылка
	|		И Расчеты.Контрагент = РасчетыПредоплата.Контрагент
	|		И Расчеты.ЗаказПоставщику = РасчетыПредоплата.ЗаказПоставщику
	|		И Расчеты.Валюта = РасчетыПредоплата.Валюта
	|		И ДокументыКОтражению.Ссылка <> РасчетыПредоплата.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //// Перенос претензии на расчеты (Дт 60.01 :: Кт 76.02)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Расчеты.ДолгРегл КАК Сумма,
	|	Расчеты.ДолгУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Расчеты.Долг КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перенос претензии на расчеты"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		Операция.Ссылка = Расчеты.Ссылка
	|";
#КонецОбласти

#Область ТекстПеремещениеДенежныхДокументов // (Дт 50.03 :: Кт 50.03)
	ТекстПеремещениеДенежныхДокументов = "
	|ВЫБРАТЬ //// Перемещение денежных документов (Дт 50.03 :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетДт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.ДенежныйДокумент.Валюта = &ВалютаРеглУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументыВал)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача денежных документов"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов)
	|	И Операция.ПодразделениеПолучатель <> Операция.Подразделение
	|";
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстВозвратПоставщику);
	ТекстыОтражения.Добавить(ТекстВозвратПоставщикуРасходы);
	ТекстыОтражения.Добавить(ТекстВозвратПоставщикуДоходы);
	ТекстыОтражения.Добавить(ТекстВыдачаПодотчетнику);
	ТекстыОтражения.Добавить(ТекстСписаниеНаРасходы);
	ТекстыОтражения.Добавить(ТекстСписаниеНаПрочиеАктивы);
	ТекстыОтражения.Добавить(ТекстСписаниеНаСтатьиАктивовПассивов);
	ТекстыОтражения.Добавить(ТекстПереносПретензииНаРасчеты);
	ТекстыОтражения.Добавить(ТекстПеремещениеДенежныхДокументов);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	#Область РасчетыСПоставщиками
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаУпр) КАК СуммаУУ,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка <> Расчеты.ЗаказПоставщику
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)),
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область РасчетыСПоставщикамиПоДокументам
	
	ТекстЗапроса =
	"
	|
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ВЫБОР КОГДА Расчеты.Регистратор = Расчеты.ЗаказПоставщику ТОГДА NULL ИНАЧЕ Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА Расчеты.Регистратор = Расчеты.ЗаказПоставщику ТОГДА NULL ИНАЧЕ Расчеты.ЗаказПоставщику.Подразделение КОНЕЦ КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(ВЫБОР КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка <> Расчеты.ЗаказПоставщику
	|		И НЕ &НоваяАрхитектураВзаиморасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику,
	|	ВЫБОР КОГДА Расчеты.Регистратор = Расчеты.ЗаказПоставщику ТОГДА NULL ИНАЧЕ Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета КОНЕЦ,
	|	ВЫБОР КОГДА Расчеты.Регистратор = Расчеты.ЗаказПоставщику ТОГДА NULL ИНАЧЕ Расчеты.ЗаказПоставщику.Подразделение КОНЕЦ,
	|	Расчеты.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Ссылка КАК Ссылка,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.Договор КАК Договор,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов КАК ЗаказПоставщику,
	|	Расчеты.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(-Расчеты.Долг) КАК Долг,
	|	СУММА(-Расчеты.ДолгУпр) КАК ДолгУпр,
	|	СУММА(-Расчеты.ДолгРегл) КАК ДолгРегл
	|ИЗ
	|	РасчетыСПоставщикамиНоваяАрхитектура КАК Расчеты
	|ГДЕ
	|	Расчеты.Ссылка <> Расчеты.ОбъектРасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Ссылка,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.Валюта
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|	И ЗначениеРазрешено(Партнер)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

Функция ТекстЗапросаПриходныйКассовыйОрдер()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация                                                           КАК Организация,
	|	ДанныеДокумента.Партнер                                                               КАК Партнер,
	|	ДанныеДокумента.Контрагент                                                            КАК Контрагент,
	|	ДанныеДокумента.Договор                                                               КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Валюта                                                                КАК Валюта,
	|	&Ссылка                                                                               КАК ДокументОснование,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		&Ссылка
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.Контрагент.НаименованиеПолное <> """" ТОГДА
	|		ДанныеДокумента.Контрагент.НаименованиеПолное
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент.Наименование
	|	КОНЕЦ КАК ПринятоОт,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                        КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеБезналичныхДенежныхСредств()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация                                                           КАК Организация,
	|	ДанныеДокумента.Партнер                                                               КАК Партнер,
	|	ДанныеДокумента.Контрагент                                                            КАК Контрагент,
	|	ДанныеДокумента.Договор                                                               КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Валюта                                                                КАК Валюта,
	|	&Ссылка                                                                               КАК ДокументОснование,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		&Ссылка
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.Контрагент.НаименованиеПолное <> """" ТОГДА
	|		ДанныеДокумента.Контрагент.НаименованиеПолное
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент.Наименование
	|	КОНЕЦ КАК Выдать,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                        КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	СинонимТаблицыДокумента = "";
	
	ПолноеИмяДокумента = "Документ.ВыбытиеДенежныхДокументов";
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Истина);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Запрос инициализации движений
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполнение запроса и помещение результата в дополнительные свойства
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                            КАК Период,
	|	ДанныеДокумента.Ссылка                          КАК Ссылка,
	|	ДанныеДокумента.Организация                     КАК Организация,
	|	ДанныеДокумента.Валюта                          КАК Валюта,
	|	ДанныеДокумента.Партнер                         КАК Партнер,
	|	ДанныеДокумента.Партнер                         КАК Поставщик,
	|	ДанныеДокумента.Контрагент                      КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств   КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ДатаАвансовогоОтчета            КАК ДатаАвансовогоОтчета,
	|	ДанныеДокумента.Подразделение                   КАК Подразделение,
	|	ДанныеДокумента.ПодразделениеДоходовРасходов    КАК ПодразделениеДоходовРасходов,
	|	ДанныеДокумента.ПодразделениеПолучатель         КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.ПодотчетноеЛицо                 КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Соглашение                      КАК Соглашение,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов.ПринятиеКналоговомуУчету
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПринятиеРасходовКналоговомуУчету,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВариантРаспределенияРасходовРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА	
	|		ДанныеДокумента.СтатьяРасходов.ВидЦенностиНДС 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЦенностиНДСРасходов,
	|	ДанныеДокумента.АналитикаРасходов               КАК АналитикаРасходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяАктивовПассивов,
	|	ДанныеДокумента.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.СтатьяДоходов                   КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов                КАК АналитикаДоходов,
	|	ДанныеДокумента.МОЛОтправитель                  КАК МОЛОтправитель,
	|	ДанныеДокумента.МОЛПолучатель                   КАК МОЛПолучатель,
	|	ДанныеДокумента.Договор                         КАК Договор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ВернутьДенежныеСредства,
	|
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|		И ЕСТЬNULL(ДанныеДокумента.Договор.ЗаданГрафикИсполнения, ЛОЖЬ) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ГрафикИсполненияВДоговоре,
	
	|	ДанныеДокумента.СуммаДокумента          КАК СуммаДокумента,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен                КАК Проведен
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения(Реквизиты) Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	Значения = Новый Структура;
	Значения.Вставить("ИдентификаторМетаданных",                   ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ВыбытиеДенежныхДокументов"));
	Значения.Вставить("ВалютаУпр",                                 Константы.ВалютаУправленческогоУчета.Получить());
	Значения.Вставить("ВалютаРегл",                                Константы.ВалютаРегламентированногоУчета.Получить());
	Значения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",     ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Значения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей", ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	
	Если Реквизиты <> Неопределено Тогда
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта, Неопределено, Реквизиты.Период);
			
		Значения.Вставить("КоэффициентПересчетаВВалютуУпр",        Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаВВалютуРегл",       Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("НомерНаПечать",                         ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос();
	ТекстЗапроса = ТекстЗапросаВтОбъектыРасчетов(ЗапросАналитик, Новый СписокЗначений());
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|";
	
	ЗапросАналитик.Текст = ТекстЗапроса
		+ "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&Организация КАК Организация,
		|	&Контрагент КАК Контрагент,
		|	&Партнер КАК Партнер,
		|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
		|	&НаправлениеДеятельности КАК НаправлениеДеятельности
		|ИЗ
		|	ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		&Организация = Аналитика.Организация
		|		И &Контрагент = Аналитика.Контрагент
		|		И &Партнер = Аналитика.Партнер
		|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
		|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&Организация КАК Организация,
		|	&Контрагент КАК Контрагент,
		|	&Партнер КАК Партнер,
		|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
		|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ИЗ
		|	ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		&Организация = Аналитика.Организация
		|		И &Контрагент = Аналитика.Контрагент
		|		И &Партнер = Аналитика.Партнер
		|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
		|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Контрагент",              Запрос.Параметры.Контрагент);
	ЗапросАналитик.УстановитьПараметр("Партнер",                 Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Договор",                 Запрос.Параметры.Договор);
	ЗапросАналитик.УстановитьПараметр("ВернутьДенежныеСредства", Запрос.Параметры.ВернутьДенежныеСредства);
	ЗапросАналитик.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	ЗапросАналитик.УстановитьПараметр("РасчетыПоДоговорам",      Запрос.Параметры.РасчетыПоДоговорам);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВыбытиеДенежныхДокументов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаДД.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаДД.ИдентификаторСтрокиНаРазницу	КАК ИдентификаторСтрокиНаРазницу,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.Цена							КАК Цена,
	|	ТаблицаДД.ЦенаВозврата					КАК ЦенаВозврата,
	|	ТаблицаДД.Валюта						КАК Валюта,
	|
	|	ТаблицаДД.Сумма							КАК Сумма,
	|	ТаблицаДД.СуммаВозврата					КАК СуммаВозврата,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	Операция.СтатьяРасходов					КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов				КАК АналитикаРасходов,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаУпр) // Валюты совпадают
	|		ИЛИ КурсУпр.Курс ЕСТЬ NULL // Нет курса упр. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсУпр.Курс / КурсУпр.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсУпр.Кратность) / (КурсУпр.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаРегл) // Валюты совпадают
	|		ИЛИ КурсРегл.Курс ЕСТЬ NULL // Нет курса регл. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсРегл.Курс / КурсРегл.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсРегл.Кратность) / (КурсРегл.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА ТаблицаДД.СуммаВозврата = 0 // Не указана сумма возврата
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаУпр) // Валюты совпадают
	|		ИЛИ КурсУпр.Курс ЕСТЬ NULL // Нет курса упр. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсУпр.Курс / КурсУпр.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.СуммаВозврата
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.СуммаВозврата * КурсДокумента.Курс * КурсУпр.Кратность) / (КурсУпр.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаВозвратаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаДД.СуммаВозврата = 0 // Не указана сумма возврата
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаРегл) // Валюты совпадают
	|		ИЛИ КурсРегл.Курс ЕСТЬ NULL // Нет курса регл. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсРегл.Курс / КурсРегл.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.СуммаВозврата
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.СуммаВозврата * КурсДокумента.Курс * КурсРегл.Кратность) / (КурсРегл.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаВозвратаРегл
	|
	|ПОМЕСТИТЬ ВтВыбытиеДенежныхДокументов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК ТаблицаДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыбытиеДенежныхДокументов КАК Операция
	|		ПО Операция.Ссылка = ТаблицаДД.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсДокумента
	|	ПО
	|		ТаблицаДД.Валюта = КурсДокумента.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаУпр) КАК КурсУпр
	|	ПО
	|		(ИСТИНА)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаРегл) КАК КурсРегл
	|	ПО
	|		(ИСТИНА)
	|ГДЕ
	|	ТаблицаДД.Ссылка = &Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтОбъектыРасчетов";
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
		|
		|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Заказ
		|	КОГДА &ВернутьДенежныеСредства
		|		И (ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
		|		&Договор
		|	ИНАЧЕ
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|	КОНЕЦ КАК Договор,
		|	
		|	ВЫБОР 
		|		КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА &НаправлениеДеятельности
		|		ИНАЧЕ
		|			ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности
		|	КОНЕЦ КАК НаправлениеДеятельности 
		|
		|ПОМЕСТИТЬ ВтОбъектыРасчетов
		|ИЗ
		|	Документ.ВыбытиеДенежныхДокументов.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеДокументы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&МОЛОтправитель							КАК МОЛ,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств			КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеПолучатель				КАК Подразделение,
	|	&МОЛПолучатель							КАК МОЛ,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств			КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения,
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	ТаблицаДД.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов				КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО							КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК СуммаСНДС,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК СуммаБезНДСУпр,
	|
	|	СУММА(ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл) КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл) КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ТаблицаДД.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И (ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма) < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация,
	|	ТаблицаДД.СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	ТаблицаДД.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов				КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО							КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК СуммаСНДС,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК СуммаБезНДС,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК СуммаБезНДСУпр,
	|	СУММА(ТаблицаДД.СуммаРегл)				КАК СуммаСНДСРегл,
	|	СУММА(ТаблицаДД.СуммаРегл)				КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ТаблицаДД.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация,
	|	ТаблицаДД.СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&Ссылка									КАК ДокументПоступленияРасходов,
	|	ТаблицаДД.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов				КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаПартий,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                            КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр)		КАК Стоимость,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр)		КАК СтоимостьБезНДС,
	|	0															КАК НДСУпр,
	|	СУММА(ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл)	КАК СтоимостьРегл,
	|	0															КАК ПостояннаяРазница,
	|	0															КАК ВременнаяРазница,
	|	0															КАК НДСРегл,
	|	ТаблицаДД.ХозяйственнаяОперация 							КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И (ТаблицаДД.Сумма - ТаблицаДД.СуммаВозврата) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация,
	|	ТаблицаДД.СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК Подразделение,
	|	&Ссылка									КАК ДокументПоступленияРасходов,
	|	ТаблицаДД.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов				КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаПартий,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                            КАК ВидДеятельностиНДС,
	|
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК Стоимость,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК СтоимостьБезНДС,
	|	0										КАК НДСУпр,
	|	СУММА(ТаблицаДД.СуммаРегл)				КАК СтоимостьРегл,
	|	0										КАК ПостояннаяРазница,
	|	0										КАК ВременнаяРазница,
	|	0										КАК НДСРегл,
	|	ТаблицаДД.ХозяйственнаяОперация 		КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация,
	|	ТаблицаДД.СтатьяРасходов,
	|	ТаблицаДД.АналитикаРасходов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов					КАК Статья,
	|	&АналитикаАктивовПассивов				КАК Аналитика,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период													КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	&Организация											КАК Организация,
	|	&Подразделение											КАК Подразделение,
	|	&НаправлениеДеятельности								КАК НаправлениеДеятельности,
	|	&СтатьяДоходов											КАК СтатьяДоходов,
	|	&АналитикаДоходов										КАК АналитикаДоходов,
	|	СУММА(ТаблицаДД.СуммаВозвратаУпр - ТаблицаДД.СуммаУпр)	КАК Сумма,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаДД.СуммаВозвратаУпр
	|				- ТаблицаДД.СуммаУпр
	|		ИНАЧЕ 0 КОНЕЦ)										КАК СуммаУпр,
	|	СУММА(ВЫБОР
	|		КОГДА &ИспользоватьУчетПрочихДоходовРасходовРегл
	|			ТОГДА ТаблицаДД.СуммаВозвратаРегл
	|				- ТаблицаДД.СуммаРегл
	|		ИНАЧЕ 0 КОНЕЦ)										КАК СуммаРегл,
	|	ТаблицаДД.ХозяйственнаяОперация							КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И (ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ТаблицаРасшифровкаПлатежа";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка КАК Ссылка,
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА &ВернутьДенежныеСредства
	|			И (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|			ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|		ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|			&Договор
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	ИНАЧЕ
	|		РасшифровкаПлатежа.Заказ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|	РасшифровкаПлатежа.Заказ КАК Заказ,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	РасшифровкаПлатежа.Сумма КАК Сумма,
	|	ВЫБОР КОГДА НЕ &ГрафикИсполненияВДоговоре ТОГДА
	|		РасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР 
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегл 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА РасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУпр 
	|			ТОГДА РасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпр
	|	ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|	
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	УстановитьПараметрЗапросаОбъектРасчета(Запрос);
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	0                                                                               КАК НомерСтроки,
	|	&Период                                                                         КАК Период,
	|	&Период                                                                         КАК ДатаПлатежа,
	|	&Период                                                                         КАК ДатаРегистратора,
	|	&Номер                                                                          КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                          КАК ВидДвижения,
	|	Аналитика.КлючАналитики                                                         КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчета                                                                  КАК ЗаказПоставщику,
	|	&Валюта                                                                         КАК Валюта,
	|	&ХозяйственнаяОперация                                                          КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                  КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(ТаблицаРасшифровкаПлатежа.Сумма)                                          КАК Сумма,
	|	СУММА(ТаблицаРасшифровкаПлатежа.КОплате)                                        КАК КОплате,
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаРегл)                                      КАК СуммаРегл,
	|	СУММА(ТаблицаРасшифровкаПлатежа.СуммаУпр)                                       КАК СуммаУпр,
	|	&Организация                                                                    КАК Организация,
	|	&Валюта                                                                         КАК ВалютаДокумента
	|
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитика.КлючАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки                                           КАК НомерСтроки,
	|	&Период                                                                         КАК Период,
	|	&Период                                                                         КАК ДатаПлатежа,
	|	&Период                                                                         КАК ДатаРегистратора,
	|	&Номер                                                                          КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                          КАК ВидДвижения,
	|	Аналитика.КлючАналитики                                                         КАК АналитикаУчетаПоПартнерам,
	|	&ОбъектРасчета                                                                  КАК ЗаказПоставщику,
	|	&Валюта                                                                         КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)           КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                  КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Сумма                                                 КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.КОплате                                               КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл                                             КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                              КАК СуммаУпр,
	|	&Организация                                                                    КАК Организация,
	|	&Валюта                                                                         КАК ВалютаДокумента
	|
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = &ОбъектРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки                                           КАК НомерСтроки,
	|	&Период                                                                         КАК Период,
	|	&Период                                                                         КАК ДатаПлатежа,
	|	&Период                                                                         КАК ДатаРегистратора,
	|	&Номер                                                                          КАК НомерРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                          КАК ВидДвижения,
	|	Аналитика.КлючАналитики                                                         КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.Заказ                                                 КАК ЗаказПоставщику,
	|	ТаблицаРасшифровкаПлатежа.Валюта                                                КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)           КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                                  КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                                   КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов                                   КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл                                             КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр                                              КАК СуммаУпр,
	|	&Организация                                                                    КАК Организация,
	|	&Валюта                                                                         КАК ВалютаДокумента
	|	
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|	И НЕ ТаблицаРасшифровкаПлатежа.Заказ = &ОбъектРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период										КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		КАК ВидДвижения,
	|	&Организация								КАК Организация,
	|	&ПодотчетноеЛицо							КАК ПодотчетноеЛицо,
	|	&ПодразделениеПолучатель					КАК Подразделение,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	
	|	ТаблицаДД.Валюта							КАК Валюта,
	|	&Ссылка										КАК РасчетныйДокумент,
	|	&ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	ТаблицаДД.Сумма								КАК Сумма,
	|	ТаблицаДД.СуммаРегл							КАК СуммаРегл,
	|	ТаблицаДД.СуммаУпр							КАК СуммаУпр,
	|	0											КАК КОтчету,
	
	|	&СтатьяДвиженияДенежныхСредств				КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ДатаАвансовогоОтчета, ДЕНЬ)	КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		КАК ВидДвижения,
	|	&Организация								КАК Организация,
	|	&ПодотчетноеЛицо							КАК ПодотчетноеЛицо,
	|	&ПодразделениеПолучатель					КАК Подразделение,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	
	|	ТаблицаДД.Валюта							КАК Валюта,
	|	&Ссылка										КАК РасчетныйДокумент,
	|	&ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	0											КАК Сумма,
	|	0											КАК СуммаРегл,
	|	0											КАК СуммаУпр,
	|	ТаблицаДД.Сумма								КАК КОтчету,
	
	|	&СтатьяДвиженияДенежныхСредств				КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки			КАК НомерСтроки,
	|	&Период							КАК Период,
	|	ТаблицаДД.Валюта				КАК Валюта,
	|	ТаблицаДД.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаДД.Сумма					КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	0								КАК СуммаНДС,
	|	ТаблицаДД.СуммаРегл				КАК СуммаБезНДСРегл,
	|	0								КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО					КАК ТипРасчетов,
	|	ТаблицаДД.СуммаУпр				КАК СуммаБезНДСУпр,
	|	0								КАК СуммаНДСУпр
	|
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки								КАК НомерСтроки,
	|	&Период												КАК Период,
	|	ТаблицаДД.Валюта									КАК Валюта,
	|	ТаблицаДД.ИдентификаторСтрокиНаРазницу				КАК ИдентификаторСтроки,
	|	ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма			КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО										КАК СтавкаНДС,
	|	0													КАК СуммаНДС,
	|	ТаблицаДД.СуммаВозвратаРегл - ТаблицаДД.СуммаРегл	КАК СуммаБезНДСРегл,
	|	0													КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО										КАК ТипРасчетов,
	|	ТаблицаДД.СуммаВозвратаУпр - ТаблицаДД.СуммаУпр		КАК СуммаБезНДСУпр,
	|	0													КАК СуммаНДСУпр
	|
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И НЕ ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	&ПодотчетноеЛицо КАК КорДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВВалюте,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&ПодразделениеДоходовРасходов КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ВЫБОР
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяРасходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаПостоплаты,
	|	0 КАК СуммаПостоплатыРегл,
	|	0 КАК СуммаПостоплатыВВалютеПлатежа,
	|	
	|	0 КАК СуммаПредоплаты,
	|	0 КАК СуммаПредоплатыРегл,
	|	0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов,
	|	ЛОЖЬ КАК ОтложенноеПроведение 
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа,
	|
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента,
	|	ДанныеРегистра.Партнер,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.Договор,
	|	ДанныеРегистра.ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов,
	|
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов,
	|	ИСТИНА 
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Ссылка
	|	И ОтложенноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область СписаниеКредиторскойЗадолженности
	СписаниеКредиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|	
	|	&СтатьяДоходов  КАК СтатьяДоходовРасходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ДанныеДокумента.СуммаВозвратаУпр - ДанныеДокумента.СуммаУпр КАК Сумма,
	|	ДанныеДокумента.СуммаВозвратаУпр - ДанныеДокумента.СуммаУпр КАК СуммаБезНДС,
	|	ДанныеДокумента.СуммаВозвратаРегл - ДанныеДокумента.СуммаРегл КАК СуммаРегл,
	|	ДанныеДокумента.СуммаВозвратаРегл - ДанныеДокумента.СуммаРегл КАК СуммаРеглБезНДС,
	|	
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаБезНДСВВалюте,
	|	
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма > 0
	|";
#КонецОбласти

#Область СписаниеДебиторскойЗадолженности
	СписаниеДебиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|	
	|	ВЫБОР 
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяРасходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ДанныеДокумента.СуммаУпр - ДанныеДокумента.СуммаВозвратаУпр КАК Сумма,
	|	ДанныеДокумента.СуммаУпр - ДанныеДокумента.СуммаВозвратаУпр КАК СуммаБезНДС,
	|	ДанныеДокумента.СуммаРегл - ДанныеДокумента.СуммаВозвратаРегл КАК СуммаРегл,
	|	ДанныеДокумента.СуммаРегл - ДанныеДокумента.СуммаВозвратаРегл КАК СуммаРеглБезНДС,
	|	
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаВВалюте,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаБезНДСВВалюте,
	|	
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата > 0
	|
	|";
#КонецОбласти

	ТекстЗапроса = СписаниеКредиторскойЗадолженности
		+ " ОБЪЕДИНИТЬ ВСЕ " + СписаниеДебиторскойЗадолженности;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|	И &ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&МОЛОтправитель                         КАК МестоХранения,
	|	&ПодотчетноеЛицо                        КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Период                                 КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&МОЛОтправитель                         КАК МестоХранения,
	|	&Контрагент                             КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Период                                 КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&МОЛОтправитель                         КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Период                                 КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&МОЛОтправитель                         КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Период                                 КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&МОЛПолучатель                          КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Ответственный                          КАК Ответственный,
	|	ИСТИНА                                  КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                            КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	&Период                                 КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаОбъектРасчета(Запрос)
	
	Если Запрос.Параметры.Свойство("ОбъектРасчета") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Запрос.Параметры.ВернутьДенежныеСредства Тогда
		ОбъектРасчета = Запрос.Параметры.Ссылка
	ИначеЕсли Запрос.Параметры.РасчетыПоДоговорам Тогда 
		ОбъектРасчета = Запрос.Параметры.Договор;
	Иначе
		ОбъектРасчета = Запрос.Параметры.Ссылка;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОбъектРасчета", ОбъектРасчета);
	
КонецПроцедуры
#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расходный ордер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВыбытиеДенежныхДокументов";
	КомандаПечати.Идентификатор = "РасходныйОрдер";
	КомандаПечати.Представление = НСтр("ru = 'Расходный ордер'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдер") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасходныйОрдер",
			"РасходныйОрдер",
			СформироватьПечатнуюФормуРасходныйОрдер(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуРасходныйОрдер(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыбытиеДенежныхДокументов_РасходныйОрдер";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка						КАК Ссылка,
	|	Документы.Организация					КАК Организация,
	|	Документы.Подразделение					КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(Документы.Подразделение)	КАК ПредставлениеПодразделения,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ									КАК ЭтоВозврат,
	|	ВЫБОР
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Контрагент
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов) ТОГДА
	|		Документы.Подразделение
	|	ИНАЧЕ
	|		Документы.ПодотчетноеЛицо
	|	КОНЕЦ									КАК Получатель,
	|	ВЫБОР 
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Контрагент)
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Подразделение)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Документы.ПодотчетноеЛицо)
	|	КОНЕЦ									КАК ПредставлениеПолучателя,
	|	Документы.СуммаДокумента				КАК СуммаДокумента,
	|	Документы.Валюта						КАК ВалютаДокумента,
	|	Документы.Номер							КАК Номер,
	|	Документы.Дата							КАК Дата,
	|	Документы.Организация.Префикс			КАК Префикс
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.НомерСтроки						КАК НомерСтроки,
	|	ДД.Ссылка							КАК Ссылка,
	|	ДД.ДенежныйДокумент					КАК ДенежныйДокумент,
	|	ДД.ДенежныйДокумент.Наименование	КАК ДенежныйДокументПредставление,
	|	СУММА(ДД.Количество)				КАК Количество,
	|	СУММА(ДД.Сумма)						КАК Стоимость,
	|	СУММА(ДД.СуммаВозврата)				КАК Сумма,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Валюта
	|	ИНАЧЕ
	|		ДД.Валюта
	|	КОНЕЦ								КАК Валюта,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Валюта)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(ДД.Валюта)
	|	КОНЕЦ								КАК ВалютаПредставление
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыбытиеДенежныхДокументов КАК Документы
	|		ПО Документы.Ссылка = ДД.Ссылка
	|ГДЕ
	|	ДД.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.НомерСтроки,
	|	ДД.Ссылка,
	|	ДД.ДенежныйДокумент,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Валюта
	|	ИНАЧЕ
	|		ДД.Валюта
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Валюта)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(ДД.Валюта)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДенежныйДокументПредставление,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыбытиеДенежныхДокументов.ПФ_MXL_РасходныйОрдер");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Создание массива для проверки: какие из докуметов не попали в выборку
	МассивПроверки = Новый Массив;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		МассивПроверки.Добавить(Ссылка);
	КонецЦикла;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПроверки.Удалить(МассивПроверки.Найти(ДанныеПечати.Ссылка));
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыбытиеДенежныхДокументов.ПФ_MXL_РасходныйОрдер");
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Шапка = ДанныеПечати;
		
		// Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		УстановитьПараметр(ОбластьМакета,
			"ТекстЗаголовка",
			ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Расходный ордер'")));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Организация");
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		УстановитьПараметр(ОбластьМакета, "ПредставлениеОрганизации", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,"));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подразделение");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("КомуВыдано");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Итог = 0;
		ИтогСтоимость = 0;
		Валюта = Неопределено;
		Выборка = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока Выборка.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Итог = Итог + Выборка.Сумма;
			ИтогСтоимость = ИтогСтоимость + Выборка.Стоимость;
			Если Валюта = Неопределено Тогда
				Валюта = Выборка.Валюта;
			ИначеЕсли Валюта <> Выборка.Валюта Тогда
				Итог = 0; // Разные валюты
				ИтогСтоимость = 0; // Разные валюты
			КонецЕсли;
			
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
		УстановитьПараметр(ОбластьМакета, "Сумма", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Итог));
		УстановитьПараметр(ОбластьМакета, "Стоимость", ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСтоимость));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		Если Шапка.ЭтоВозврат Тогда
			ИтоговаяСтрока = НСтр("ru = 'Всего наименований'") + " " + Выборка.Количество()
				+ НСтр("ru = ', на сумму'") + " " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаДокумента, Шапка.ВалютаДокумента);
		Иначе
			ИтоговаяСтрока = НСтр("ru = 'Всего наименований'") + " " + Выборка.Количество();
			Если ИтогСтоимость <> 0 Тогда
				ИтоговаяСтрока = ИтоговаяСтрока + НСтр("ru = ', на сумму'") + " "
					+ ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСтоимость, Валюта);
			КонецЕсли;
		КонецЕсли;
		УстановитьПараметр(ОбластьМакета, "ИтоговаяСтрока", ИтоговаяСтрока);
		
		Если Шапка.ЭтоВозврат Тогда
			УстановитьПараметр(ОбластьМакета,
				"СуммаПрописью",
				ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Шапка.СуммаДокумента, Шапка.ВалютаДокумента));
		Иначе
			Если ИтогСтоимость <> 0 Тогда
				УстановитьПараметр(ОбластьМакета,
					"СуммаПрописью",
					ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогСтоимость, Валюта));
			КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Для Каждого Ссылка Из МассивПроверки Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(
				НСтр("ru = 'В %Ссылка% отсутствуют денежные документы. Печать расходного ордера не требуется.'"),
				"%Ссылка%",
				Ссылка),
			Ссылка);
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
