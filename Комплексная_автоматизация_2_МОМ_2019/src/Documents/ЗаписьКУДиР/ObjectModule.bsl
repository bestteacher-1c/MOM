#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Для каждого СтрокаДоходаРасхода Из Строки Цикл
		Если Не ЗначениеЗаполнено(СтрокаДоходаРасхода.ДатаНомер) Тогда
			СтрокаДоходаРасхода.ДатаНомер = Формат(Дата, "ДЛФ=D");
		КонецЕсли;
	КонецЦикла;

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
    ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата          = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если Не ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Организация") Тогда
		Организация = ДанныеЗаполнения.Организация;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Дата") Тогда
		Дата = ДанныеЗаполнения.Дата;
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Если ДанныеЗаполнения.Свойство("Строки") Тогда
		
		Для каждого СтрСтроки Из ДанныеЗаполнения.Строки Цикл
			
			Стр = Строки.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СтрСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Строки2") Тогда
		
		Для каждого СтрСтроки Из ДанныеЗаполнения.Строки2 Цикл
			
			Стр = Строки2.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СтрСтроки);
			Стр.Графа13_СуммаРасходовЗаКвартал = - Стр.Графа13_СуммаРасходовЗаКвартал;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ЗаписьКУДиР.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Если УчетнаяПолитика.ПрименяетсяУСН(ЭтотОбъект.Организация, ЭтотОбъект.Дата) Тогда
			
		УчетУСНСервер.ОтразитьДоходКУДиР(ДополнительныеСвойства, Движения, Отказ);
		УчетУСНСервер.ОтразитьРаздел2КУДиР(ДополнительныеСвойства, Движения, Отказ);

	КонецЕсли;
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если НЕ УчетнаяПолитика.ПрименяетсяУСН(Организация, Дата) Тогда
			
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Организация %1 не применяет упрощенную систему налогообложения'"),
			Организация);
				
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Организация", "Объект", Отказ);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли