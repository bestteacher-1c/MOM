
#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; // используется механизмом обработки изменения реквизитов ТЧ

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Автотест") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	СформироватьНадписьВалюты(ЭтаФорма);
	
	#Область СтандартныеПодсистемы
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриСозданииЧтенииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	СформироватьНадписьВалюты(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПоступлениеПредметовЛизинга", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ПартнерПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииНаСервере()
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер, Объект.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорЛизингаПриИзменении(Элемент)
	
	Если Объект.ОС.Количество() <> 0
		И ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
		И ИзменилосьНаправлениеДеятельности(НаправлениеДеятельности, Объект.ДоговорЛизинга) Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ДоговорЛизингаПриИзмененииОбработка", ЭтаФорма, Истина),
			НСтр("ru='При изменеии направления деятельности табличная часть будет очищена. Продолжить?'"),
			РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ДоговорЛизингаПриИзмененииОбработка(КодВозвратаДиалога.ОК, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорЛизингаПриИзмененииОбработка(Результат, ОчиститьТЧ=Истина) Экспорт
	
	Если Результат=КодВозвратаДиалога.ОК Тогда
		Если ЗначениеЗаполнено(Объект.ДоговорЛизинга) Тогда
			ДоговорЛизингаПриИзмененииНаСервере();
		Иначе
			ВариантУчетаИмущества = ПредопределенноеЗначение("Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом");
			Объект.ВалютаВзаиморасчетов = Неопределено;
			ВалютаДокументаКоэффициентРегл = 1;
		КонецЕсли;
		
		ДоговорЛизингаДоИзменения = Объект.ДоговорЛизинга;
		Если ОчиститьТЧ Тогда
			Объект.ОС.Очистить();
		КонецЕсли;
	Иначе
		Объект.ДоговорЛизинга = ДоговорЛизингаДоИзменения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДоговорЛизингаПриИзмененииНаСервере()
	
	Реквизиты = РеквизитыДоговораЛизинга(Объект.ДоговорЛизинга, "ВариантУчетаИмущества, ВалютаВзаиморасчетов, НаправлениеДеятельности");
	ВариантУчетаИмущества = Реквизиты.ВариантУчетаИмущества;
	Объект.ВалютаВзаиморасчетов = Реквизиты.ВалютаВзаиморасчетов;
	Объект.Валюта = Реквизиты.ВалютаВзаиморасчетов;
	НаправлениеДеятельности = Реквизиты.НаправлениеДеятельности;
	
	Если ВалютаДокументаКоэффициентРегл = 0 Тогда
		ВалютаДокументаКоэффициентРегл = 1;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаДокумента) И ЗначениеЗаполнено(Объект.Валюта) И ВалютаДокумента<>Объект.Валюта И Объект.ОС.Итог("Сумма")>0 Тогда
		ВалютаПриИзмененииСервер(ВалютаДокумента, Объект.Валюта);
	КонецЕсли;
	УстановитьДоступностьЭлементовНаСервере();
	СформироватьНадписьВалюты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаВключаетНДСПриИзменении(Элемент)
	ЦенаВключаетНДСПриИзмененииСервер(КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура НалогообложениеНДСПриИзменении(Элемент)
	НалогообложениеНДСПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура НадписьВалютыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаДокумента"         , Объект.Валюта);
	СтруктураПараметров.Вставить("ВалютаВзаиморасчетов"    , Объект.ВалютаВзаиморасчетов);
	СтруктураПараметров.Вставить("СуммаВзаиморасчетов"     , Объект.ОС.Итог("СуммаВзаиморасчетов"));
	СтруктураПараметров.Вставить("СуммаДокумента"          , Объект.ОС.Итог("СуммаСНДС"));
	СтруктураПараметров.Вставить("Курс"                    , Объект.Курс);
	СтруктураПараметров.Вставить("Кратность"               , Объект.Кратность);
	СтруктураПараметров.Вставить("ДатаДокумента"           , Объект.Дата);
	СтруктураПараметров.Вставить("ТолькоПросмотр"          , ЭтаФорма.ТолькоПросмотр);
	СтруктураПараметров.Вставить("ЭтоДокументЗакупки"      , Истина);
	
	СтруктураПараметров.Вставить("ВалютаВзаиморасчетовТолькоПросмотр", Истина);
	
	СтруктураПараметров.Вставить("ВалютаДокументаТолькоПросмотр", ВариантУчетаИмущества = ПредопределенноеЗначение("Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом"));
	
	ДополнительныеПараметры = Новый Структура;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеВзаиморасчеты", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.ВалютыИКурсДокумента", СтруктураПараметров,,,,,ОповещениеОЗакрытии);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиОсновныеСредства

&НаКлиенте
Процедура ОСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВнеоборотныеАктивыКлиентСервер.ОбработкаВыбораЭлемента(Объект.ОС, "ОсновноеСредство", ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	СуммаБУ = ТекущиеДанные.Сумма*ВалютаДокументаКоэффициентРегл;
	
КонецПроцедуры

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	Если ВариантУчетаИмущества = ПредопределенноеЗначение("Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом") Тогда
		ЭлементКоллекции = Элементы.ОС.ТекущиеДанные;
		Если ЗначениеЗаполнено(ЭлементКоллекции.ОсновноеСредство) Тогда
			ЭлементКоллекции.ИнвентарныйНомер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(ЭлементКоллекции.ОсновноеСредство, "Код");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОССуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	Действия = Новый Структура;
	ДобавитьДействияПересчетаНДС(Действия, Объект);
	
	СтрокаТЧ = СоздатьСтрокуПересчетаСумм(ТекущиеДанные);
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаТЧ, Действия, КэшированныеЗначения);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтрокаТЧ);
	
	ТекущиеДанные.СуммаНУ = (ТекущиеДанные.СуммаСНДС - ТекущиеДанные.СуммаНДС)*ВалютаДокументаКоэффициентРегл;
	
КонецПроцедуры

&НаКлиенте
Процедура ОССтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	Действия = Новый Структура;
	ДобавитьДействияПересчетаСумм(Действия, Объект);
	
	СтрокаТЧ = СоздатьСтрокуПересчетаСумм(ТекущиеДанные);
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаТЧ, Действия, КэшированныеЗначения);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтрокаТЧ);
	
	ТекущиеДанные.СуммаНУ = (ТекущиеДанные.СуммаСНДС - ТекущиеДанные.СуммаНДС)*ВалютаДокументаКоэффициентРегл;
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПослеУдаления(Элемент)
	СформироватьНадписьВалюты(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СформироватьНадписьВалюты(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыПодбора = ВнеоборотныеАктивыКлиентСервер.ПараметрыПодбора(Элементы.ОСОсновноеСредство, ЭтаФорма);
	
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаВыбора", 
					ПараметрыПодбора, Элементы.ОС,,,,, 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#Область ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы_Печать

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(ЭтаФорма, "ОССтавкаНДС", "ОССуммаНДС", "ОССуммаСНДС");
	
	//
	
	Ценообразование.УстановитьУсловноеОформлениеЦенаВключаетНДС(ЭтаФорма, "ОССуммаСНДС");
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОССуммаВзаиморасчетов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Валюта");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВалютаВзаиморасчетов");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности = ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности");
	ДоговорЛизингаДоИзменения = Объект.ДоговорЛизинга;
	
	ОбновитьЗаголовкиКолонокСумм(Элементы, Объект.Валюта, Объект.ВалютаВзаиморасчетов);
	
	Если ЗначениеЗаполнено(Объект.ДоговорЛизинга) Тогда
		ЗаполнитьЗначенияСвойств(
			ЭтаФорма,
			РеквизитыДоговораЛизинга(Объект.ДоговорЛизинга, "ВариантУчетаИмущества, НаправлениеДеятельности"));
	Иначе
		ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом;
		ВалютаВзаиморасчетов = Неопределено;
		НаправлениеДеятельности = Неопределено;
	КонецЕсли;
	
	ВалютаДокумента = Объект.Валюта;
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ВалютаДокументаКоэффициентРегл = РаботаСКурсамивалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
		Объект.Валюта,
		ВалютаРегламентированногоУчета,
		Объект.Дата);
	
	Если ВалютаДокументаКоэффициентРегл = 0 Тогда
		ВалютаДокументаКоэффициентРегл = 1;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовНаСервере()
	
	ИспользуетсяУчетВНА_2_4 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Объект.Дата);
	Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом Тогда
		
		Элементы.ОССумма.Заголовок = НСтр("ru='Залоговая стоимость'");
		Элементы.ЦенаВключаетНДС.Видимость = Ложь;
		Элементы.НалогообложениеНДС.Видимость = Ложь;
		Элементы.ЗакупкаПодДеятельность.Видимость = Ложь;
		Элементы.СчетУчета.Видимость = Истина И НЕ ИспользуетсяУчетВНА_2_4;
		Элементы.ГруппаФинансовогоУчета.Видимость = Истина И ИспользуетсяУчетВНА_2_4;
		Элементы.ОСИнвентарныйНомер.Видимость = Истина;
		Элементы.ОССтавкаНДС.Видимость = Ложь;
		Элементы.ОССуммаНДС.Видимость = Ложь;
		Элементы.ОССуммаСНДС.Видимость = Ложь;
		Элементы.ОССуммаВзаиморасчетов.Видимость = Ложь;
		Элементы.ОССтатьяРасходов.Видимость = Ложь;
		Элементы.ОССуммаНУ.Видимость = Ложь;
		
	КонецЕсли;
	
	Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе Тогда
		
		Элементы.ЦенаВключаетНДС.Видимость = Истина;
		Элементы.НалогообложениеНДС.Видимость = Истина;
		Элементы.ЗакупкаПодДеятельность.Видимость = Истина;
		Элементы.СчетУчета.Видимость = Ложь;
		Элементы.ГруппаФинансовогоУчета.Видимость = Ложь;
		Элементы.ОСИнвентарныйНомер.Видимость = Ложь;
		Элементы.ОССтавкаНДС.Видимость = Истина;
		Элементы.ОССуммаНДС.Видимость = Истина;
		Элементы.ОССуммаСНДС.Видимость = Истина;
		Элементы.ОССуммаВзаиморасчетов.Видимость = Истина;
		Элементы.ОССтатьяРасходов.Видимость = Истина;
		Элементы.ОССуммаНУ.Видимость = Истина;
	
		ОбновитьЗаголовкиКолонокСумм(Элементы, Объект.Валюта, Объект.ВалютаВзаиморасчетов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитыДоговораЛизинга(Договор, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, Реквизиты);
	
КонецФункции

&НаСервере
Процедура ВалютаПриИзмененииСервер(ВалютаСтарая, ВалютаНовая)
	
	ВалютаДокументаКоэффициентРегл = РаботаСКурсамивалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
		Объект.Валюта,
		ВалютаРегламентированногоУчета,
		?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
	
	ДатаДокумента = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
	КурсыСтарые = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаСтарая, ДатаДокумента);
	КурсыНовые  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаНовая, ДатаДокумента);
	Ценообразование.ПересчитатьСуммыТабличнойЧастиВВалюту(
		Объект.ОС, Объект.ЦенаВключаетНДС, ВалютаСтарая, ВалютаНовая, КурсыСтарые, КурсыНовые, , , "Количество");
	
	Для Каждого ТекущиеДанные Из Объект.ОС Цикл
		ТекущиеДанные.СуммаНУ = (ТекущиеДанные.СуммаСНДС - ТекущиеДанные.СуммаНДС)*ВалютаДокументаКоэффициентРегл;
		ТекущиеДанные.СуммаВзаиморасчетов = 0;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЦенаВключаетНДСПриИзмененииСервер(КэшЗначений)
	
	ДействияПересчета = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(Объект);
	Действия = Новый Структура;
	Действия.Вставить("ПересчитатьСуммуНДС", ДействияПересчета);
	Действия.Вставить("ПересчитатьСуммуСНДС", ДействияПересчета);
	Действия.Вставить("ОчиститьСуммуВзаиморасчетов");
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ОС, Действия, КэшЗначений);
	
	Для Каждого ТекущиеДанные Из Объект.ОС Цикл
		ТекущиеДанные.СуммаНУ = (ТекущиеДанные.СуммаСНДС - ТекущиеДанные.СуммаНДС)*ВалютаДокументаКоэффициентРегл;
	КонецЦикла;
	
	СформироватьНадписьВалюты(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура НалогообложениеНДСПриИзмененииСервер()
	
	ЗаполнитьСтавкуНДС();
	
	ДействияПересчета = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(Объект);
	Действия = Новый Структура();
	Действия.Вставить("ПересчитатьСуммуНДС", ДействияПересчета);
	Действия.Вставить("ПересчитатьСуммуСНДС", ДействияПересчета);
	Действия.Вставить("ОчиститьСуммуВзаиморасчетов");
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ОС, Действия, Неопределено);
	
	Для Каждого ТекущиеДанные Из Объект.ОС Цикл
		ТекущиеДанные.СуммаНУ = (ТекущиеДанные.СуммаСНДС - ТекущиеДанные.СуммаНДС)*ВалютаДокументаКоэффициентРегл;
	КонецЦикла;
	
	СформироватьНадписьВалюты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьДействияПересчетаНДС(Действия, Объект)
	
	ДействияПересчета = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	Действия.Вставить("ПересчитатьСуммуНДС", ДействияПересчета);
	Действия.Вставить("ПересчитатьСуммуСНДС", ДействияПересчета);
	Действия.Вставить("ОчиститьСуммуВзаиморасчетов");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьДействияПересчетаСумм(Действия, Объект)
	
	ДобавитьДействияПересчетаНДС(Действия, Объект);
	Действия.Вставить("ПересчитатьСумму", "Количество");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СоздатьСтрокуПересчетаСумм(ТекущаяСтрокаОС)
	
	Структура = Новый Структура("Количество, КоличествоУпаковок, Цена, Сумма, СуммаНДС, СуммаСНДС, СтавкаНДС, СуммаВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(Структура, ТекущаяСтрокаОС);
	Структура.Цена = Структура.Сумма;
	Структура.Количество = 1;
	Структура.КоличествоУпаковок = 1;
	
	Возврат Структура;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовкиКолонокСумм(Элементы, Валюта, ВалютаВзаиморасчетов)
	
	Если ЗначениеЗаполнено(Валюта) Тогда
		Элементы.ОССумма.Заголовок = СтрШаблон(НСтр("ru='Сумма (%1)'"), Валюта);
	Иначе
		Элементы.ОССумма.Заголовок = НСтр("ru='Сумма'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		Элементы.ОССуммаВзаиморасчетов.Заголовок = СтрШаблон(НСтр("ru='Сумма взаиморасчетов (%1)'"), ВалютаВзаиморасчетов);
	Иначе
		Элементы.ОССуммаВзаиморасчетов.Заголовок = НСтр("ru='Сумма взаиморасчетов'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкуНДС()
	
	Если Объект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	Иначе
		СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Объект.Дата);
	КонецЕсли;
	
	Для Каждого Строка Из Объект.ОС Цикл
		Строка.СтавкаНДС = СтавкаНДС;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменилосьНаправлениеДеятельности(НаправлениеДеятельности, ДоговорЛизингаНовый)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ДоговорЛизингаНовый", ДоговорЛизингаНовый);
	Запрос.Текст=
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыЛизинга.Ссылка
	|ИЗ
	|	Справочник.ДоговорыЛизинга КАК ДоговорыЛизинга
	|ГДЕ
	|	ДоговорыЛизинга.Ссылка = &ДоговорЛизингаНовый
	|	И ДоговорыЛизинга.НаправлениеДеятельности = &НаправлениеДеятельности";
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеВзаиморасчеты(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда
		
		ИзмениласьВалютаВзаиморасчетов = РезультатЗакрытия.ВалютаВзаиморасчетов <> Объект.ВалютаВзаиморасчетов;
		ИзмениласьВалюта = РезультатЗакрытия.Валюта <> Объект.Валюта;
		
		Объект.Валюта = РезультатЗакрытия.Валюта;
		
		Если ИзмениласьВалюта Тогда
			
			Если РезультатЗакрытия.НеобходимПересчетСуммДокумента Тогда
				ВалютаПриИзмененииСервер(ВалютаДокумента, Объект.Валюта);
				ЦенообразованиеКлиент.ОповеститьОбОкончанииПересчетаСуммВВалюту(ВалютаДокумента, Объект.Валюта);
			КонецЕсли;
			
			ОбновитьЗаголовкиКолонокСумм(Элементы, Объект.Валюта, Объект.ВалютаВзаиморасчетов);
			
			ВалютаДокумента = Объект.Валюта;
			
		КонецЕсли;
		
		Объект.ВалютаВзаиморасчетов = РезультатЗакрытия.ВалютаВзаиморасчетов;
		
		Объект.Курс					= РезультатЗакрытия.Курс;
		Объект.Кратность			= РезультатЗакрытия.Кратность;
		Объект.СуммаВзаиморасчетов	= РезультатЗакрытия.СуммаВзаиморасчетов;
		
		ПерераспредитьСуммуВзаиморасчетовИСформироватьНадпись();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерераспредитьСуммуВзаиморасчетовИСформироватьНадпись()
	
	СтруктураКурса = РаботаСКурсамиВалютУТ.СтруктураКурсаВалюты(Объект.Курс, Объект.Кратность);
	
	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьЗначенияСвойствКоллекции(
			Объект.ОС,
			0,
			"СуммаВзаиморасчетов");
	
	Ценообразование.РассчитатьСуммыВзаиморасчетовВТабличнойЧасти(Объект, "ОС", СтруктураКурса);
	ВзаиморасчетыСервер.ЗаполнитьСуммуНДСВзаиморасчетовВТабличнойЧасти(Объект, "ОС");
	
	СформироватьНадписьВалюты(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНадписьВалюты(Форма)
	
	ПараметрыНадписиВалюты = ВзаиморасчетыКлиентСервер.ПараметрыНадписиВалюты();
	
	ПараметрыНадписиВалюты.ВалютаДокумента      = Форма.ВалютаДокумента;
	ПараметрыНадписиВалюты.ВалютаВзаиморасчетов = Форма.Объект.ВалютаВзаиморасчетов;
	ПараметрыНадписиВалюты.ВалютаРеглУчета      = Форма.ВалютаРегламентированногоУчета;
	ПараметрыНадписиВалюты.СуммаДокумента       = Форма.Объект.ОС.Итог("СуммаСНДС");
	ПараметрыНадписиВалюты.СуммаВзаиморасчетов  = Форма.Объект.ОС.Итог("СуммаВзаиморасчетов");
	ПараметрыНадписиВалюты.Курс                 = Форма.Объект.Курс;
	ПараметрыНадписиВалюты.Кратность            = Форма.Объект.Кратность;
	
	Форма.НадписьВалюты = ВзаиморасчетыКлиентСервер.СформироватьНадписьВалюты(ПараметрыНадписиВалюты);
	
КонецПроцедуры

#КонецОбласти
