#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - Ссылка на документа.
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ДанныеДокумента.Курс КАК Курс,
	|	ДанныеДокумента.Кратность КАК Кратность,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		Валюта = Выборка.Валюта;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		Курс = Выборка.Курс;
		Кратность = Выборка.Кратность;
		НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		Валюта = Справочники.Валюты.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		Курс = 1;
		Кратность = 1;
		НаправлениеДеятельности = Справочники.НаправленияДеятельности.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("Дата", Дата);
	СтруктураРеквизитов.Вставить("Организация", Организация);
	СтруктураРеквизитов.Вставить("Партнер", Партнер);
	СтруктураРеквизитов.Вставить("Контрагент", Контрагент);
	СтруктураРеквизитов.Вставить("Договор", Договор);
	СтруктураРеквизитов.Вставить("ПорядокРасчетов", ПорядокРасчетов);
	СтруктураРеквизитов.Вставить("Валюта", Валюта);
	СтруктураРеквизитов.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	СтруктураРеквизитов.Вставить("СуммаДокумента", СуммаДокумента);
	СтруктураРеквизитов.Вставить("СуммаВзаиморасчетов", СуммаВзаиморасчетов);
	СтруктураРеквизитов.Вставить("Курс", Курс);
	СтруктураРеквизитов.Вставить("Кратность", Кратность);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Осуществляет вычисление текущего состояния расчетов по поступлению
//
// Параметры:
//	ДокументПоступления     - ДокументСсылка.ОтчетОператораСистемыПлатон - Документ, состояние которого необходимо вычислить
// 	Договор				    - СправочникСсылка.ДоговорыКонтрагентов - Договор с контрагентом, указанный в документе
//	СостояниеРасчетов       - ФормаКлиентскогоПриложения - Форма, в реквизиты которой будет помещено рассчитанное состояние.
//	
Процедура РассчитатьСостояние(Знач ДокументПоступления, Знач Договор, СостояниеРасчетов) Экспорт
	
	ЗаполнитьЗначенияСвойств(СостояниеРасчетов, СтруктураСостоянияРасчетов());
	
	Если ЗначениеЗаполнено(ДокументПоступления) И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСПоставщиками) Тогда
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос("
			|ВЫБРАТЬ 
			|// СУММА ОПЛАТЫ /////////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) КАК ЧИСЛО(31,2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаОплаты,
			|// ПРОЦЕНТ ОПЛАТЫ ///////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеПриход, 0) * 100 / РасчетыСПоставщикамиОстатки.КОплатеРасход КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентОплаты,
			|// СУММА ПРОСРОЧЕННОЙ ОПЛАТЫ ////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) < 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (-ЕСТЬNULL(РасчетыСПоставщикамиОстаткиНаДатуАктуальности.КОплатеОстаток, 0) КАК ЧИСЛО(31,2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПросроченнойОплаты,
			|// СУММА ПОСТУПЛЕНИЯ ////////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен  И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаПоступления,
			|// ПРОЦЕНТ ПОСТУПЛЕНИЯ //////////////////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) КАК ЧИСЛО(15, 0))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентПоступления,
			|// ДОЛГ (+ НАМ ДОЛЖНЫ, - МЫ ДОЛЖНЫ)//////////////////////////////////////////
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.Проведен И
			|		(ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0 ИЛИ
			|		ДокументПоступления.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов))
			|	ТОГДА
			|		ВЫРАЗИТЬ (ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) КАК ЧИСЛО(31,2))
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаДолга,
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) И
			|		ДокументПоступления.Проведен И
			|		ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0) > 0
			|	ТОГДА
			|		ВЫБОР
			|			КОГДА
			|				ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) > 0
			|			ТОГДА
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|			ИНАЧЕ
			|				ВЫРАЗИТЬ ((ЕСТЬNULL(-РасчетыСПоставщикамиОстатки.СуммаКонечныйОстаток, 0) * 100 / ЕСТЬNULL(РасчетыСПоставщикамиОстатки.КОплатеРасход, 0)) КАК ЧИСЛО(15, 0))
			|		КОНЕЦ
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК ПроцентДолга,
			|ВЫБОР
			|	КОГДА
			|		ДокументПоступления.Проведен И
			|		ДокументПоступления.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
			|	ТОГДА
			|		-РасчетыСПоставщикамиОстатки.КОплатеКонечныйОстаток
			|	ИНАЧЕ
			|		0
			|КОНЕЦ КАК СуммаКОплате
			|ИЗ
			|	Документ.ОтчетОператораСистемыПлатон КАК ДокументПоступления
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(,,,,ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстатки
			|ПО
			|	ИСТИНА
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.РасчетыСПоставщиками.Остатки(
			|		КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), 
			|		ЗаказПоставщику = &РасчетныйДокумент) КАК РасчетыСПоставщикамиОстаткиНаДатуАктуальности
			|ПО
			|	ИСТИНА
			|ГДЕ
			|	ДокументПоступления.Ссылка = &ДокументПоступления
			|
			|");
		
		ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПоступления, "ПорядокРасчетов");
		
		Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
		Запрос.УстановитьПараметр("РасчетныйДокумент", ?(ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов,
			Договор,
			ДокументПоступления));
		Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СостояниеРасчетов, Выборка);
		
	КонецЕсли;
	
КонецПроцедуры

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Отчет оператора системы "Платон"".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетОператораСистемыПлатон) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ОтчетОператораСистемыПлатон.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ОтчетОператораСистемыПлатон);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	Отчеты.КарточкаРасчетовСПоставщиками.ДобавитьКомандуКарточкаРасчетовСПоставщикомПоДокументам(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Партнер)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ОтчетОператораСистемыПлатон";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоДоговору", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ФормаОплаты КАК ФормаОплаты,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ДанныеДокумента.Договор
	|	ИНАЧЕ
	|		ДанныеДокумента.Дата
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|		И ЕСТЬNULL(ДанныеДокумента.Договор.ЗаданГрафикИсполнения, ЛОЖЬ) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ГрафикИсполненияВДоговоре,
	|	ДанныеДокумента.СуммаДокумента                 КАК СуммаДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента         КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента        КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Номер                          КАК Номер,
	|	ДанныеДокумента.Комментарий                    КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления                КАК ПометкаУдаления,
	|	ДанныеДокумента.Проведен                       КАК Проведен,
	|	ДанныеДокумента.Менеджер                       КАК Менеджер
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",				 ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Если ЗначениеЗаполнено(Реквизиты.Договор) Тогда
		ИнформацияПоДоговору = НСтр("ru='По договору ""%Договор%""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоДоговору = СтрЗаменить(ИнформацияПоДоговору, "%Договор%", Реквизиты.Договор);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоДоговору", ИнформацияПоДоговору);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации", Справочники.Организации.НалогообложениеНДС(Реквизиты.Организация,, Реквизиты.Период));
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ОтчетОператораСистемыПлатон"));
	ЗначенияПараметровПроведения.Вставить("ВалютаУправленческогоУчета",		 Константы.ВалютаУправленческогоУчета.Получить());
	ЗначенияПараметровПроведения.Вставить("ВалютаРегламентированногоУчета",	 Константы.ВалютаРегламентированногоУчета.Получить());
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихДоходовРасходов", 	ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	ЗначенияПараметровПроведения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей", ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	ЗначенияПараметровПроведения.Вставить("ИспользоватьУчетПрочихДоходовРасходов", 	ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	ЗначенияПараметровПроведения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей", ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	ЗначенияПараметровПроведения.Вставить("ДатаПрекращенияДействияЛьготПлатон",	ВнеоборотныеАктивыЛокализация.ДатаПрекращенияДействияЛьготПлатон());
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта,
																			 Запрос.Параметры.ВалютаВзаиморасчетов,
																			 Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	//Порядок и состав полей запроса проведения
	ШаблонПолей = "
	|ВЫБРАТЬ
	|	Шаблон.Период                    КАК Период,
	|	Шаблон.ДатаРегистратора          КАК ДатаРегистратора,
	|	Шаблон.НомерРегистратора         КАК НомерРегистратора,
	|	Шаблон.ДатаПлатежа               КАК ДатаПлатежа,
	|	Шаблон.ВидДвижения               КАК ВидДвижения,
	|	Шаблон.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Шаблон.ЗаказПоставщику           КАК ЗаказПоставщику,
	|	Шаблон.Валюта                    КАК Валюта,
	|	Шаблон.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|	Шаблон.ФормаОплаты               КАК ФормаОплаты,
	|	Шаблон.Сумма                     КАК Сумма,
	|	Шаблон.СуммаРегл                 КАК СуммаРегл,
	|	Шаблон.СуммаУпр                  КАК СуммаУпр,
	|	Шаблон.КОплате                   КАК КОплате,
	|	Шаблон.КПоступлению              КАК КПоступлению,
	|	Шаблон.Организация               КАК Организация,
	|	Шаблон.ВалютаДокумента           КАК ВалютаДокумента,
	|	Шаблон.КорОбъектРасчетов         КАК КорОбъектРасчетов,
	|	Шаблон.КорАналитикаУчетаПоПартнерам КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	#Шаблон КАК Шаблон
	|ГДЕ
	|	&ОтборШаблон";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период КАК Период,
	|	ТаблицаРасходы.Период КАК ДатаРегистратора,
	|	&Номер       КАК НомерРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК Сумма,
	|	ТаблицаРасходы.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасходы.СуммаУпр КАК СуммаУпр,
	|	0 КАК КОплате,
	|	0 КАК КПоступлению,
	|	&Организация КАК Организация,
	|	&Валюта КАК ВалютаДокумента,
	|	Неопределено  КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ДатаПлатежа, День) КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Номер       КАК НомерРегистратора,
	|	&ДатаПлатежа КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	&ВалютаВзаиморасчетов КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК КОплате,
	|	0 КАК КПоступлению,
	|	&Организация КАК Организация,
	|	&Валюта КАК ВалютаДокумента,
	|	Неопределено  КАК КорОбъектРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК КорАналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаРасходы
	|
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|	И НЕ &ГрафикИсполненияВДоговоре
	|
	|//ЗачетАвансовПоставщикуПоНакладной
	|
	|";
	
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса,"//ЗачетАвансовПоставщикуПоНакладной",
		ВзаиморасчетыСервер.ТекстПроведенияЗачетАвансовПоставщикуПоНакладной("ОтчетОператораСистемыПлатон", ШаблонПолей));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаБезНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ТаблицаТовары.СуммаСНДС = ЕСТЬNULL(Суммы.СуммаБезНДС,0)
	|	ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) ИНАЧЕ 0. КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	0. КАК СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СуммаСНДС = ЕСТЬNULL(Суммы.СуммаБезНДС, 0) ТОГДА
	|		(ВЫБОР КОГДА ЕСТЬNULL(Суммы.БазаНДСРегл, 0) = 0 ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСРегл, 0) КОНЕЦ)
	|		КОГДА &Валюта = &ВалютаРегламентированногоУчета ТОГДА
	|		ТаблицаТовары.СуммаСНДС ИНАЧЕ 0. КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.СуммаСНДС = ЕСТЬNULL(Суммы.СуммаБезНДС, 0) ТОГДА
	|		(ВЫБОР КОГДА ЕСТЬNULL(Суммы.БазаНДСУпр, 0) = 0 ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0)
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСУпр, 0) КОНЕЦ)
	|		КОГДА &Валюта = &ВалютаУправленческогоУчета ТОГДА
	|		ТаблицаТовары.СуммаСНДС ИНАЧЕ 0. КОНЕЦ КАК БазаНДСУпр,
	|
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ТаблицаТовары.СуммаСНДС = ЕСТЬNULL(Суммы.СуммаБезНДС, 0)
	|		ТОГДА ЕСТЬNULL(Суммы.СуммаБезНДСУпр, 0) ИНАЧЕ 0. КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	0. КАК СуммаНДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком) КАК ТипРасчетов,
	|	
	|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
	|
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = ТаблицаТовары.Ссылка
	|		И Суммы.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаРасходы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ТаблицаРасходы.СуммаУпр КАК Сумма,
	|	ТаблицаРасходы.СуммаБезНДСУпр КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СуммаРеглБезНДС,
	|	
	|	&Валюта КАК Валюта,
	|	ТаблицаРасходы.СуммаСНДС КАК СуммаВВалюте,
	|	ТаблицаРасходы.СуммаСНДС - ТаблицаРасходы.СуммаНДС КАК СуммаБезНДСВВалюте,
	|	
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаРасходы.СуммаВзаиморасчетов - ТаблицаРасходы.СуммаНДСВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|
	|"; 

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период			КАК Дата,
	|	&Организация	КАК Организация,
	|	&Ссылка			КАК Документ,
	|	""""			КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон.ОС КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|		И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ" + "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаРасходы.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаРасходы.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаРасходы.СуммаНДСУпр
	|		ИНАЧЕ 0 КОНЕЦ КАК НДСУпр,
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА НЕ Статья.ПринятиеКналоговомуУчету
	|			ТОГДА ТаблицаРасходы.СуммаБезНДСРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ТаблицаРасходы.СуммаНДСРегл КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходы КАК ТаблицаРасходы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|		ПО Статья.Ссылка = ТаблицаРасходы.СтатьяРасходов
	|ГДЕ
	|	Статья.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ((ТаблицаРасходы.СтатьяРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		ИЛИ (ТаблицаРасходы.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
	|		ИЛИ (ТаблицаРасходы.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|				И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)))
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Партнер                                КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Менеджер                               КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	&СуммаДокумента                         КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоДоговору                   КАК Дополнительно,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&Период    КАК ДатаОтраженияВУчете";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДокументыПоОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДокументыПоОС";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ТаблицаОС.НомерСтроки-1, 0)    КАК НомерЗаписи,
	|	&Период                                 КАК Дата,
	|	&Ссылка                                 КАК Ссылка,
	|	&Организация                            КАК Организация,
	|	&Подразделение                          КАК Подразделение,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Проведен                               КАК Проведен,
	|	ИСТИНА                                  КАК ОтражатьВРеглУчете,
	|	ИСТИНА                                  КАК ОтражатьВУпрУчете,
	|	ТаблицаОС.ОсновноеСредство              КАК ОсновноеСредство
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Расходы"" 							КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	ДанныеДокумента.Партнер					КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (
	|		  					ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), 
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  		И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  		И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ &НалогообложениеОрганизации
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)) КАК ВидЦенности,
	|	0 КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасходы";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Ссылка КАК Ссылка,
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаРасходы.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР ТаблицаРасходы.СтатьяРасходов.ВидЦенностиНДС
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОС)
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОбъектовСтроительства)
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеНМА)
	|				КОНЕЦ
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|			ТОГДА  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеПрочихАктивов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеПрочихУслуг)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	|	ТаблицаРасходы.СуммаСНДС КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСУпр,
	|						ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	0 КАК СуммаНДСУпр,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл,
	|						ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 
	|						ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)))
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСРегл, 
	|						ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)))
	|	КОНЕЦ КАК БазаНДСРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета И &Валюта <> &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.БазаНДСУпр, 
	|						ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)))
	|	КОНЕЦ КАК БазаНДСУпр,
	|
	|	0 СуммаНДСРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|		ТОГДА ТаблицаРасходы.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2)) 
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ТаблицаРасходы.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаРасходы.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втРасходы
	|ИЗ
	|	Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаРасходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаРасходы.Ссылка = Суммы.Регистратор
	|		И ТаблицаРасходы.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.БазаНДСРегл <> 0
	|		И ТаблицаРасходы.СуммаСНДС = Суммы.СуммаБезНДС
	|		И Суммы.СуммаНДС = 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаРасходы.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Расходы""
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтРегистрацияТранспортныхСредств(ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ТаблицаРасходы.Организация                КАК Организация,
	|	ТаблицаРасходы.Подразделение              КАК Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов             КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов          КАК АналитикаРасходов,
	|	ТаблицаРасходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасходы.СуммаУпр                   КАК СуммаСНДС,
	|	ТаблицаРасходы.СуммаБезНДСУпр             КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаБезНДСУпр             КАК СуммаБезНДСУпр,
	|
	|	ТаблицаРасходы.СуммаРегл                  КАК СуммаСНДСРегл,
	|	ТаблицаРасходы.СуммаБезНДСРегл            КАК СуммаБезНДСРегл,
	|	0                                         КАК ПостояннаяРазница,
	|	ВЫБОР 
	|		КОГДА НЕ РегистрацияТранспортныхСредств.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ                                     КАК ВременнаяРазница,
	|
	|	ТаблицаРасходы.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                              КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ТаблицаРасходы.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ТаблицаРасходы.Организация                КАК Организация,
	|	ТаблицаРасходы.Подразделение              КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                              КАК АналитикаРасходов,
	|	ТаблицаРасходы.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|
	|	0                                         КАК СуммаСНДС,
	|	0                                         КАК СуммаБезНДС,
	|	0                                         КАК СуммаБезНДСУпр,
	|
	|	0                                         КАК СуммаСНДСРегл,
	|	0                                         КАК СуммаБезНДСРегл,
	|	0                                         КАК ПостояннаяРазница,
	|	-ТаблицаРасходы.СуммаРегл                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеПрочихУслуг) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                              КАК АналитикаУчетаНоменклатуры
	|
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ТаблицаРасходы.ОсновноеСредство
	|ГДЕ
	|	НЕ РегистрацияТранспортныхСредств.ОсновноеСредство ЕСТЬ NULL
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапросаТаблицаВтРегистрацияТранспортныхСредств(ТекстыЗапроса);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	ТаблицаРасходы.Организация                 КАК Организация,
	|	ТаблицаРасходы.Подразделение               КАК Подразделение,
	|	&Ссылка                                    КАК ДокументПоступленияРасходов,
	|	ТаблицаРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаАктивовПассивов,
	|	ТаблицаРасходы.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	ТаблицаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаРасходы.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасходы.СуммаУпр                    КАК Стоимость,
	|	ТаблицаРасходы.СуммаБезНДСУпр              КАК СтоимостьБезНДС,
	|	ТаблицаРасходы.СуммаНДСУпр                 КАК НДСУпр,
	|	ТаблицаРасходы.СуммаБезНДСРегл             КАК СтоимостьРегл,
	|	0                                          КАК ПостояннаяРазница,
	|	ВЫБОР 
	|		КОГДА НЕ РегистрацияТранспортныхСредств.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|		ИНАЧЕ 0 
	|	КОНЕЦ                                      КАК ВременнаяРазница,
	|	ТаблицаРасходы.СуммаНДСРегл                КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ТаблицаРасходы.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасходы.Период                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	ТаблицаРасходы.Организация                 КАК Организация,
	|	ТаблицаРасходы.Подразделение               КАК Подразделение,
	|	&Ссылка                                    КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаАктивовПассивов,
	|	ТаблицаРасходы.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	ТаблицаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаРасходы.ВидДеятельностиНДС          КАК ВидДеятельностиНДС,
	|
	|	0                                          КАК Стоимость,
	|	0                                          КАК СтоимостьБезНДС,
	|	0                                          КАК НДСУпр,
	|	0                                          КАК СтоимостьРегл,
	|	0                                          КАК ПостояннаяРазница,
	|	-ТаблицаРасходы.СуммаБезНДСРегл            КАК ВременнаяРазница,
	|	0                                          КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО РегистрацияТранспортныхСредств.ОсновноеСредство = ТаблицаРасходы.ОсновноеСредство
	|ГДЕ
	|	НЕ РегистрацияТранспортныхСредств.ОсновноеСредство ЕСТЬ NULL
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтРегистрацияТранспортныхСредств(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтРегистрацияТранспортныхСредств";

	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВтРегистрацияТранспортныхСредств
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаТЧ.ОсновноеСредство
	|					ИЗ
	|						Документ.ОтчетОператораСистемыПлатон.ОС КАК ТаблицаТЧ)) КАК РегистрацияТранспортныхСредств
	|ГДЕ
	|	РегистрацияТранспортныхСредств.ВидЗаписи = ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.Регистрация)
	|	И &Период < &ДатаПрекращенияДействияЛьготПлатон";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

// Возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
#Область ТекстПоступлениеУслуг    // (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление услуг (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|			ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|					ТОГДА ОбъектыСтроительства.СпособСтроительства
	|				ИНАЧЕ 
	|					ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ) 
	|			КОНЕЦ
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР 
	|		КОГДА РегистрацияТранспортныхСредств.Ссылка ЕСТЬ NULL
	|			ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	ВЫБОР 
	|		КОГДА НЕ РегистрацияТранспортныхСредств.Ссылка ЕСТЬ NULL
	|			ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Отражение в расходах платы по системе """"Платон"""""" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|	ПО РегистрацияТранспортныхСредств.Ссылка = Строки.Ссылка
	|		И РегистрацияТранспортныхСредств.ОсновноеСредство = Строки.ОсновноеСредство
	|
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

#Область ТекстПоступлениеПрочее   // (Дт <ХХ.ХХ> :: Кт <60.1, 76> )  
	
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы".
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление на прочие активы (Дт <ХХ.ХХ> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл КАК Сумма,
	|	Суммы.СуммаБезНДСУпр + Суммы.СуммаНДСУпр КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР 
	|		КОГДА РегистрацияТранспортныхСредств.Ссылка ЕСТЬ NULL
	|			ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	ВЫБОР 
	|		КОГДА НЕ РегистрацияТранспортныхСредств.Ссылка ЕСТЬ NULL
	|			ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВРДт,
	|
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Отражение в расходах платы по системе """"Платон"""""" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|	ПО РегистрацияТранспортныхСредств.Ссылка = Строки.Ссылка
	|		И РегистрацияТранспортныхСредств.ОсновноеСредство = Строки.ОсновноеСредство
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область ТекстРасходыНаПлатон    // (Дт <97.21> :: Кт <60.1, 76, 71> )
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление услуг (Дт <97.21> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл) КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Отражение в расходах платы по системе """"Платон"""""" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втРегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|	ПО РегистрацияТранспортныхСредств.Ссылка = Строки.Ссылка
	|		И РегистрацияТранспортныхСредств.ОсновноеСредство = Строки.ОсновноеСредство
	|ГДЕ
	|	НЕ РегистрацияТранспортныхСредств.Ссылка ЕСТЬ NULL
	|	И Операция.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	СписокЗапросов = Новый Массив;
	
	#Область втРегистрацияТранспортныхСредств
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Дата,
	|	Операция.Организация КАК Организация,
	|	Строки.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втТранспортныеСредства
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон КАК Операция
	|		ПО (Операция.Ссылка = ДокументыКОтражению.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОператораСистемыПлатон.ОС КАК Строки
	|		ПО (Строки.Ссылка = ДокументыКОтражению.Ссылка)
	|ГДЕ
	|	Операция.Дата < &ДатаПрекращенияДействияЛьготПлатон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТранспортныеСредства.Ссылка КАК Ссылка,
	|	втТранспортныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	втТранспортныеСредства.Организация КАК Организация,
	|	МАКСИМУМ(РегистрацияТранспортныхСредств.Период) КАК Период
	|ПОМЕСТИТЬ втРегистрацияТранспортныхСредствПоследнее
	|ИЗ
	|	втТранспортныеСредства КАК втТранспортныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО (РегистрацияТранспортныхСредств.Организация = втТранспортныеСредства.Организация)
	|			И (РегистрацияТранспортныхСредств.ОсновноеСредство = втТранспортныеСредства.ОсновноеСредство)
	|			И (РегистрацияТранспортныхСредств.Период <= втТранспортныеСредства.Дата)
	|			И (РегистрацияТранспортныхСредств.Активность)
	|
	|СГРУППИРОВАТЬ ПО
	|	втТранспортныеСредства.Ссылка,
	|	втТранспортныеСредства.ОсновноеСредство,
	|	втТранспортныеСредства.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияТранспортныхСредствПоследнее.Ссылка КАК Ссылка,
	|	РегистрацияТранспортныхСредствПоследнее.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втРегистрацияТранспортныхСредств
	|ИЗ
	|	втРегистрацияТранспортныхСредствПоследнее КАК РегистрацияТранспортныхСредствПоследнее
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|		ПО (РегистрацияТранспортныхСредств.Организация = РегистрацияТранспортныхСредствПоследнее.Организация)
	|			И (РегистрацияТранспортныхСредств.ОсновноеСредство = РегистрацияТранспортныхСредствПоследнее.ОсновноеСредство)
	|			И (РегистрацияТранспортныхСредств.Период = РегистрацияТранспортныхСредствПоследнее.Период)
	|ГДЕ
	|	РегистрацияТранспортныхСредств.ВидЗаписи = ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.Регистрация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	СписокЗапросов.Добавить(Символы.ПС);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

#КонецОбласти

#Область Прочее

// Осуществляет инициализацию структуры состояния расчетов
Функция СтруктураСостоянияРасчетов()
	
	СтруктураСостоянияРасчетов = Новый Структура;
	СтруктураСостоянияРасчетов.Вставить("СуммаОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентПоступления", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаПросроченнойОплаты", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаДолга", 0);
	СтруктураСостоянияРасчетов.Вставить("ПроцентДолга", 0);
	СтруктураСостоянияРасчетов.Вставить("СуммаКОплате", 0);
	
	Возврат СтруктураСостоянияРасчетов
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли