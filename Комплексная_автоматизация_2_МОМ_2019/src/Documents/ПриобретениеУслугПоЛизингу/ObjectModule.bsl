#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	Для каждого Строка Из Начисления Цикл
		Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе Тогда
			Строка.Подразделение           = Неопределено;
			Строка.СтатьяРасходов          = Неопределено;
			Строка.АналитикаРасходов       = Неопределено;
			Строка.НаправлениеДеятельности = Неопределено;
		КонецЕсли;
		Если Строка.ТипНачисления <> Перечисления.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж Тогда
			Строка.ОбеспечительныйПлатеж = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Начисления, ЦенаВключаетНДС);
	
	СтруктураКурса = РаботаСКурсамиВалютУТ.СтруктураКурсаВалюты(Курс, Кратность);
	
	ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВПоступлении(ЭтотОбъект, "Начисления", СтруктураКурса);
	Ценообразование.РассчитатьСуммыВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "Начисления", СтруктураКурса);
	ВзаиморасчетыСервер.ЗаполнитьСуммуНДСВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "Начисления");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(Начисления);
	КонецЕсли;
	
	ПараметрыРегистрации = Документы.ПриобретениеУслугПоЛизингу.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	Если ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		ПодготовитьДанныеДляЗаданийКЗакрытиюМесяцаПередЗаписью();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ПараметрыЗаполнения = Документы.ПриобретениеУслугПоЛизингу.ПараметрыЗаполненияНалогообложенияНДСЗакупки(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения);
	
	ПараметрыЗаполнения = Документы.ПриобретениеУслугПоЛизингу.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ЗакупкаПодДеятельность, ПараметрыЗаполнения);
	
	УчетНДСУП.СкорректироватьСтавкуНДСВТЧДокумента(ЭтотОбъект, Начисления);
	
	ИнициализироватьДокумент();
	
	ДатаВходящегоДокумента	= Дата(1,1,1);
	НомерВходящегоДокумента	= "";
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
		Документы.ПриобретениеУслугПоЛизингу.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, "РеестрДокументов");
		РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ПараметрыЗаполнения = Документы.ПриобретениеУслугПоЛизингу.ПараметрыЗаполненияНалогообложенияНДСЗакупки(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения);
	
	ПараметрыЗаполнения = Документы.ПриобретениеУслугПоЛизингу.ПараметрыЗаполненияВидаДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ЗакупкаПодДеятельность, ПараметрыЗаполнения);
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС  Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.СтавкаНДС");
	КонецЕсли;
	
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.Подразделение");
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.СтатьяРасходов");
	КонецЕсли;
	МассивНепроверяемыхРеквизитов.Добавить("Начисления.ОбеспечительныйПлатеж");
	ПроверитьЗаполнениеТЧНачисления(Отказ);
		
	Если МассивНепроверяемыхРеквизитов.Найти("Начисления.АналитикаРасходов") = Неопределено Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, Новый Структура("Начисления"), МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ПараметрыПроверки = Документы.ПриобретениеУслугПоЛизингу.ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки(ЭтотОбъект);
	УчетНДСУП.ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(ЭтотОбъект, НалогообложениеНДС, ПараметрыПроверки, Отказ);
	
	ПараметрыПроверки = Документы.ПриобретениеУслугПоЛизингу.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС(ЭтотОбъект);
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(ЭтотОбъект, ЗакупкаПодДеятельность, ПараметрыПроверки, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Документы.ПриобретениеУслугПоЛизингу.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияДоходыРасходыПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	
	ДенежныеСредстваСервер.ОтразитьРасчетыПоФинансовымИнструментам(ДополнительныеСвойства, Движения, Отказ);
	
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	
	УчетНДСУП.СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
	
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПодготовитьДанныеДляЗаданийКЗакрытиюМесяца();
	
	ПараметрыРегистрации = Документы.ПриобретениеУслугПоЛизингу.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект); 
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	// Выполним востановление НДС по результатам зачета обеспечительного платежа
	ТаблицаИзменений = УчетНДСУП.НоваяТаблицаИзмененийРасчетов();
	СтрокаИзменений = ТаблицаИзменений.Добавить();
	СтрокаИзменений.Документ = Ссылка;
	СтрокаИзменений.Период = Дата;
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(ТаблицаИзменений);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПараметрыРегистрации = Документы.ПриобретениеУслугПоЛизингу.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПодготовитьДанныеДляЗаданийКЗакрытиюМесяца();
	
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	// Выполним востановление НДС по результатам зачета обеспечительного платежа
	ТаблицаИзменений = УчетНДСУП.НоваяТаблицаИзмененийРасчетов();
	СтрокаИзменений = ТаблицаИзменений.Добавить();
	СтрокаИзменений.Документ = Ссылка;
	СтрокаИзменений.Период = Дата;
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(ТаблицаИзменений);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить(); 
	
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ВалютаРегламентированногоУчета;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
	КонецЕсли;
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	
	РаботаСКурсамиВалютУТ.ЗаполнитьКурсКратностьПоУмолчанию(Курс, Кратность, Валюта, ВалютаВзаиморасчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТЧНачисления(Отказ)
	
	// Вспомогательные реквизиты для проверки учета НДС
	ПоФактИспользованию = (ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	ИзДокумента = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
	НаНаправленияДеятельности = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
	НаПроизводственныеЗатраты = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
	ПартионныйУчетВключен = РасчетСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(Дата));
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	
	ДоступныеТипыНачислений = Справочники.ДоговорыЛизинга.ТипыПлатежейПоДоговору(Договор);
	
	Для ТекИндекс = 0 По Начисления.Количество()-1 Цикл
		
		// Статья расходов не должна ссылаться на налогообложение в документе закупки,
		// если у организации включено налогообложение по факт. использованию.
		Если ПартионныйУчетВключен
			И ПоФактИспользованию
			И ЗначениеЗаполнено(Начисления[ТекИндекс].СтатьяРасходов) Тогда
			
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Начисления[ТекИндекс].СтатьяРасходов,
			"ВариантРаздельногоУчетаНДС, ВариантРаспределенияРасходовРегл");
			
			Если (Реквизиты.ВариантРаспределенияРасходовРегл = НаНаправленияДеятельности
					ИЛИ Реквизиты.ВариантРаспределенияРасходовРегл = НаПроизводственныеЗатраты)
				 И Реквизиты.ВариантРаздельногоУчетаНДС = ИзДокумента Тогда
				
				ТекстОшибки = НСтр("ru='При использовании учета НДС по фактическому использованию, у статьи расходов должен быть выбран раздельный учет НДС по расходам: ""НДС распределяется по видам налогообложения пропорционально выручке"" в строке %1 списка ""Начисления""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ТекстОшибки, Начисления[ТекИндекс].НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "СтатьяРасходов"),
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДоступныеТипыНачислений.Найти(Начисления[ТекИндекс].ТипНачисления) = Неопределено Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Тип начисления ""%1"" не предусмотрен в рамках данного договора'"),
				Начисления[ТекИндекс].ТипНачисления);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "ТипНачисления"),
				,
				Отказ);
		КонецЕсли;
		
		Если Начисления[ТекИндекс].ТипНачисления = Перечисления.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж Тогда
			
			Если НЕ ЗначениеЗаполнено(Начисления[ТекИндекс].ОбеспечительныйПлатеж) Тогда
				ТекстОшибки = НСтр("ru='Не заполнено поле ""Обеспечительный платеж"" в строке %1 списка ""Начисления""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ТекстОшибки, Начисления[ТекИндекс].НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "ОбеспечительныйПлатеж"),
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПодготовитьДанныеДляЗаданийКЗакрытиюМесяцаПередЗаписью()

	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПередЗаписью.Дата             КАК Дата,
	|	ТаблицаПередЗаписью.Организация      КАК Организация,
	|	ТаблицаПередЗаписью.Контрагент       КАК Контрагент,
	|	ТаблицаПередЗаписью.Договор          КАК Договор,
	|	ТаблицаПередЗаписью.СуммаДокумента   КАК СуммаДокумента
	|ПОМЕСТИТЬ ПриобретениеУслугПоЛизингуПередЗаписью
	|ИЗ
	|	Документ.ПриобретениеУслугПоЛизингу КАК ТаблицаПередЗаписью
	|ГДЕ
	|	ТаблицаПередЗаписью.Ссылка = &Ссылка
	|	И ТаблицаПередЗаписью.Проведен";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляЗаданийКЗакрытиюМесяца()

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период           КАК Период,
	|	Таблица.Организация      КАК Организация,
	|	Таблица.ОсновноеСредство КАК ОсновноеСредство,
	|	&Ссылка                  КАК Документ
	|ПОМЕСТИТЬ ПриобретениеУслугПоЛизингуИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПередЗаписью.Дата              КАК Период,
	|		ТаблицаПередЗаписью.Организация       КАК Организация,
	|		НЕОПРЕДЕЛЕНО                          КАК ОсновноеСредство
	|	ИЗ
	|		ПриобретениеУслугПоЛизингуПередЗаписью КАК ТаблицаПередЗаписью
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПоЛизингу КАК ТаблицаПриЗаписи
	|			ПО ТаблицаПриЗаписи.Ссылка = &Ссылка
	|				И ТаблицаПриЗаписи.Проведен
	|		ГДЕ
	|			(НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Дата, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Дата, МЕСЯЦ)
	|				ИЛИ ТаблицаПриЗаписи.Организация <> ТаблицаПередЗаписью.Организация
	|				ИЛИ ТаблицаПриЗаписи.Контрагент <> ТаблицаПередЗаписью.Контрагент
	|				ИЛИ ТаблицаПриЗаписи.Договор <> ТаблицаПередЗаписью.Договор
	|				ИЛИ ТаблицаПриЗаписи.СуммаДокумента <> ТаблицаПередЗаписью.СуммаДокумента
	|				ИЛИ ТаблицаПриЗаписи.Дата ЕСТЬ NULL)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПриЗаписи.Дата,
	|		ТаблицаПриЗаписи.Организация,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		Документ.ПриобретениеУслугПоЛизингу КАК ТаблицаПриЗаписи
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПриобретениеУслугПоЛизингуПередЗаписью КАК ТаблицаПередЗаписью
	|			ПО ИСТИНА
	|		ГДЕ
	|			(НАЧАЛОПЕРИОДА(ТаблицаПриЗаписи.Дата, МЕСЯЦ) <> НАЧАЛОПЕРИОДА(ТаблицаПередЗаписью.Дата, МЕСЯЦ)
	|				ИЛИ ТаблицаПриЗаписи.Организация <> ТаблицаПередЗаписью.Организация
	|				ИЛИ ТаблицаПриЗаписи.Контрагент <> ТаблицаПередЗаписью.Контрагент
	|				ИЛИ ТаблицаПриЗаписи.Договор <> ТаблицаПередЗаписью.Договор
	|				ИЛИ ТаблицаПриЗаписи.СуммаДокумента <> ТаблицаПередЗаписью.СуммаДокумента
	|				ИЛИ НЕ ТаблицаПриЗаписи.Проведен
	|				ИЛИ ТаблицаПередЗаписью.Дата ЕСТЬ NULL)
	|			И ТаблицаПриЗаписи.Ссылка = &Ссылка
	|	
	|	) КАК Таблица
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПриобретениеУслугПоЛизингуПередЗаписью";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[0].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("ПриобретениеУслугПоЛизингуИзменение", Выборка.Количество > 0);
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#КонецЕсли
