#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураВыданныйАванс.ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура выданный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСРФКлиент.ИсправительныйСчетФактураВыданныйАванс";
		КомандаСоздатьНаОсновании.Идентификатор = "ИсправительныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура выданный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураВыданныйАванс);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Функция формирует представление счет-фактуры.
//
// Параметры:
//  Номер - Строка - Номер счета-фактуры;
//  Дата - Дата - Дата счета-фактуры;
//
// Возвращаемое значение:
//	Строка - Представление счета-фактуры.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен = Истина) Экспорт
	
	СтруктураШапки = Новый Структура;
	СтруктураШапки.Вставить("Дата", Дата);
	СтруктураШапки.Вставить("Номер", Номер);
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки, НСтр("ru='Счет-фактура'")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	Представление = СтрСоединить(МассивПодстрок, " ");
	
	Возврат Представление;
	
КонецФункции

// Возвращает входящий номер и дату расчетного документа.
//
// Параметры:
// 	ДокументСсылка	- ДокументСсылка - Документ входящий номер и дату которого требуется получить
// 	Контрагент		- СправочникСсылка.Контрагенты, Неопределено - Контрагент табличной части "РасчетыСПартнерами" документа "ВводОстатков".
//
// Возвращаемое значение:
// 	СтруктураРезультата - Структура  - содержит: 
// 						    * НомерПлатежноРасчетногоДокумента - Строка - номер документа
// 							* ДатаПлатежноРасчетногоДокумента - Дата - дата документа.
//
Функция ВходящийНомерИДатаДокумента(ДокументСсылка, Контрагент = Неопределено) Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", "");
	СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , '00010101');
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") Тогда
		СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", ДокументСсылка.НомерВходящегоДокумента);
		СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , ДокументСсылка.ДатаВходящегоДокумента);
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводОстатков") Тогда
		// Для ввода остатков данные хранятся в табличной части
		Если ЗначениеЗаполнено(Контрагент) И ТипЗнч(Контрагент)  = Тип("СправочникСсылка.Контрагенты") Тогда
			СтрокаАванса = ДокументСсылка.РасчетыСПартнерами.Найти(Контрагент, "Контрагент");
			Если СтрокаАванса <> Неопределено Тогда
				СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", СтрокаАванса.НомерРасчетногоДокумента);
				СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , СтрокаАванса.ДатаРасчетногоДокумента);
			КонецЕсли; 
		КонецЕсли; 
		
	Иначе
		СтруктураРезультата.Вставить("НомерПлатежноРасчетногоДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументСсылка.Номер, Ложь, Истина));
		СтруктураРезультата.Вставить("ДатаПлатежноРасчетногоДокумента" , ДокументСсылка.Дата);
		
	КонецЕсли;
	
	Возврат СтруктураРезультата;

КонецФункции 

// Формирует задания на отражение в книгах покупок и продаж.
//
// Параметры:
//	МассивДокументов - Массив - Документы, движения которых необходимо актуализировать.
//
Процедура СформироватьДвиженияПоКнигамПокупокПродаж(ТаблицаИзменений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаИзменений", ТаблицаИзменений);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИзменений.Период КАК Месяц,
	|	ТаблицаИзменений.Документ КАК РасчетныйДокумент,
	|	ТаблицаИзменений.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВтРасчеты
	|ИЗ
	|	&ТаблицаИзменений КАК ТаблицаИзменений
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка      КАК СчетФактура,
	|	СчетФактура.Организация КАК Организация,
	|	Расчеты.Месяц           КАК Месяц
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		СчетФактура.ДокументОснование = Расчеты.РасчетныйДокумент
	|		И СчетФактура.Контрагент = Расчеты.Контрагент
	|ГДЕ
	|	НЕ СчетФактура.Исправление
	|	И СчетФактура.Проведен
	|	И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка                       КАК СчетФактура,
	|	СчетФактура.Организация                  КАК Организация,
	|	АннулированиеПодарочныхСертификатов.Дата КАК Месяц
	|ИЗ
	|	Документ.АннулированиеПодарочныхСертификатов КАК АннулированиеПодарочныхСертификатов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		АннулированиеПодарочныхСертификатов.Ссылка = Расчеты.РасчетныйДокумент
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		АннулированиеПодарочныхСертификатов.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И СчетФактура.Проведен
	|		И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка                 КАК СчетФактура,
	|	СчетФактура.Организация            КАК Организация,
	|	ВозвратПодарочныхСертификатов.Дата КАК Месяц
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		ВозвратПодарочныхСертификатов.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		ДанныеДокумента.Ссылка = Расчеты.РасчетныйДокумент
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.Исправление
	|		И СчетФактура.Проведен
	|		И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка            КАК СчетФактура,
	|	СчетФактура.Организация       КАК Организация,
	|	ОтчетОРозничныхПродажах.Дата  КАК Месяц
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ДанныеДокумента
	|	ПО
	|		ОтчетОРозничныхПродажах.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		ДанныеДокумента.Ссылка = Расчеты.РасчетныйДокумент
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеДокумента.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|	ПО
	|		РеализацияСертификата.Регистратор = СчетФактура.ДокументОснование
	|		И НЕ СчетФактура.Исправление
	|		И СчетФактура.Проведен
	|		И СчетФактура.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

// Возвращает структуру параметров для отбора данных по полученным авансам
// 
// Возвращаемое значение:
//	Структура - параметры отбора.
//
Функция ОтборПолученныхАвансов() Экспорт
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("НачалоПериода");
	СтруктураОтбора.Вставить("КонецПериода");
	СтруктураОтбора.Вставить("ПравилоОтбораАванса");
	СтруктураОтбора.Вставить("СтавкаНДСПоУмолчанию");
	СтруктураОтбора.Вставить("Организация");
	СтруктураОтбора.Вставить("РасчетныйДокумент");
	
	Возврат СтруктураОтбора;
	
КонецФункции

// Заполняет таблицу ПолученныеАвансы данными для формирования счетов-фактур на аванс.
//
// Параметры:
//	ОтборАвансов - Структура - Параметры отбора полученных авансов
//	ПолученныеАвансы - Таблица для заполнения данными о полученных авансах
//	РасчетныеДокументыБезСчетаФактуры - Массив - Заполняется списком документов, по которым не сформировались счета-фактуры.
//
Процедура ЗаполнитьПолученныеАвансыДляСФ(ОтборАвансов, ПолученныеАвансы, РасчетныеДокументыБезСчетаФактуры = Неопределено) Экспорт
	
	НачалоПериода        = НачалоДня(ОтборАвансов.НачалоПериода);
	КонецПериода         = КонецДня(ОтборАвансов.КонецПериода);
	РасчетныйДокумент    = ОтборАвансов.РасчетныйДокумент;
	Организация          = ОтборАвансов.Организация;
	ВалютаРеглУчета      = Константы.ВалютаРегламентированногоУчета.Получить();
	ОсновнаяСтавкаНДС    = УчетНДСУП.СтавкаНДСПоУмолчанию(ОтборАвансов.НачалоПериода, Истина);
	
	СтавкаНДСПоУмолчанию = ?(
		ЗначениеЗаполнено(ОтборАвансов.СтавкаНДСПоУмолчанию),
		ОтборАвансов.СтавкаНДСПоУмолчанию,
		ОсновнаяСтавкаНДС);
		
		
	Если ЗначениеЗаполнено(ОтборАвансов.ПравилоОтбораАванса) Тогда
		ПравилоОтбораАванса = ОтборАвансов.ПравилоОтбораАванса;
	ИначеЕсли ТипЗнч(Организация) = Тип("Массив") И Организация.Количество() = 1 Тогда
		ПравилоОтбораАванса = УчетнаяПолитика.ПравилоОтбораАвансовДляРегистрацииСчетовФактур(Организация[0], ОтборАвансов.КонецПериода);
	ИначеЕсли ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ПравилоОтбораАванса = УчетнаяПолитика.ПравилоОтбораАвансовДляРегистрацииСчетовФактур(Организация, ОтборАвансов.КонецПериода);
	Иначе
		ПравилоОтбораАванса = Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня;
	КонецЕсли;
	
	ВозможныйТипДокументаОснования = Метаданные.Документы.СчетФактураВыданныйАванс.Реквизиты.ДокументОснование.Тип;
	
	// Подготовим таблицу авансов по документу с учетом правила отбора авансов.
	Авансы = Новый ТаблицаЗначений;
	Авансы.Колонки.Добавить("Организация");
	Авансы.Колонки.Добавить("Контрагент");
	Авансы.Колонки.Добавить("ДокументОснование");
	Авансы.Колонки.Добавить("ВалютаДокумента");
	Авансы.Колонки.Добавить("СтавкаНДС");
	Авансы.Колонки.Добавить("НаправлениеДеятельности");
	Авансы.Колонки.Добавить("Ответственный");
	Авансы.Колонки.Добавить("Подразделение");
	Авансы.Колонки.Добавить("Руководитель");
	Авансы.Колонки.Добавить("ГлавныйБухгалтер");
	ПоляГруппировки = "Контрагент, ДокументОснование, Организация, НаправлениеДеятельности, ВалютаДокумента, СтавкаНДС, Ответственный, Подразделение, Руководитель, ГлавныйБухгалтер";
	Авансы.Колонки.Добавить("Сумма");
	Авансы.Колонки.Добавить("СуммаНДС");
	Авансы.Колонки.Добавить("ВалютнаяСумма");
	ПоляСуммирования = "Сумма, СуммаНДС, ВалютнаяСумма";
	
	// Для новых счетов-фактур значения полей Ответственный, Подразделение, Руководитель и ГлавныйБухгалтер
	// не зависят от счета-фактуры. Вычислим их заранее, вне цикла.
	
	Ответственный = Пользователи.ТекущийПользователь();
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация, КонецПериода);
	
	Результат = РезультатЗапросаПоАвансам(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент, ПравилоОтбораАванса);
	
	// Выборка по дням
	ВыборкаАванс        = Результат[5].Выбрать();
	ТаблицаСчетовФактур = Результат[6].Выгрузить();
	ТаблицаСчетовФактур.Индексы.Добавить("СчетФактура, Контрагент");
	
	Пока ВыборкаАванс.Следующий() Цикл
		
		Если ВыборкаАванс.ДокументОснование = NULL
			ИЛИ ВыборкаАванс.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Авансы.Очистить();
		
		ДатаЗачетаАванса = ВыборкаАванс.ДатаФормированияСФ;
		
		МассивКоэффициентов = Новый Массив; 
		Если ВыборкаАванс.СуммаОсновнаяСтавка = 0 
			И ВыборкаАванс.СуммаЛьготнаяСтавка = 0 
			И ВыборкаАванс.СуммаБезНДС = 0
			И СтавкаНДСПоУмолчанию = ОсновнаяСтавкаНДС Тогда
			// Всю сумму отнесем к основной ставке
			МассивКоэффициентов.Добавить(1);
		Иначе
			МассивКоэффициентов.Добавить(ВыборкаАванс.СуммаОсновнаяСтавка);
		КонецЕсли;
		
		Если ВыборкаАванс.СуммаОсновнаяСтавка = 0 
			И ВыборкаАванс.СуммаЛьготнаяСтавка = 0 
			И ВыборкаАванс.СуммаБезНДС = 0
			И СтавкаНДСПоУмолчанию = Перечисления.СтавкиНДС.НДС10_110 Тогда
			// Всю сумму отнесем к льготной ставке
			МассивКоэффициентов.Добавить(1);
		Иначе
			МассивКоэффициентов.Добавить(ВыборкаАванс.СуммаЛьготнаяСтавка);
		КонецЕсли;
		МассивКоэффициентов.Добавить(ВыборкаАванс.СуммаБезНДС);
		
		ВалютнаяСуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ВыборкаАванс.ВалютнаяСумма,
			МассивКоэффициентов);
		
		СуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			ВыборкаАванс.Сумма,
			МассивКоэффициентов);
		
		МассивСтавок = Новый Массив;
		МассивСтавок.Добавить(ОсновнаяСтавкаНДС);
		МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС10_110);
		
		Индекс = 0;
		Для каждого Ставка Из МассивСтавок Цикл
			
			Сумма = СуммаПоСтавкам[Индекс];
			ВалютнаяСумма = ВалютнаяСуммаПоСтавкам[Индекс];
			Индекс = Индекс + 1;
			Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаАванс);
			
			НоваяСтрока.СтавкаНДС = Ставка;
			НоваяСтрока.Сумма = Сумма;
			НоваяСтрока.ВалютнаяСумма = ВалютнаяСумма;
			НоваяСтрока.СуммаНДС  = Окр(ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС), 2);
			
			НоваяСтрока.Ответственный = Ответственный;
			НоваяСтрока.Подразделение = Подразделение;
			НоваяСтрока.Руководитель = ОтветственныеЛица.РуководительСсылка;
			НоваяСтрока.ГлавныйБухгалтер = ОтветственныеЛица.ГлавныйБухгалтерСсылка;
			
		КонецЦикла;
		
		Если Авансы.Количество() > 1 Тогда
			Авансы.Свернуть(ПоляГруппировки, ПоляСуммирования);
		КонецЕсли;
		
		Для каждого СтрокаАвансы Из Авансы Цикл
			
			Если ВозможныйТипДокументаОснования.СодержитТип(ТипЗнч(СтрокаАвансы.ДокументОснование))
				И СтрокаАвансы.СуммаНДС > 0 Тогда
				
				НоваяСтрока = ПолученныеАвансы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаАвансы);
				
				ОтборСчетовФактур = Новый Структура();
				ОтборСчетовФактур.Вставить("ДокументОснование", СтрокаАвансы.ДокументОснование);
				ОтборСчетовФактур.Вставить("Контрагент",        СтрокаАвансы.Контрагент);
				
				РезультатПоиска = ТаблицаСчетовФактур.НайтиСтроки(ОтборСчетовФактур);
				Если РезультатПоиска.Количество() = 0  Тогда
					// Поиск по пустому контрагенту
					ОтборСчетовФактур.Контрагент = Неопределено;
					РезультатПоиска = ТаблицаСчетовФактур.НайтиСтроки(ОтборСчетовФактур);
				КонецЕсли;
				
				Если РезультатПоиска.Количество() = 0 Тогда
					НоваяСтрока.СФсформирован = Ложь;
				Иначе
					РеквизитыСчетаФактуры = РезультатПоиска[0];
					НоваяСтрока.СФсформирован = Истина;
					ЗаполнитьЗначенияСвойств(НоваяСтрока, РеквизитыСчетаФактуры);
					Если НоваяСтрока.СтавкаНДС = ОсновнаяСтавкаНДС Тогда
						НоваяСтрока.СуммаСчетаФактуры = РеквизитыСчетаФактуры.СуммаАванса18;
					Иначе
						НоваяСтрока.СуммаСчетаФактуры = РеквизитыСчетаФактуры.СуммаАванса10;
					КонецЕсли;
				КонецЕсли;
				
				Если НоваяСтрока.ДатаВыписки = '00010101' Тогда
					НоваяСтрока.ДатаВыписки = ДатаЗачетаАванса;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

// Возвращает номенклатуру заказов клиентов, оплаченных основанием счета-фактуры
//
// Параметры:
// 	 ПлатежныйДокумент - ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств, ДокументСсылка.ПриходныйКассовыйОрдер - Документ получения аванса.
//
// ВозвращаемоеЗначение:
// 	 Товары - ТаблицаЗначений - Номенклатура заказов.
//
Функция ТоварыЗаказовКлиентов(ПлатежныйДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	ЗаказКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ЗаказыКлиентов
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.ОснованиеПлатежа
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка,
	|	ЗаказКлиента.НаправлениеДеятельности
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.Заказ
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка,
	|	ЗаказКлиента.НаправлениеДеятельности
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.ОснованиеПлатежа
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка,
	|	ЗаказКлиента.НаправлениеДеятельности
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПоступлениеДС
	|		ПО ЗаказКлиента.Ссылка = ПоступлениеДС.Заказ
	|			И (ПоступлениеДС.Ссылка = &ПлатежныйДокумент)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК ЗаказКлиента,
	|	Товары.Ссылка.Валюта КАК Валюта,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.НоменклатураНабора КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Товары.Содержание КАК Содержание,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказыКлиентов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС) КАК СуммаСНДС
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыКлиентов КАК ЗаказыКлиентов
	|		ПО Товары.Ссылка = ЗаказыКлиентов.Ссылка
	|ГДЕ
	|	Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120), 
	|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
	|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Содержание,
	|	Товары.СтавкаНДС,
	|	ЗаказыКлиентов.НаправлениеДеятельности
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНабора,
	|	ХарактеристикаНабора,
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
	
	Товары = Запрос.Выполнить().Выгрузить();
	
	Возврат Товары;
	
КонецФункции

// Выполняет распределения авансов по номенклатуре пропорционально сумме, с учетом ставки НДС.
//
// Параметры:
// 	Авансы - ТаблицаЗначений - Авансы для распределения
// 	Товары - ТаблицаЗначений - Номенклатура, на которую необходимо выполнить распределение
// 	ПлатежныйДокумент - ДокументСсылка - Документ оплаты.
//
Процедура РаспределитьАвансыПоТоварам(Авансы, Товары, ПлатежныйДокумент) Экспорт
	
	АвансыКРаспределению = Авансы.Скопировать();
	АвансыКРаспределению.Свернуть("СтавкаНДС, НаправлениеДеятельности", "Сумма, СуммаНДС");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Содержание,
	|	Товары.Валюта,
	|	Товары.НаправлениеДеятельности,
	|	Товары.СуммаСНДС,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Товары.Валюта
	|			ИЗ
	|				Товары)) КАК КурсыВалют
	|;
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Содержание,
	|	ВЫБОР
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				И РеквизитыНоменклатуры.ОсобенностьУчета В
	|					(ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме),
	|					ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Партнером))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Товары.Валюта,
	|	Товары.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ Товары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(Товары.СуммаСНДС
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1) 
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1)) КАК СуммаСНДС,
	|	СУММА(Товары.СуммаНДС 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1) 
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1)) КАК СуммаНДС 
	|ИЗ
	|	Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		Товары.Валюта = КурсыВалют.Валюта
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК РеквизитыНоменклатуры
	|	ПО
	|		Товары.Номенклатура = РеквизитыНоменклатуры.Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				И РеквизитыНоменклатуры.ОсобенностьУчета В
	|					(ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ОрганизациейПоАгентскойСхеме),
	|					ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Партнером))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		КОГДА РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				ИЛИ РеквизитыНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ,
	|	Товары.Содержание,
	|	Товары.Валюта,
	|	Товары.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		ИНАЧЕ Товары.СтавкаНДС
	|	КОНЕЦ
	|";
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.УстановитьПараметр("Период", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлатежныйДокумент, "Дата"));
	
	ТоварыБаза = Запрос.Выполнить().Выгрузить();
	
	Авансы.Очистить();
	Для Каждого СтрокаАвансов Из АвансыКРаспределению Цикл
		
		Отбор = Новый Структура("СтавкаНДС,НаправлениеДеятельности");
		Отбор.Вставить("СтавкаНДС", СтрокаАвансов.СтавкаНДС);
		Отбор.Вставить("НаправлениеДеятельности", СтрокаАвансов.НаправлениеДеятельности);
		СтрокиТоваров = ТоварыБаза.НайтиСтроки(Отбор);
		
		МассивКоэффициентов = Новый Массив;
		Для Каждого СтрокаТовар Из СтрокиТоваров Цикл
			МассивКоэффициентов.Добавить(СтрокаТовар.СуммаСНДС);
		КонецЦикла;
		
		Если МассивКоэффициентов.Количество() = 0 Тогда
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаАвансов);
			НоваяСтрока.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
		КонецЕсли;
		
		РаспределениеСуммы = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаАвансов.Сумма, МассивКоэффициентов);
		РаспределениеСуммыНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаАвансов.СуммаНДС, МассивКоэффициентов);
		
		Индекс = 0;
		Для Каждого СтрокаТовар Из СтрокиТоваров Цикл
			
			Сумма    = ?(РаспределениеСуммы    = Неопределено, 0, РаспределениеСуммы[Индекс]);
			СуммаНДС = ?(РаспределениеСуммыНДС = Неопределено, 0, РаспределениеСуммыНДС[Индекс]);
			Если Сумма = 0 Тогда
				Индекс = Индекс + 1;
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Авансы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовар);
			НоваяСтрока.Сумма    = Сумма;
			НоваяСтрока.СуммаНДС = СуммаНДС;
			НоваяСтрока.НаправлениеДеятельности = СтрокаАвансов.НаправлениеДеятельности;
			Индекс = Индекс + 1;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданныйАванс - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Результат - Структура - Реквизиты счета-фактуры.
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.ДокументОснование                КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Исправление
	|			ТОГДА СчетФактураВыданныйАванс.СчетФактураОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                     КАК СчетФактураОснование,
	|	СчетФактураВыданныйАванс.Организация                      КАК Организация,
	|	СчетФактураВыданныйАванс.Подразделение                    КАК Подразделение,
	|	СчетФактураВыданныйАванс.Контрагент                       КАК Контрагент,
	|	СчетФактураВыданныйАванс.КодВидаОперации                  КАК КодВидаОперации,
	|	СчетФактураВыданныйАванс.ПравилоОтбораАванса              КАК ПравилоОтбораАванса,
	|	СчетФактураВыданныйАванс.ИдентификаторГосКонтракта        КАК ИдентификаторГосКонтракта,
	|	СчетФактураВыданныйАванс.НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАванс.ДатаПлатежноРасчетногоДокумента  КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАванс.Корректировочный                 КАК Корректировочный,
	|	СчетФактураВыданныйАванс.СводныйКорректировочный          КАК СводныйКорректировочный,
	|	СчетФактураВыданныйАванс.Авансы.(
	|		Ссылка,
	|		НомерСтроки,
	|		ИсходныйСчетФактура,
	|		НаправлениеДеятельности,
	|		Номенклатура,
	|		Характеристика,
	|		НоменклатураНабора,
	|		ХарактеристикаНабора,
	|		ТипЗапасов,
	|		Содержание,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	) КАК Авансы
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат.Вставить("Авансы", Выборка.Авансы.Выгрузить());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ПолученныеАвансы = Новый ТаблицаЗначений;
	ПолученныеАвансы.Колонки.Добавить("СФСформирован");
	ПолученныеАвансы.Колонки.Добавить("Контрагент");
	ПолученныеАвансы.Колонки.Добавить("Сумма");
	ПолученныеАвансы.Колонки.Добавить("СтавкаНДС");
	ПолученныеАвансы.Колонки.Добавить("СуммаНДС");
	ПолученныеАвансы.Колонки.Добавить("ДокументОснование");
	ПолученныеАвансы.Колонки.Добавить("ДатаВыписки");
	ПолученныеАвансы.Колонки.Добавить("ВалютаДокумента");
	ПолученныеАвансы.Колонки.Добавить("ВалютнаяСумма");
	ПолученныеАвансы.Колонки.Добавить("СуммаСчетаФактуры");
	ПолученныеАвансы.Колонки.Добавить("СчетФактура");
	
	ОтборАвансов = Новый Структура;
	ОтборАвансов.Вставить("НачалоПериода", Параметры.НачалоПериода);
	ОтборАвансов.Вставить("КонецПериода", Параметры.КонецПериода);
	ОтборАвансов.Вставить("РасчетныйДокумент", Неопределено);
	ОтборАвансов.Вставить("Организация", Параметры.МассивОрганизаций);
	ОтборАвансов.Вставить("СтавкаНДСПоУмолчанию", Неопределено);
	ОтборАвансов.Вставить("ПравилоОтбораАванса", Неопределено);

	ЗаполнитьПолученныеАвансыДляСФ(ОтборАвансов, ПолученныеАвансы);
	
	Возврат ПолученныеАвансы.НайтиСтроки(Новый Структура("СФСформирован", Ложь)).Количество();
	
КонецФункции

//++ НЕ УТ

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстНачислениеНДС = "
	|ВЫБРАТЬ // Начисление НДС с полученного аванса <Дт 76.АВ :: Кт 68.02>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.ДокументОснование КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент 
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС)
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	КОНЕЦ КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС с полученного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|";
	
	ТекстВычетНДС = "
	|ВЫБРАТЬ // Принятие к вычету НДС с полученного аванса <Дт 68.02 :: Кт 76.АВ>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Регистр.Период, Операция.Дата) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	&ВалютаРеглУчета КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам) КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДокументОснование КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Принятие к вычету НДС с полученного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|";
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстНачислениеНДС);	
	ТекстыОтражения.Добавить(ТекстВычетНДС);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает список кодов видов операций,
//	предусмотренных законодательством.
//
// Возвращаемое значение:
//	СписокЗначений - Список кодов видов операций.
//
Функция СписокКодовВидовОпераций() Экспорт
	
	СписокКодов = Новый СписокЗначений;
	
	СписокКодов.Добавить("02", НСтр("ru='02 Авансы полученные'"));
	СписокКодов.Добавить("05", НСтр("ru='05 Авансы полученные за товары, работы, услуги комитента'"));
	СписокКодов.Добавить("06", НСтр("ru='06 Налоговый агент, статья 161 НК'"));
	СписокКодов.Добавить("12", НСтр("ru='12 Авансы полученные за товары, права, п.3,4,5.1 статьи 154, пп.1-4 статьи 155 НК'"));
	СписокКодов.Добавить("28", НСтр("ru='28 Сводный комиссионный счет-фактура на аванс, п.3.1 статьи 169 НК'"));
	
	Возврат СписокКодов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                                            КАК Ссылка,
	|	ДанныеДокумента.Дата                                                              КАК Период,
	|	ДанныеДокумента.Организация                                                       КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)             КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0) КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Контрагент                                                        КАК Контрагент,
	|	ДанныеДокумента.ДокументОснование                                                 КАК ДокументОснование,
	|	ДанныеДокумента.ПравилоОтбораАванса                                               КАК ПравилоОтбораАванса,
	|	ДанныеДокумента.ДатаПолученияАванса                                               КАК ДатаПолученияАванса,
	|	ДанныеДокумента.ДатаВыставления                                                   КАК ДатаВыставления,
	|	ДанныеДокумента.Номер                                                             КАК Номер,
	|	ДанныеДокумента.Дата                                                              КАК Дата,
	|	ДанныеДокумента.КодВидаОперации                                                   КАК КодВидаОперации,
	|	ДанныеДокумента.ВыставленВЭлектронномВиде                                         КАК ВыставленВЭлектронномВиде,
	|	ДанныеДокумента.Исправление                                                       КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                                                  КАК НомерИсправления,
	|	ДанныеДокумента.СчетФактураОснование                                              КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата                                         КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.СчетФактураОснование.Номер                                        КАК НомерСчетаФактурыОснования,
	|	ДанныеДокумента.Корректировочный                                                  КАК Корректировочный,
	|	ДанныеДокумента.Подразделение                                                     КАК Подразделение,
	|	ДанныеДокумента.Ответственный                                                     КАК Ответственный,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ                                      КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Проведен                                                          КАК Проведен,
	|	ДанныеДокумента.Сумма                                                             КАК Сумма,
	|	ДанныеДокумента.Комментарий                                                       КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления                                                   КАК ПометкаУдаления,
	|	ДанныеДокумента.КППКонтрагента                                                    КАК КППКонтрагента,
	|	ДанныеДокумента.ИННКонтрагента                                                    КАК ИННКонтрагента
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Если ТипЗнч(Реквизиты.ДокументОснование) = Тип("ДокументСсылка.ВводОстатков")
		ИЛИ ТипЗнч(Реквизиты.ДокументОснование) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
		НомерНаПечать = Реквизиты.Номер;
	Иначе
		НомерНаПечать = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
					?(Реквизиты.Исправление, Реквизиты.НомерСчетаФактурыОснования, Реквизиты.Номер), 
					Ложь,
					Реквизиты.ОбособленноеПодразделение, 
					Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",                Реквизиты.Организация);
	Запрос.УстановитьПараметр("Покупатель",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументОплаты",             Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ПравилоОтбораАванса",        Реквизиты.ПравилоОтбораАванса);
	Запрос.УстановитьПараметр("ДатаПолученияАванса",        Реквизиты.ДатаПолученияАванса);
	Запрос.УстановитьПараметр("НомерНаПечать",              НомерНаПечать);
	Запрос.УстановитьПараметр("Номер",                      Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",                     Реквизиты.Период);
	Запрос.УстановитьПараметр("КодВидаОперации",            Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("ВыставленВЭлектронномВиде",  Реквизиты.ВыставленВЭлектронномВиде);
	Запрос.УстановитьПараметр("Валюта",                     Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Корректировочный",			Реквизиты.Корректировочный);
	Запрос.УстановитьПараметр("Исправление",				Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",			Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("СчетФактураОснование",		Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыОснования",	Реквизиты.ДатаСчетаФактурыОснования);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные",     УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ИННКонтрагента",             Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",             Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("Проведен",                   Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",            Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",    ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипЗнч(ДокументСсылка)));
	Запрос.УстановитьПараметр("Комментарий",                Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Сумма",                      Реквизиты.Сумма);
	Запрос.УстановитьПараметр("Контрагент",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Подразделение",              Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",              Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",            Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",             Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ОбособленноеПодразделение",  Реквизиты.ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ", Реквизиты.РучнаяКорректировкаЖурналаСФ);
	Запрос.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	УчетНДСРФ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос);
	
	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьВтИсходныеСчетаФактуры(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтИсходныеСчетаФактурыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтИсходныеСчетаФактуры = Новый Запрос;
	ЗапросВтИсходныеСчетаФактуры.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("ТипыЗапасовСобственные", Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("КодВидаОперацииКомиссия", Запрос.Параметры.КодВидаОперацииКомиссия);
	
	ЗапросВтИсходныеСчетаФактуры.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	0 КАК ИндексСтроки,
	|	СУММА(ТаблицаАвансы.Сумма) КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаАвансы.Сумма
	|		КОНЕЦ) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаАвансы.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|				ТОГДА """"
	|			ИНАЧЕ &КодВидаОперацииКомиссия
	|		КОНЕЦ) КАК КодВидаОперацииКомиссия,
	|	ТаблицаАвансы.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаАвансы.ИсходныйСчетФактура.Номер КАК НомерСчетаФактуры,
	|	ТаблицаАвансы.ИсходныйСчетФактура.Дата КАК ДатаСчетаФактуры,
	|	ТаблицаАвансы.ИсходныйСчетФактура.Исправление КАК Исправление,
	|	ТаблицаАвансы.ИсходныйСчетФактура.НомерИсправления КАК НомерИсправления,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаИсправления,
	|	ТаблицаАвансы.ИсходныйСчетФактура.СчетФактураОснование.Номер КАК НомерСчетаФактурыОснования,
	|	ТаблицаАвансы.ИсходныйСчетФактура.СчетФактураОснование.Дата КАК ДатаСчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И ТаблицаАвансы.Ссылка.Корректировочный
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка,
	|	ТаблицаАвансы.ИсходныйСчетФактура";
	ИсходныеСчетаФактуры = ЗапросВтИсходныеСчетаФактуры.Выполнить().Выгрузить();
	
	Для Каждого СтрокаСФ Из ИсходныеСчетаФактуры Цикл
		
		СтрокаСФ.НомерСчетаФактуры = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
					?(СтрокаСФ.Исправление, СтрокаСФ.НомерСчетаФактурыОснования, СтрокаСФ.НомерСчетаФактуры), 
					Ложь,
					Запрос.Параметры.ОбособленноеПодразделение, 
					Запрос.Параметры.ЦифровойИндексОбособленногоПодразделения);
		Если СтрокаСФ.Исправление Тогда
			СтрокаСФ.НомерИсправления = СтрокаСФ.НомерИсправления;
			СтрокаСФ.ДатаИсправления = СтрокаСФ.ДатаСчетаФактуры;
			СтрокаСФ.ДатаСчетаФактуры = СтрокаСФ.ДатаСчетаФактурыОснования;
		КонецЕсли;
		
		СтрокаСФ.ИндексСтроки = ИсходныеСчетаФактуры.Индекс(СтрокаСФ);
		
	КонецЦикла;
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("ИсходныеСчетаФактуры", ИсходныеСчетаФактуры);
	
	ЗапросВтИсходныеСчетаФактуры.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	ТаблицаАвансы.ИндексСтроки КАК ИндексСтроки,
	|	ТаблицаАвансы.Сумма КАК Сумма,
	|	ТаблицаАвансы.СуммаНДС КАК СуммаНДС,
	|	ТаблицаАвансы.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ТаблицаАвансы.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ТаблицаАвансы.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ТаблицаАвансы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ТаблицаАвансы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТаблицаАвансы.Исправление КАК Исправление,
	|	ТаблицаАвансы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаАвансы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаАвансы.НомерСчетаФактурыОснования КАК НомерСчетаФактурыОснования,
	|	ТаблицаАвансы.ДатаСчетаФактурыОснования КАК ДатаСчетаФактурыОснования
	|ПОМЕСТИТЬ ВтИсходныеСчетаФактуры
	|ИЗ
	|	&ИсходныеСчетаФактуры КАК ТаблицаАвансы";
	
	ЗапросВтИсходныеСчетаФактуры.Выполнить();
	
	
	Запрос.УстановитьПараметр("ВтИсходныеСчетаФактурыИнициализирована", Истина);

КонецПроцедуры

Процедура ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур = Новый Запрос;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("ТипыЗапасовСобственные", Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("КодВидаОперацииКомиссия", Запрос.Параметры.КодВидаОперацииКомиссия);
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	СУММА(ТаблицаАвансы.Сумма) КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА 0 
	|			ИНАЧЕ ТаблицаАвансы.Сумма
	|		КОНЕЦ)  КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА 0 
	|			ИНАЧЕ ТаблицаАвансы.СуммаНДС
	|		КОНЕЦ) КАК СуммаНДСКомиссия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА """"
	|		ИНАЧЕ &КодВидаОперацииКомиссия
	|	КОНЕЦ)  КАК КодВидаОперацииКомиссия
	|ПОМЕСТИТЬ ВтСуммыДляЖурналаУчетаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И НЕ ТаблицаАвансы.Ссылка.Корректировочный
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Ссылка КАК Ссылка,
	|	ПервичныйДокумент.СуммаРегл КАК Сумма,
	|	0                           КАК СуммаНДС,
	|	0                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                           КАК СуммаНДСКомиссия,
	|	""""                        КАК КодВидаОперацииКомиссия
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|	ПО
	|		СчетФактураВыданныйАванс.ДокументОснование = ПервичныйДокумент.Ссылка 
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка
	|	И НЕ СчетФактураВыданныйАванс.Корректировочный
	|";
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Выполнить();
	
	Запрос.УстановитьПараметр("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована", Истина);

КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос);
	ИнициализироватьВтИсходныеСчетаФактуры(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
#Область ТекстРучнаяКорректировка
	ТекстЗапросаРучнаяКорректировка = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|";
#КонецОбласти
	
#Область ТекстСторноИсправление
	ТекстЗапросаСторноИсправление = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0)
	|";
#КонецОбласти
	
#Область ТекстВыставленныйСчетФактураНаАванс
	ТекстВыставленныйСчетФактураНаАванс =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Покупатель                                КАК Контрагент,
	|	СчетФактураВыданныйАванс.Ссылка            КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления                           КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ВыставленВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                           КАК КодВидаОперации,
	|	&НомерНаПечать                             КАК НомерСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление ТОГДА
	|			&ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                      КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&НомерИсправления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&Период
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ИндексСтроки,
	|	&Валюта                                    КАК Валюта,
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма     КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС  КАК СуммаНДС,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                          КАК СуммаНДСРазницаУменьшение,
	|	0                                          КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                       КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                       КАК СчетФактураНеВыставляется,
	|
	|	&КППКонтрагента                            КАК КППКонтрагента,
	|	&ИННКонтрагента                            КАК ИННКонтрагента,
	|	
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДСКомиссия  КАК СуммаНДСКомиссия,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                          КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                          КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСуммыДляЖурналаУчетаСчетовФактур КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураВыданныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|";
#КонецОбласти
	
#Область ТекстКорректировочныйСчетФактураНаАванс
	ТекстКорректировочныйСчетФактураНаАванс =
	"ВЫБРАТЬ
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Покупатель                                КАК Контрагент,
	|	СчетФактураВыданныйАванс.Ссылка            КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаВыставления                           КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ВыставленВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                           КАК КодВидаОперации,
	|	СуммыДляЖурналаУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СуммыДляЖурналаУчетаСчетовФактур.ДатаСчетаФактуры  КАК ДатаСчетаФактуры,
	|	&НомерНаПечать                             КАК НомерКорректировочногоСчетаФактуры,
	|	ВЫБОР КОГДА &Исправление ТОГДА
	|			&ДатаСчетаФактурыОснования
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                      КАК ДатаКорректировочногоСчетаФактуры,
	|	СуммыДляЖурналаУчетаСчетовФактур.НомерИсправления  КАК НомерИсправления,
	|	СуммыДляЖурналаУчетаСчетовФактур.ДатаИсправления   КАК ДатаИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&НомерИсправления
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление ТОГДА
	|			&Период
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ                                      КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	СуммыДляЖурналаУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	&Валюта                                    КАК Валюта,
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма     КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС  КАК СуммаНДС,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма     КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                          КАК СуммаНДСРазницаУменьшение,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС  КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                       КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                       КАК СчетФактураНеВыставляется,
	|
	|	&КППКонтрагента                            КАК КППКонтрагента,
	|	&ИННКонтрагента                            КАК ИННКонтрагента,
	|	
	|	NULL КАК Посредник,
	|	NULL КАК СчетФактураВыданныйПокупателю,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДСКомиссия  КАК СуммаНДСКомиссия,
	|	0                                          КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                          КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	СуммыДляЖурналаУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК КодВидаСделки,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННПродавца,
	|	NULL КАК КПППродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки,
	|	NULL КАК Продавец
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтИсходныеСчетаФактуры КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураВыданныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|";
#КонецОбласти
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапросаРучнаяКорректировка);
	МассивТекстов.Добавить(ТекстЗапросаСторноИсправление);
	МассивТекстов.Добавить(ТекстВыставленныйСчетФактураНаАванс);
	МассивТекстов.Добавить(ТекстКорректировочныйСчетФактураНаАванс);
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтТаблицаАвансы(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтТаблицаАвансыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтТаблицаАвансы = Новый Запрос;
	ЗапросВтТаблицаАвансы.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Организация",            Запрос.Параметры.Организация);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("КодВидаОперации",        Запрос.Параметры.КодВидаОперации);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("Покупатель",             Запрос.Параметры.Покупатель);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ДокументОплаты",         Запрос.Параметры.ДокументОплаты);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ДатаПолученияАванса",    Запрос.Параметры.ДатаПолученияАванса);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ТипыЗапасовСобственные", Запрос.Параметры.ТипыЗапасовСобственные);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ВалютаРеглУчета",        Запрос.Параметры.ВалютаРеглУчета);
	ЗапросВтТаблицаАвансы.УстановитьПараметр("ВалютаУпрУчета",         Запрос.Параметры.ВалютаУпрУчета);
	
	ЗапросВтТаблицаАвансы.Текст =
	"ВЫБРАТЬ
	|	&ДатаПолученияАванса                                  КАК Период,
	|	&Организация                                          КАК Организация,
	|	&ДокументОплаты                                       КАК СчетФактура,
	|	&Покупатель                                           КАК Покупатель,
	|	&ДокументОплаты                                       КАК ДокументОплаты,
	|	&ДатаПолученияАванса                                  КАК ДатаОплаты,
	|	&ДатаПолученияАванса                                  КАК ДатаСобытия,
	|	ТаблицаАвансы.СтавкаНДС                               КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные) 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 КАК ВключатьВКнигуПродаж,
	|	
	|	СУММА(ТаблицаАвансы.СуммаНДС)                         КАК НДС,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|	КОНЕЦ)                                                КАК СуммаБезНДС,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|		ТОГДА ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ ТаблицаАвансы.СуммаНДС * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ) КАК НДСУпр,
	|	СУММА(ВЫБОР КОГДА ТаблицаАвансы.Сумма = 0 ТОГДА 0
	|		КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0 ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ)                                                КАК СуммаБезНДСУпр,
	|	
	|	ТаблицаАвансы.Ссылка.НомерПлатежноРасчетногоДокумента КАК НомерДокументаОплаты,
	|	ТаблицаАвансы.Ссылка.ДатаПлатежноРасчетногоДокумента  КАК ДатаДокументаОплаты,
	|	ТаблицаАвансы.Ссылка.НалогообложениеНДС               КАК НалогообложениеНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности                 КАК НаправлениеДеятельности,
	|	&КодВидаОперации                                      КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаАвансы
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПолученияАванса, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|			ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|	
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные) 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности,
	|	ТаблицаАвансы.Ссылка";
	
	Результат = ЗапросВтТаблицаАвансы.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтТаблицаАвансыИнициализирована", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;

	Если Запрос.Параметры.Исправление Тогда
	
		СчетФактураПредыдущееИсправление = СчетФактураПредыдущееИсправление(
			Запрос.Параметры.СчетФактураОснование, 
			Запрос.Параметры.НомерИсправления)
	
	Иначе
		СчетФактураПредыдущееИсправление = Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);

КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтТаблицаАвансы(Запрос);
	
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
#Область СторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	&Период                                           КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ                                             КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	&Исправление                                      КАК Исправление,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|	-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И Организация = &Организация
	|	И СчетФактура = &ДокументОплаты
	|	И ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДС > 0 ИЛИ НДСЗаписиКнигиПродаж.НДС > 0)
	|";
#КонецОбласти

#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА &Исправление 
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаАвансы.Период
	|	КОНЕЦ                                                      КАК Период,
	|	ТаблицаАвансы.Организация                                  КАК Организация,
	|	ТаблицаАвансы.Покупатель                                   КАК Покупатель,
	|	ВЫБОР КОГДА ТаблицаАвансы.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА &Ссылка
	|		ИНАЧЕ ТаблицаАвансы.СчетФактура
	|	КОНЕЦ                                                      КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)      КАК ВидЦенности,
	|	ТаблицаАвансы.СтавкаНДС                                    КАК СтавкаНДС,
	|	ТаблицаАвансы.ДатаОплаты                                   КАК ДатаОплаты,
	|	ТаблицаАвансы.ДокументОплаты                               КАК ДокументОплаты,
	|	ВЫБОР КОГДА ТаблицаАвансы.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	КОНЕЦ                                                      КАК Событие,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаАвансы.ДатаСобытия
	|	КОНЕЦ                                                      КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА &ДатаСчетаФактурыОснования
	|	КОНЕЦ                                                      КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                       КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка 
	|	КОНЕЦ                                                      КАК ИсправленныйСчетФактура,
	|	&Исправление                                               КАК Исправление,
	|	ТаблицаАвансы.СуммаБезНДС                                  КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС                                          КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ТаблицаАвансы.НаправлениеДеятельности                      КАК НаправлениеДеятельности,
	|	ТаблицаАвансы.НомерДокументаОплаты                         КАК НомерДокументаОплаты,
	|	ТаблицаАвансы.ДатаДокументаОплаты                          КАК ДатаДокументаОплаты
	|	
	|ИЗ
	|	ВтТаблицаАвансы КАК ТаблицаАвансы
	|	
	|ГДЕ
	|	ТаблицаАвансы.ВключатьВКнигуПродаж";
	
#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаСторноИсправление
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ " + Символы.ПС + ТекстЗапросаАвансы;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)      КАК ДатаОтражения
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	ВЫБОР ТИПЗНАЧЕНИЯ(&ДокументОплаты)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВЫБОР ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ТипОперации, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка))
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|				КОНЕЦ
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		КОГДА ТИП(Документ.РеализацияПодарочныхСертификатов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПодарочныхСертификатов)
	|		КОГДА ТИП(Документ.ОперацияПоПлатежнойКарте)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		КОГДА ТИП(Документ.ВзаимозачетЗадолженности)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.КорректировкаРеализации)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)
	|		КОГДА ТИП(Документ.ПриходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.ПриходныйКассовыйОрдер).ХозяйственнаяОперация
	|		КОГДА ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств)
	|			ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.ДокументОснование КАК Документ.ПоступлениеБезналичныхДенежныхСредств).ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	КОНЕЦ                                   КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Партнер, ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|	                                        КАК Партнер,
	|	&Контрагент                             КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|				ИЛИ ТИПЗНАЧЕНИЯ(&ДокументОплаты) = ТИП(Документ.КорректировкаРеализации)
	|			ТОГДА ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Договор, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК Договор,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	                                        КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Склад,
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|	                                        КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	&Валюта                                 КАК Валюта,
	|	&Сумма                                  КАК Сумма,
	//++ НЕ УТ
	|	ВЫБОР
	|		КОГДА &РучнаяКорректировкаЖурналаСФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВУчетеВручную)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                    КАК Статус,
	//-- НЕ УТ
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&ИнформацияПоИсправлению                КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураВыданныйАванс";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ДокументОплаты", "ДанныеДокумента.ДокументОснование");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);

КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Ссылка КАК Ссылка,
	|	СчетФактураВыданныйАванс.Ссылка КАК ИсходныйСчетФактура,
	|	ЛОЖЬ КАК Корректировочный
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИсходныйСчетФактура,
	|	ИСТИНА КАК Корректировочный
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И ТаблицаДокумента.Ссылка.Корректировочный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                               КАК Ссылка,
	|	ТаблицаОснований.ИсходныйСчетФактура                  КАК ДокументОснование,
	|	ТаблицаОснований.ИсходныйСчетФактура                  КАК ИсходныйДокумент,
	|	ТаблицаОснований.ИсходныйСчетФактура.Номер КАК НомерСчетаФактуры,
	|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
	|		ЕСТЬNULL(ТаблицаОснований.ИсходныйСчетФактура.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		ТаблицаОснований.ИсходныйСчетФактура.Дата
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
	|		ТаблицаОснований.ИсходныйСчетФактура.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерИсправленияСчетаФактуры,
	|	ВЫБОР КОГДА ТаблицаОснований.ИсходныйСчетФактура.Исправление ТОГДА
	|		ТаблицаОснований.ИсходныйСчетФактура.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаИсправленияСчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В(&МассивДокументов)
	|	И ТаблицаОснований.Ссылка.Корректировочный
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ИсходныйДокумент
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Содержание                         	КАК Содержание,
	|	ТаблицаДокумента.Сумма                              	КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              	КАК СуммаНДС,
	|	
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Номенклатура.ТипНоменклатуры В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ 													КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ЭтоНеВозвратнаяТара,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
	|
	|ПОМЕСТИТЬ РеализацияТоваровУслугТаблицаТоваров
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец = ТаблицаДокумента.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаДокумента.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(ВЫБРАТЬ Т.ИсходныйСчетФактура ИЗ СчетаФактуры КАК Т)
	|	И ТаблицаДокумента.Ссылка.Проведен
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НЕ ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьУслуги,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаТоваров.ЭтоТовар
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьТовары
	|ПОМЕСТИТЬ
	|	НоменклатураДокументов
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	СчетФактура.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетФактура.Номер КАК Номер,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактура.СчетФактураОснование.Дата, ДАТАВРЕМЯ(1,1,1))
	|	ИНАЧЕ 
	|		СчетФактура.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.НомерИсправления 
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР КОГДА СчетФактура.Исправление ТОГДА
	|		СчетФактура.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаИсправления,
	|	СчетФактура.Исправление КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	СчетФактура.Корректировочный КАК КорректировочныйСчетФактура,
	|	СчетФактура.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ СчетФактура.Организация
	|	КОНЕЦ КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	СчетФактура.Организация.Префикс КАК Префикс,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексПодразделения,
	|	СчетФактура.Контрагент КАК Грузополучатель,
	|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактура.Организация КАК Грузоотправитель,
	|	СчетФактура.Организация.КПП КАК КПППоставщика,
	|
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузоотправителя,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетГрузополучателя,
	|
	|	ВЫБОР КОГДА СчетФактура.КППКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА """"
	|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.КПП, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактура.КППКонтрагента
	|	КОНЕЦ КАК КПППокупателя,
	|
	|	ВЫБОР КОГДА СчетФактура.ИННКонтрагента ПОДОБНО """" ТОГДА
	|		ВЫБОР КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Контрагенты ТОГДА ЕстьNULL(ДанныеКонтрагента.ИНН, """")
	|			  КОГДА СчетФактура.Контрагент ССЫЛКА Справочник.Организации ТОГДА ЕстьNULL(ДанныеОрганизацийПокупатель.ИНН, """")
	|			  ИНАЧЕ """"
	|		КОНЕЦ
	|	ИНАЧЕ
	|		СчетФактура.ИННКонтрагента
	|	КОНЕЦ КАК ИННПокупателя,
	|
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	&ВалютаРеглУчета КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА НоменклатураДокументов.ЕстьУслуги
	|				И НЕ НоменклатураДокументов.ЕстьТовары
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураДокументов КАК НоменклатураДокументов
	|		ПО СчетФактура.Ссылка = НоменклатураДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеОрганизацийПокупатель
	|		ПО ДанныеОрганизацийПокупатель.Ссылка = СчетФактура.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|		ПО ДанныеКонтрагента.Ссылка = СчетФактура.Контрагент
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивДокументов)
	|	И СчетФактура.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора    КАК НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора  КАК ХарактеристикаНабора,
	|	МИНИМУМ(ТаблицаТоваров.НомерСтроки)  КАК НомерСтроки,
	|	СУММА(ТаблицаТоваров.Сумма)    		 КАК Сумма,
	|	СУММА(ТаблицаТоваров.СуммаНДС)       КАК СуммаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.НоменклатураНабора,
	|	ТаблицаТоваров.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	РеализацияТоваровУслугТаблицаТоваров КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СтавкаНДС
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ РеализацияТоваровУслугТаблицаТоваров КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|	ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	ИСТИНА 										КАК ПолныйНабор,
	|	Таблица.Сумма                             КАК Сумма,
	|	Таблица.СуммаНДС                          КАК СуммаНДС,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка) КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаДокумента.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаДокумента.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаДокумента.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	ТаблицаДокумента.ЭтоНабор КАК ЭтоНабор,
	|	ТаблицаДокумента.ПолныйНабор КАК ПолныйНабор,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(1))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаДокумента.Содержание КАК СТРОКА(1000))
	|		КОГДА ТаблицаДокумента.ЭтоНабор
	|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
	|		КОГДА ТаблицаДокумента.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаДокумента.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ &ПредставлениеПредварительнаяОплата
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК СтранаПроисхожденияКод,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ПОМЕСТИТЬ РезультатПоТабличнойЧасти
	|ИЗ
	|(
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка,
	|
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|
	|		ТаблицаТоваров.НоменклатураНабора,
	|		ТаблицаТоваров.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			ТаблицаТоваров.НомерСтроки
	|		КОНЕЦ КАК НомерСтрокиНаборы,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ПолныйНабор
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ПолныйНабор,
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.Содержание,
	|		ТаблицаТоваров.СтавкаНДС,
	|		ТаблицаТоваров.Сумма,
	|		ТаблицаТоваров.СуммаНДС,
	|		ТаблицаТоваров.Характеристика,
	|		ТаблицаТоваров.Упаковка
	|	ИЗ
	|		РеализацияТоваровУслугТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка
	|
	|	ГДЕ
	|		ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                			  ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЛОЖЬ КАК ЭтоКомплектующие,
	|		ИСТИНА КАК ЭтоНабор,
	|		0 КАК НомерСтроки,
	|		ВременнаяТаблицаНаборы.НомерСтроки КАК НомерСтрокиНаборы,
	|		ВременнаяТаблицаНаборы.ПолныйНабор КАК ПолныйНабор,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		"""",
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.Сумма,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК ТаблицаДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Таблица.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	Таблица.ЭтоНабор КАК ЭтоНабор,
	|	Таблица.ПолныйНабор КАК ПолныйНабор,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Таблица.НомерГТД КАК НомерГТД,
	|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Таблица.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	МАКСИМУМ(Таблица.СтавкаНДСДо) КАК СтавкаНДСДо,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Цена КАК Цена,
	|	СУММА(Таблица.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(Таблица.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Таблица.СуммаНДСДо) КАК СуммаНДСДо,
	|	СУММА(Таблица.СуммаНДСУвеличение) КАК РазницаНДСУвеличение,
	|	СУММА(Таблица.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(Таблица.СуммаСНДСДо) КАК СуммаСНДСДо,
	|	СУММА(Таблица.СуммаСНДСУвеличение) КАК РазницаСНДСУвеличение,
	|	МАКСИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	|	МАКСИМУМ(Таблица.НомерСтрокиНаборы) КАК НомерСтрокиНаборы,
	|	Таблица.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		КорректировочныеСФ.Ссылка КАК Ссылка,
	|		ТаблицаДо.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|		ТаблицаДо.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ТаблицаДо.НоменклатураНабора КАК НоменклатураНабора,
	|		ТаблицаДо.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		ТаблицаДо.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|		ТаблицаДо.ЭтоНабор КАК ЭтоНабор,
	|		ТаблицаДо.ПолныйНабор КАК ПолныйНабор,
	|		ТаблицаДо.Номенклатура КАК Номенклатура,
	|		ТаблицаДо.НоменклатураНаименование КАК НоменклатураНаименование,
	|		ТаблицаДо.Характеристика КАК Характеристика,
	|		ТаблицаДо.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|		ТаблицаДо.НомерГТД КАК НомерГТД,
	|		ТаблицаДо.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаДо.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|		ТаблицаДо.СтавкаНДС КАК СтавкаНДСДо,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|		ТаблицаДо.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ТаблицаДо.Количество КАК Количество,
	|		ТаблицаДо.Цена КАК Цена,
	|		ТаблицаДо.СуммаБезНДС КАК СуммаБезНДС,
	|		0 КАК СуммаНДС,
	|		ТаблицаДо.СуммаНДС КАК СуммаНДСДо,
	|		0 КАК СуммаНДСУвеличение,
	|		0 КАК СуммаСНДС,
	|		ТаблицаДо.СуммаСНДС КАК СуммаСНДСДо,
	|		0 КАК СуммаСНДСУвеличение,
	|		ТаблицаДо.НомерСтроки КАК НомерСтроки,
	|		ТаблицаДо.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
	|		ТаблицаДо.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
	|	ИЗ
	|		РезультатПоТабличнойЧасти КАК ТаблицаДо
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
	|			ПО КорректировочныеСФ.ИсходныйСчетФактура = ТаблицаДо.Ссылка
	|				И КорректировочныеСФ.Корректировочный
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПосле.Ссылка,
	|		ТаблицаПосле.ВариантПредставленияНабораВПечатныхФормах,
	|		ТаблицаПосле.ВариантРасчетаЦеныНабора,
	|		ТаблицаПосле.НоменклатураНабора,
	|		ТаблицаПосле.ХарактеристикаНабора,
	|		ТаблицаПосле.ЭтоКомплектующие,
	|		ТаблицаПосле.ЭтоНабор,
	|		ТаблицаПосле.ПолныйНабор,
	|		ТаблицаПосле.Номенклатура,
	|		ТаблицаПосле.НоменклатураНаименование,
	|		ТаблицаПосле.Характеристика,
	|		ТаблицаПосле.ХарактеристикаНаименование,
	|		ТаблицаПосле.НомерГТД,
	|		ТаблицаПосле.СтранаПроисхождения,
	|		ТаблицаПосле.СтранаПроисхожденияКод,
	|		НЕОПРЕДЕЛЕНО,
	|		ТаблицаПосле.СтавкаНДС,
	|		ТаблицаПосле.ЕдиницаИзмерения,
	|		ТаблицаПосле.Количество,
	|		ТаблицаПосле.Цена,
	|		ТаблицаПосле.СуммаБезНДС,
	|		0,
	|		0,
	|		ТаблицаПосле.СуммаНДС,
	|		0,
	|		0,
	|		ТаблицаПосле.СуммаСНДС,
	|		ТаблицаПосле.НомерСтроки,
	|		ТаблицаПосле.НомерСтрокиНаборы,
	|		ТаблицаПосле.ЭтоВозвратнаяТара
	|	ИЗ
	|		РезультатПоТабличнойЧасти КАК ТаблицаПосле
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
	|			ПО КорректировочныеСФ.ИсходныйСчетФактура = ТаблицаПосле.Ссылка
	|				И НЕ КорректировочныеСФ.Корректировочный
	|	ГДЕ
	|		ТаблицаПосле.Ссылка.Корректировочный
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КорректировочныеСФ.Ссылка,
	|		РезультатПоТабличнойЧасти.ВариантПредставленияНабораВПечатныхФормах,
	|		РезультатПоТабличнойЧасти.ВариантРасчетаЦеныНабора,
	|		РезультатПоТабличнойЧасти.НоменклатураНабора,
	|		РезультатПоТабличнойЧасти.ХарактеристикаНабора,
	|		РезультатПоТабличнойЧасти.ЭтоКомплектующие,
	|		РезультатПоТабличнойЧасти.ЭтоНабор,
	|		РезультатПоТабличнойЧасти.ПолныйНабор,
	|		РезультатПоТабличнойЧасти.Номенклатура,
	|		РезультатПоТабличнойЧасти.НоменклатураНаименование,
	|		РезультатПоТабличнойЧасти.Характеристика,
	|		РезультатПоТабличнойЧасти.ХарактеристикаНаименование,
	|		РезультатПоТабличнойЧасти.НомерГТД,
	|		РезультатПоТабличнойЧасти.СтранаПроисхождения,
	|		РезультатПоТабличнойЧасти.СтранаПроисхожденияКод,
	|		НЕОПРЕДЕЛЕНО,
	|		РезультатПоТабличнойЧасти.СтавкаНДС,
	|		РезультатПоТабличнойЧасти.ЕдиницаИзмерения,
	|		РезультатПоТабличнойЧасти.Количество,
	|		РезультатПоТабличнойЧасти.Цена,
	|		РезультатПоТабличнойЧасти.СуммаБезНДС,
	|		РезультатПоТабличнойЧасти.СуммаНДС,
	|		0,
	|		0,
	|		РезультатПоТабличнойЧасти.СуммаСНДС,
	|		0,
	|		0,
	|		РезультатПоТабличнойЧасти.НомерСтроки,
	|		РезультатПоТабличнойЧасти.НомерСтрокиНаборы,
	|		РезультатПоТабличнойЧасти.ЭтоВозвратнаяТара
	|	ИЗ
	|		РезультатПоТабличнойЧасти КАК РезультатПоТабличнойЧасти
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактуры КАК КорректировочныеСФ
	|			ПО КорректировочныеСФ.ИсходныйСчетФактура = РезультатПоТабличнойЧасти.Ссылка
	|	ГДЕ
	|		РезультатПоТабличнойЧасти.Ссылка.Корректировочный
	|	) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Характеристика,
	|	Таблица.НомерГТД,
	|	Таблица.ПолныйНабор,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.ЭтоНабор,
	|	Таблица.ХарактеристикаНаименование,
	|	Таблица.СтранаПроисхождения,
	|	Таблица.Ссылка,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ЭтоКомплектующие,
	|	Таблица.Номенклатура,
	|	Таблица.НоменклатураНаименование,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ЭтоВозвратнаяТара,
	|	Таблица.СтранаПроисхожденияКод,
	|	Таблица.ЕдиницаИзмерения,
	|	Таблица.Цена,
	|	Таблица.Количество
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Таблица.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	Таблица.ЭтоНабор КАК ЭтоНабор,
	|	Таблица.ПолныйНабор КАК ПолныйНабор,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Таблица.НомерГТД КАК НомерГТД,
	|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Таблица.СтранаПроисхожденияКод КАК СтранаПроисхожденияКод,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСДо,
	|	Таблица.СтавкаНДС КАК СтавкаНДС,
	|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Цена КАК Цена,
	|	Таблица.СуммаБезНДС КАК СуммаБезНДС,
	|	Таблица.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаНДСДо,
	|	0 КАК РазницаНДСУвеличение,
	|	Таблица.СуммаСНДС КАК СуммаСНДС,
	|	0 КАК СуммаСНДСДо,
	|	0 КАК РазницаСНДСУвеличение,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
	|	Таблица.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
	|ИЗ
	|	РезультатПоТабличнойЧасти КАК Таблица
	|ГДЕ
	|	НЕ Таблица.Ссылка.Корректировочный
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.Ссылка,
	|	МАКСИМУМ(Таблица.НомерСтрокиНаборы),
	|	Таблица.ЭтоНабор УБЫВ,
	|	МАКСИМУМ(Таблица.НомерСтроки)
	|ИТОГИ ПО
	|	Ссылка";
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеПредварительнаяОплата", НСтр("ru = 'Предварительная оплата'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[4];
	РезультатПоТабличнойЧасти = МассивРезультатов[11];
	РезультатПоИсходнымДанным = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоИсходнымДанным", РезультатПоИсходнымДанным);
	СтруктураДанныхДляПечати.Вставить("СчетФактураНаАванс", Истина);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает результат запроса по полученным от клиентов авансам для формирования счетов-фактур на аванс.
//
// Параметры:
// НачалоПериода - Дата - Начало периода, за котрый необходимо найти авансы
// КонецПериода - Дата - Окончание периода, за котовый необходимо найти авансы
// Организация - СправочникСсылка.Организации - Организация для отбора
// РасчетныйДокумент - ДокументСсылка - Расчетный документ для отбора.
//
// Возвращаемое значение:
// Результат запроса   - содержит данные о полученных авансах.
//
Функция РезультатЗапросаПоАвансам(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент, ПравилоОтбораАвансов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПериоды.ПериодДень КАК ПериодДень
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	&Периоды КАК ТаблицаПериоды
	|ГДЕ
	|	ВЫБОР &ПравилоОтбораАвансов
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА ТаблицаПериоды.ПериодДень = &КонецПериода
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|				ТОГДА КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, ДЕНЬ) = КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, МЕСЯЦ)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|				ТОГДА КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, ДЕНЬ) = КОНЕЦПЕРИОДА(ТаблицаПериоды.ПериодДень, МЕСЯЦ)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПервичныйДокумент).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход)
	|		ИНАЧЕ СУММА(-ВЫБОР
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					ИНАЧЕ Расчеты.ПредоплатаКонечныйОстаток + Расчеты.КВозвратуКонечныйОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК ВалютнаяСумма,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаРеглРасход)
	|		ИНАЧЕ СУММА(-Расчеты.ПредоплатаРеглКонечныйОстаток)
	|	КОНЕЦ КАК Сумма,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор.СтавкаНДС КАК СтавкаНДСПоУмолчанию
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			,
	|			ВЫБОР
	|				КОГДА &РасчетныйДокумент <> НЕОПРЕДЕЛЕНО
	|					ТОГДА РасчетныйДокумент = &РасчетныйДокумент
	|				ИНАЧЕ АналитикаУчетаПоПартнерам.Организация В (&Организации)
	|			КОНЕЦ
	|			И НЕ(ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
	|					И ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ЗаказКлиента ССЫЛКА Документ.РеализацияТоваровУслуг
	|					И ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.РеализацияТоваровУслуг).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					И ВЫРАЗИТЬ(ЗаказКлиента КАК Справочник.ДоговорыКонтрагентов).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))) КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеДС
	|		ПО Расчеты.РасчетныйДокумент = ПоступлениеДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Расчеты.РасчетныйДокумент = ДанныеПервичныхДокументов.Документ
	|		И Расчеты.АналитикаУчетаПоПартнерам.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ЕСТЬNULL(ПоступлениеДС.ДатаПроведенияБанком, ДанныеПервичныхДокументов.ДатаРегистратора) МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ &НоваяАрхитектураВзаиморасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПервичныйДокумент).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ,
	|	Расчеты.АналитикаУчетаПоПартнерам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Документ.РеализацияТоваровУслуг
	|			И ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов КАК Документ.РеализацияТоваровУслуг).ХозяйственнаяОперация =
	|				ЗНАЧЕНИЕ(Перечисление.Хозяйственныеоперации.РеализацияБезПереходаПраваСобственности)
	|			ТОГДА Расчеты.РасчетныйДокумент
	|		КОГДА Расчеты.ОбъектРасчетов ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|			И ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов КАК Документ.РеализацияТоваровУслуг).ХозяйственнаяОперация =
	|				ЗНАЧЕНИЕ(Перечисление.Хозяйственныеоперации.РеализацияБезПереходаПраваСобственности)
	|			ТОГДА Расчеты.РасчетныйДокумент
	|		ИНАЧЕ Расчеты.ОбъектРасчетов
	|	КОНЕЦ КАК ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПервичныйДокумент).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаПриход)
	|		ИНАЧЕ СУММА(ВЫБОР
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|							И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта = &ВалютаРеглУчета
	|						ТОГДА Расчеты.ПредоплатаРеглКонечныйОстаток
	|					ИНАЧЕ Расчеты.ПредоплатаКонечныйОстаток
	|				КОНЕЦ)
	|	КОНЕЦ КАК ВалютнаяСумма,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(Расчеты.ПредоплатаРеглПриход)
	|		ИНАЧЕ СУММА(Расчеты.ПредоплатаРеглКонечныйОстаток)
	|	КОНЕЦ КАК Сумма,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор.СтавкаНДС КАК СтавкаНДСПоУмолчанию
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			,
	|			ВЫБОР
	|				КОГДА &РасчетныйДокумент <> НЕОПРЕДЕЛЕНО
	|					ТОГДА РасчетныйДокумент = &РасчетныйДокумент
	|				ИНАЧЕ АналитикаУчетаПоПартнерам.Организация В (&Организации)
	|			КОНЕЦ
	|			И НЕ(ОбъектРасчетов ССЫЛКА Документ.ЗаказКлиента
	|					И ВЫРАЗИТЬ(ОбъектРасчетов КАК Документ.ЗаказКлиента).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ОбъектРасчетов ССЫЛКА Документ.РеализацияТоваровУслуг
	|					И ВЫРАЗИТЬ(ОбъектРасчетов КАК Документ.РеализацияТоваровУслуг).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					И ВЫРАЗИТЬ(ОбъектРасчетов КАК Справочник.ДоговорыКонтрагентов).НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))) КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеДС
	|		ПО Расчеты.РасчетныйДокумент = ПоступлениеДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Расчеты.РасчетныйДокумент = ДанныеПервичныхДокументов.Документ
	|		И Расчеты.АналитикаУчетаПоПартнерам.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ЕСТЬNULL(ПоступлениеДС.ДатаПроведенияБанком, ДанныеПервичныхДокументов.ДатаРегистратора) МЕЖДУ &НачалоПериода И &КонецПериода
	|	И &НоваяАрхитектураВзаиморасчетов
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПоступлениеБезналичныхДенежныхСредств).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПервичныйДокумент
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.ПервичныйДокумент).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ,
	|	Расчеты.АналитикаУчетаПоПартнерам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА СУММА(ДанныеРегистра.СуммаПриход)
	|		ИНАЧЕ СУММА(ДанныеРегистра.СуммаКонечныйОстаток)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ДанныеРегистра.СуммаПриход * (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма)) КАК ЧИСЛО(31,2))
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ДанныеРегистра.СуммаКонечныйОстаток * (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма)) КАК ЧИСЛО(31,2))
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель),
	|	NULL
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День, , ) КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|		ПО (РеализацияСертификата.ПодарочныйСертификат = ДанныеРегистра.ПодарочныйСертификат)
	|			И (РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияПодарочныхСертификатов КАК РеализацияПодарочныхСертификатов
	|		ПО (РеализацияСертификата.Регистратор = РеализацияПодарочныхСертификатов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|		ПО (РеализацияСертификата.Регистратор = ВводОстатков.Ссылка)
	|ГДЕ
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация) В (&Организации)
	|	И ДанныеРегистра.СуммаОборот <> 0
	|	И &РасчетныйДокумент = НЕОПРЕДЕЛЕНО
	|	И РеализацияСертификата.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Период,
	|	РеализацияСертификата.Регистратор,
	|	РеализацияСертификата.Период,
	|	РеализацияСертификата.ПодарочныйСертификат.Владелец.Валюта,
	|	ЕСТЬNULL(РеализацияПодарочныхСертификатов.Организация, ВводОстатков.Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.Организация КАК Организация,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	|	Расчеты.ДокументОснование КАК ДокументОснование,
	|	Расчеты.ВалютаДокумента КАК ВалютаДокумента,
	|	Расчеты.Контрагент КАК Контрагент,
	|	Расчеты.ВалютнаяСумма КАК ВалютнаяСумма,
	|	Расчеты.Сумма КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаНДС20 <> 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокументаСНДС20
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиНДС18)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОсновнаяСтавка,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаНДС10 <> 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокументаСНДС10
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиНДС10)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЛьготнаяСтавка,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ПКО_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ПБДС_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|					И ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ОПК_РасшифровкаПлатежа.Сумма
	|			КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|					И ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиБезНДС)
	|				ТОГДА ВозвратТоваровОтКлиента_Расшифровка.Сумма
	|			КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|					И ОперацияПоЯндексКассе.СуммаДокумента - (ОперацияПоЯндексКассе.СуммаДокументаСНДС20 + ОперацияПоЯндексКассе.СуммаДокументаСНДС10) > 0
	|				ТОГДА ОперацияПоЯндексКассе.СуммаДокумента - (ОперацияПоЯндексКассе.СуммаДокументаСНДС20 + ОперацияПоЯндексКассе.СуммаДокументаСНДС10)
	|			КОГДА Расчеты.СтавкаНДСПоУмолчанию В (&СтавкиБезНДС)
	|				ТОГДА Расчеты.ВалютнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	Расчеты КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПКО_РасшифровкаПлатежа
	|		ПО (ПКО_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ПКО_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПБДС_РасшифровкаПлатежа
	|		ПО (ПБДС_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ПБДС_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияПоПлатежнойКарте.РасшифровкаПлатежа КАК ОПК_РасшифровкаПлатежа
	|		ПО (ОПК_РасшифровкаПлатежа.Ссылка = Расчеты.ДокументОснование)
	|			И (ОПК_РасшифровкаПлатежа.Заказ = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияПоЯндексКассе КАК ОперацияПоЯндексКассе
	|		ПО (ОперацияПоЯндексКассе.Ссылка = Расчеты.ДокументОснование)
	|			И (ОперацияПоЯндексКассе.ОбъектРасчетов = Расчеты.ЗаказКлиента)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиента_Расшифровка
	|		ПО (ВозвратТоваровОтКлиента_Расшифровка.Ссылка = Расчеты.ДокументОснование)
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА НЕ ПКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ ПКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|		КОГДА НЕ ПБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ ПБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|		КОГДА НЕ ОПК_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ ОПК_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|		КОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ ВозвратТоваровОтКлиента_Расшифровка.СтавкаНДС В (&СтавкиБезНДС)
	|		КОГДА НЕ ОперацияПоЯндексКассе.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕ (ОперацияПоЯндексКассе.СуммаНДС10 = 0 И ОперацияПоЯндексКассе.СуммаНДС20 = 0)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.Организация,
	|	Расчеты.НаправлениеДеятельности,
	|	Расчеты.ДокументОснование,
	|	Расчеты.ВалютаДокумента,
	|	Расчеты.Контрагент,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.Сумма,
	|	Расчеты.ВалютнаяСумма
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент,
	|	ЗаказКлиента,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.ДокументОснование КАК ДокументОснование,
	|	Авансы.Контрагент КАК Контрагент,
	|	Авансы.ЗаказКлиента КАК ЗаказКлиента,
	|	Авансы.ПериодДень КАК ПериодДень,
	|	Авансы.ДатаСрезаОстатков КАК ДатаСрезаОстатков,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА Авансы.Период
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					И (РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) > 0
	|						ИЛИ РАЗНОСТЬДАТ(Авансы.Период, &КонецПериода, ДЕНЬ) = 0)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) >= 4
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.Период, ДЕНЬ, 4), ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И КОНЕЦПЕРИОДА(Авансы.ДатаСрезаОстатков, ДЕНЬ) = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			ИНАЧЕ &ПустаяДата
	|		КОНЕЦ) КАК ДатаФормированияСФ
	|ПОМЕСТИТЬ АвансыДляФормированияСФ_Предварительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТПериоды.ПериодДень КАК ПериодДень,
	|		ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА МИНИМУМ(ВТДанные.Период)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|				ТОГДА МИНИМУМ(ВТДанные.Период)
	|			ИНАЧЕ МАКСИМУМ(ВТДанные.Период)
	|		КОНЕЦ КАК ДатаСрезаОстатков,
	|		МИНИМУМ(ВТДанные.Период) КАК Период,
	|		ВТДанные.ДокументОснование КАК ДокументОснование,
	|		ВТДанные.ЗаказКлиента КАК ЗаказКлиента,
	|		ВТДанные.Контрагент КАК Контрагент
	|	ИЗ
	|		ВТПериоды КАК ВТПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДанные КАК ВТДанные
	|			ПО (ВЫБОР &ПравилоОтбораАвансов
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|						ТОГДА РАЗНОСТЬДАТ(ВТДанные.Период, ВТПериоды.ПериодДень, ДЕНЬ) МЕЖДУ 0 И 1
	|								И ВТДанные.ВалютнаяСумма > 0
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|						ТОГДА РАЗНОСТЬДАТ(ВТДанные.Период, ВТПериоды.ПериодДень, ДЕНЬ) МЕЖДУ 0 И 5
	|					ИНАЧЕ ВТПериоды.ПериодДень >= ВТДанные.Период
	|				КОНЕЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТДанные.ДокументОснование,
	|		ВТДанные.Контрагент,
	|		ВТДанные.ЗаказКлиента,
	|		ВТПериоды.ПериодДень) КАК Авансы
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ДокументОснование,
	|	Авансы.Контрагент,
	|	Авансы.ЗаказКлиента,
	|	Авансы.ПериодДень,
	|	Авансы.ДатаСрезаОстатков
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты)
	|				ТОГДА Авансы.Период
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеДня)
	|					И (РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) > 0
	|						ИЛИ РАЗНОСТЬДАТ(Авансы.Период, &КонецПериода, ДЕНЬ) = 0)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И РАЗНОСТЬДАТ(Авансы.Период, Авансы.ПериодДень, ДЕНЬ) >= 4
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Авансы.Период, ДЕНЬ, 4), ДЕНЬ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеПятиДней)
	|					И КОНЕЦПЕРИОДА(Авансы.ДатаСрезаОстатков, ДЕНЬ) = КОНЕЦПЕРИОДА(&КонецПериода, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеМесяца)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, МЕСЯЦ)
	|			КОГДА &ПравилоОтбораАвансов = ЗНАЧЕНИЕ(Перечисление.ПорядокРегистрацииСчетовФактурНаАванс.КромеЗачтенныхВТечениеНалоговогоПериода)
	|					И КОНЕЦПЕРИОДА(Авансы.ПериодДень, ДЕНЬ) >= КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|				ТОГДА КОНЕЦПЕРИОДА(Авансы.Период, КВАРТАЛ)
	|			ИНАЧЕ &ПустаяДата
	|		КОНЕЦ) <> &ПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент,
	|	ЗаказКлиента,
	|	ДатаФормированияСФ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(АвансыДляФормированияСФ.ДатаСрезаОстатков) КАК Период,
	|	ДатыФормированияСФ.ДатаФормированияСФ КАК ДатаФормированияСФ,
	|	ДатыФормированияСФ.Контрагент КАК Контрагент,
	|	ДатыФормированияСФ.ЗаказКлиента КАК ЗаказКлиента,
	|	ДатыФормированияСФ.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ АвансыДляФормированияСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(АвансыДляФормированияСФ.ДатаФормированияСФ) КАК ДатаФормированияСФ,
	|		АвансыДляФормированияСФ.Контрагент КАК Контрагент,
	|		АвансыДляФормированияСФ.ЗаказКлиента КАК ЗаказКлиента,
	|		АвансыДляФормированияСФ.ДокументОснование КАК ДокументОснование
	|	ИЗ
	|		АвансыДляФормированияСФ_Предварительная КАК АвансыДляФормированияСФ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АвансыДляФормированияСФ.ДокументОснование,
	|		АвансыДляФормированияСФ.Контрагент,
	|		АвансыДляФормированияСФ.ЗаказКлиента) КАК ДатыФормированияСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ АвансыДляФормированияСФ_Предварительная КАК АвансыДляФормированияСФ
	|		ПО ДатыФормированияСФ.ДокументОснование = АвансыДляФормированияСФ.ДокументОснование
	|			И ДатыФормированияСФ.Контрагент = АвансыДляФормированияСФ.Контрагент
	|			И ДатыФормированияСФ.ЗаказКлиента = АвансыДляФормированияСФ.ЗаказКлиента
	|			И ДатыФормированияСФ.ДатаФормированияСФ = АвансыДляФормированияСФ.ДатаФормированияСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыФормированияСФ.ДатаФормированияСФ,
	|	ДатыФормированияСФ.ДокументОснование,
	|	ДатыФормированияСФ.Контрагент,
	|	ДатыФормированияСФ.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.Организация КАК Организация,
	|	ВТДанные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АвансыДляФормированияСФ.ДатаФормированияСФ КАК ДатаФормированияСФ,
	|	АвансыДляФормированияСФ.Контрагент КАК Контрагент,
	|	АвансыДляФормированияСФ.ДокументОснование КАК ДокументОснование,
	|	ВТДанные.ВалютаДокумента КАК ВалютаДокумента,
	|	СУММА(ВТДанные.ВалютнаяСумма) КАК ВалютнаяСумма,
	|	СУММА(ВТДанные.Сумма) КАК Сумма,
	|	СУММА(ВТДанные.СуммаОсновнаяСтавка) КАК СуммаОсновнаяСтавка,
	|	СУММА(ВТДанные.СуммаЛьготнаяСтавка) КАК СуммаЛьготнаяСтавка,
	|	СУММА(ВТДанные.СуммаБезНДС) КАК СуммаБезНДС
	|ИЗ
	|	АвансыДляФормированияСФ КАК АвансыДляФормированияСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанные КАК ВТДанные
	|		ПО АвансыДляФормированияСФ.ДокументОснование = ВТДанные.ДокументОснование
	|			И АвансыДляФормированияСФ.Контрагент = ВТДанные.Контрагент
	|			И АвансыДляФормированияСФ.ЗаказКлиента = ВТДанные.ЗаказКлиента
	|			И АвансыДляФормированияСФ.Период = ВТДанные.Период
	|ГДЕ
	|	ВТДанные.ВалютнаяСумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДанные.Организация,
	|	ВТДанные.НаправлениеДеятельности,
	|	АвансыДляФормированияСФ.ДатаФормированияСФ,
	|	АвансыДляФормированияСФ.Контрагент,
	|	АвансыДляФормированияСФ.ДокументОснование,
	|	ВТДанные.ВалютаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаФормированияСФ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураВыданныйАванс.Ссылка КАК СчетФактура,
	|	СчетФактураВыданныйАванс.Дата КАК ДатаВыписки,
	|	СчетФактураВыданныйАванс.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактураВыданныйАванс.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	СчетФактураВыданныйАванс.Ответственный,
	|	СчетФактураВыданныйАванс.Подразделение,
	|	СчетФактураВыданныйАванс.Руководитель,
	|	СчетФактураВыданныйАванс.ГлавныйБухгалтер,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
	|				ТОГДА ТаблицаАвансы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАванса18,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|				ТОГДА ТаблицаАвансы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаАванса10,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНДС10
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|		ПО СчетФактураВыданныйАванс.Ссылка = ТаблицаАвансы.Ссылка
	|ГДЕ
	|	СчетФактураВыданныйАванс.ДокументОснование В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Расчеты.ДокументОснование
	|			ИЗ
	|				Расчеты КАК Расчеты)
	|	И НЕ СчетФактураВыданныйАванс.ПометкаУдаления
	|	И НЕ СчетФактураВыданныйАванс.Исправление
	|	И СчетФактураВыданныйАванс.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйАванс.Ссылка,
	|	СчетФактураВыданныйАванс.Дата,
	|	СчетФактураВыданныйАванс.ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданныйАванс.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактураВыданныйАванс.Контрагент
	|	КОНЕЦ,
	|	СчетФактураВыданныйАванс.Ответственный,
	|	СчетФактураВыданныйАванс.Подразделение,
	|	СчетФактураВыданныйАванс.Руководитель,
	|	СчетФактураВыданныйАванс.ГлавныйБухгалтер";
	
	ОписаниеТиповД = Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ПериодДень",ОписаниеТиповД);
	
	КонецПериода = ?(КонецПериода = '00010101', НачалоПериода, КонецПериода);
		
	ТекущийДень 	= КонецДня(НачалоПериода);
	ПоследнийДень 	= КонецДня(КонецПериода);
	
	Пока ТекущийДень <= ПоследнийДень Цикл
		НоваяСтрока = ТаблицаПериодов.Добавить();
		НоваяСтрока.ПериодДень = ТекущийДень;
		ТекущийДень = ТекущийДень + 86400;
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("Периоды",				ТаблицаПериодов);
	Запрос.УстановитьПараметр("НачалоПериода",			НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",			КонецПериода);
	Запрос.УстановитьПараметр("ПравилоОтбораАвансов",	ПравилоОтбораАвансов);
	Запрос.УстановитьПараметр("ПустаяДата",				'00010101');
	Запрос.УстановитьПараметр("РасчетныйДокумент",		РасчетныйДокумент);
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("Организации", Организация);
	Иначе
		ДоступныеОрганизации = Справочники.Организации.ДоступныеОрганизации();
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
			ДоступныеОрганизации, 
			Справочники.Организации.УправленческаяОрганизация);
		Запрос.УстановитьПараметр("Организации", ДоступныеОрганизации);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	
	СтавкиНДС18 = Новый Массив;
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	Запрос.УстановитьПараметр("СтавкиНДС18", СтавкиНДС18);
	
	СтавкиНДС10 = Новый Массив;
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("СтавкиНДС10", СтавкиНДС10);
	
	СтавкиБезНДС = Новый Массив;
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("СтавкиБезНДС", СтавкиБезНДС);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции

Функция СчетФактураПредыдущееИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления", НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	НомерИсправленияЧислом = ?(ЗначениеЗаполнено(НомерИсправления),Число(НомерИсправления),1);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "Документы.СчетФактураВыданныйАванс.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.4.12.36";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("8eddf06d-49df-46c7-9dd3-62bda3439606");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СчетФактураВыданныйАванс.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет дату получения аванса в СФ выданном на аванс.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ЗаказКлиента.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ДатаПолученияАванса = ДАТАВРЕМЯ(1,1,1)
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.СчетФактураВыданныйАванс;
	ПолноеИмяОбъекта = МетаданныеДокумента.ПолноеИмя();
	МетаданныеОснований = Новый Массив;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТипДокументОснование = МетаданныеДокумента.Реквизиты.ДокументОснование.Тип;
	Для Каждого Тип Из ТипДокументОснование.Типы() Цикл
		МетаданныеОснований.Добавить(СтрЗаменить(ОбщегоНазначения.СтроковоеПредставлениеТипа(Тип),"Ссылка",""));
	КонецЦикла;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ДополнительныеИсточникиДанных.Вставить("ДокументОснование");
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметры);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ДанныеРегистровОбновлены = 
		Не ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(
			Параметры.Очередь, "РегистрСведений.ДанныеПервичныхДокументов")
		И Не ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(
			Параметры.Очередь, "РегистрСведений.РеестрДокументов");
	
	Если Не ДанныеРегистровОбновлены Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ИмяВременнойТаблицы = "ВТЗаблокированоДокументыОснования";
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		МетаданныеОснований,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметры);
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ДанныеОбъекта.ВерсияДанных КАК ВерсияДанных,
	|	ДанныеОбъекта.ДокументОснование КАК ДокументОснование,
	|	ДанныеОбъекта.Организация КАК Организация,
	|	ДанныеОбъекта.Дата КАК Дата
	|ПОМЕСТИТЬ ВТСчетаФактуры
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданныйАванс КАК ДанныеОбъекта
	|		ПО ОбъектыДляОбработки.Ссылка = ДанныеОбъекта.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоДокументыОснования КАК ЗаблокированныеОснования
	|		ПО (ЗаблокированныеОснования.Ссылка = ДанныеОбъекта.ДокументОснование)
	|ГДЕ
	|	ЗаблокированныеОснования.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РеестрДокументов.ДатаОтраженияВУчете, ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ВТСчетаФактуры.Дата)) КАК ДатаОснования,
	|	ВТСчетаФактуры.Ссылка КАК Ссылка,
	|	ВТСчетаФактуры.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	ВТСчетаФактуры КАК ВТСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ВТСчетаФактуры.ДокументОснование = РеестрДокументов.Ссылка
	|			И ВТСчетаФактуры.Организация = РеестрДокументов.Организация
	|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВТСчетаФактуры.ДокументОснование = ДанныеПервичныхДокументов.Документ
	|			И ВТСчетаФактуры.Организация = ДанныеПервичныхДокументов.Организация
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		УстановленаБлокировка = Ложь;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				Выборка.Ссылка,
				Выборка.ВерсияДанных,
				Параметры.Очередь);
			
			Если ДокументОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			
			Если Не ЗначениеЗаполнено(ДокументОбъект.ДатаПолученияАванса) Тогда
				ДокументОбъект.ДатаПолученияАванса = Выборка.ДатаОснования;
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураВыданныйАванс) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ выданные (аванс)'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры выданные (аванс)'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураВыданныйАванс());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураВыданныйАванс());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураВыданныйАванс() Экспорт
	
	Возврат "Документ.СчетФактураВыданныйАванс.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецЕсли