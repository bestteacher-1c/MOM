#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Списание из эксплуатации".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеИзЭксплуатации) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеИзЭксплуатации.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеИзЭксплуатации);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнутреннееПотребление";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	
	Отчеты.МатериалыВЭксплуатации.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СписаниеИзЭксплуатации";
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ВЗапросеЕстьИсточник = Истина;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТМЦВЭксплуатации(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата КАК Период,
	|	ДанныеШапки.Номер КАК Номер,
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеИзЭксплуатации"));
	ЗначенияПараметровПроведения.Вставить("НазваниеДокумента", НСтр("ru='Списание из эксплуатации'"));
	ЗначенияПараметровПроведения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.СписаниеИзЭксплуатации);
	
	Если Реквизиты <> Неопределено Тогда
		ЗначенияПараметровПроведения.Вставить("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	КонецЕсли; 
	
	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Процедура ТМЦВЭксплуатации(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.ПартияТМЦВЭксплуатации КАК Партия,
	|	-ТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК ДатаДокументаИБ,
	|	ДанныеДокумента.Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	ДанныеДокумента.Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	ДанныеДокумента.Дата КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ8";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание (МБ-8)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Картинка = БиблиотекаКартинок.Печать;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ8") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МБ8",
			НСтр("ru = 'Акт на списание (МБ-8)'"),
			ПечатьМБ8(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.СписаниеИзЭксплуатации.ПФ_MXL_МБ8");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыМБ8(МассивДокументов)
	
	#Область ТекстЗапросаДанныхПечатнойФормыМБ8
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ Товары.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Товары.ПартияТМЦВЭксплуатации.Документ КАК ДокументПередачи,
	|	Товары.ПартияТМЦВЭксплуатации.Дата КАК ДатаПередачи,
	|	Товары.ПартияТМЦВЭксплуатации.СрокЭксплуатации КАК СрокСлужбы,
	|	Товары.ПартияТМЦВЭксплуатации.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	Товары.ПартияТМЦВЭксплуатации.КатегорияЭксплуатации.СчетУчета КАК СчетУчета,
	|	Товары.ПартияТМЦВЭксплуатации.КатегорияЭксплуатации.СчетЗабалансовогоУчета КАК СчетЗабалансовогоУчета,
	|	Товары.СтатьяРасходов КАК СтатьяРасходов,
	|	Товары.АналитикаРасходов КАК АналитикаРасходов,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КатегорияЭксплуатации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Организация КАК Организация,
	|	Товары.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатурныйНомер КАК НоменклатурныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Товары.ДокументПередачи КАК ДокументПередачи,
	|	Товары.ДатаПередачи КАК ДатаПередачи,
	|	Товары.СрокСлужбы КАК СрокСлужбы,
	|	Товары.Количество КАК Количество,
	|	Товары.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	ЕСТЬNULL(ПорядокОтражения.СчетУчета, Товары.СчетУчета) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокОтражения.СчетЗабалансовогоУчета, Товары.СчетЗабалансовогоУчета) КАК СчетЗабалансовогоУчета,
	|	Товары.СтатьяРасходов КАК СтатьяРасходов,
	|	Товары.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокОтражения
	|		ПО Товары.Организация = ПорядокОтражения.Организация
	|			И Товары.КатегорияЭксплуатации = ПорядокОтражения.КатегорияЭксплуатации
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ДокументПередачи,
	|	НомерСтроки,
	|	Ссылка,
	|	ПартияТМЦВЭксплуатации,
	|	Номенклатура,
	|	Характеристика,
	|	СтатьяРасходов,
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ЗаБаланс
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	Товары КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.СчетЗабалансовогоУчета,
	|	ИСТИНА
	|ИЗ
	|	Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Хозрасчетный.Счет КАК Счет,
	|	Хозрасчетный.Счет.Забалансовый КАК Забалансовый,
	|	СУММА(Хозрасчетный.КоличествоОборотДт) КАК Передано,
	|	СУММА(Хозрасчетный.СуммаОборотДт) КАК Сумма
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				,
	|				,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						СчетаУчета КАК Т),
	|				,
	|				(Субконто1, Субконто2) В
	|					(ВЫБРАТЬ
	|						Т.Номенклатура,
	|						Т.ПартияТМЦВЭксплуатации
	|					ИЗ
	|						СчетаУчета КАК Т),
	|				,
	|				) КАК Хозрасчетный
	|		ПО Товары.Организация = Хозрасчетный.Организация
	|			И Товары.ПартияТМЦВЭксплуатации = Хозрасчетный.Субконто2
	|			И Товары.Номенклатура = Хозрасчетный.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура,
	|	Хозрасчетный.Счет,
	|	Хозрасчетный.Счет.Забалансовый,
	|	Товары.Характеристика,
	|	Товары.Количество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ПартияТМЦВЭксплуатации,
	|	Номенклатура,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	ЕСТЬNULL(СтоимостьБаланс.Счет, СтоимостьЗаБаланс.Счет) КАК Счет,
	|	СУММА(ЕСТЬNULL(СтоимостьБаланс.Передано, СтоимостьЗаБаланс.Передано)) КАК Передано,
	|	СУММА(ЕСТЬNULL(СтоимостьБаланс.Сумма, СтоимостьЗаБаланс.Сумма)) КАК Сумма,
	|	СтоимостьЗаБаланс.Счет КАК СчетЗаБаланс,
	|	СУММА(СтоимостьЗаБаланс.Передано) КАК ПереданоЗаБаланс,
	|	СУММА(СтоимостьЗаБаланс.Сумма) КАК СуммаЗабаланс
	|ПОМЕСТИТЬ ПервоначальнаяСтоимость
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК СтоимостьБаланс
	|		ПО Товары.Ссылка = СтоимостьБаланс.Ссылка
	|			И Товары.ПартияТМЦВЭксплуатации = СтоимостьБаланс.ПартияТМЦВЭксплуатации
	|			И Товары.Номенклатура = СтоимостьБаланс.Номенклатура
	|			И Товары.СчетУчета = СтоимостьБаланс.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК СтоимостьЗаБаланс
	|		ПО Товары.Ссылка = СтоимостьЗаБаланс.Ссылка
	|			И Товары.ПартияТМЦВЭксплуатации = СтоимостьЗаБаланс.ПартияТМЦВЭксплуатации
	|			И Товары.Номенклатура = СтоимостьЗаБаланс.Номенклатура
	|			И Товары.СчетЗабалансовогоУчета = СтоимостьЗаБаланс.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.ПартияТМЦВЭксплуатации,
	|	Товары.Номенклатура,
	|	СтоимостьБаланс.Счет,
	|	СтоимостьЗаБаланс.Счет,
	|	Товары.Характеристика,
	|	Товары.Количество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Амортизация.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
	|	Амортизация.Номенклатура КАК Номенклатура,
	|	СУММА(Амортизация.СуммаБУ) КАК Сумма
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	Документ.ПогашениеСтоимостиТМЦВЭксплуатации.Расходы КАК Амортизация
	|ГДЕ
	|	Амортизация.Ссылка.Проведен
	|	И (Амортизация.ПартияТМЦВЭксплуатации, Амортизация.Номенклатура) В
	|			(ВЫБРАТЬ
	|				Товары.ПартияТМЦВЭксплуатации,
	|				Товары.Номенклатура
	|			ИЗ
	|				Товары КАК Товары)
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.ПартияТМЦВЭксплуатации,
	|	Амортизация.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияТМЦВЭксплуатации,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Организация КАК Организация,
	|	Товары.Подразделение КАК Подразделение,
	|	ПорядокОтражения.СчетУчета КАК СчетУчета,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЕСТЬNULL(ПорядокОтражения.СчетУчета, Товары.СтатьяРасходов.СчетУчета)) КАК НомерСчета
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияРасходов КАК ПорядокОтражения
	|		ПО Товары.Организация = ПорядокОтражения.Организация
	|			И Товары.Подразделение = ПорядокОтражения.Подразделение
	|			И Товары.СтатьяРасходов = ПорядокОтражения.СтатьяРасходов
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.Дата КАК ДатаСоставления,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Организация) КАК ПредставлениеОрганизации,
	|	ДанныеДокумента.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Подразделение) КАК ПредставлениеПодразделения,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Подразделение.ТекущийРуководитель) КАК РуководительПодразделения
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатурныйНомер КАК НоменклатурныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.ДатаПередачи КАК ДатаВводаВЭксплуатацию,
	|	Товары.СрокСлужбы КАК СрокСлужбы,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПервоначальнаяСтоимость.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Количество * ЕСТЬNULL(ПервоначальнаяСтоимость.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК СуммаПервоначальнойСтоимости,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Количество * ЕСТЬNULL(Амортизация.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК СуммаПогашеннойСтоимости
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
	|		ПО Товары.Ссылка = ПервоначальнаяСтоимость.Ссылка
	|			И Товары.НомерСтроки = ПервоначальнаяСтоимость.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Амортизация КАК Амортизация
	|		ПО Товары.ПартияТМЦВЭксплуатации = Амортизация.ПартияТМЦВЭксплуатации
	|			И Товары.Номенклатура = Амортизация.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(СуммаПервоначальнойСтоимости),
	|	СУММА(СуммаПогашеннойСтоимости)
	|ПО
	|	Ссылка";
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Выборка по табличным частям документов со всеми вспомогательными реквизитами
	// 		[1] - Уточнение счета учета по организации
	// 		[2] - ВСЕ счета учета
	// 		[3] - Обороты счета
	// 		[4] - Первоначальная стоимость
	// 		[5] - Амортизация
	// 		[6] - Выборка счетов учета расходов (Корр. счета)
	// 		[7] - Выборка шапкам документов
	// 		[8] - Результирующая выборка по товарам
	
	Возврат Новый Структура(
		"КоррСчета, РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[6],
		РезультатПакетаЗапросов[7],
		РезультатПакетаЗапросов[8]);
	
КонецФункции

Функция ПечатьМБ8(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать МБ-8 не требуется'");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_МБ8";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_МБ8");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
	ОбластьПустаяСтрокаТаблицы = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьПоследняяСтрокаТаблицы = Макет.ПолучитьОбласть("ПоследняяСтрока");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ДанныеДляПечатнойФормы = ПолучитьДанныеДляПечатнойФормыМБ8(МассивОбъектов);
	КоррСчетаПоДокументам = ДанныеДляПечатнойФормы.КоррСчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДокументы = ДанныеДляПечатнойФормы.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечатнойФормы.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОтборПоДокументу = Новый Структура("Ссылка", ВыборкаДокументы.Ссылка);
		
		КоррСчетаПоДокументам.Сбросить();
		КоррСчета = Новый Массив;
		Если КоррСчетаПоДокументам.НайтиСледующий(ОтборПоДокументу) Тогда
			ВыборкаКоррСчета = КоррСчетаПоДокументам.Выбрать();
			Пока ВыборкаКоррСчета.Следующий() Цикл
				КоррСчета.Добавить(ВыборкаКоррСчета.НомерСчета);
			КонецЦикла;
		КонецЕсли;
		КоррСчет = СтрСоединить(КоррСчета,",");
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(ОтборПоДокументу) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента));
		ОбластьШапка.Параметры.Счет = КоррСчет;
		
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента);
		ОбластьШапка.Параметры.РасшифровкаПодписиРуководителя = ОтветственныеЛица.РуководительНаименование;
		ОбластьШапка.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
		ОбластьШапка.Параметры.ПредставлениеГода = Формат(ВыборкаДокументы.ДатаДокумента, "ДФ=yyyy");
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			Если ЗначениеЗаполнено(ВыборкаСтроки.ХарактеристикаНаименование) Тогда
				НоменклатураНаименование = СтрШаблон("%1 (%2)",ВыборкаСтроки.НоменклатураНаименование,ВыборкаСтроки.ХарактеристикаНаименование);
				ОбластьСтрокаТаблицы.Параметры.НоменклатураНаименование = НоменклатураНаименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПоследняяСтрокаТаблицы);
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьИтого.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ВыборкаСтрокиПоДокументам.Количество,"Л=ru_RU",",,,,,,,,0");
		ОбластьИтого.Параметры.ИтогоСуммаПервоначальнойСтоимости = ВыборкаСтрокиПоДокументам.СуммаПервоначальнойСтоимости;
		ОбластьИтого.Параметры.ИтогоСуммаПогашеннойСтоимости = ВыборкаСтрокиПоДокументам.СуммаПогашеннойСтоимости;
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьПодвал.Параметры.ПредставлениеГода = Формат(ВыборкаДокументы.ДатаДокумента, "ДФ=yyyy");
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли