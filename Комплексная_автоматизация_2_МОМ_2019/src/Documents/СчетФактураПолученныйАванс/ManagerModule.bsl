#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура полученный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураПолученныйАванс.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураПолученныйАванс);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура полученный (аванс)".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииИсправительныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСРФКлиент.ИсправительныйСчетФактураПолученныйАванс";
		КомандаСоздатьНаОсновании.Идентификатор = "ИсправительныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Функция формирует представление счет-фактуры.
//
// Параметры:
//  Номер - Строка - Номер счета-фактуры;
//  Дата - Дата - Дата счета-фактуры;
//
// Возвращаемое значение:
//	Строка - Представление счета-фактуры.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен = Истина) Экспорт
	
	СтруктураШапки = Новый Структура;
	СтруктураШапки.Вставить("Дата", Дата);
	СтруктураШапки.Вставить("Номер", Номер);
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки, НСтр("ru='Счет-фактура'")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru='(не проведен)'"));
	КонецЕсли;
	Представление = СтрСоединить(МассивПодстрок, " ");
	
	Возврат Представление;
	
КонецФункции

// Формирует задания на отражение в книге продаж.
//
// Параметры:
//	ТаблицаИзменений - Массив - Документы, движения которых необходимо актуализировать.
//	ПризнакОтменаПроведения - Булево - Признак, что переформировать движения необходимо по причине отмены проведения документа.
//
Процедура СформироватьДвиженияПоКнигеПродаж(ТаблицаИзменений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаИзменений", ТаблицаИзменений);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Документ КАК РасчетныйДокумент
	|ПОМЕСТИТЬ ВтРасчеты
	|ИЗ
	|	&ТаблицаИзменений КАК ТаблицаИзменений
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка      КАК СчетФактура,
	|	СчетФактура.Организация КАК Организация,
	|	Расчеты.Период          КАК Месяц
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактура
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		Расчеты.РасчетныйДокумент = СчетФактура.ДокументОснование
	|
	|ГДЕ
	|	СчетФактура.Проведен
	|	И НЕ СчетФактура.Исправление
	//++ НЕ УТ 
	|	
	|ОБЪЕДИНИТЬ ВСЕ 
	| 
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	СчетФактура.Ссылка              КАК СчетФактура,
	|	СчетФактура.Организация         КАК Организация,
	|	ПриобретениеУслугПоЛизингу.Дата КАК Месяц
	|ИЗ 
	|	Документ.ПриобретениеУслугПоЛизингу КАК ПриобретениеУслугПоЛизингу
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасчеты КАК Расчеты
	|	ПО
	|		Расчеты.РасчетныйДокумент = ПриобретениеУслугПоЛизингу.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПоЛизингу.Начисления КАК ТаблицаНачисления 
	|	ПО
	|		ПриобретениеУслугПоЛизингу.Ссылка = ТаблицаНачисления.Ссылка
	| 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученныйАванс КАК СчетФактура 
	|	ПО 
	|		ТаблицаНачисления.ОбеспечительныйПлатеж = СчетФактура.ДокументОснование 
	| 
	|ГДЕ 
	|	СчетФактура.Проведен
	|	И НЕ СчетФактура.Исправление
	//-- НЕ УТ
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
КонецПроцедуры

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураВыданныйАванс - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Результат - Структура - Реквизиты счета-фактуры.
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СчетФактураПолученныйАванс.ДокументОснование                КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученныйАванс.Исправление
	|			ТОГДА СчетФактураПолученныйАванс.СчетФактураОснование
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                       КАК СчетФактураОснование,
	|	СчетФактураПолученныйАванс.Организация                      КАК Организация,
	|	СчетФактураПолученныйАванс.Контрагент                       КАК Контрагент,
	|	СчетФактураПолученныйАванс.КодВидаОперации                  КАК КодВидаОперации,
	|	СчетФактураПолученныйАванс.НалогообложениеНДС               КАК НалогообложениеНДС,
	|	СчетФактураПолученныйАванс.Подразделение                    КАК Подразделение,
	|	СчетФактураПолученныйАванс.Корректировочный                 КАК Корректировочный,
	|	СчетФактураПолученныйАванс.СводныйКорректировочный          КАК СводныйКорректировочный,
	|	СчетФактураПолученныйАванс.Авансы.(
	|		НаправлениеДеятельности,
	|		ИсходныйСчетФактура,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	) КАК Авансы,
	|	СчетФактураПолученныйАванс.Продавцы.(
	|		Продавец,
	|		ИННПродавца,
	|		КПППродавца
	|	) КАК Продавцы
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		Результат.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Результат.Вставить("Авансы", Выборка.Авансы.Выгрузить());
		Результат.Вставить("Продавцы", Выборка.Продавцы.Выгрузить());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Получает таблицу по выданным авансам и сформированным счетам-фактурам.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - организация, для которой выполняется получение авансов
// 	НачалоПериода - Дата - начало периода, за который получаются авансы.
// 	КонецПериода - Дата - окончание периода, за который получаются авансы.
// 	РасчетныйДокумент - ДокументСсылка - Расчетый документ, по которому получаются авансы.
// 											Если Неопределено, то по всем расченым документам.
// 
// Возвращаемое значение:
// 	ВыданныеАвансы - ТаблицаЗначений - сведения по выданным авансам, содержит колонки:
// 							* ДокументОснование - ДокументСсылка - документ аванса.
// 							* Номер - Строка - номер документа аванса.
// 							* Дата - Дата - дата документа аванса.
// 							* Поставщик - СправочникСсылка.Контрагенты - контрагент, которому выдан аванс.
// 							* ВалютаДокумента - СправочникСсылка.Валюта - валюта аванса.
// 							* ВалютнаяСумма - Число - сумма в валюте аванса.
// 							* СуммаАвансаРегл - Число - сумма аванса в валюте регл. учета.
// 							* СуммаАвансаРеглОсновнаяСтавка - Число - расчетная сумма НДС с аванса по основной ставке.
// 							* СуммаАвансаРеглЛьготнаяСтавка - Число - расчетная сумма НДС с аванса по льготной ставке.
// 							* НомерСчетаФактуры - Строка - номер счета-фактуры, зарегистрированного по документу аванса.
// 							* ДатаСчетаФактуры - Дата - дата счета-фактуры, зарегистрированного по документу аванса.
// 							* СуммаСчетаФактуры - Число - сумма счета-фактуры, зарегистрированного по документу аванса.
// 							* СчетФактура - ДокументСсылка.СчетФактураПолученныйАванс - Ссылка на счет-фактуру, зарегистрированный по документу аванса.
//
Функция ПолучитьВыданныеАвансы(Организация, НачалоПериода, КонецПериода, РасчетныйДокумент = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	Расчеты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|			КОГДА (Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход) > 0
	|				ТОГДА Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход
	|			КОГДА (Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход) < 0
	|				ТОГДА -(Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход)
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.ПредоплатаРеглПриход > 0
	|				ТОГДА Расчеты.ПредоплатаРеглПриход
	|			КОГДА Расчеты.ПредоплатаРеглРасход < 0
	|				ТОГДА -Расчеты.ПредоплатаРеглРасход
	|		КОНЕЦ) КАК СуммаАвансаРегл,
	|	АналитикаУчета.Контрагент КАК Поставщик,
	|	АналитикаУчета.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ Авансы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Обороты(
	|			&НачалоПериода, 
	|			&ОкончаниеПериода, 
	|			Запись, 
	|			(РасчетныйДокумент = &РасчетныйДокумент 
	|				ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)
	|			И НЕ(ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|				И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ЗаказПоставщику).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ЗаказПоставщику ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|				И ВЫРАЗИТЬ(ЗаказПоставщику КАК Документ.ПриобретениеТоваровУслуг).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|			И НЕ(ЗаказПоставщику ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				И ВЫРАЗИТЬ(ЗаказПоставщику КАК Справочник.ДоговорыКонтрагентов).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|) КАК Расчеты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
	|	ПО 
	|		Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
	|ГДЕ
	|	АналитикаУчета.Организация В (&МассивОрганизаций)
	|	И ((Расчеты.ПредоплатаПриход + Расчеты.КВозвратуПриход) > 0
	|		ИЛИ (Расчеты.ПредоплатаРасход + Расчеты.КВозвратуРасход <0))
	|	И (ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).ПроведеноБанком
	|			ИЛИ НЕ Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств)
	|	И НЕ &НоваяАрхитектураВзаиморасчетов
	|	И ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) В (&ТипыДокументовОснований)
	|	И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) В (&ТипыДокументовОснований)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ЗаказПоставщику,
	|	АналитикаУчета.Контрагент,
	|	АналитикаУчета.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	Расчеты.ОбъектРасчетов КАК ЗаказПоставщику,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРегл > 0
	|				ТОГДА Расчеты.ПредоплатаРегл
	|			КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта = &ВалютаРегламентированногоУчета
	|					И Расчеты.ПредоплатаРегл > 0
	|				ТОГДА Расчеты.ПредоплатаРегл
	|			ИНАЧЕ Расчеты.Предоплата
	|		КОНЕЦ) КАК ВалютнаяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА Расчеты.ПредоплатаРегл > 0
	|				ТОГДА Расчеты.ПредоплатаРегл
	|		КОНЕЦ) КАК СуммаАвансаРегл,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Поставщик,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
	|	
	|ГДЕ
	|	Расчеты.АналитикаУчетаПоПартнерам.Организация В (&МассивОрганизаций)
	|	И Расчеты.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Расчеты.Предоплата > 0
	|	И Расчеты.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)
	|	И ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) В (&ТипыДокументовОснований)
	|	И (Расчеты.РасчетныйДокумент = &РасчетныйДокумент ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)
	|	И (ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).ПроведеноБанком
	|			ИЛИ НЕ Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств)
	|	И НЕ(Расчеты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПоставщику
	|		И ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов КАК Документ.ЗаказПоставщику).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|	И НЕ(Расчеты.ОбъектРасчетов ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|		И ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов КАК Документ.ПриобретениеТоваровУслуг).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|	И НЕ(Расчеты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		И ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов КАК Справочник.ДоговорыКонтрагентов).ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.ОбъектРасчетов,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.РасходныйКассовыйОрдер).Валюта
	|		КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ТОГДА ВЫРАЗИТЬ(Расчеты.РасчетныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Валюта
	|		ИНАЧЕ Расчеты.Валюта
	|	КОНЕЦ
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.РасчетныйДокумент КАК ДокументОснование,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказПоставщику,
	|	Расчеты.Валюта КАК ВалютаДокумента,
	|	СУММА(Расчеты.СуммаПриход) КАК ВалютнаяСумма,
	|	СУММА(Расчеты.СуммаРеглПриход) КАК СуммаАвансаРегл,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Поставщик,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.Обороты(
	|			&НачалоПериода, 
	|			&ОкончаниеПериода, 
	|			Запись,
	|			ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|			И (РасчетныйДокумент = &РасчетныйДокумент 
	|				ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)) КАК Расчеты
	|	
	|ГДЕ
	|	Расчеты.СуммаРеглПриход > 0
	|	И Расчеты.АналитикаУчетаПоПартнерам.Организация В (&МассивОрганизаций)
	|	И ТИПЗНАЧЕНИЯ(Расчеты.РасчетныйДокумент) В (&ТипыДокументовОснований)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.РасчетныйДокумент,
	|	Расчеты.Валюта,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности
	//-- НЕ УТ
	|;
	|
	|
	|ВЫБРАТЬ
	|	Авансы.ДокументОснование КАК ДокументОснование,
	|	Авансы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	Авансы.ВалютаДокумента КАК ВалютаДокумента,
	|	Авансы.ВалютнаяСумма КАК ВалютнаяСумма,
	|	Авансы.СуммаАвансаРегл КАК СуммаАвансаРегл,
	|	Авансы.Поставщик КАК Поставщик,
	|	Авансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&ОсновныеСтавкиНДС)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&ОсновныеСтавкиНДС)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&ОсновныеСтавкиНДС)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОсновнаяСтавка,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&ЛьготныеСтавкиНДС)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&ЛьготныеСтавкиНДС)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&ЛьготныеСтавкиНДС)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаЛьготнаяСтавка,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ СБДС_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И СБДС_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА СБДС_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ РКО_РасшифровкаПлатежа.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА РКО_РасшифровкаПлатежа.Сумма
	|		КОГДА НЕ АО_ОплатаПоставщикам.Ссылка ЕСТЬ NULL И РКО_РасшифровкаПлатежа.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА АО_ОплатаПоставщикам.Сумма
	|		ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС
	|ПОМЕСТИТЬ АвансыПоСтавкам
	|ИЗ
	|	Авансы КАК Авансы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СБДС_РасшифровкаПлатежа
	|	ПО
	|		Авансы.ДокументОснование = СБДС_РасшифровкаПлатежа.Ссылка
	|		И Авансы.ЗаказПоставщику = СБДС_РасшифровкаПлатежа.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РКО_РасшифровкаПлатежа
	|	ПО
	|		Авансы.ДокументОснование = РКО_РасшифровкаПлатежа.Ссылка
	|		И Авансы.ЗаказПоставщику = РКО_РасшифровкаПлатежа.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.АвансовыйОтчет.ОплатаПоставщикам КАК АО_ОплатаПоставщикам
	|	ПО
	|		Авансы.ДокументОснование = АО_ОплатаПоставщикам.Ссылка
	|		И Авансы.ЗаказПоставщику = АО_ОплатаПоставщикам.Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	Авансы.ДокументОснование,
	|	Авансы.ЗаказПоставщику,
	|	Авансы.ВалютаДокумента,
	|	Авансы.Поставщик,
	|	Авансы.ВалютнаяСумма,
	|	Авансы.НаправлениеДеятельности,
	|	Авансы.СуммаАвансаРегл
	|;
	|
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыПоСтавкам.ДокументОснование       КАК ДокументОснование,
	|	АвансыПоСтавкам.ВалютаДокумента         КАК ВалютаДокумента,
	|	СУММА(АвансыПоСтавкам.ВалютнаяСумма)    КАК ВалютнаяСуммаВсего,
	|	СУММА(АвансыПоСтавкам.СуммаАвансаРегл)  КАК СуммаАвансаРеглВсего,
	|	АвансыПоСтавкам.Поставщик               КАК Поставщик,
	|	АвансыПоСтавкам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(АвансыПоСтавкам.СуммаОсновнаяСтавка)          КАК СуммаОсновнаяСтавка,
	|	СУММА(АвансыПоСтавкам.СуммаЛьготнаяСтавка)          КАК СуммаЛьготнаяСтавка,
	|	СУММА(АвансыПоСтавкам.СуммаБезНДС)      КАК СуммаБезНДС,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
	|	
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Номер, """") КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.ДатаСоставления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Сумма, 0) КАК СуммаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураПолученныйАванс.ПустаяСсылка)) КАК СчетФактура
	|
	|ИЗ
	|	АвансыПоСтавкам КАК АвансыПоСтавкам
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	ПО 
	|		АвансыПоСтавкам.ДокументОснование = СчетФактураПолученныйАванс.ДокументОснование
	|		И АвансыПоСтавкам.Поставщик = СчетФактураПолученныйАванс.Контрагент
	|		И СчетФактураПолученныйАванс.Проведен
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО 
	|		ДанныеПервичныхДокументов.Организация В (&МассивОрганизаций)
	|		И АвансыПоСтавкам.ДокументОснование = ДанныеПервичныхДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыПоСтавкам.ДокументОснование,
	|	АвансыПоСтавкам.ВалютаДокумента,
	|	АвансыПоСтавкам.Поставщик,
	|	АвансыПоСтавкам.НаправлениеДеятельности,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1,1,1)),
	|	
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Номер, """"),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.ДатаСоставления, ДАТАВРЕМЯ(1,1,1)),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Сумма, 0),
	|	ЕСТЬNULL(СчетФактураПолученныйАванс.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураПолученныйАванс.ПустаяСсылка))
	|
	|
	|ИМЕЮЩИЕ
	|	СУММА(АвансыПоСтавкам.СуммаОсновнаяСтавка) <> 0 
	|	ИЛИ СУММА(АвансыПоСтавкам.СуммаЛьготнаяСтавка) <> 0
	|	ИЛИ (СУММА(АвансыПоСтавкам.СуммаОсновнаяСтавка) = 0 
	|		И СУММА(АвансыПоСтавкам.СуммаЛьготнаяСтавка) = 0 
	|		И СУММА(АвансыПоСтавкам.СуммаБезНДС) = 0)
	|";
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("МассивОрганизаций", Справочники.Организации.ДоступныеОрганизации());
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода",                  НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",               КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("РасчетныйДокумент",              РасчетныйДокумент);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	// Могут быть авансы по документам для которых не вводится счет-фактура
	Запрос.УстановитьПараметр("ТипыДокументовОснований",        Метаданные.Документы.СчетФактураПолученныйАванс.Реквизиты.ДокументОснование.Тип.Типы());
	
	ОсновныеСтавкиНДС = Новый Массив;
	ОсновныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС18);
	ОсновныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС20);
	ОсновныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	ОсновныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	Запрос.УстановитьПараметр("ОсновныеСтавкиНДС", ОсновныеСтавкиНДС);
	
	ЛьготныеСтавкиНДС = Новый Массив;
	ЛьготныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС10);
	ЛьготныеСтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("ЛьготныеСтавкиНДС", ЛьготныеСтавкиНДС);
	
	СтавкиБезНДС = Новый Массив;
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("СтавкиБезНДС", СтавкиБезНДС);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыданныеАвансы = Новый ТаблицаЗначений();
	ВыданныеАвансы.Колонки.Добавить("ДокументОснование");
	ВыданныеАвансы.Колонки.Добавить("Номер");
	ВыданныеАвансы.Колонки.Добавить("Дата");
	ВыданныеАвансы.Колонки.Добавить("Поставщик");
	ВыданныеАвансы.Колонки.Добавить("НаправлениеДеятельности");
	ВыданныеАвансы.Колонки.Добавить("ВалютаДокумента");
	
	ВыданныеАвансы.Колонки.Добавить("ВалютнаяСумма");
	
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРегл");
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРеглОсновнаяСтавка");
	ВыданныеАвансы.Колонки.Добавить("СуммаАвансаРеглЛьготнаяСтавка");
	
	ВыданныеАвансы.Колонки.Добавить("НомерСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("ДатаСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("СуммаСчетаФактуры");
	ВыданныеАвансы.Колонки.Добавить("СчетФактура");
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ВыданныеАвансы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Коэффициенты = Новый Массив; 
		Если Выборка.СуммаОсновнаяСтавка = 0 И Выборка.СуммаЛьготнаяСтавка = 0 И Выборка.СуммаБезНДС = 0 Тогда
			// Всю сумму отнесем к основной ставке
			Коэффициенты.Добавить(1);
		Иначе
			Коэффициенты.Добавить(Выборка.СуммаОсновнаяСтавка);
		КонецЕсли;
		Коэффициенты.Добавить(Выборка.СуммаЛьготнаяСтавка);
		Коэффициенты.Добавить(Выборка.СуммаБезНДС);
		
		ВалютнаяСуммаПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Выборка.ВалютнаяСуммаВсего,
			Коэффициенты);
		
		СуммаАвансаРеглПоСтавкам = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			Выборка.СуммаАвансаРеглВсего,
			Коэффициенты);
			
		НоваяСтрока.ВалютнаяСумма   = ВалютнаяСуммаПоСтавкам[0] + ВалютнаяСуммаПоСтавкам[1];
		
		НоваяСтрока.СуммаАвансаРегл = СуммаАвансаРеглПоСтавкам[0] + СуммаАвансаРеглПоСтавкам[1];
		
		НоваяСтрока.СуммаАвансаРеглОсновнаяСтавка = СуммаАвансаРеглПоСтавкам[0];
		НоваяСтрока.СуммаАвансаРеглЛьготнаяСтавка = СуммаАвансаРеглПоСтавкам[1];
		
	КонецЦикла;
	
	Возврат ВыданныеАвансы;
	
КонецФункции

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ПолученныеАвансы = ПолучитьВыданныеАвансы(Параметры.МассивОрганизаций, Параметры.НачалоПериода, Параметры.КонецПериода);
	
	Возврат ПолученныеАвансы.НайтиСтроки(Новый Структура("СчетФактура", ПустаяСсылка())).Количество();
	
КонецФункции

//++ НЕ УТ

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт

	ТекстВосстановлениеНДС = "
	|ВЫБРАТЬ // Восстановление НДС с выданного аванса <Дт 76.ВА :: Кт 68.02, 68.52>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Регистр.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.ДокументОснование КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгентаПоОтдельнымВидамТоваров)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС)
	|	КОНЕЦ КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Восстановление НДС с выданного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|		И Регистр.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные),
	|								 ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)) 
	|";
		
	ТекстВычетНДС = "
	|ВЫБРАТЬ // Принятие к вычету НДС с выданного аванса <Дт 68.02, 68.52, 000 :: Кт 76.ВА>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Регистр.Период, Операция.Дата) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент 
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|				И СписаниеДС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|				И СписаниеДС.ТипПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный)
	|		КОГДА Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгентаПоОтдельнымВидамТоваров)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС)
	|	КОНЕЦ КАК СчетДт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	КОНЕЦ КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным) КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДокументОснование КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Принятие к вычету НДС с выданного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|		И Регистр.ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные),
	|								 ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеДС
	|	ПО СписаниеДС.Ссылка = Операция.ДокументОснование
	|";
	
	ТекстНачислениеНДС = "
	|ВЫБРАТЬ // Начисление НДС с полученного аванса <Дт 76.АВ :: Кт 68.52, 000>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Регистр.Период, Операция.Дата) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.ДокументОснование КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент 
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгентаПоОтдельнымВидамТоваров)
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР
	|		КОГДА Операция.ДокументОснование ССЫЛКА Документ.ВводОстатков
	|			ИЛИ Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|	КОНЕЦ КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС с полученного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|		И Регистр.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент)
	|";
	
	ТекстВычетНДСПриЗачетеАванса = "
	|ВЫБРАТЬ // Принятие к вычету НДС с полученного аванса <Дт 68.52 :: Кт 76.АВ>
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Регистр.Период, Операция.Дата) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК Сумма,
	|	ЕСТЬNULL(Регистр.НДСУпр,0) КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	&ВалютаРеглУчета КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгентаПоОтдельнымВидамТоваров) КАК СчетДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(Регистр.НДС,0) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	Регистр.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам) КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДокументОснование КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Принятие к вычету НДС с полученного аванса"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК Регистр
	|	ПО
	|		Регистр.Регистратор = Операция.Ссылка
	|		И Регистр.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент)
	|";
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстВосстановлениеНДС);	
	ТекстыОтражения.Добавить(ТекстВычетНДС);
	ТекстыОтражения.Добавить(ТекстНачислениеНДС);	
	ТекстыОтражения.Добавить(ТекстВычетНДСПриЗачетеАванса);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает список кодов видов операций,
//	предусмотренных законодательством.
//
// Возвращаемое значение:
//	СписокЗначений - Список кодов видов операций.
//
Функция СписокКодовВидовОпераций() Экспорт
	
	СписокКодов = Новый СписокЗначений;
	
	СписокКодов.Добавить("02", НСтр("ru='02 Авансы выданные'"));
	СписокКодов.Добавить("05", НСтр("ru='05 Авансы выданные по договорам комиссии'"));
	СписокКодов.Добавить("12", НСтр("ru='12 Авансы выданные за товары, права, п.3,4,5.1 статьи 154, пп.1-4 статьи 155 НК'"));
	СписокКодов.Добавить("28", НСтр("ru='28 Сводный комиссионный счет-фактура на аванс, п.3.1 статьи 169 НК'"));
	
	Возврат СписокКодов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ДанныеДокумента.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	ДанныеДокумента.Контрагент                            КАК Контрагент,
	|	ДанныеДокумента.ИННКонтрагента                        КАК ИННКонтрагента,
	|	ДанныеДокумента.КППКонтрагента                        КАК КППКонтрагента,
	|	ДанныеДокумента.ДокументОснование                     КАК ДокументОснование,
	|	ДанныеДокумента.Дата                                  КАК ДатаПолучения,
	|	ДанныеДокумента.КодВидаОперации                       КАК КодВидаОперации,
	|	ДанныеДокумента.ДатаСоставления                       КАК Период,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.ПолученВЭлектронномВиде               КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.Исправление                           КАК Исправление,
	|	ДанныеДокумента.НомерИсправления                      КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления                       КАК ДатаИсправления,
	|	ДанныеДокумента.СчетФактураОснование                  КАК СчетФактураОснование,
	|	ДанныеДокумента.СчетФактураОснование.Дата             КАК ДатаСчетаФактурыОснования,
	|	ДанныеДокумента.СоставленКомиссионеромОтИмениПродавца КАК СоставленКомиссионеромОтИмениПродавца,
	|	ДанныеДокумента.СводныйКомиссионный                   КАК СводныйКомиссионный,
	|	ДанныеДокумента.Проведен                              КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                       КАК ПометкаУдаления,
	|	ДанныеДокумента.Комментарий                           КАК Комментарий,
	|	ДанныеДокумента.Подразделение                         КАК Подразделение,
	|	ДанныеДокумента.Ответственный                         КАК Ответственный,
	|	ДанныеДокумента.РучнаяКорректировкаЖурналаСФ          КАК РучнаяКорректировкаЖурналаСФ,
	|	ДанныеДокумента.Сумма                                 КАК Сумма
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                    Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",               Реквизиты.Организация);
	Запрос.УстановитьПараметр("НалогообложениеНДС",        Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("Поставщик",                 Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ИННКонтрагента",            Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",            Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("ДокументОплаты",            Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("КодВидаОперации",           Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Номер",                     Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",             Реквизиты.Номер);
	Запрос.УстановитьПараметр("ДатаСоставления",           Реквизиты.Период);
	Запрос.УстановитьПараметр("Дата",                      Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("Подразделение",             Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",             Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("СводныйКомиссионный",       Реквизиты.СводныйКомиссионный);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",   Реквизиты.ПолученВЭлектронномВиде);
	Запрос.УстановитьПараметр("Исправление",               Реквизиты.Исправление);
	Запрос.УстановитьПараметр("НомерИсправления",          Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",           Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("СчетФактураОснование",      Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("ДатаСчетаФактурыОснования", Реквизиты.ДатаСчетаФактурыОснования);
	Запрос.УстановитьПараметр("Проведен",                  Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",           Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",   ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученныйАванс"));
	Запрос.УстановитьПараметр("Комментарий",               Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Сумма",                     Реквизиты.Сумма);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",           Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",            Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("Контрагент",                Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("РучнаяКорректировкаЖурналаСФ", Реквизиты.РучнаяКорректировкаЖурналаСФ);
	Запрос.УстановитьПараметр("СоставленКомиссионеромОтИмениПродавца", Реквизиты.СоставленКомиссионеромОтИмениПродавца);
	
	УчетНДСРФ.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос);
	
	ИнформацияПоИсправлению = "";
	Если Реквизиты.Исправление
		И ЗначениеЗаполнено(Реквизиты.ДатаИсправления)
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления% от %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", Реквизиты.НомерИсправления);
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Реквизиты.ДатаИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запрос.Параметры.Исправление Тогда
		СчетФактураПредыдущееИсправление = 
			ПредыдущийСчетФактураИсправление(
				Запрос.Параметры.СчетФактураОснование, 
				Запрос.Параметры.НомерИсправления);
	Иначе
		СчетФактураПредыдущееИсправление = Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);
	
КонецПроцедуры

Процедура УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос)
	
	Если Запрос.Параметры.Свойство("НомерДокументаОплаты") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросДанныхПервичныхДокументов = Новый Запрос;
	ЗапросДанныхПервичныхДокументов.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеПервичныхДокументов.Номер            КАК НомерДокументаОплаты,
	|	ДанныеПервичныхДокументов.Дата             КАК ДатаДокументаОплаты,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОснования
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Организация = &Организация
	|	И ДанныеПервичныхДокументов.Документ = &ДокументОснование";
	
	ЗапросДанныхПервичныхДокументов.УстановитьПараметр("Организация",       Запрос.Параметры.Организация);
	ЗапросДанныхПервичныхДокументов.УстановитьПараметр("ДокументОснование", Запрос.Параметры.ДокументОплаты);
	
	Результат = ЗапросДанныхПервичныхДокументов.Выполнить();
	
	Если Результат.Пустой() Тогда
		Запрос.УстановитьПараметр("НомерДокументаОплаты", "");
		Запрос.УстановитьПараметр("ДатаДокументаОплаты",  Дата('0001,01,01'));
		Запрос.УстановитьПараметр("ДатаОснования",        Дата('0001,01,01'));
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Запрос.УстановитьПараметр("НомерДокументаОплаты", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
			Выборка.НомерДокументаОплаты, Ложь, Истина));
		Запрос.УстановитьПараметр("ДатаДокументаОплаты",  Выборка.ДатаДокументаОплаты);
		Запрос.УстановитьПараметр("ДатаОснования",        Выборка.ДатаОснования);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьВтАвансы(Запрос) 
	
	Если Запрос.Параметры.Свойство("ВтАвансыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтАвансы = Новый Запрос;
	ЗапросВтАвансы.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтАвансы.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтАвансы.УстановитьПараметр("ДатаОснования", Запрос.Параметры.ДатаОснования);
	ЗапросВтАвансы.УстановитьПараметр("ВалютаУпрУчета", Запрос.Параметры.ВалютаУпрУчета);
	ЗапросВтАвансы.УстановитьПараметр("ВалютаРеглУчета", Запрос.Параметры.ВалютаРеглУчета);
	
	ЗапросВтАвансы.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаАвансы.Сумма <> 0
	|			ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК НДС,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаАвансы.Сумма <> 0
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|				ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|				ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаБезНДСУпр,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|		ТОГДА ТаблицаАвансы.СуммаНДС
	|		ИНАЧЕ ТаблицаАвансы.СуммаНДС * КурсВалютыУпрУчета.Кратность / КурсВалютыУпрУчета.Курс
	|	КОНЕЦ) КАК НДСУпр
	|ПОМЕСТИТЬ втАвансы
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования, Валюта = &ВалютаУпрУчета) КАК КурсВалютыУпрУчета
	|			ПО &ВалютаРеглУчета <> &ВалютаУпрУчета
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.НаправлениеДеятельности,
	|	ТаблицаАвансы.СтавкаНДС
	|";
	ЗапросВтАвансы.Выполнить();
	
	Запрос.УстановитьПараметр("ВтАвансыИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтИсходныеСчетаФактуры(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтИсходныеСчетаФактурыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтИсходныеСчетаФактуры = Новый Запрос;
	ЗапросВтИсходныеСчетаФактуры.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	
	ЗапросВтИсходныеСчетаФактуры.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	0 КАК ИндексСтроки,
	|	СУММА(ТаблицаАвансы.Сумма) КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС,
	|	ТаблицаАвансы.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
	|	ТаблицаАвансы.ИсходныйСчетФактура.Номер КАК НомерСчетаФактуры,
	|	ТаблицаАвансы.ИсходныйСчетФактура.ДатаСоставления КАК ДатаСчетаФактуры,
	|	ТаблицаАвансы.ИсходныйСчетФактура.Исправление КАК Исправление,
	|	ТаблицаАвансы.ИсходныйСчетФактура.НомерИсправления КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА ТаблицаАвансы.ИсходныйСчетФактура.Исправление
	|			ТОГДА ТаблицаАвансы.ИсходныйСчетФактура.ДатаИсправления
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|	КОНЕЦ КАК ДатаИсправления,
	|	ТаблицаАвансы.ИсходныйСчетФактура.СчетФактураОснование.Номер КАК НомерСчетаФактурыОснования,
	|	ТаблицаАвансы.ИсходныйСчетФактура.СчетФактураОснование.Дата КАК ДатаСчетаФактурыОснования
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И ТаблицаАвансы.Ссылка.Корректировочный
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка,
	|	ТаблицаАвансы.ИсходныйСчетФактура";
	ИсходныеСчетаФактуры = ЗапросВтИсходныеСчетаФактуры.Выполнить().Выгрузить();
	
	Для Каждого СтрокаСФ Из ИсходныеСчетаФактуры Цикл
		
		СтрокаСФ.НомерСчетаФактуры = ?(СтрокаСФ.Исправление, СтрокаСФ.НомерСчетаФактурыОснования, СтрокаСФ.НомерСчетаФактуры);
		Если СтрокаСФ.Исправление Тогда
			СтрокаСФ.ДатаСчетаФактуры = СтрокаСФ.ДатаСчетаФактурыОснования;
			СтрокаСФ.НомерИсправления = СтрокаСФ.НомерИсправления;
			СтрокаСФ.ДатаИсправления = СтрокаСФ.ДатаИсправления;
		КонецЕсли;
		
		СтрокаСФ.ИндексСтроки = ИсходныеСчетаФактуры.Индекс(СтрокаСФ);
		
	КонецЦикла;
	ЗапросВтИсходныеСчетаФактуры.УстановитьПараметр("ИсходныеСчетаФактуры", ИсходныеСчетаФактуры);
	
	ЗапросВтИсходныеСчетаФактуры.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка КАК Ссылка,
	|	ТаблицаАвансы.ИндексСтроки КАК ИндексСтроки,
	|	ТаблицаАвансы.Сумма КАК Сумма,
	|	ТаблицаАвансы.СуммаНДС КАК СуммаНДС,
	|	ТаблицаАвансы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ТаблицаАвансы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТаблицаАвансы.Исправление КАК Исправление,
	|	ТаблицаАвансы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаАвансы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаАвансы.НомерСчетаФактурыОснования КАК НомерСчетаФактурыОснования,
	|	ТаблицаАвансы.ДатаСчетаФактурыОснования КАК ДатаСчетаФактурыОснования
	|ПОМЕСТИТЬ ВтИсходныеСчетаФактуры
	|ИЗ
	|	&ИсходныеСчетаФактуры КАК ТаблицаАвансы";
	
	ЗапросВтИсходныеСчетаФактуры.Выполнить();
	
	
	Запрос.УстановитьПараметр("ВтИсходныеСчетаФактурыИнициализирована", Истина);

КонецПроцедуры

Процедура ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур = Новый Запрос;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаАвансы.Ссылка          КАК Ссылка,
	|	СУММА(ТаблицаАвансы.Сумма)    КАК Сумма,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВтСуммыДляЖурналаУчетаСчетовФактур
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|ГДЕ
	|	ТаблицаАвансы.Ссылка = &Ссылка
	|	И НЕ ТаблицаАвансы.Ссылка.Корректировочный
	|	И ТИПЗНАЧЕНИЯ(ТаблицаАвансы.Ссылка.ДокументОснование) <> ТИП(Документ.ПервичныйДокумент)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАвансы.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйАванс.Ссылка КАК Ссылка,
	|	ПервичныйДокумент.СуммаРегл       КАК Сумма,
	|	0                                 КАК СуммаНДС
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|	ПО
	|		СчетФактураПолученныйАванс.ДокументОснование = ПервичныйДокумент.Ссылка
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка
	|	И НЕ СчетФактураПолученныйАванс.Корректировочный
	|";
	ЗапросВтСуммыДляЖурналаУчетаСчетовФактур.Выполнить();
	
	Запрос.УстановитьПараметр("ВтСуммыДляЖурналаУчетаСчетовФактурИнициализирована", Истина);

КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтСуммыДляЖурналаУчетаСчетовФактур(Запрос);
	ИнициализироватьВтИсходныеСчетаФактуры(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Регистратор = &Ссылка
	|	И &РучнаяКорректировкаЖурналаСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// сторно по исправленному
	|ВЫБРАТЬ 
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// обычный (не сводный комиссионный и не корректировочный)
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Поставщик                                                                  КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                                       КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&ДатаСоставления                                                            КАК ДатаСчетаФактуры,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &НомерИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &ДатаИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	
	|	ТаблицаПродавцы.Продавец                                                    КАК Продавец,
	|	ТаблицаПродавцы.ИННПродавца                                                 КАК ИННПродавца,
	|	ТаблицаПродавцы.КПППродавца                                                 КАК КПППродавца,
	|	0                                                                           КАК ИндексСтроки,
	|	&ВалютаРеглУчета                                                            КАК Валюта,
	|	
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма                                      КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС                                   КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента                                                             КАК ИННКонтрагента,
	|	&КППКонтрагента                                                             КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0                                                                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                                                           КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                        КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСуммыДляЖурналаУчетаСчетовФактур КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс.Продавцы КАК ТаблицаПродавцы
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = ТаблицаПродавцы.Ссылка
	|		И &СоставленКомиссионеромОтИмениПродавца
	|		И НЕ &СводныйКомиссионный
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// корректировочный
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Поставщик                                                                  КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                                       КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	СуммыДляЖурналаУчетаСчетовФактур.НомерСчетаФактуры                          КАК НомерСчетаФактуры,
	|	СуммыДляЖурналаУчетаСчетовФактур.ДатаСчетаФактуры                           КАК ДатаСчетаФактуры,
	|	&Номер                                                                      КАК НомерКорректировочногоСчетаФактуры,
	|	&ДатаСоставления                                                            КАК ДатаКорректировочногоСчетаФактуры,
	|	СуммыДляЖурналаУчетаСчетовФактур.НомерИсправления                           КАК НомерИсправления,
	|	СуммыДляЖурналаУчетаСчетовФактур.ДатаИсправления                            КАК ДатаИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &НомерИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &ДатаИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	
	|	ТаблицаПродавцы.Продавец                                                    КАК Продавец,
	|	ТаблицаПродавцы.ИННПродавца                                                 КАК ИННПродавца,
	|	ТаблицаПродавцы.КПППродавца                                                 КАК КПППродавца,
	|	СуммыДляЖурналаУчетаСчетовФактур.ИндексСтроки                               КАК ИндексСтроки,
	|	&ВалютаРеглУчета                                                            КАК Валюта,
	|	
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма                                      КАК СуммаПоСчетуФактуре,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС                                   КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	СуммыДляЖурналаУчетаСчетовФактур.Сумма                                      КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	СуммыДляЖурналаУчетаСчетовФактур.СуммаНДС                                   КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента                                                             КАК ИННКонтрагента,
	|	&КППКонтрагента                                                             КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0                                                                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                                                           КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                        КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтИсходныеСчетаФактуры КАК СуммыДляЖурналаУчетаСчетовФактур
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = СуммыДляЖурналаУчетаСчетовФактур.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйАванс.Продавцы КАК ТаблицаПродавцы
	|	ПО
	|		СчетФактураПолученныйАванс.Ссылка = ТаблицаПродавцы.Ссылка
	|		И &СоставленКомиссионеромОтИмениПродавца
	|		И НЕ &СводныйКомиссионный
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка = &Ссылка
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// сводный комиссионный
	|ВЫБРАТЬ
	|	&Период                                                                     КАК Период,
	|	&Организация                                                                КАК Организация,
	|	&Поставщик                                                                  КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения                                                              КАК ДатаВыставленияПолучения,
	|	ВЫБОР
	|		КОГДА &ПолученВЭлектронномВиде
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ                                                                       КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                                                            КАК КодВидаОперации,
	|	&Номер                                                                      КАК НомерСчетаФактуры,
	|	&ДатаСоставления                                                            КАК ДатаСчетаФактуры,
	|	NULL                                                                        КАК НомерКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаКорректировочногоСчетаФактуры,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &НомерИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК НомерИсправления,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &ДатаИсправления 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                       КАК ДатаИсправления,
	|	NULL                                                                        КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL                                                                        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	
	|	Продавцы.Продавец                                                           КАК Продавец,
	|	Продавцы.ИННПродавца                                                        КАК ИННПродавца,
	|	Продавцы.КПППродавца                                                        КАК КПППродавца,
	|	Продавцы.НомерСтроки                                                        КАК ИндексСтроки,
	|	&ВалютаРеглУчета                                                            КАК Валюта,
	|	
	|	0                                                                           КАК СуммаПоСчетуФактуре,
	|	0                                                                           КАК СуммаНДС,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                                                           КАК СуммаНДСРазницаУменьшение,
	|	0                                                                           КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                                                        КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ                                                                        КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента                                                             КАК ИННКонтрагента,
	|	&КППКонтрагента                                                             КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0                                                                           КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                                                           КАК СуммаНДСКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                                                           КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                                                        КАК КодВидаОперацииКомиссия,
	|	""""                                                                        КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Продавцы КАК Продавцы
	|ГДЕ
	|	Продавцы.Ссылка = &Ссылка
	|	И &СоставленКомиссионеромОтИмениПродавца
	|	И &СводныйКомиссионный
	|	И НЕ &РучнаяКорректировкаЖурналаСФ
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	ИнициализироватьВтАвансы(Запрос);
	
#Область ТекстЗапросаИсправлениеСторно
	ТекстЗапросаИсправлениеСторно =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < НАЧАЛОПЕРИОДА(&Дата, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < НАЧАЛОПЕРИОДА(&Дата, Квартал)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	&СчетФактураПредыдущееИсправление КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС КАК СтавкаНДС,
	|	-НДСЗаписиКнигиПокупок.СуммаБезНДС КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПокупок.НДС КАК НДС,
	|	-НДСЗаписиКнигиПокупок.НДСУпр КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК РегламентнаяОперация
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок 
	|ГДЕ
	|	&Исправление
	|	И НДСЗаписиКнигиПокупок.Регистратор <> &Ссылка
	|	И НДСЗаписиКнигиПокупок.Организация = &Организация
	|	И НДСЗаписиКнигиПокупок.Поставщик = &Поставщик
	|	И НДСЗаписиКнигиПокупок.СчетФактура = &ДокументОплаты
	|	И НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И НДСЗаписиКнигиПокупок.СуммаБезНДС > 0
	|";
#КонецОбласти
	
#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы = "
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	&Поставщик КАК Поставщик,
	|	&ДокументОплаты КАК СчетФактура,
	|	&ДатаОснования КАК ДатаОплаты,
	|	&ДокументОплаты КАК ДокументОплаты,
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	NULL КАК КорректируемыйПериод,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	ТаблицаАвансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	"""" КАК КодВидаОперации,
	|	&НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	&ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК РегламентнаяОперация
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		втАвансы КАК ТаблицаАвансы
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|";
#КонецОбласти
	
#Область СохранениеРегламентныхЗаписей
	ТекстЗапросаСохранениеРегламентныхЗаписей =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.Событие КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС КАК НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация КАК РегламентнаяОперация
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок 
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НДСЗаписиКнигиПокупок.Регистратор = &Ссылка
	|	И НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|";
#КонецОбласти
	
	ТекстЗапроса = ТекстЗапросаИсправлениеСторно 
		+ Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" 
		+ Символы.ПС + ТекстЗапросаАвансы
		+ Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" 
		+ Символы.ПС + ТекстЗапросаСохранениеРегламентныхЗаписей;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыРеквизитовПервичныхДокументов(Запрос);
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	ИнициализироватьВтАвансы(Запрос);
	
#Область СторноИсправление
	ТекстЗапросаСторноИсправление = "
	|
	|ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&Организация                                      КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	&Период                                           КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ                                             КАК КорректируемыйПериод,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период,КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|	КОНЕЦ                                             КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	&Исправление                                      КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-НДСЗаписиКнигиПродаж.СуммаБезНДС                 КАК СуммаБезНДС,
	|	-НДСЗаписиКнигиПродаж.НДС                         КАК НДС,
	|	-НДСЗаписиКнигиПродаж.НДСУпр                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	""""                                              КАК КодВидаОперации,
	|	НЕОПРЕДЕЛЕНО                                      КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК ВидДеятельностиНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	&Исправление
	|	И &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НДСЗаписиКнигиПродаж.Регистратор <> &Ссылка
	|	И НДСЗаписиКнигиПродаж.Организация = &Организация
	|	И НДСЗаписиКнигиПродаж.СчетФактура = &ДокументОплаты
	|	И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура = &СчетФактураПредыдущееИсправление
	|	И НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)
	|	И (НДСЗаписиКнигиПродаж.СуммаБезНДС > 0 ИЛИ НДСЗаписиКнигиПродаж.НДС > 0)
	|";
#КонецОбласти

#Область ТекстЗапросаАвансы
	ТекстЗапросаАвансы =
	"ВЫБРАТЬ
	|	ВЫБОР 
	|		КОГДА &Исправление 
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования
	|	КОНЕЦ                                                      КАК Период,
	|	&Организация                                               КАК Организация,
	|	&Поставщик                                                 КАК Покупатель,
	|	&ДокументОплаты                                            КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент)
	|	                                                           КАК ВидЦенности,
	|	ТаблицаАвансы.СтавкаНДС                                    КАК СтавкаНДС,
	|	&ДатаОснования                                             КАК ДатаОплаты,
	|	&ДокументОплаты                                            КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПолученАванс)    КАК Событие,
	|	ВЫБОР 
	|		КОГДА &Исправление
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования
	|	КОНЕЦ                                                      КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА &Исправление И НАЧАЛОПЕРИОДА(&ДатаСчетаФактурыОснования, КВАРТАЛ) < НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ)
	|			ТОГДА &ДатаСчетаФактурыОснования
	|	КОНЕЦ                                                      КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                       КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА &Исправление
	|			ТОГДА &Ссылка 
	|	КОНЕЦ                                                      КАК ИсправленныйСчетФактура,
	|	&Исправление                                               КАК Исправление,
	|	НЕОПРЕДЕЛЕНО                                               КАК ДатаСчетаФактурыКомиссионера,
	|	ТаблицаАвансы.СуммаБезНДС                                  КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДС                                          КАК НДС,
	|	ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА ТаблицаАвансы.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                      КАК НДСУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.НачислениеНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ТаблицаАвансы.НаправлениеДеятельности                      КАК НаправлениеДеятельности,
	|	&НомерДокументаОплаты                                      КАК НомерДокументаОплаты,
	|	&ДатаДокументаОплаты                                       КАК ДатаДокументаОплаты,
	|	""""                                                       КАК КодВидаОперации,
	|	НЕОПРЕДЕЛЕНО                                               КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                               КАК ВидДеятельностиНДС
	|	
	|ИЗ
	|	втАвансы КАК ТаблицаАвансы
	|	
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)";
	
#КонецОбласти
	
#Область СохранениеРегламентныхЗаписей
	ТекстЗапросаСохранениеРегламентныхЗаписей = "
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период                       КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация                  КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия                  КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод         КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста   КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление                  КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС                  КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС                          КАК НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр                       КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация         КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Регистратор = &Ссылка
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|";
#КонецОбласти

	ТекстЗапроса = ТекстЗапросаСторноИсправление
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ "
		+ Символы.ПС + ТекстЗапросаАвансы
		+ Символы.ПС + " ОБЪЕДИНИТЬ ВСЕ "
		+ Символы.ПС + ТекстЗапросаСохранениеРегламентныхЗаписей;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата                      КАК Период,
	|	&Организация               КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Дата                    КАК Период,
	|	&Организация             КАК Организация,
	|	НАЧАЛОПЕРИОДА(ВЫБОР 
	|		КОГДА &Исправление 
	|			ТОГДА &Период
	|		ИНАЧЕ &ДатаОснования
	|	КОНЕЦ, ДЕНЬ)             КАК ДатаОтражения
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

Функция ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеОснований";
	
	ТекстЗапроса =  "
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка					КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|		ВЫБОР ШапкаОснования.ТипОперации
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)
	|		КОНЕЦ									КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование		КАК ДокументОснование,
	|		ШапкаОснования.Склад					КАК МестоХранения,
	|		НЕОПРЕДЕЛЕНО							КАК Договор,
	|		ШапкаОснования.Партнер					КАК Партнер
	|	ПОМЕСТИТЬ ВтДанныеОснований
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка											КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности							КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование								КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО													КАК МестоХранения,
	|		ШапкаОснования.Договор											КАК Договор,
	|		ШапкаОснования.Партнер											КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка											КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности							КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование								КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО													КАК МестоХранения,
	|		ШапкаОснования.Договор											КАК Договор,
	|		ШапкаОснования.Партнер											КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка											КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности							КАК НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование								КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО													КАК МестоХранения,
	|		ШапкаОснования.Договор											КАК Договор,
	|		ШапкаОснования.Партнер											КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка													КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО															КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование										КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО															КАК МестоХранения,
	|		НЕОПРЕДЕЛЕНО															КАК Договор,
	|		НЕОПРЕДЕЛЕНО															КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка													КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование										КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО															КАК МестоХранения,
	|		ШапкаОснования.Договор													КАК Договор,
	|		ШапкаОснования.Партнер													КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка													КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование										КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО															КАК МестоХранения,
	|		ШапкаОснования.Договор													КАК Договор,
	|		ШапкаОснования.Партнер													КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка															КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО																	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщикуПодотчетнымЛицом)	КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование												КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО																	КАК МестоХранения,
	|		НЕОПРЕДЕЛЕНО																	КАК Договор,
	|		НЕОПРЕДЕЛЕНО																	КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка															КАК Ссылка,
	|		ШапкаОснования.НаправлениеДеятельности											КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)			КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование												КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО																	КАК МестоХранения,
	|		ШапкаОснования.Договор															КАК Договор,
	|		ШапкаОснования.Партнер															КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка															КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО																	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)			КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование												КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО																	КАК МестоХранения,
	|		НЕОПРЕДЕЛЕНО																	КАК Договор,
	|		НЕОПРЕДЕЛЕНО																	КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗадолженности КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка															КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО																	КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаЗадолженности)			КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.ДокументОснование												КАК ДокументОснование,
	|		НЕОПРЕДЕЛЕНО																	КАК МестоХранения,
	|		ШапкаОснования.Договор															КАК Договор,
	|		ШапкаОснования.Партнер															КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаЗадолженностиПоФинансовымИнструментам КАК ШапкаОснования
	|			ПО ДанныеДокумента.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                  КАК Ссылка,
	|	&Дата                                    КАК ДатаДокументаИБ,
	|	&Номер                                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                 КАК ТипСсылки,
	|	&Организация                             КАК Организация,
	|	ЕСТЬNULL(ТаблицаОснований.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику))
	|	                                         КАК ХозяйственнаяОперация,
	|	ТаблицаОснований.Партнер                 КАК Партнер,
	|	&Контрагент                              КАК Контрагент,
	|	ТаблицаОснований.Договор                 КАК Договор,
	|	ТаблицаОснований.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОснований.МестоХранения           КАК МестоХранения,
	|	&Подразделение                           КАК Подразделение,
	|	&Ответственный                           КАК Ответственный,
	|	&Комментарий                             КАК Комментарий,
	|	&ВалютаРеглУчета                         КАК Валюта,
	|	&Сумма                                   КАК Сумма,
	//++ НЕ УТ
	|	ВЫБОР
	|		КОГДА &РучнаяКорректировкаЖурналаСФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВУчетеВручную)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК Статус,
	//-- НЕ УТ
	|	&Проведен                                КАК Проведен,
	|	&ПометкаУдаления                         КАК ПометкаУдаления,
	|	ЛОЖЬ                                     КАК ДополнительнаяЗапись,
	|	&ИнформацияПоИсправлению                 КАК Дополнительно,
	|	&ДатаСоставления                         КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                           КАК НомерПервичногоДокумента,
	|	&Дата                                    КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеОснований КАК ТаблицаОснований
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураПолученныйАванс";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	ЗначенияПараметров.Вставить("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтДанныеОснований", ТекстЗапросаВтДанныеОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", 	ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", 		ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПредыдущийСчетФактураИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка           КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления",     НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	Если Не ЗначениеЗаполнено(НомерИсправления) Тогда
		НомерИсправленияЧислом = 0;
	Иначе
		НомерИсправленияЧислом = Число(НомерИсправления);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураПолученныйАванс) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ полученные (аванс)'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры полученные (аванс)'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураПолученныйАванс());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураПолученныйАванс());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураПолученныйАванс() Экспорт
	
	Возврат "Документ.СчетФактураПолученныйАванс.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#КонецОбласти


#КонецЕсли
