#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
КонецПроцедуры

// Добавляет команду создания документа "Регламентная операция".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РегламентнаяОперация) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РегламентнаяОперация.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РегламентнаяОперация);
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьРеглУчет";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	#Область СписаниеКосвенныхРасходовОСНО
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	КосвенныеРасходы.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	КосвенныеРасходы.СуммаРеглОСНО КАК Сумма,
	|	КосвенныеРасходы.СуммаУпрОСНО КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовОСНО) КАК ВидСчетаДт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаДт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеДт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	КосвенныеРасходы.СуммаРеглОСНО - КосвенныеРасходы.ПостояннаяРазницаОСНО - КосвенныеРасходы.ВременнаяРазницаОСНО КАК СуммаНУДт,
	|	КосвенныеРасходы.ПостояннаяРазницаОСНО КАК СуммаПРДт,
	|	КосвенныеРасходы.ВременнаяРазницаОСНО КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаКт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеКт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	КосвенныеРасходы.СуммаРеглОСНО - КосвенныеРасходы.ПостояннаяРазницаОСНО - КосвенныеРасходы.ВременнаяРазницаОСНО КАК СуммаНУКт,
	|	КосвенныеРасходы.ПостояннаяРазницаОСНО КАК СуммаПРКт,
	|	КосвенныеРасходы.ВременнаяРазницаОСНО КАК СуммаВРКт,
	|	""Списание косвенных расходов (ОСНО)"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КосвенныеРасходы КАК КосвенныеРасходы
	|	ПО
	|		Операция.Ссылка = КосвенныеРасходы.Регистратор
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов)
	|	И (КосвенныеРасходы.СуммаРеглОСНО <> 0 
	|		ИЛИ КосвенныеРасходы.ПостояннаяРазницаОСНО <> 0
	|		ИЛИ КосвенныеРасходы.ВременнаяРазницаОСНО <> 0)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область СписаниеКосвенныхРасходовЕНВД
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	КосвенныеРасходы.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	КосвенныеРасходы.СуммаРеглЕНВД КАК Сумма,
	|	КосвенныеРасходы.СуммаУпрЕНВД КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СписаниеРасходовЕНВД) КАК ВидСчетаДт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаДт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеДт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	КосвенныеРасходы.СуммаРеглЕНВД - КосвенныеРасходы.ПостояннаяРазницаЕНВД - КосвенныеРасходы.ВременнаяРазницаЕНВД КАК СуммаНУДт,
	|	КосвенныеРасходы.ПостояннаяРазницаЕНВД КАК СуммаПРДт,
	|	КосвенныеРасходы.ВременнаяРазницаЕНВД КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаКт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеКт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	КосвенныеРасходы.СуммаРеглЕНВД - КосвенныеРасходы.ПостояннаяРазницаЕНВД - КосвенныеРасходы.ВременнаяРазницаЕНВД КАК СуммаНУКт,
	|	КосвенныеРасходы.ПостояннаяРазницаЕНВД КАК СуммаПРКт,
	|	КосвенныеРасходы.ВременнаяРазницаЕНВД КАК СуммаВРКт,
	|	""Списание косвенных расходов (ЕНВД)"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		КосвенныеРасходы КАК КосвенныеРасходы
	|	ПО
	|		Операция.Ссылка = КосвенныеРасходы.Регистратор
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов)
	|	И (КосвенныеРасходы.СуммаРеглЕНВД <> 0 
	|		ИЛИ КосвенныеРасходы.ПостояннаяРазницаЕНВД <> 0
	|		ИЛИ КосвенныеРасходы.ВременнаяРазницаЕНВД <> 0)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область НачислениеИмущественныхНалогов
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	РасходыПоНалогу.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасходыПоНалогу.СуммаРегл КАК Сумма,
	|	РасходыПоНалогу.СуммаУпр КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	РасходыПоНалогу.СтатьяРасходов КАК АналитикаУчетаДт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеДт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	РасходыПоНалогу.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	РасходыПоНалогу.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУДт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРДт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НалогНаИмущество)
	|	КОГДА Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТранспортныйНалог)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЗемельныйНалог)
	|	КОНЕЦ КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	РасходыПоНалогу.РегистрацияВНалоговомОргане КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасходыПоНалогу.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУКт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРКт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРКт,
	|	""Начисление имущественных налогов"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК РасходыПоНалогу
	|		ПО Операция.Ссылка = РасходыПоНалогу.Регистратор
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетЗемельногоНалога))
	|	И РасходыПоНалогу.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ТекстРасходыНаПлатон
	ТекстЗапроса = " // Поступление услуг (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <97.21> )
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	РасходыПоНалогу.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасходыПоНалогу.СуммаРегл КАК Сумма,
	|	РасходыПоНалогу.СуммаУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	РасходыПоНалогу.СтатьяРасходов КАК АналитикаУчетаДт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеДт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	РасходыПоНалогу.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	РасходыПоНалогу.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ПостояннаяРазница - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУДт,
	|	РасходыПоНалогу.ПостояннаяРазница КАК СуммаПРДт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРДт,
	|
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК АналитикаУчетаКт,
	|	РасходыПоНалогу.Подразделение КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	РасходыПоНалогу.Подразделение КАК ПодразделениеКт,
	|	РасходыПоНалогу.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыНаПлатон) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасходыПоНалогу.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	РасходыПоНалогу.СуммаРегл - РасходыПоНалогу.ВременнаяРазница КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	РасходыПоНалогу.ВременнаяРазница КАК СуммаВРКт,
	|	""Отражение в расходах платы по системе """"Платон"""""" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК РасходыПоНалогу
	|		ПО Операция.Ссылка = РасходыПоНалогу.Регистратор
	|			И РасходыПоНалогу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога)
	|	И РасходыПоНалогу.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРБП)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область НачислениеТорговогоСбора
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	КосвенныеРасходы.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	КосвенныеРасходы.СуммаРегл КАК Сумма,
	|	КосвенныеРасходы.СуммаУпр КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	КосвенныеРасходы.СтатьяРасходов КАК АналитикаУчетаДт,
	|	КосвенныеРасходы.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеДт,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	КосвенныеРасходы.СтатьяРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	КосвенныеРасходы.СуммаРегл - КосвенныеРасходы.ПостояннаяРазница - КосвенныеРасходы.ВременнаяРазница КАК СуммаНУДт,
	|	КосвенныеРасходы.ПостояннаяРазница КАК СуммаПРДт,
	|	КосвенныеРасходы.ВременнаяРазница КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	КосвенныеРасходы.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговыйСбор) КАК СчетКт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	КосвенныеРасходы.СуммаРегл КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	КосвенныеРасходы.СуммаРегл - КосвенныеРасходы.ПостояннаяРазница - КосвенныеРасходы.ВременнаяРазница КАК СуммаНУКт,
	|	КосвенныеРасходы.ПостояннаяРазница КАК СуммаПРКт,
	|	КосвенныеРасходы.ВременнаяРазница КАК СуммаВРКт,
	|	""Начисление торгового сбора"" КАК Содержание
	|
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеРасходы КАК КосвенныеРасходы
	|		ПО Операция.Ссылка = КосвенныеРасходы.Регистратор
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТорговогоСбора)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
#Область РегистрацияПрочихРасходов
	ТекстЗапроса = "
	|ВЫБРАТЬ // Прочие расходы (Дт <25, 26, 44, 20, 23> :: Кт <разные>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.ПодразделениеЗатрат КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеЗатрат КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2, 
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА 
	|			ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) 
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаПлатежаНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.СуммаПлатежаНУ КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаПлатежаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.СуммаПлатежаНУ КАК СуммаВРКт,
	|	""Прочие расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтРасходыПоАренднымПлатежам КАК Строки
	|	ПО
	|		ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей)
	|	И Строки.СуммаПлатежаНУ <> 0
	|
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

#Область КорректировкиАмортизацииПоАренднымПлатежамНУ
	ТекстЗапроса = "
	|ВЫБРАТЬ // Прочие расходы (Дт <25, 26, 44, 20, 23> :: Кт <амортизация>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.ПодразделениеЗатрат КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.ПодразделениеЗатрат КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2, 
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА 
	|				ВЫБОР КОГДА ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка) 
	|						ТОГДА ОбъектыСтроительства.СпособСтроительства
	|					ИНАЧЕ 
	|						ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) 
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) 
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.КорректировкаАмортизацииНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	-Строки.КорректировкаАмортизацииНУ КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.КорректировкаАмортизацииНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	-Строки.КорректировкаАмортизацииНУ КАК СуммаВРКт,
	|	""Коррректировка расходов по амортизации на величину превышения над лизинговыми платежами"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтКорректировкаАмортизации КАК Строки
	|	ПО
	|		ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей)
	|	И Строки.КорректировкаАмортизацииНУ <> 0
	|
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Регистратор,
	|	КосвенныеРасходы.Организация КАК Организация,
	|	КосвенныеРасходы.Подразделение КАК Подразделение,
	|	КосвенныеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	КосвенныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	КосвенныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА КосвенныеРасходы.СуммаРегл
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА КосвенныеРасходы.СуммаРегл - ВЫРАЗИТЬ(КосвенныеРасходы.СуммаРегл * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРеглОСНО,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА КосвенныеРасходы.СуммаРегл
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ВЫРАЗИТЬ(КосвенныеРасходы.СуммаРегл * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаРеглЕНВД,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА КосвенныеРасходы.СуммаУпр
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА КосвенныеРасходы.СуммаУпр - ВЫРАЗИТЬ(КосвенныеРасходы.СуммаУпр * Доли.ДоляЕНВД / КурсВалютыУпрУчета.Курс КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпрОСНО,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА КосвенныеРасходы.СуммаУпр
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ВЫРАЗИТЬ(КосвенныеРасходы.СуммаУпр * Доли.ДоляЕНВД / КурсВалютыУпрУчета.Курс КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК СуммаУпрЕНВД,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ)
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА КосвенныеРасходы.ПостояннаяРазница
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА КосвенныеРасходы.ПостояннаяРазница - ВЫРАЗИТЬ(КосвенныеРасходы.ПостояннаяРазница * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК ПостояннаяРазницаОСНО,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА КосвенныеРасходы.ПостояннаяРазница
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ВЫРАЗИТЬ(КосвенныеРасходы.ПостояннаяРазница * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК ПостояннаяРазницаЕНВД,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ)
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА КосвенныеРасходы.ВременнаяРазница
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА КосвенныеРасходы.ВременнаяРазница - ВЫРАЗИТЬ(КосвенныеРасходы.ВременнаяРазница * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК ВременнаяРазницаОСНО,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ПрименяетсяЕНВД, ЛОЖЬ) 
	|			  ИЛИ СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 0
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА КосвенныеРасходы.ВременнаяРазница
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ВЫРАЗИТЬ(КосвенныеРасходы.ВременнаяРазница * Доли.ДоляЕНВД КАК ЧИСЛО(31,2))
	|	КОНЕЦ КАК ВременнаяРазницаЕНВД
	|
	|ПОМЕСТИТЬ КосвенныеРасходы 
	|ИЗ
	|	Документ.РегламентнаяОперация КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПрочиеРасходы КАК КосвенныеРасходы
	|	ПО
	|		Операция.Ссылка = КосвенныеРасходы.Регистратор
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		КосвенныеРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияРасходов КАК ПорядокОтраженияРасходов
	|	ПО 
	|		КосвенныеРасходы.Организация = ПорядокОтраженияРасходов.Организация
	|		И КосвенныеРасходы.СтатьяРасходов = ПорядокОтраженияРасходов.СтатьяРасходов
	|		И КосвенныеРасходы.Подразделение = ПорядокОтраженияРасходов.Подразделение
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДолиСписанияКосвенныхРасходов КАК Доли
	|	ПО
	|		Операция.Ссылка = Доли.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = Доли.ПериодРасчета
	|		
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов)
	|	И НЕ ВЫБОР
	|			КОГДА ЕСТЬNULL(ПорядокОтраженияРасходов.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|				ТОГДА ПорядокОтраженияРасходов.СчетУчета
	|			ИНАЧЕ СтатьиРасходов.СчетУчета
	|		КОНЕЦ В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы), 
	|						  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Продажи))
	|;
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Создает и проводит документы "Регламентная операция" за указанный месяц.
//
//	Параметры:
//		Период - Дата - Начало месяца, в котором необходимо создать документы.
//		МассивОпераций - Массив - Содержит массив типов регламентных операций (значений перечисления "ТипыРегламентныхОпераций")
//		Организация - Массив, Неопределено - Список организаций по которым формируются документы. Если список пустой,
//												то документы формируются по всем организациям.
//		Отказ - Булево - Используется при вызове из формы закрытия месяца. При установке в "Истина" - дальнейшие операции
//							выполняться не будут.
//		ПроверятьНеобходимостьРаспределения - Булево - Признак того, что операцию выполнять только в случае если требуется. В противном случае выполнятся безусловно.
//		ПроводитьДокументы - Булево - Признак того, что созданные документы необходимо провести.
//	
// Возвращаемое значение:
//		РезультатРасчета - Структура - структура, содержащая:
//			* МассивДокументов - Массив - массив ссылок на созданные/измененные документы
//			* ТекстОшибки - Строка - текст описание ошибки; заполнен при Отказ = Истина
//			* ТипОперации - ПеречислениеСсылка.ТипыРегламентныхОпераций - операция, завершившаяся с ошибкой
//			* Организация - СправочникСсылка.Организации - организация, по которой возникла ошибка.
//
Функция РассчитатьРегламентныеОперации(Период, МассивОпераций, Организация = Неопределено, Отказ = Ложь, 
	ПроверятьНеобходимостьРаспределения = Ложь,	ПроводитьДокументы = Истина) Экспорт
	
	РезультатРасчета = Новый Структура;
	РезультатРасчета.Вставить("МассивДокументов", Новый Массив);
	РезультатРасчета.Вставить("СписокОшибок", Новый Массив);
	РезультатРасчета.Вставить("ТекстОшибки", "");
	РезультатРасчета.Вставить("ДокументСОшибкой");
	РезультатРасчета.Вставить("КоличествоДанных", 0);
	РезультатРасчета.Вставить("ТипОперации");
	РезультатРасчета.Вставить("Организация");
	
	ОперацииРеглУчета = Новый Массив;
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетКурсовыхРазниц);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ПереоценкаСуммыВВалютеФинОтчетности);
	ОперацииРеглУчета.Добавить(Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода);
	
	Если ПроверятьНеобходимостьРаспределения Тогда
		Состояние = СостояниеРасчетДолейСписанияКосвенныхРасходов(Организация, Период);
		Если Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется Тогда
			Возврат РезультатРасчета;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Организация) = Тип("Массив") Тогда
		МассивОрганизаций = Организация;
	ИначеЕсли ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
		МассивОрганизаций = Организация.ВыгрузитьЗначения();
	Иначе
		МассивОрганизаций = Новый Массив;
		Если ЗначениеЗаполнено(Организация) Тогда
			МассивОрганизаций.Добавить(Организация);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаОпераций = Новый ТаблицаЗначений;
	ТаблицаОпераций.Колонки.Добавить("ТипОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыРегламентныхОпераций"));
	ТаблицаОпераций.Колонки.Добавить("Порядок", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Для Сч = 1 По МассивОпераций.Количество() Цикл
		СтрокаОперации = ТаблицаОпераций.Добавить();
		СтрокаОперации.ТипОперации = МассивОпераций[Сч-1];
		СтрокаОперации.Порядок = Сч;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОпераций.Порядок      КАК Порядок,
	|	ТаблицаОпераций.ТипОперации  КАК ТипОперации
	|ПОМЕСТИТЬ ВтТипыОпераций
	|ИЗ &ТаблицаОпераций КАК ТаблицаОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ВтОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка В (&МассивОрганизаций)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка                    КАК Организация,
	|	Организации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ТипыРегламентныхОпераций.ТипОперации  КАК ТипОперации,
	|	ТипыРегламентныхОпераций.Порядок      КАК Порядок
	|ПОМЕСТИТЬ ВтТипыОперацийПоОрганизациям
	|ИЗ
	|	ВтОрганизации КАК Организации,
	|	ВтТипыОпераций КАК ТипыРегламентныхОпераций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыОпераций.Организация,
	|	ТипыОпераций.ОбособленноеПодразделение,
	|	ТипыОпераций.ТипОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.УчетнаяПолитика.СистемаНалогообложения, &ОСНО) = &ОСНО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияНаОСНО,
	|	ЕСТЬNULL(УчетныеПолитики.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ) КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(УчетныеПолитики.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи, ЛОЖЬ) КАК ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи,
	|	МАКСИМУМ(ЕСТЬNULL(РегламентнаяОперацияПроведена.Ссылка, РегламентнаяОперацияЗаписана.Ссылка)) КАК Ссылка
	|ИЗ
	|	ВтТипыОперацийПоОрганизациям КАК ТипыОпераций
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК РегламентнаяОперацияПроведена
	|	ПО
	|		ТипыОпераций.Организация = РегламентнаяОперацияПроведена.Организация
	|		И ТипыОпераций.ТипОперации = РегламентнаяОперацияПроведена.ТипОперации
	|		И РегламентнаяОперацияПроведена.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И РегламентнаяОперацияПроведена.Проведен
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РегламентнаяОперация КАК РегламентнаяОперацияЗаписана
	|	ПО
	|		ТипыОпераций.Организация = РегламентнаяОперацияЗаписана.Организация
	|		И ТипыОпераций.ТипОперации = РегламентнаяОперацияЗаписана.ТипОперации
	|		И РегламентнаяОперацияЗаписана.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И НЕ РегламентнаяОперацияЗаписана.ПометкаУдаления
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&ДатаОкончания,
	|				Организация В (&МассивОрганизаций)
	|					ИЛИ &ПоВсемОрганизациям) КАК УчетныеПолитики
	|		ПО ТипыОпераций.Организация = УчетныеПолитики.Организация
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТипыОпераций.Организация,
	|	ТипыОпераций.ОбособленноеПодразделение,
	|	ТипыОпераций.ТипОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.УчетнаяПолитика.СистемаНалогообложения, &ОСНО) = &ОСНО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЕСТЬNULL(УчетныеПолитики.ПрименяетсяУСНДоходыМинусРасходы, ЛОЖЬ),
	|	ЕСТЬNULL(УчетныеПолитики.УчетнаяПолитика.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи, ЛОЖЬ),
	|	ТипыОпераций.Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипыОпераций.Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Ссылка,
	|	РегламентнаяОперация.Организация КАК Организация
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтОрганизации КАК Организации
	|	ПО
	|		РегламентнаяОперация.Организация = Организации.Ссылка 
	|ГДЕ
	|	РегламентнаяОперация.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РегламентнаяОперация.Проведен
	|	И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ЗакрытиеГода)
	|
	|";

	Запрос.УстановитьПараметр("ДатаНачала", 			 НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", 			 КонецМесяца(Период));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	Запрос.УстановитьПараметр("ОСНО", 					 Перечисления.СистемыНалогообложения.Общая);
	Запрос.УстановитьПараметр("ТаблицаОпераций", 		 ТаблицаОпераций);
	Запрос.УстановитьПараметр("МассивОрганизаций", 		 МассивОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", 	 НЕ ЗначениеЗаполнено(МассивОрганизаций));
	
	Результат = Запрос.ВыполнитьПакет();

	ТаблицаОпераций     = Результат[3].Выгрузить();
	ТаблицаЗакрытияГода = Результат[4].Выгрузить();
	ИмяСобытия		= НСтр("ru = 'РегламентнаяОперация'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Для Каждого Строка Из ТаблицаОпераций Цикл
		
		КоличествоОбработанныхДанных = 0;
	
		Если Строка.Организация = Справочники.Организации.УправленческаяОрганизация
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ЗакрытиеГода) Тогда
			Продолжить;
		ИначеЕсли Строка.ОбособленноеПодразделение
				И НЕ ОперацияИспользуетсяДляОбособленногоПодразделения(Строка.ТипОперации) Тогда
			Продолжить; // Эти операции выполняются только для головной организации
		ИначеЕсли НЕ Строка.ОрганизацияНаОСНО 
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет) Тогда   
			Продолжить; // Расчет налога на прибыль выполняем только для организация на ОСНО
		ИначеЕсли Строка.ОрганизацияНаОСНО 
				И (Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН
				ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаУСН) Тогда   
			Продолжить; // Эти операции выполняются только для организаций не на ОСНО
		ИначеЕсли НЕ Строка.ПрименяетсяУСНДоходыМинусРасходы 
				И Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН Тогда   
				   Продолжить; // Эта операция выполняются только для организаций на УСН "Доходы минус расходы"
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей
			И НЕ Строка.ВключатьВСоставНалоговыхРасходовЛизинговыеПлатежи Тогда
			Продолжить;
		ИначеЕсли ОперацииРеглУчета.Найти(Строка.ТипОперации) <> Неопределено
			И (Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") ИЛИ Период < Константы.ДатаНачалаВеденияРеглУчета.Получить()) Тогда
			Продолжить; // Эта операция выполняется только при включенной опции регламентированного учета
		ИначеЕсли НЕ ПолучитьФункциональнуюОпцию("ВестиУчетНаПланеСчетовХозрасчетныйВВалютеФинОтчетности")
			И Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ПереоценкаСуммыВВалютеФинОтчетности Тогда   
			Продолжить; // Эта операция выполняются только при ведении управленческого учета на плане счетов в валюте ФО
		КонецЕсли;
			
		Если Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
			ИЛИ Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога Тогда
			
			// Отменим проведение закрытия года, т.к. они оперируют одними данными
			СтруктураПоиска = Новый Структура("Организация", Строка.Организация);
			ЗакрытияГода = ТаблицаЗакрытияГода.НайтиСтроки(СтруктураПоиска);
			Для каждого ЗакрытиеГода Из ЗакрытияГода Цикл
				ЗакрытиеГодаДокумент = ЗакрытиеГода.Ссылка.ПолучитьОбъект();
				РезультатРасчета.МассивДокументов.Добавить(ЗакрытиеГода.Ссылка);
				Попытка 
					// Проверим, что документ находится в доступном для изменения периоде.
					ОписаниеОшибкиДаты = "";
					Если ДатыЗапретаИзменения.ИзменениеЗапрещено(ЗакрытиеГодаДокумент, , ОписаниеОшибкиДаты) Тогда
						ОписаниеОшибкиДаты = РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(ОписаниеОшибкиДаты);
						ВызватьИсключение ОписаниеОшибкиДаты;
					КонецЕсли;
					ЗакрытиеГодаДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					
				Исключение
					Отказ = Истина;
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
					РезультатРасчета.ТипОперации = Строка.ТипОперации;
					РезультатРасчета.Организация = Строка.Организация;
					РезультатРасчета.ДокументСОшибкой = ЗакрытиеГода.Ссылка;
					
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
					Возврат РезультатРасчета;
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
		
		Если Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоНалогуНаИмущество(
									Строка.Организация, Период);
			
			НеобходимРасчетНалогаНаИмущество = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетНалогаНаИмущество Тогда
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетТранспортногоНалога Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоТранспортномуНалогу(
									Строка.Организация, Период);
			
			НеобходимРасчетТранспортногоНалога = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетТранспортногоНалога Тогда
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли Строка.ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетЗемельногоНалога Тогда
			
			УплачиваютсяАвансы = РасчетИмущественныхНалоговУП.УплачиваютсяАвансыПоЗемельномуНалогу(
									Строка.Организация, Период);
			
			НеобходимРасчетЗемельногоНалога = 
				Месяц(Период) = 12 
				ИЛИ (Месяц(Период)%3 = 0 И УплачиваютсяАвансы);
			
			Если Не НеобходимРасчетЗемельногоНалога Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Строка.Ссылка) Тогда
			РеглОперация = Документы.РегламентнаяОперация.СоздатьДокумент();
			РеглОперация.Дата = КонецМесяца(Период);
			РеглОперация.ТипОперации = Строка.ТипОперации;
			РеглОперация.Организация = Строка.Организация;
		Иначе
			РеглОперация = Строка.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		// Проверим, что документ находится в доступном для изменения периоде.
		ОписаниеОшибкиДаты = "";
		
		Если ДатыЗапретаИзменения.ИзменениеЗапрещено(РеглОперация, , ОписаниеОшибкиДаты) Тогда
			Отказ = Истина;
			ТекстОшибки = РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(ОписаниеОшибкиДаты);
			РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
			РезультатРасчета.ТипОперации = Строка.ТипОперации;
			РезультатРасчета.Организация = Строка.Организация;
			РезультатРасчета.ДокументСОшибкой = Строка.Ссылка;
			
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
			Возврат РезультатРасчета;
		КонецЕсли;
		
		Если РеглОперация.Проведен Тогда
			РеглОперация.ДополнительныеСвойства.Вставить("ОчисткаДляПоследующегоПроведения",Истина);
			Попытка 
				РеглОперация.Записать(РежимЗаписиДокумента.ОтменаПроведения)
			Исключение
				Отказ = Истина;
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
				Возврат РезультатРасчета;
			КонецПопытки;
		КонецЕсли;
		
		РеглОперация.ДополнительныеСвойства.Вставить("ВыводитьСообщенияВЖурналРегистрации", Истина);
		РеглОперация.Записать(РежимЗаписиДокумента.Запись);
		РезультатРасчета.МассивДокументов.Добавить(РеглОперация.Ссылка);
		
		Если ПроводитьДокументы Тогда
			
			СообщенияПроверки = РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьЗаполнениеОбъектаСПерехватомСообщений(РеглОперация);
			
			Если ЗначениеЗаполнено(СообщенияПроверки) Тогда
				
				Отказ = Истина;
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'При проверке документа ""%1"" были обнаружены ошибки:
						|%2'"),
					СокрЛП(РеглОперация.Ссылка),
					РасчетСебестоимостиПротоколРасчета.ПредставлениеМногострочногоТекста(СообщенияПроверки, " - "));
				
				РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
				
				Возврат РезультатРасчета;
				
			КонецЕсли;
				
			Попытка
				
				РеглОперация.Записать(РежимЗаписиДокумента.Проведение);
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("КоличествоОбработанныхДанных") Тогда
					КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + РеглОперация.ДополнительныеСвойства.КоличествоОбработанныхДанных;
				КонецЕсли; 
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("СписокОшибок") Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
						РезультатРасчета.СписокОшибок, 
						РеглОперация.ДополнительныеСвойства.СписокОшибок);
				КонецЕсли;
				
			Исключение
				
				Отказ = Истина;
				
				РезультатРасчета.ТипОперации = Строка.ТипОперации;
				РезультатРасчета.Организация = Строка.Организация;
				РезультатРасчета.ДокументСОшибкой = РеглОперация.Ссылка;
				
				Если РеглОперация.ДополнительныеСвойства.Свойство("СписокОшибок")
					И РеглОперация.ДополнительныеСвойства.СписокОшибок.Количество() <> 0 Тогда
					
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
						РезультатРасчета.СписокОшибок, 
						РеглОперация.ДополнительныеСвойства.СписокОшибок);
					
				Иначе
					
					ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					РезультатРасчета.ТекстОшибки = СокрЛП(РезультатРасчета.ТекстОшибки + Символы.ПС + ТекстОшибки);
					ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
					
				КонецЕсли; 
				
				Возврат РезультатРасчета;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатРасчета.Вставить("КоличествоДанных", КоличествоОбработанныхДанных);
	
	Возврат РезультатРасчета;
	
КонецФункции

// Возвращает текст запроса определения необходимости расчета долей списания косвенных расходов.
//
// Возвращаемое значение:
// 	ТекстЗапроса - Строка - Текст запроса.
//
Функция ТекстРасчетаДолейСписанияКосвенныхРасходов()
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка,
	|	ДД.ГоловнаяОрганизация
	|ПОМЕСТИТЬ ОрганизацииИОбособленныеПодразделения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ОбособПодр.Ссылка, ДД.Ссылка) КАК Ссылка,
	|		ДД.Ссылка КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособПодр
	|		ПО 
	|			ДД.Ссылка = ОбособПодр.ГоловнаяОрганизация
	|			И ДД.Ссылка <> ОбособПодр.Ссылка
	|	
	|	ГДЕ
	|		НЕ ДД.ОбособленноеПодразделение
	|		И ЕСТЬNULL(ОбособПодр.ОбособленноеПодразделение, ИСТИНА)
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Ссылка, // Добавим ссылки на сами головные организации
	|		ДД.Ссылка КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособПодр
	|		ПО ДД.Ссылка = ОбособПодр.ГоловнаяОрганизация
	|	ГДЕ
	|		НЕ ДД.ОбособленноеПодразделение
	|		И ОбособПодр.ОбособленноеПодразделение
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Ссылка, // Добавим ссылки на филиалы
	|		ДД.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|	ИЗ
	|		Справочник.Организации КАК ДД
	|	ГДЕ
	|		ДД.ОбособленноеПодразделение
	|		И ДД.Ссылка В (&СписокОрганизаций)
	|	) КАК ДД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация КАК Ссылка
	|ПОМЕСТИТЬ ВтОрганизацииФормированияРезервовПоСомнительнымДолгам
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ДатаНачала, Организация В (&СписокОрганизаций)) КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитика
	|		ПО Т.УчетнаяПолитика = СпрУчетнаяПолитика.Ссылка
	|		И (СпрУчетнаяПолитика.ВариантУчетаОтложенногоНалога <> ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаОтложенногоНалога.Нет)
	|			ИЛИ СпрУчетнаяПолитика.ФормироватьРезервыПоСомнительнымДолгамБУ
	|			ИЛИ СпрУчетнаяПолитика.ФормироватьРезервыПоСомнительнымДолгамНУ)
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка
	|ПОМЕСТИТЬ ВТКосвенныеРасходы
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|	ИЛИ СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Организация КАК Ссылка
	|ПОМЕСТИТЬ ВТОрганизацииСРасходами
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.ОстаткиИОбороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,,,
	|			Организация В (
	|						ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							ОрганизацииИОбособленныеПодразделения.Ссылка КАК Ссылка 
	|						ИЗ
	|							ОрганизацииИОбособленныеПодразделения КАК ОрганизацииИОбособленныеПодразделения)
	|	) КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКосвенныеРасходы КАК ВТКосвенныеРасходы
	|		ПО ДанныеРегистра.СтатьяРасходов = ВТКосвенныеРасходы.Ссылка
	|ГДЕ
	|	(ДанныеРегистра.СуммаРеглНачальныйОстаток 
	|		- ДанныеРегистра.ПостояннаяРазницаНачальныйОстаток
	|		- ДанныеРегистра.ВременнаяРазницаНачальныйОстаток) <> 0
	|	ИЛИ
	|	(ДанныеРегистра.СуммаРеглПриход
	|		- ДанныеРегистра.ПостояннаяРазницаПриход
	|		- ДанныеРегистра.ВременнаяРазницаПриход) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ 
	|	ВТОрганизацииСРасходами КАК Организации 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	ВтОрганизацииФормированияРезервовПоСомнительнымДолгам КАК Организации
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка.ГоловнаяОрганизация
	|ИЗ
	|	ВТОрганизацииСРасходами КАК Организации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДанныеРегистра
	|		ПО Организации.Ссылка.ГоловнаяОрганизация = ДанныеРегистра.Организация 
	|		И ДанныеРегистра.ПериодРасчета МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ГДЕ
	|	ДанныеРегистра.Организация ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Организации.Ссылка.ГоловнаяОрганизация
	|ИЗ
	|	ВтОрганизацииФормированияРезервовПоСомнительнымДолгам КАК Организации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДанныеРегистра
	|		ПО Организации.Ссылка.ГоловнаяОрганизация = ДанныеРегистра.Организация 
	|		И ДанныеРегистра.ПериодРасчета МЕЖДУ &ДатаНачала И &ДатаОкончания
	|ГДЕ
	|	ДанныеРегистра.Организация ЕСТЬ NULL
	|";
	
КонецФункции

// Метод рассчитывает доли списания косвенных расходов.
//
// Параметры:
//  СписокОрганизаций - Массив - Массив организаций к расчету.
//  Период - Дата - Месяц, в котором производится расчет.
//
// Возвращаемое значение:
//	Перечисления.СостоянияОперацийЗакрытияМесяца - состояние расчета долей.
//
Функция СостояниеРасчетДолейСписанияКосвенныхРасходов(СписокОрганизаций, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстРасчетаДолейСписанияКосвенныхРасходов();
	
	ТипыСубконто = Новый Массив;
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	ТипыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	МассивОрганизаций = ?(ЗначениеЗаполнено(СписокОрганизаций), СписокОрганизаций, Справочники.Организации.ДоступныеОрганизации());
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("Граница", Новый Граница(КонецМесяца(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ТипыСубконто", ТипыСубконто);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[4].Пустой() Тогда
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется;
	ИначеЕсли НЕ Результат[5].Пустой() Тогда
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено;
	Иначе
		Состояние = Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно;
	КонецЕсли;
	
	Возврат Состояние;
	
КонецФункции

// Возвращает признак необходимости выполнения указанной операции для обособленного подразделения.
//
Функция ОперацияИспользуетсяДляОбособленногоПодразделения(ТипОперации) Экспорт
	
	Если ТипОперации = Перечисления.ТипыРегламентныхОпераций.ФормированиеФинансовогоРезультата
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.СписаниеУбытковПрошлыхЛет
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетНалогаНаПрибыль
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетОтложенногоНалога
	 ИЛИ ТипОперации = Перечисления.ТипыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти


// Подготовка параметров выполнения операций документа

Функция ТекстЗапросаРеквизиты()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Дата КАК Период,
	|	РегламентнаяОперация.Организация КАК Организация
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Расчет долей списания косвенных расходов

Функция ПодготовитьДанныеРасчетаДолейСписанияКосвенныхРасходов(СтруктураШапки, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	
	Запрос.Текст = ТекстЗапросаРеквизиты();
	Результат    = Запрос.ВыполнитьПакет();
	НомераТаблиц = Новый Структура;
	
	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетДолей", НомераТаблиц.Количество());
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

// Списание косвенных расходов

Функция ТекстЗапросаСписаниеКосвенныхРасходов(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ВТ_СтатьиРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СписаниеРасходов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПрочиеРасходы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиРасходов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов В (&ВидыРасходовНормируемые)
	|	И НЕ СтатьиРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&КонДата                               КАК Период,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ПрочиеРасходы.Организация              КАК Организация,
	|	ПрочиеРасходы.Подразделение            КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов           КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов        КАК АналитикаРасходов,
	|	ПрочиеРасходы.СуммаРеглОстаток         КАК СуммаРегл,
	|	ПрочиеРасходы.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазницаОстаток  КАК ВременнаяРазница
	|ПОМЕСТИТЬ СписаниеРасходов
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|				И СтатьяРасходов В (ВЫБРАТЬ Т.Ссылка ИЗ СтатьиРасходов КАК Т)) КАК ПрочиеРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеРасходов.Период                   КАК Период,
	|	СписаниеРасходов.ХозяйственнаяОперация    КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	СписаниеРасходов.Организация              КАК Организация,
	|	СписаниеРасходов.Подразделение            КАК Подразделение,
	|	СписаниеРасходов.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	СписаниеРасходов.СтатьяРасходов           КАК СтатьяРасходов,
	|	СписаниеРасходов.АналитикаРасходов        КАК АналитикаРасходов,
	|	СписаниеРасходов.СуммаРегл                КАК СуммаРегл,
	|	СписаниеРасходов.ПостояннаяРазница        КАК ПостояннаяРазница,
	|	СписаниеРасходов.ВременнаяРазница         КАК ВременнаяРазница
	|ИЗ
	|	СписаниеРасходов КАК СписаниеРасходов
	|ГДЕ
	|	СписаниеРасходов.СуммаРегл <> 0
	|	ИЛИ СписаниеРасходов.ПостояннаяРазница <> 0
	|	ИЛИ СписаниеРасходов.ВременнаяРазница <> 0
	|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Формирование финансового результата

Функция ПодготовитьПараметрыЗакрытиеСчетов90_91(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Определение финансовых результатов'");
	Запрос.УстановитьПараметр("Ссылка",          СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("КоэффициентЕНВД", НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("Содержание",      Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗакрытиеСчетов90_91(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыЗакрытиеСчетов90_91()

Функция ТекстЗапросаЗакрытиеСчетов90_91(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытие90_91", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&КоэффициентЕНВД КАК КоэффициентЕНВД,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаЗакрытиеСчетов90_91()

Функция ТекстЗапросаОкруглениеНДС(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыОкруглениеНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК КонДата,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаОкруглениеНДС()

Функция ПодготовитьПараметрыОкругленияНДС(СтруктураШапки) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Отклонение при округлениии до рублей'");
	Запрос.УстановитьПараметр("Ссылка",          СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание",      Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаОкруглениеНДС(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыОкругленияНДС()

// Списание убытков прошлых лет

Функция ПодготовитьПараметрыСписаниеУбытков(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос     = Новый Запрос;
	Содержание = НСтр("ru = 'Списание убытков прошлых лет'");
	Запрос.УстановитьПараметр("Ссылка",     СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаСписаниеУбытковПрошлыхЛет(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыСписаниеУбытковПрошлыхЛет()

Функция ТекстЗапросаСписаниеУбытковПрошлыхЛет(НомераТаблиц)
	
	// Временная таблица
	НомераТаблиц.Вставить("ТаблицаРеквизитыСписаниеУбытков", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции // ТекстЗапросаСписаниеУбытковПрошлыхЛет()

// Расчет налога на прибыль

Функция ПодготовитьДанныеРасчетаНалогаНаПрибыль(СтруктураШапки, Отказ) Экспорт
	
#Область ДопПараметрыШапки // Для передачи "наверх!" - в ПроведениеПересчетаОНАиОНОКаждыйМесяц()
	СтруктураШапки.Вставить(
		"ПоддержкаПБУ18",
		УчетнаяПолитика.ПоддержкаПБУ18(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	СтруктураШапки.Вставить(
		"СтавкаНалогаНаПрибыль",
		БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки));
#Конецобласти
	
	Запрос = Новый Запрос;
	
	РегистрацияВНалоговомОргане = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		СтруктураШапки.Организация,
		"РегистрацияВНалоговомОргане").РегистрацияВНалоговомОргане;
	КоэффициентЕНВД = НалоговыйУчет.КоэффициентРаспределенияРасходовПоВидамДеятельности(
		СтруктураШапки.Организация,
		СтруктураШапки.КонДата);
	
	Запрос.УстановитьПараметр("Ссылка",                      СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("СтавкаНалогаНаПрибыль",       СтруктураШапки.СтавкаНалогаНаПрибыль);
	Запрос.УстановитьПараметр("КоэффициентЕНВД",             КоэффициентЕНВД);
	Запрос.УстановитьПараметр("Содержание",                  НСтр("ru = 'Налог на прибыль'"));
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетНалога(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

Функция ТекстЗапросаРасчетНалога(НомераТаблиц)
	
	// Временные таблицы
	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетНалога", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Дата,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	&КоэффициентЕНВД КАК КоэффициентЕНВД,
	|	&СтавкаНалогаНаПрибыль КАК СтавкаНалогаНаПрибыль,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Закрытие года

Функция ПодготовитьДанныеЗакрытияГода(СтруктураШапки, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	
	СодержаниеРеформация   = НСтр("ru = 'Реформация баланса'");;
	СодержаниеЗакрытиеГода = НСтр("ru = 'Закрытие года'");
	
	Период                 = СтруктураШапки.Дата;
	СтруктураШапки.Дата    = КонецМесяца(СтруктураШапки.Дата) + 1;
	НоваяСтавка            = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки) * 100;
	
	СтруктураШапки.Дата    = Период;
	СтараяСтавка           = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапки) * 100;
	
	Запрос.УстановитьПараметр("Ссылка",                  СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("НоваяСтавка",             НоваяСтавка);
	Запрос.УстановитьПараметр("СтараяСтавка",            СтараяСтавка);
	Запрос.УстановитьПараметр("Предприниматель",         СтруктураШапки.Предприниматель);
	Запрос.УстановитьПараметр("СодержаниеРеформация",    СодержаниеРеформация);
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеГода",  СодержаниеЗакрытиеГода);
	Запрос.УстановитьПараметр("ЗакрытиеГода",            Истина);
	Запрос.УстановитьПараметр("ДоляСписанияТР",          0);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",   Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца);
	Запрос.УстановитьПараметр("НачДата",                 СтруктураШапки.НачДата);
	Запрос.УстановитьПараметр("КонДата",                 СтруктураШапки.КонДата);
	Запрос.УстановитьПараметр("Граница",                 СтруктураШапки.КонГраница);
	Запрос.УстановитьПараметр("Организация",             СтруктураШапки.Организация);
	Запрос.УстановитьПараметр("ВидыРасходовНормируемые", Перечисления.ВидыРасходовНУ.НормируемыеРасходы());
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗакрытиеГода(НомераТаблиц)
	             + ТекстЗапросаСписаниеКосвенныхРасходов(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);
	
КонецФункции

Функция ТекстЗапросаЗакрытиеГода(НомераТаблиц)
	
	// Временная таблица
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытиеГода", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	&НачДата КАК НачДата,
	|	&КонДата КАК КонДата,
	|	&НоваяСтавка КАК НоваяСтавка,
	|	&СтараяСтавка КАК СтараяСтавка,
	|	&Предприниматель КАК Предприниматель,
	|	&СодержаниеРеформация КАК СодержаниеРеформация,
	|	&СодержаниеЗакрытиеГода КАК СодержаниеЗакрытиеГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Прочее

Функция ТаблицыПроведения(НомераТаблиц, Результат)
	
	ТаблицыПроведения = Новый Структура;
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		Если НРег(Лев(НомерТаблицы.Ключ, 7)) = "таблица" Тогда
			ТаблицыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицыПроведения;
	
КонецФункции

// Расчет налога на имущество

Функция ПодготовитьПараметрыРасчетИмущественныхНалогов(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;

	Если СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		НачалоПериода = НачалоГода(СтруктураШапки.НачДата);
		ИмяРегистраРасчетНалогов = "РасчетНалогаНаИмущество";
		
	Иначе
		НачалоПериода = ?(КонецГода(СтруктураШапки.КонДата) = КонецКвартала(СтруктураШапки.КонДата),
						НачалоГода(СтруктураШапки.НачДата),
						НачалоКвартала(СтруктураШапки.НачДата));
						
		Если СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ИмяРегистраРасчетНалогов = "РасчетТранспортногоНалога";	
		ИначеЕсли СтруктураШапки.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			ИмяРегистраРасчетНалогов = "РасчетЗемельногоНалога";	
		КонецЕсли;
			
	КонецЕсли;
	
	Содержание  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Начислен %1 за %2'"),
		Строка(СтруктураШапки.ВидНалога),
		ПредставлениеПериода(НачалоПериода, СтруктураШапки.КонДата, "ФП = Истина"));
	
	Запрос = Новый Запрос;
		
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	Запрос.УстановитьПараметр("ВидНалога", СтруктураШапки.ВидНалога);
	Запрос.УстановитьПараметр("ИмяРегистраРасчетНалогов", ИмяРегистраРасчетНалогов);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетИмущественныхНалогов(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРасчетИмущественныхНалогов(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетИмущественныхНалогов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	&ВидНалога КАК ВидНалога,
	|	&Содержание КАК Содержание,
	|	&ИмяРегистраРасчетНалогов КАК ИмяРегистраРасчетНалогов
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Расчет курсовых разниц

Процедура РасчетКурсовыхРазниц(ПараметрыРасчета, Отказ) Экспорт
	
	Период = КонецМесяца(ПараметрыРасчета.Дата);
	Запрос = Новый Запрос(ТекстЗапросаРасчетКурсовыхРазниц());
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НаДату", Период);
	
	ДатаНачалаВеденияУУ = Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить(); 
	ВестиУУНаПланеСчетов = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
	Запрос.УстановитьПараметр("ВестиУУНаПланеСчетов", ВестиУУНаПланеСчетов И Период >= ДатаНачалаВеденияУУ);
	Запрос.УстановитьПараметр("ВалютаУпр", Константы.ВалютаУправленческогоУчета.Получить());
	
	ПроводкиДокумента = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	ПроводкиДокумента.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
	
	СтатьяДДС = Новый Структура("ВидСубконто, Прибыль, Убыток");
	СтатьяДДС.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств;
	СтатьяДДС.Прибыль = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыПрибыль;
	СтатьяДДС.Убыток = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыУбыток;
	
	КурсоваяРазница = Новый Структура("Ресурс, Сумма");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Проводка = ПроводкиДокумента.Добавить();
		Проводка.Активность = Истина;
		Проводка.Период = Период;
		Проводка.Организация = ПараметрыРасчета.Организация;
		
		КурсоваяРазница.Ресурс = "Сумма";
		КурсоваяРазница.Сумма = Выборка.КурсоваяРазница;
		ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
		
		Если ВестиУУНаПланеСчетов Тогда
			
			КурсоваяРазница.Ресурс = "СуммаУУ";
			КурсоваяРазница.Сумма = Выборка.КурсоваяРазницаУУ;
			
			Если Выборка.РазныйЗнакКусовыхРазниц Тогда
				// Добавим новую проводку для отражение курсовой разницы по УУ
				Проводка = ПроводкиДокумента.Добавить();
				Проводка.Активность = Истина;
				Проводка.Период = Период;
				Проводка.Организация = ПараметрыРасчета.Организация;
				
				ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
			Иначе
				// Заполним данные в текущей проводке
				ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, СтатьяДДС);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;// по валютным остаткам
	
	ПроводкиДокумента.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница, ПараметрыСтатьиДДС = Неопределено)
	
	Перем КорСчет, КорСубконто, КорВидСубконто;
	
	СуммаРазницы = Макс(КурсоваяРазница.Сумма, -КурсоваяРазница.Сумма);
	
	Если КурсоваяРазница.Сумма > 0 Тогда // отразим прибыль
		Счет = "Дт";
		Кор = "Кт";
		КорУчетПоПодразделениям = Выборка.СчетДоходовУчетПоПодразделениям;
		КорУчетПоНаправлениям = Выборка.СчетДоходовУчетПоНаправлениямДеятельности;
		Если Не Выборка.СчетЗабалансовый Тогда
			КорСчет = Выборка.СчетДоходов;
			КорСубконто = Выборка.СтатьяДоходов;
			КорВидСубконто = Выборка.ВидСубконтоДоходыРасходы;
		КонецЕсли;
		СтатьяДДС = ?(ПараметрыСтатьиДДС = Неопределено, Неопределено, ПараметрыСтатьиДДС.Прибыль);
		
	ИначеЕсли КурсоваяРазница.Сумма < 0 Тогда // отразим убытки
		Счет = "Кт";
		Кор = "Дт";
		КорУчетПоПодразделениям = Выборка.СчетРасходовУчетПоПодразделениям;
		КорУчетПоНаправлениям = Выборка.СчетРасходовУчетПоНаправлениямДеятельности;
		Если Не Выборка.СчетЗабалансовый Тогда
			КорСчет = Выборка.СчетРасходов;
			КорСубконто = Выборка.СтатьяРасходов;
			КорВидСубконто = Выборка.ВидСубконтоДоходыРасходы;
		КонецЕсли;
		СтатьяДДС = ?(ПараметрыСтатьиДДС = Неопределено, Неопределено, ПараметрыСтатьиДДС.Убыток);
	Иначе // проводку не заполняем
		Возврат;
	КонецЕсли;
	
	// заполним счет и аналитику возникновения курсовой разницы
	Проводка["Счет"+Счет] = Выборка.Счет;
	Проводка["Валюта"+Счет] = Выборка.Валюта;
	Проводка["Подразделение"+Счет] = Выборка.Подразделение;
	Проводка["НаправлениеДеятельности"+Счет] = Выборка.НаправлениеДеятельности;
	ВидыСубконто = Выборка.ВидыСубконтоСчета.Выгрузить();
	Для Каждого стр Из ВидыСубконто Цикл
		Проводка["Субконто" + Счет][стр.ВидСубконто] = Выборка["Субконто"+стр.НомерСтроки];
		Если СтатьяДДС <> Неопределено И стр.ВидСубконто = ПараметрыСтатьиДДС.ВидСубконто И стр.ТолькоОбороты Тогда
			Проводка["Субконто" + Счет][стр.ВидСубконто] = СтатьяДДС;
		КонецЕсли;
	КонецЦикла;
	
	// заполним счет учета прибыли\убытка от курсовой разницы
	Проводка["Счет" + Кор] = КорСчет;
	Если КорУчетПоПодразделениям Тогда
		Проводка["Подразделение"+Кор] = Выборка.Подразделение;
	КонецЕсли;
	Если КорУчетПоНаправлениям Тогда
		Проводка["НаправлениеДеятельности"+Кор] = Выборка.НаправлениеДеятельности;
	КонецЕсли;
	Если ЗначениеЗаполнено(КорВидСубконто) И  КорСчет.ВидыСубконто.Найти(КорВидСубконто, "ВидСубконто") <> Неопределено Тогда
		Проводка["Субконто" + Кор][КорВидСубконто] = КорСубконто;
	КонецЕсли;
	
	Проводка[КурсоваяРазница.Ресурс] = СуммаРазницы;
	Если КурсоваяРазница.Ресурс = "Сумма" Тогда
		Если Выборка.НалоговыйУчет Тогда
			Проводка["СуммаНУ"+Счет] = СуммаРазницы;
		КонецЕсли;
		Если Не Выборка.СчетЗабалансовый Тогда
			Проводка["СуммаНУ"+Кор] = СуммаРазницы;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаРасчетКурсовыхРазниц()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ПОМЕСТИТЬ втКурсУУ
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, Валюта = &ВалютаУпр) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, ) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка,
	|	Хозрасчетный.Валютный,
	|	Хозрасчетный.НалоговыйУчет,
	|	Хозрасчетный.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов,
	|	Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Валютный
	|	И НЕ(Хозрасчетный.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов
	|			ИЛИ &ВестиУУНаПланеСчетов И Хозрасчетный.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Счет                    КАК Счет,
	|	Остатки.Организация             КАК Организация,
	|	Остатки.Подразделение           КАК Подразделение,
	|	Остатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Остатки.Субконто1               КАК Субконто1,
	|	Остатки.Субконто2               КАК Субконто2,
	|	Остатки.Субконто3               КАК Субконто3,
	|	Остатки.Валюта                  КАК Валюта,
	|	Остатки.ВалютнаяСуммаОстаток    КАК ВалютнаяСуммаОстаток,
	|	Остатки.СуммаОстаток            КАК ОстатокБУОстаток,
	|	Остатки.СуммаУУОстаток          КАК СуммаУУОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаОстатков,
	|			Счет В (ВЫБРАТЬ Т.Ссылка ИЗ втСчета КАК Т),
	|			,
	|			Организация = &Организация) КАК Остатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	СУММА(Данные.ОстатокРегл)        КАК ОстатокРегл,
	|	СУММА(Данные.ОстатокПоКурсу)     КАК ОстатокПоКурсу,
	|	СУММА(Данные.АбсолютнаяРазница)  КАК АбсолютнаяРазница,
	|	СУММА(Данные.КурсоваяРазница)    КАК КурсоваяРазница,
	|	
	|	СУММА(Данные.ОстатокПоКурсуУУ)    КАК ОстатокПоКурсуУУ,
	|	СУММА(Данные.АбсолютнаяРазницаУУ) КАК АбсолютнаяРазницаУУ,
	|	СУММА(Данные.КурсоваяРазницаУУ)   КАК КурсоваяРазницаУУ
	|ПОМЕСТИТЬ втКурсовыеРазницы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		Остатки.ОстатокБУОстаток КАК ОстатокРегл,
	|		Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность КАК ОстатокПоКурсу,
	|		Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность - Остатки.ОстатокБУОстаток КАК АбсолютнаяРазница,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность КАК ЧИСЛО(31,2)) - Остатки.ОстатокБУОстаток КАК КурсоваяРазница,
	|		
	|		0 КАК ОстатокПоКурсуУУ,
	|		0 КАК АбсолютнаяРазницаУУ,
	|		0 КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК Курсы
	|			ПО Остатки.Валюта = Курсы.Валюта
	|	ГДЕ
	|		НЕ Остатки.Счет.ИсключитьСуммуБУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность КАК ЧИСЛО(31,2)) <> Остатки.ОстатокБУОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Счет,
	|		Остатки.Организация,
	|		Остатки.Подразделение,
	|		Остатки.НаправлениеДеятельности,
	|		Остатки.Субконто1,
	|		Остатки.Субконто2,
	|		Остатки.Субконто3,
	|		Остатки.Валюта,
	|		Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|		
	|		0 КАК ОстатокРегл,
	|		0 КАК ОстатокПоКурсу,
	|		0 КАК АбсолютнаяРазница,
	|		0 КАК КурсоваяРазница,
	|		
	|		Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность / КурсУУ.Курс * КурсУУ.Кратность КАК ОстатокПоКурсуУУ,
	|		Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность / КурсУУ.Курс * КурсУУ.Кратность - Остатки.СуммаУУОстаток КАК АбсолютнаяРазницаУУ,
	|		ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность / КурсУУ.Курс * КурсУУ.Кратность КАК ЧИСЛО(31,2)) - Остатки.СуммаУУОстаток КАК КурсоваяРазницаУУ
	|	
	|	ИЗ
	|		ВтОстатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсы КАК Курсы
	|			ПО Остатки.Валюта = Курсы.Валюта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКурсУУ КАК КурсУУ
	|			ПО ИСТИНА
	|	ГДЕ
	|		&ВестиУУНаПланеСчетов
	|		И НЕ Остатки.Счет.ИсключитьСуммуУУИзПереоценкиПоПлануСчетов
	|		И ВЫРАЗИТЬ(Остатки.ВалютнаяСуммаОстаток * Курсы.Курс / Курсы.Кратность / КурсУУ.Курс * КурсУУ.Кратность КАК ЧИСЛО(31,2)) <> Остатки.СуммаУУОстаток
	|	) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Счет,
	|	Данные.Организация,
	|	Данные.Подразделение,
	|	Данные.НаправлениеДеятельности,
	|	Данные.Субконто1,
	|	Данные.Субконто2,
	|	Данные.Субконто3,
	|	Данные.Валюта,
	|	Данные.ОстатокВалюты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	Данные.ОстатокРегл               КАК ОстатокРегл,
	|	Данные.ОстатокПоКурсу            КАК ОстатокПоКурсу,
	|	Данные.АбсолютнаяРазница         КАК АбсолютнаяРазница,
	|	Данные.КурсоваяРазница           КАК КурсоваяРазница,
	|	
	|	Данные.ОстатокПоКурсуУУ          КАК ОстатокПоКурсуУУ,
	|	Данные.АбсолютнаяРазницаУУ       КАК АбсолютнаяРазницаУУ,
	|	Данные.КурсоваяРазницаУУ         КАК КурсоваяРазницаУУ,
	|	
	|	ВЫБОР 
	|		КОГДА Данные.КурсоваяРазница < 0 И Данные.КурсоваяРазницаУУ > 0 
	|			ТОГДА ИСТИНА
	|		КОГДА Данные.КурсоваяРазница > 0 И Данные.КурсоваяРазницаУУ < 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                            КАК РазныйЗнакКусовыхРазниц, 
	|	
	|	ВЫБОР КОГДА СтатьиДоходов.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходы)
	|		ИНАЧЕ СтатьиДоходов.СчетУчета
	|	КОНЕЦ КАК СчетДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы) КАК СтатьяДоходов,
	|	
	|	ВЫБОР КОГДА СтатьиРасходов.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
	|		ИНАЧЕ СтатьиРасходов.СчетУчета
	|	КОНЕЦ КАК СчетРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы) КАК СтатьяРасходов,
	|	
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИрасходы) КАК ВидСубконтоДоходыРасходы
	|
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	втКурсовыеРазницы КАК Данные
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|		ПО СтатьиДоходов.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Счет                      КАК Счет,
	|	Данные.Счет.ВидыСубконто         КАК ВидыСубконтоСчета,
	|	Данные.Счет.Валютный             КАК СчетВалютный,
	|	Данные.Счет.Забалансовый         КАК СчетЗабалансовый,
	|	Данные.Счет.НалоговыйУчет        КАК НалоговыйУчет,
	|	Данные.Организация               КАК Организация,
	|	Данные.Подразделение             КАК Подразделение,
	|	Данные.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	Данные.Субконто1                 КАК Субконто1,
	|	Данные.Субконто2                 КАК Субконто2,
	|	Данные.Субконто3                 КАК Субконто3,
	|	Данные.Валюта                    КАК Валюта,
	|	Данные.ОстатокВалюты             КАК ОстатокВалюты,
	|	
	|	Данные.ОстатокРегл               КАК ОстатокРегл,
	|	Данные.ОстатокПоКурсу            КАК ОстатокПоКурсу,
	|	Данные.АбсолютнаяРазница         КАК АбсолютнаяРазница,
	|	Данные.КурсоваяРазница           КАК КурсоваяРазница,
	|	
	|	Данные.ОстатокПоКурсуУУ          КАК ОстатокПоКурсуУУ,
	|	Данные.АбсолютнаяРазницаУУ       КАК АбсолютнаяРазницаУУ,
	|	Данные.КурсоваяРазницаУУ         КАК КурсоваяРазницаУУ,
	|	
	|	Данные.РазныйЗнакКусовыхРазниц   КАК РазныйЗнакКусовыхРазниц, 
	|	
	|	Данные.СчетДоходов КАК СчетДоходов,
	|	Данные.СчетДоходов.УчетПоПодразделениям КАК СчетДоходовУчетПоПодразделениям,
	|	Данные.СчетДоходов.УчетПоНаправлениямДеятельности КАК СчетДоходовУчетПоНаправлениямДеятельности,
	|	Данные.СтатьяДоходов КАК СтатьяДоходов,
	|	
	|	Данные.СчетРасходов КАК СчетРасходов,
	|	Данные.СчетРасходов.УчетПоПодразделениям КАК СчетРасходовУчетПоПодразделениям,
	|	Данные.СчетРасходов.УчетПоНаправлениямДеятельности КАК СчетРасходовУчетПоНаправлениямДеятельности,
	|	Данные.СтатьяРасходов КАК СтатьяРасходов,
	|	
	|	Данные.ВидСубконтоДоходыРасходы КАК ВидСубконтоДоходыРасходы
	|
	|ИЗ
	|	втДанные КАК Данные
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура РасчетКурсовыхРазницФО(ПараметрыРасчета, Отказ) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетНаПланеСчетовХозрасчетныйВВалютеФинОтчетности") Тогда
		Возврат;
	КонецЕсли;
	
	Если Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить() = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.БУ Тогда
		ТекущаяВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
		ПолеИсточника = "Остатки.СуммаОстаток";
	ИначеЕсли Константы.ИсточникСуммыДляПересчетаВВалютуФинОтчетности.Получить() = Перечисления.ИсточникиСуммыДляПересчетаВВалютуФинОтчетности.УУ Тогда
		ТекущаяВалюта = Константы.ВалютаУправленческогоУчета.Получить();
		ПолеИсточника = "Остатки.СуммаУУОстаток";
	Иначе
		Возврат;
	КонецЕсли;
	НоваяВалюта = Константы.ВалютаФинОтчетности.Получить();
	Период = КонецМесяца(ПараметрыРасчета.Дата);
	КоэффициентПересчетаВалютыФО = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ТекущаяВалюта, НоваяВалюта, Период);
	
	ТекстЗапроса = ТекстЗапросаРасчетКурсовыхРазницФО();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИсточникДляПересчета", ПолеИсточника);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КоэффициентПересчета", КоэффициентПересчетаВалютыФО);
	
	ПроводкиДокумента = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	ПроводкиДокумента.Отбор.Регистратор.Установить(ПараметрыРасчета.Ссылка);
	
	КурсоваяРазница = Новый Структура("Ресурс, Сумма");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Проводка = ПроводкиДокумента.Добавить();
		Проводка.Активность = Истина;
		Проводка.Период = Период;
		Проводка.Организация = ПараметрыРасчета.Организация;
		
		КурсоваяРазница.Ресурс = "СуммаФО";
		КурсоваяРазница.Сумма = Выборка.КурсоваяРазница;
		ЗаполнитьПроводку(Проводка, Выборка, КурсоваяРазница);
		ДебетКредит = ?(Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД Или Проводка.СчетДт.Пустая(), "Дт", "Кт");
		Проводка["Подразделение"+ДебетКредит] = Неопределено;
		Проводка["НаправлениеДеятельности"+ДебетКредит] = Неопределено;
		
	КонецЦикла;// по валютным остаткам
	
	ПроводкиДокумента.Записать();
	
КонецПроцедуры

Функция ТекстЗапросаРасчетКурсовыхРазницФО()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Остатки.Счет,
	|	Остатки.Организация,
	|	Остатки.Валюта,
	|	Остатки.Подразделение,
	|	Остатки.НаправлениеДеятельности,
	|	Остатки.Счет.ВидыСубконто КАК ВидыСубконтоСчета,
	|	Остатки.Счет.Валютный КАК СчетВалютный,
	|	Остатки.Счет.Забалансовый КАК СчетЗабалансовый,
	|	Остатки.Счет.НалоговыйУчет КАК НалоговыйУчет,
	|	Остатки.Субконто1,
	|	Остатки.Субконто2,
	|	Остатки.Субконто3,
	|
	|	Остатки.ВалютнаяСуммаОстаток КАК ОстатокВалюты,
	|	Остатки.СуммаОстаток КАК ОстатокРегл,
	|	Остатки.СуммаУУОстаток КАК ОстатокУпр,
	|	Остатки.СуммаФООстаток КАК ОстатокФО,
	|	&ИсточникДляПересчета * &КоэффициентПересчета КАК ОстатокПоКурсу,
	|	&ИсточникДляПересчета * &КоэффициентПересчета - Остатки.СуммаФООстаток КАК АбсолютнаяРазница,
	|	(ВЫРАЗИТЬ(&ИсточникДляПересчета * &КоэффициентПересчета КАК ЧИСЛО(31,2))) - Остатки.СуммаФООстаток КАК КурсоваяРазница,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД) КАК СчетДоходов,
	|	ЛОЖЬ КАК СчетДоходовУчетПоПодразделениям,
	|	ЛОЖЬ КАК СчетДоходовУчетПоНаправлениямДеятельности,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД) КАК СчетРасходов,
	|	ЛОЖЬ КАК СчетРасходовУчетПоПодразделениям,
	|	ЛОЖЬ КАК СчетРасходовУчетПоНаправлениямДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.КурсовыеРазницыОтПересчетаВВалютуФО) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.ПрибылиИУбытки.КурсовыеРазницыОтПересчетаВВалютуФО) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки) КАК ВидСубконтоДоходыРасходы
	|	
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ГраницаОстатков,
	|		НЕ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбытки)),
	|		,
	|		Организация = &Организация) КАК Остатки
	|ГДЕ
	|	(ВЫРАЗИТЬ(&ИсточникДляПересчета * &КоэффициентПересчета КАК ЧИСЛО(31,2))) <> Остатки.СуммаФООстаток";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Расчет торгового сбора

Функция ПодготовитьПараметрыРасчетТорговогоСбора(СтруктураШапки, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	НачалоПериода = НачалоКвартала(СтруктураШапки.НачДата);
	КонецПериода  = КонецКвартала(СтруктураШапки.КонДата);
	
	Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Начислен торговый сбор за %1'"),
		ПредставлениеПериода(НачалоПериода, КонецПериода, "ФП = Истина"));
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРасчетТорговогоСбора(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРасчетТорговогоСбора(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыРасчетТорговогоСбора", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка                       КАК Регистратор,
	|	РегламентнаяОперация.Организация                  КАК Организация,
	|	РегламентнаяОперация.Дата                         КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)  КАК КонДата,
	|	&Содержание                                       КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Начисление налога УСН

Функция ПодготовитьПараметрыНачисленияНалогаУСН(СтруктураШапки, Отказ) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
	
	Запрос.УстановитьПараметр("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходы(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(СтруктураШапки.Организация, СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("СтавкаНалогаУСН",
		УчетнаяПолитика.СтавкаНалогаУСН(СтруктураШапки.Организация, СтруктураШапки.КонДата));
		
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаНачислениеНалогаУСН(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат ТаблицыПроведения(НомераТаблиц, Результат);

КонецФункции

Функция ТекстЗапросаНачислениеНалогаУСН(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаРеквизитыНалогУСН", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК КонДата,
	|	&ПрименяетсяУСН КАК ПрименяетсяУСН,
	|	&ПрименяетсяУСНДоходы КАК ПрименяетсяУСНДоходы,
	|	&ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	&СтавкаНалогаУСН,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) = НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНачалоГода,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, ГОД) = КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКонецГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

// Признание расходов на приобретение ОС по договору лизинга

Функция ПодготовитьПараметрыПризнаниеВНУЛизинговыхПлатежей(СтруктураШапки) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Содержание = "Лизинговые платежи";
	
	Запрос.УстановитьПараметр("Ссылка",     СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Организация",СтруктураШапки.Организация);
	Запрос.УстановитьПараметр("КонДата",    СтруктураШапки.КонДата);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
					+ ТекстЗапросаТаблицаОС(НомераТаблиц);
					
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
	
	НомераТаблиц.Вставить("АрендныеПлатежи", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	РегламентнаяОперация.Дата КАК ДатаРасчета,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	"""" КАК ИмяСписка,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество() + 2);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = СостоянияОСОрганизаций.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДокВводОстатков24
	|		ПО ДокВводОстатков24.Ссылка = СостоянияОСОрганизаций.Регистратор
	|ГДЕ
	|	(СостоянияОСОрганизаций.ДатаСостояния < &НачалоМесяца
	|			И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &НачалоМесяца
	|		ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков24.Дата, МЕСЯЦ) < &НачалоМесяца)
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И СостоянияОСОрганизаций.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = СостоянияОСОрганизаций.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДокВводОстатков24
	|		ПО ДокВводОстатков24.Ссылка = СостоянияОСОрганизаций.Регистратор
	|ГДЕ
	|	(СостоянияОСОрганизаций.ДатаСостояния МЕЖДУ &НачалоМесяца И &КонДата
	|			И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) МЕЖДУ &НачалоМесяца И &КонДата
	|		ИЛИ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков24.Дата, МЕСЯЦ) МЕЖДУ &НачалоМесяца И &КонДата)
	|
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И СостоянияОСОрганизаций.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	СведенияБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)
	|				И ДоговорЛизинга <> ЗНАЧЕНИЕ(Справочник.ДоговорыЛизинга.ПустаяСсылка)) КАК СведенияБУ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#КонецЕсли