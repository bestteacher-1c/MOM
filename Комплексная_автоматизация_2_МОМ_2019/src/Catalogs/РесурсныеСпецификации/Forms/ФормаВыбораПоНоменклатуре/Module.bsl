
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыбораСпецификаций = Новый Структура("ДоступныеСтатусы, 
		| ДоступныеТипы,
		| ИсключитьПроизводствоНаСтороне,
		| ИсключитьСпецификацию,
		| СписокИзделий,
		| ПолучитьСпецификацииПоНоменклатуре,
		| ПолучитьСпецификацииПоСпискуНоменклатуры");
	ЗаполнитьЗначенияСвойств(ПараметрыВыбораСпецификаций, Параметры);
	
	СпецификацииПоФиксированнойСтоимости = "";
	Если Параметры.Свойство("СпецификацииПоФиксированнойСтоимости", СпецификацииПоФиксированнойСтоимости) Тогда
		Элементы.СписокОтображатьПобочныйВыход.Пометка   = СпецификацииПоФиксированнойСтоимости = "Показывать";
		Элементы.СписокОтображатьПобочныйВыход.Видимость = СпецификацииПоФиксированнойСтоимости <> "";
		ПараметрыВыбораСпецификаций.Вставить("СпецификацииПоФиксированнойСтоимости", ?(Элементы.СписокОтображатьПобочныйВыход.Пометка, "Показывать", ""));
	КонецЕсли;
	
	// Заполнение списка спецификаций
	Если Параметры.Свойство("ПолучитьСпецификацииПоНоменклатуре") Тогда
		
		Номенклатура = Параметры.Номенклатура;
		
		Параметры.Свойство("Характеристика",     Характеристика);
		Параметры.Свойство("Подразделение",      Подразделение);
		Параметры.Свойство("НачалоПроизводства", НачалоПроизводства);
		
		ЗаполнитьСписокСпецификацийПоНоменклатуре();
		
	ИначеЕсли Параметры.Свойство("ПолучитьСпецификацииПоСпискуНоменклатуры") Тогда
		
		ЗаполнитьСписокСпецификацийПоСпискуНоменклатуры();
		
	ИначеЕсли Параметры.Свойство("АдресТаблицыПродукции") Тогда // для совместимости с версией 2.1 (Документ.СписаниеЗатратНаВыпуск)
		
		НастроитьФормуПоТаблицеПродукции();
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Для открытия формы необходимо передать параметры.'");
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "НачалоПроизводства", НачалоПроизводства);
	
	Элементы.Статус.Видимость = НЕ Параметры.Свойство("ДоступныеСтатусы") ИЛИ Параметры.ДоступныеСтатусы.Количество() <> 1;
	
	ОсновнойТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.ПустаяСсылка();
	Если Параметры.Свойство("ДоступныеТипы") Тогда
		Элементы.ТипПроизводственногоПроцесса.Видимость = Параметры.ДоступныеТипы.Количество() <> 1;
		Элементы.ФормаНазначитьОсновной.Видимость = Параметры.ДоступныеТипы.Найти(Перечисления.ТипыПроизводственныхПроцессов.Сборка) <> Неопределено;
		Если Параметры.ДоступныеТипы.Количество() = 1 Тогда
			ОсновнойТипПроизводственногоПроцесса = Параметры.ДоступныеТипы[0];
		КонецЕсли;
	КонецЕсли;
	
	// Заголовок
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	Иначе
		Если ЗначениеЗаполнено(ОсновнойТипПроизводственногоПроцесса) Тогда
			Заголовок = СтрШаблон(НСтр("ru = 'Ресурсные спецификации (%1)'"), НРег(ОсновнойТипПроизводственногоПроцесса));
		Иначе
			Заголовок = НСтр("ru = 'Ресурсные спецификации'");
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОсновныеСпецификации" Тогда
		УстановитьСпецификацияПоУмолчанию();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НазначитьОсновной(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьНазначитьСпецификациюОсновной(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПобочныйВыход(Команда)
	
	Элементы.СписокОтображатьПобочныйВыход.Пометка = НЕ Элементы.СписокОтображатьПобочныйВыход.Пометка;
	
	ПараметрыВыбораСпецификаций.СпецификацииПоФиксированнойСтоимости =
		?(Элементы.СписокОтображатьПобочныйВыход.Пометка,"Показывать","");
	
	Если ПараметрыВыбораСпецификаций.Свойство("ПолучитьСпецификацииПоНоменклатуре") Тогда
		ЗаполнитьСписокСпецификацийПоНоменклатуре();
	ИначеЕсли ПараметрыВыбораСпецификаций.Свойство("ПолучитьСпецификацииПоСпискуНоменклатуры") Тогда
		ЗаполнитьСписокСпецификацийПоСпискуНоменклатуры();
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СписокСпецификаций

&НаСервере
Процедура ЗаполнитьСписокСпецификацийПоНоменклатуре()
	
	Результат = УправлениеДаннымиОбИзделиях.СписокСпецификацийПоНоменклатуре(
		Номенклатура, Характеристика, НачалоПроизводства, Подразделение, ПараметрыВыбораСпецификаций);
		
	ЗаполнитьСписокСпецификаций(Результат);
	
	УстановитьСпецификацияПоУмолчанию();
	ЗаполнитьИнформациюПоПараметрамВыбораСпецификации();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСпецификацийПоСпискуНоменклатуры()
	
	СписокНоменклатуры = Новый ТаблицаЗначений;
	СписокНоменклатуры.Колонки.Добавить("Номенклатура",       Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СписокНоменклатуры.Колонки.Добавить("Характеристика",     Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	СписокНоменклатуры.Колонки.Добавить("Подразделение",      Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	СписокНоменклатуры.Колонки.Добавить("НачалоПроизводства", Новый ОписаниеТипов("Дата"));
	
	Для каждого СтруктураДанных Из Параметры.СписокИзделий Цикл
		ЗаполнитьЗначенияСвойств(СписокНоменклатуры.Добавить(), СтруктураДанных);
	КонецЦикла;
	
	Результат = УправлениеДаннымиОбИзделиях.СписокСпецификацийПоСпискуНоменклатуры(СписокНоменклатуры, ПараметрыВыбораСпецификаций);
	ЗаполнитьСписокСпецификаций(Результат);
	
	СписокНоменклатуры.Свернуть("Номенклатура,Характеристика,Подразделение");
	Если СписокНоменклатуры.Количество() = 1 Тогда
		
		ДанныеНоменклатуры = СписокНоменклатуры[0];
		
		Номенклатура   = ДанныеНоменклатуры.Номенклатура;
		Характеристика = ДанныеНоменклатуры.Характеристика;
		Подразделение  = ДанныеНоменклатуры.Подразделение;
		
		УстановитьСпецификацияПоУмолчанию();
		
		ЗаполнитьИнформациюПоПараметрамВыбораСпецификации();
		
	Иначе
		
		Элементы.ТекстПараметрыВыбора.Видимость = Ложь;
		Элементы.Список.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		
		СпецификацияПоУмолчанию = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
					Список, 
					"СпецификацияПоУмолчанию", 
					СпецификацияПоУмолчанию);
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокСпецификацийДляТаблицыПродукции()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаИзделий.Номенклатура,
	|	ТаблицаИзделий.Характеристика,
	|	ТаблицаИзделий.Подразделение,
	|	ТаблицаИзделий.НачалоПроизводства
	|ПОМЕСТИТЬ ВТИзделия
	|ИЗ
	|	&ТаблицаИзделий КАК ТаблицаИзделий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИзделия.Номенклатура,
	|	ВТИзделия.Характеристика,
	|	ВыходныеИзделия.Ссылка КАК Спецификация
	|ПОМЕСТИТЬ ВТСпецификацииИзделий
	|ИЗ
	|	ВТИзделия КАК ВТИзделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ВыходныеИзделия
	|		ПО (ВыходныеИзделия.Номенклатура = ВТИзделия.Номенклатура)
	|			И (ВыходныеИзделия.Характеристика = ВТИзделия.Характеристика
	|				ИЛИ ВыходныеИзделия.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВыходныеИзделия.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует))
	|				И (ВыходныеИзделия.Ссылка.НачалоДействия = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ВыходныеИзделия.Ссылка.НачалоДействия <= ВТИзделия.НачалоПроизводства)
	|				И (ВыходныеИзделия.Ссылка.КонецДействия = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ВыходныеИзделия.Ссылка.КонецДействия >= ВТИзделия.НачалоПроизводства)
	|ГДЕ
	|	ВыходныеИзделия.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТИзделия.Номенклатура,
	|	ВТИзделия.Характеристика,
	|	ВозвратныеОтходы.Ссылка
	|ИЗ
	|	ВТИзделия КАК ВТИзделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВозвратныеОтходы КАК ВозвратныеОтходы
	|		ПО (ВозвратныеОтходы.Номенклатура = ВТИзделия.Номенклатура)
	|			И (ВозвратныеОтходы.Характеристика = ВТИзделия.Характеристика
	|				ИЛИ ВозвратныеОтходы.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|			И (ВозвратныеОтходы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует))
	|				И (ВозвратныеОтходы.Ссылка.НачалоДействия = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ВозвратныеОтходы.Ссылка.НачалоДействия <= ВТИзделия.НачалоПроизводства)
	|				И (ВозвратныеОтходы.Ссылка.КонецДействия = ДАТАВРЕМЯ(1, 1, 1)
	|					ИЛИ ВозвратныеОтходы.Ссылка.КонецДействия >= ВТИзделия.НачалоПроизводства)
	|ГДЕ
	|	ВозвратныеОтходы.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСпецификации.Спецификация
	|ПОМЕСТИТЬ ВТСпецификации
	|ИЗ
	|	ВТСпецификацииИзделий КАК ВТСпецификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИзделия.Номенклатура,
	|	ВТИзделия.Характеристика,
	|	ВТСпецификации.Спецификация
	|ПОМЕСТИТЬ ВТКомбинации
	|ИЗ
	|	ВТИзделия КАК ВТИзделия,
	|	ВТСпецификации КАК ВТСпецификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКомбинации.Спецификация
	|ПОМЕСТИТЬ ВтИсключения
	|ИЗ
	|	ВТКомбинации КАК ВТКомбинации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСпецификацииИзделий КАК ВТСпецификацииИзделий
	|		ПО ВТКомбинации.Номенклатура = ВТСпецификацииИзделий.Номенклатура
	|			И ВТКомбинации.Характеристика = ВТСпецификацииИзделий.Характеристика
	|			И ВТКомбинации.Спецификация = ВТСпецификацииИзделий.Спецификация
	|ГДЕ
	|	ВТСпецификацииИзделий.Спецификация ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСпецификации.Спецификация
	|ИЗ
	|	ВТСпецификации КАК ВТСпецификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтИсключения КАК ВтИсключения
	|		ПО (ВтИсключения.Спецификация = ВТСпецификации.Спецификация)
	|ГДЕ
	|	ВтИсключения.Спецификация ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("ТаблицаИзделий", ТаблицаПродукции.Выгрузить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СписокСпецификаций = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		СписокСпецификаций.Добавить(Выборка.Спецификация);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокСпецификаций", СписокСпецификаций.ВыгрузитьЗначения());
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Справочники.РесурсныеСпецификации.УстановитьУсловноеОформлениеСпискаРесурсныхСпецификаций(Список.УсловноеОформление);

КонецПроцедуры

&НаСервере
Функция НазначитьОсновнойТекущуюСпецификацию(СпецификацияЗначение)
	
	НаборДанных = Новый Массив;
	
	Если ТаблицаПродукции.Количество() > 0 Тогда
		
		Для каждого Строка Из ТаблицаПродукции Цикл
			
			СтруктураЗаписи = РегистрыСведений.ОсновныеСпецификации.СтруктураЗаписи();
			
			СтруктураЗаписи.Номенклатура   = Строка.Номенклатура;
			СтруктураЗаписи.Характеристика = Строка.Характеристика;
			СтруктураЗаписи.Спецификация   = СпецификацияЗначение;
			
			СтруктураЗаписи.Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
			
			НаборДанных.Добавить(СтруктураЗаписи);
			
		КонецЦикла;
		
	Иначе
		
		СтруктураЗаписи = РегистрыСведений.ОсновныеСпецификации.СтруктураЗаписи();
		
		СтруктураЗаписи.Номенклатура   = Номенклатура;
		СтруктураЗаписи.Характеристика = Характеристика;
		СтруктураЗаписи.Спецификация   = СпецификацияЗначение;
		
		СтруктураЗаписи.Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	
		НаборДанных.Добавить(СтруктураЗаписи);
		
	КонецЕсли;
	
	ДействиеВыполнено = УправлениеДаннымиОбИзделияхВызовСервера.НазначитьОсновныеСпецификацииДляИзделий(НаборДанных);
	
	Если ДействиеВыполнено Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СпецификацияПоУмолчанию", СпецификацияЗначение);
		
	КонецЕсли;
	
	Возврат ДействиеВыполнено;

КонецФункции

&НаСервере
Процедура УстановитьСпецификацияПоУмолчанию()
	
	Если ТаблицаПродукции.Количество() > 0 Тогда
		
		СпецификацияПоУмолчанию = ОсновнаяСпецификацияПоТаблицеПродукции();
		
	Иначе
		
		СпецификацияПоУмолчанию = УправлениеДаннымиОбИзделияхВызовСервера.ПолучитьОсновнуюСпецификацию(
									Подразделение,
									Номенклатура,
									Характеристика,
									НачалоПроизводства);
									
									
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СпецификацияПоУмолчанию", СпецификацияПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСпецификаций(Массив)
	
	СписокСпецификаций.ЗагрузитьЗначения(Массив);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СписокСпецификаций", СписокСпецификаций.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюПоПараметрамВыбораСпецификации()
	
	Если ТаблицаПродукции.Количество() > 0 Тогда
		
		МассивИзделий = Новый Массив;
		Для Каждого Строка Из ТаблицаПродукции Цикл
			Если МассивИзделий.Найти(Строка.Номенклатура) = Неопределено Тогда
				МассивИзделий.Добавить(Строка.Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
		ТекстПараметрыВыбора = НСтр("ru = 'Изделия:'") + " ";
		
		Для Индекс = 0 По МассивИзделий.Количество()-1 Цикл
			
			Если Индекс = МассивИзделий.Количество() - 1 Тогда
				ТекстПараметрыВыбора = ТекстПараметрыВыбора + "%" + Строка(Индекс + 1) + ".";
			Иначе
				ТекстПараметрыВыбора = ТекстПараметрыВыбора + "%" + Строка(Индекс + 1) + ", ";
			КонецЕсли;
			
		КонецЦикла;
		
		ТекстПараметрыВыбора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтрокуИзМассива(ТекстПараметрыВыбора, МассивИзделий);
		
	Иначе
		
		ТекстПараметрыВыбора = НСтр("ru = 'Номенклатура:'");
		
		Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
			ТекстПараметрыВыбора = ТекстПараметрыВыбора + " " + НСтр("ru = '<не выбрана>'");
		Иначе
			ТекстПараметрыВыбора = ТекстПараметрыВыбора + " """ + Строка(Номенклатура) + ?(Характеристика.Пустая(), "", ", " + Строка(Характеристика)) + """";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоТаблицеПродукции()
	
	Таблица = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыПродукции).Скопировать();
	Таблица.Свернуть("Номенклатура, Характеристика, Подразделение, НачалоПроизводства");
	ТаблицаПродукции.Загрузить(Таблица);
	
	СписокСпецификацийДляТаблицыПродукции();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "СпецификацияПоУмолчанию", Неопределено);
	
	ЗаполнитьИнформациюПоПараметрамВыбораСпецификации();
	
	УстановитьСпецификацияПоУмолчанию();
	
	Заголовок = НСтр("ru = 'Заполнение / замена спецификации в выпусках'");
	Элементы.ФормаВыбрать.Заголовок = НСтр("ru = 'Заменить'");
	Элементы.ФормаНазначитьОсновной.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ОсновнаяСпецификацияПоТаблицеПродукции()
	
	ПараметрыЗапроса = Новый Структура("ДляСпискаНоменклатуры");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаИзделий.Номенклатура,
	|	ТаблицаИзделий.Характеристика,
	|	ТаблицаИзделий.Подразделение,
	|	ТаблицаИзделий.НачалоПроизводства
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	&ТаблицаИзделий КАК ТаблицаИзделий
	|;
	|" + УправлениеДаннымиОбИзделиях.ПолучитьТекстЗапросаОсновнойСпецификации(ПараметрыЗапроса);
	
	Запрос.УстановитьПараметр("ТаблицаИзделий", ТаблицаПродукции.Выгрузить());
	
	ТаблицаОсновныхСпецификаций = Запрос.Выполнить().Выгрузить();
	
	СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, Подразделение, Спецификация");
	
	СпецификацияПоУмолчанию = Неопределено;
	
	Для Каждого Строка Из СписокСпецификаций Цикл
		
		ЭтоОсновнаяСпецификация = Истина;
		СтруктураОтбора.Спецификация = Строка.Значение;
		
		Для Каждого СтрокаПродукции Из ТаблицаПродукции Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаПродукции);
			
			Если ТаблицаОсновныхСпецификаций.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				ЭтоОсновнаяСпецификация = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭтоОсновнаяСпецификация Тогда
			СпецификацияПоУмолчанию = Строка.Значение;
		КонецЕсли;
		
		Прервать;
		
	КонецЦикла;
	
	Возврат СпецификацияПоУмолчанию;
	
КонецФункции

&НаКлиенте
Функция ПроверитьНазначитьСпецификациюОсновной(Ссылка)
	
	СтруктураОшибок = Новый Структура();
	
	ЕстьОшибки = НЕ СпецификациюМожноНазначитьОсновной(Ссылка, СтруктураОшибок);
	Если ЕстьОшибки Тогда
		Если СтруктураОшибок.Свойство("ТекстОшибки") Тогда
			ПоказатьПредупреждение(, СтруктураОшибок.ТекстОшибки);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Действие не может быть выполнено для выбранного объекта.'"));
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
	
	Результат = НазначитьОсновнойТекущуюСпецификацию(Ссылка);
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СпецификациюМожноНазначитьОсновной(Ссылка, СтруктураОшибок)
	
	СвойстваСпецификации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Статус,ТипПроизводственногоПроцесса");
	
	Результат = УправлениеДаннымиОбИзделияхКлиентСервер.СпецификациюМожноНазначитьОсновной(
		СвойстваСпецификации,
		СтруктураОшибок);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти
