#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
// 
// Возвращаемое значение:
// 	Массив - имена блокируемых реквизитов:
//		* БлокируемыйРеквизит - Строка - Имя блокируемого реквизита.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ВидАналитики1");
	Результат.Добавить("ВидАналитики2");
	Результат.Добавить("ВидАналитики3");
	Результат.Добавить("ВидАналитики4");
	Результат.Добавить("ВидАналитики5");
	Результат.Добавить("ВидАналитики6");
	Результат.Добавить("ВидПоказателя");
	Результат.Добавить("УстанавливатьЗначениеНаКаждыйПериод");
	Результат.Добавить("ЗагружатьИзДругихПодсистем");
	Результат.Добавить("ПоОрганизациям");
	Результат.Добавить("ПоПериодам");
	Результат.Добавить("ПоСценариям");
	Результат.Добавить("ПоПодразделениям");
	Результат.Добавить("Периодичность");
	Результат.Добавить("ПериодичностьПодпериодов");
	
	Возврат Результат;
	
КонецФункции

// Возвращает предопределенную схему получения данных
//
// Параметры:
//	ИмяМакета - Строка - имя макета, из которого необходимо получить описание и схему.
//
// Возвращаемое значение:
//	СхемаКомпоновкиДанных - схема получения данных.
//
Функция ПредопределеннаяСхемаПолученияДанных(ИмяМакета, РежимПолученияДанных = Неопределено) Экспорт
	
	СхемаПолученияДанных = Справочники.НефинансовыеПоказателиБюджетов.ПолучитьМакет(ИмяМакета);
	
	Если РежимПолученияДанных = Перечисления.РежимПолученияДанныхБюджетирования.Все Тогда
		Для Каждого Набор Из СхемаПолученияДанных.НаборыДанных Цикл
			Если ЗначениеЗаполнено(Набор.Запрос) Тогда 
				Набор.Запрос = СтрЗаменить(Набор.Запрос, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ ");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат  СхемаПолученияДанных;
	
КонецФункции

// Возвращает таблицу нефинансовых показателей с учетом отбора компоновки данных
//
// Параметры:
// 	 ОтборКомпоновкиДанны - НастройкиКомпоновкиДанных - Настройки компоновки данных, содержащие отбор.
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица нефинансовых показателей:
//		* НефинансовыйПоказатель - СправочникСсылка.НефинансовыеПоказатели - Нефинансовый показатель.
//		* ПолеВалютыАналитики - Строка - Источник заполнения валюты.
//		* ПолеЕдиницыИзмеренияАналитики - Строка - Источник заполнения единицы измерения.
//
Функция НефинансовыеПоказателиСУчетомОтбора(ОтборКомпоновкиДанны) Экспорт
	
	СхемаКомпоновкиДанных = ФинансоваяОтчетностьСервер.НоваяСхема();
	НаборДанныхСценарии = ФинансоваяОтчетностьСервер.НовыйНабор(СхемаКомпоновкиДанных, Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанныхСценарии.Запрос = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НефинансовыеПоказатели.Ссылка КАК НефинансовыйПоказатель,
	|	НефинансовыеПоказатели.АналитикаВалюты.ЗаполнениеВалюты КАК ПолеВалютыАналитики,
	|	НефинансовыеПоказатели.АналитикаЕдиницыИзмерения.ЗаполнениеЕдиницыИзмерения КАК ПолеЕдиницыИзмеренияАналитики,
	|	*
	|ИЗ
	|	Справочник.НефинансовыеПоказателиБюджетов КАК НефинансовыеПоказатели
	|ГДЕ
	|	НЕ НефинансовыеПоказатели.ПометкаУдаления
	|	И НЕ НефинансовыеПоказатели.ЭтоГруппа
	|";
	НаборДанныхСценарии.АвтоЗаполнениеДоступныхПолей = Истина;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	Настройки = Новый НастройкиКомпоновкиДанных;
	КомпоновкаДанныхКлиентСервер.ДобавитьГруппировку(Настройки);
	Для каждого Элемент Из КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы Цикл
		Если Элемент.Папка Тогда
			Продолжить;
		КонецЕсли;
		КомпоновкаДанныхКлиентСервер.ДобавитьВыбранноеПоле(Настройки, Элемент.Поле);
	КонецЦикла;
	КомпоновкаДанныхКлиентСервер.СкопироватьОтборКомпоновкиДанных(СхемаКомпоновкиДанных, Настройки, ОтборКомпоновкиДанны);
	
	Возврат ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(СхемаКомпоновкиДанных, Настройки);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЭтоГруппа ИЛИ
	|	ЗначениеРазрешено(Ссылка)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ШаблоныСхемыКомпоновкиДанных() Экспорт
	
	Шаблоны = Новый Массив;
	
	Для каждого Макет Из Метаданные.Справочники.НефинансовыеПоказателиБюджетов.Макеты Цикл
		
		Если Макет.ТипМакета <> Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Шаблоны.Добавить(Новый Структура("Имя, Синоним", Макет.Имя, Макет.Синоним));
		
	КонецЦикла;
	
	Возврат Шаблоны;
	
КонецФункции

#КонецОбласти

#Область Отчеты

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	//++ НЕ УТ
	Отчеты.ЗначенияНефинансовыхПоказателей.ДобавитьКомандуОтчета(КомандыОтчетов);
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область Обработчики_2_4_2

#КонецОбласти

#КонецОбласти

#КонецЕсли

