
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	ЗаполнитьПараметрыВыбораСчетов();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности") Тогда
		Элементы.ДекорацияЗаголовокЦФ.Видимость = Ложь;
	КонецЕсли; 
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Элементы.ДекорацияЗаголовокЦФ.Видимость = Ложь;
		Элементы.ДекорацияЗабалансовыйУчет.Видимость = Ложь;
	КонецЕсли; 
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидАктиваПриИзменении(Элемент)
	
	ВидАктиваПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ВидАктиваДоИзменения = Объект.ВидАктива;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, Знач ИзмененныеРеквизиты = "")

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = (СтруктураИзмененныхРеквизитов.Количество() = 0);
	
	ПараметрыРеквизитовОбъекта = ВнеоборотныеАктивыКлиентСервер.ЗначенияСвойствЗависимыхРеквизитов_ГФУ(Объект, ИзмененныеРеквизиты);
	ВнеоборотныеАктивыКлиентСервер.НастроитьЗависимыеЭлементыФормы(Форма, ПараметрыРеквизитовОбъекта);

	Если Элементы.ДекорацияЗабалансовыйУчет.Видимость <> Элементы.СчетЗабалансовогоУчета.Видимость Тогда
		Элементы.ДекорацияЗабалансовыйУчет.Видимость = Элементы.СчетЗабалансовогоУчета.Видимость;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ВидАктиваПриИзмененииНаСервере()

	ЗаполнитьСчета = ЗначениеЗаполнено(Объект.ВидАктива)
		И Объект.ВидАктива <> ВидАктиваДоИзменения
		И (Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство
				И ВидАктиваДоИзменения <> Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество
			ИЛИ Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество
				И ВидАктиваДоИзменения <> Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство
			ИЛИ Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.НМА
			ИЛИ Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.НИОКР);
			
	Если ЗаполнитьСчета Тогда
		ЗаполнитьСчетаПоУмолчанию();
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ВидАктива");
	
	ЗаполнитьПараметрыВыбораСчетов();

	ВидАктиваДоИзменения = Объект.ВидАктива;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетаПоУмолчанию()

	Справочники.ГруппыФинансовогоУчетаВнеоборотныхАктивов.ЗаполнитьСчетаПоУмолчанию(Объект);

КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьПараметрыВыбораСчетов()
	
	Если Не ПравоДоступа("Просмотр",  Метаданные.ПланыСчетов.Хозрасчетный) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.НМА
		ИЛИ Объект.ВидАктива = Перечисления.ВидыВнеоборотныхАктивов.НИОКР Тогда
		НМА_ОС = "НМА";
	Иначе
		НМА_ОС = "ОС";
	КонецЕсли; 

	СтруктураСчетовУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаВнеоборотныхАктивов();
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаСтоимость_"+НМА_ОС])));
	Элементы.СчетУчета.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаАмортизация_"+НМА_ОС])));
	Элементы.СчетУчетаАмортизации.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаВыбытие_ОС"])));
	Элементы.СчетУчетаВыбытия.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаРезервДооценки_"+НМА_ОС])));
	Элементы.СчетУчетаРезерваДооценки.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаЗабалансовогоУчета_ОС"])));
	Элементы.СчетЗабалансовогоУчета.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета целевого финансирования
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаСтоимость_"+НМА_ОС+"_ЦФ"])));
	Элементы.СчетУчетаЦФ.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета["СчетаАмортизация_"+НМА_ОС+"_ЦФ"])));
	Элементы.СчетУчетаАмортизацииЦФ.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

#КонецОбласти
