#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
//++ НЕ УТ
	СчетПрочиеДоходыИРасходы = ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы;
	Если НЕ БухгалтерскийУчетПовтИсп.СчетВИерархии(СчетУчетаВыручкиОтПродаж, СчетПрочиеДоходыИРасходы) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяДоходовОСНО");
	КонецЕсли;
	Если НЕ БухгалтерскийУчетПовтИсп.СчетВИерархии(СчетУчетаВыручкиОтПродажЕНВД, СчетПрочиеДоходыИРасходы) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяДоходовЕНВД");
	КонецЕсли;
//-- НЕ УТ

	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") 
		ИЛИ НЕ ПолучитьФункциональнуюОпцию("ПлательщикЕНВД") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяДоходовЕНВД");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ОбщегоНазначенияУТ.ПодготовитьДанныеДляСинхронизацииКлючей(ЭтотОбъект, ПараметрыСинхронизацииКлючей());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияУТ.СинхронизироватьКлючи(ЭтотОбъект);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТ
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		ВидыСчетаДляОчистки = Новый Массив;
		Если ЗначениеЗаполнено(СчетУчетаНаСкладе) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.НаСкладе);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаВыручкиОтПродаж) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ВыручкаОтПродаж);
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаНДСПриПродаже) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.НДСПриПродаже);
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.НДСПриПродажеКомиссионера);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаСебестоимостиПродаж) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.СебестоимостьПродаж);
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаВПути) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РеализацияБезПереходаПраваСобственности);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаНДСВПути) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.НДСПриОтгрузкеБезПереходаПраваСобственности);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаПередачиНаКомиссию) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ПередачаНаКомиссию);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаВыручкиОтПродажЕНВД) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ВыручкаОтПродажЕНВД);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаСебестоимостиПродажЕНВД) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.СебестоимостьПродажЕНВД);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаПередачиВПереработку) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ПередачаВПереработку);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаЗатратыНаПриобретение) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ);
		КонецЕсли;
		
		Если ВидыСчетаДляОчистки.Количество() Тогда
			РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ОчиститьПриЗаписиАналитикиУчета(Ссылка, ВидыСчетаДляОчистки);
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыСинхронизацииКлючей()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("Справочник.ВидыЗапасов", "ПометкаУдаления");
	Результат.Вставить("Справочник.КлючиАналитикиУчетаПартий", "ПометкаУдаления");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
#КонецЕсли
