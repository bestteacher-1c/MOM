#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("ТипЗатрат");
	Результат.Добавить("Идентификатор");
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполняет идентификатор и тип затрат предопределенной статьи калькуляции.
//
Функция НастроитьСтатьюКалькуляцииПредопределенныхЭлементов() Экспорт
	
	МетаданныеОбъекта = Метаданные.Справочники.СтатьиКалькуляции;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	СписокСтатей = Новый Массив;
	СписокСтатей.Добавить("ПолуфабрикатыПроизводимыеВПроцессе");

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатьиКалькуляции.Ссылка КАК Ссылка,
	|	СтатьиКалькуляции.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.Идентификатор = """"
	|	И СтатьиКалькуляции.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.ПустаяСсылка)
	|	И СтатьиКалькуляции.ИмяПредопределенныхДанных В (&СписокСтатей)
	|");
	Запрос.УстановитьПараметр("СписокСтатей", СписокСтатей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			Блокировка.Добавить(ПолноеИмяОбъекта).УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если Объект <> Неопределено И Объект.ВерсияДанных = Выборка.ВерсияДанных Тогда
				
				Если Не ЗначениеЗаполнено(Объект.Идентификатор) Тогда
					Объект.Идентификатор = Объект.ИмяПредопределенныхДанных;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Объект.ТипЗатрат) Тогда
					Объект.ТипЗатрат = Перечисления.ТипыЗатрат.Материальные;
				КонецЕсли;
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРеквизитДопУпорядочиванияГруппСтатейДоходов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиКалькуляции.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтатьиКалькуляции КАК СтатьиКалькуляции
	|ГДЕ
	|	СтатьиКалькуляции.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатьиКалькуляции.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка);
		НастройкаПорядкаЭлементов.ЗаполнитьЗначениеРеквизитаУпорядочивания(Объект, Ложь);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
	КонецЦикла;
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
