#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТ
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		ВидыСчетаДляОчистки = Новый Массив;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКлиентами) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСКлиентами);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаАвансовПолученных) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.АвансыПолученные);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСПоставщиками) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСПоставщиками);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаАвансовВыданных) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.АвансыВыданные);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовПоПретензиям) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыПоПретензиям);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКлиентамиТара) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСПоставщикамиТара) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКредиторамиОсновнойДолг) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиОсновнойДолг);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКредиторамиПроценты) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиПроценты);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСКредиторамиКомиссия) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСКредиторамиКомиссия);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСДебиторамиОсновнойДолг) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиОсновнойДолг);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСДебиторамиПроценты) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиПроценты);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСДебиторамиКомиссия) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.РасчетыСДебиторамиКомиссия);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаНеотфактурованныеПоставки) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.НеотфактурованныеПоставки);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСЛизингодателемЛизинговыеУслуги) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ЛизинговыеУслуги);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСЛизингодателемОбеспечительныйПлатеж) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ОбеспечительныйПлатежПоЛизингу);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСЛизингодателемВыкупПредметаЛизинга) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.ВыкупПредметаЛизинга);
		КонецЕсли;
		Если ЗначениеЗаполнено(СчетУчетаРасчетовСЛизингодателемАрендныеОбязательства) Тогда
			ВидыСчетаДляОчистки.Добавить(Перечисления.ВидыСчетовРеглУчета.АрендныеОбязательстваПоЛизингу);
		КонецЕсли;
		
		Если ВидыСчетаДляОчистки.Количество() Тогда
			РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ОчиститьПриЗаписиАналитикиУчета(Ссылка, ВидыСчетаДляОчистки);
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВидРасчетовЗаполнен = Ложь;
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		
		МассивВидовРасчетовДляУдаления = Новый Массив;
		
		Справочники.ГруппыФинансовогоУчетаРасчетов.ПреобразоватьОтборПараметровВыбора(ДанныеЗаполнения);
		ВидыРасчетов = Справочники.ГруппыФинансовогоУчетаРасчетов.ВидыРасчетов();
	
		Для каждого ВидРасчетов Из ВидыРасчетов Цикл
			ИспользоватьВидРасчетов = Ложь;
			Если ДанныеЗаполнения.Свойство(ВидРасчетов, ИспользоватьВидРасчетов) Тогда
				Если ИспользоватьВидРасчетов Тогда
					ВидРасчетовЗаполнен = Истина;
					Прервать;
				Иначе
					МассивВидовРасчетовДляУдаления.Добавить(ВидРасчетов);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если МассивВидовРасчетовДляУдаления.Количество() Тогда
			ДоступныеВидыРасчетов = ОбщегоНазначенияКлиентСервер.РазностьМассивов(ВидыРасчетов, МассивВидовРасчетовДляУдаления);
			Если ДоступныеВидыРасчетов.Количество() Тогда
				ЭтотОбъект[ДоступныеВидыРасчетов.Получить(0)] = Истина;
				ВидРасчетовЗаполнен = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЭтоГруппа И НЕ ВидРасчетовЗаполнен Тогда
		РасчетыСКлиентами = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли