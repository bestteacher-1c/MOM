
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Для каждого Строка Из Объект.ИспользованиеРезерва Цикл
		ЗаполнитьРеквизитыИспользованияРезерва(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНового = Неопределено;
	Для каждого Строка Из Объект.ИспользованиеРезерва Цикл
		
		ИндексСтроки = Объект.ИспользованиеРезерва.Индекс(Строка);
		СтрокаТекущегоОбъекта = ТекущийОбъект.ИспользованиеРезерва.Получить(ИндексСтроки);
		Если Строка.АналитикаОбъектУчетаРезервов И Не ЗначениеЗаполнено(Строка.АналитикаРасходов) Тогда
			Если ТекущийОбъект.ЭтоНовый() Тогда
				Если СсылкаНового = Неопределено Тогда
					НоваяСсылка = Справочники.ОбъектыУчетаРезервовПредстоящихРасходов.ПолучитьСсылку();
					ТекущийОбъект.УстановитьСсылкуНового(НоваяСсылка);
					СсылкаНового = ТекущийОбъект.ПолучитьСсылкуНового();
				КонецЕсли;
				СтрокаТекущегоОбъекта.АналитикаРасходов = СсылкаНового;		
			Иначе
				СтрокаТекущегоОбъекта.АналитикаРасходов = ТекущийОбъект.Ссылка;
			КонецЕсли;
		КонецЕсли;
		СтрокаТекущегоОбъекта.ЛюбаяАналитикаРасходов = Не Строка.АналитикаРасходовУказана И Не Строка.АналитикаОбъектУчетаРезервов;
		
	КонецЦикла;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Ошибки = Неопределено;
	
	Если Объект.НачалоПериода > Объект.КонецПериода И ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки,
			"Объект.КонецПериода",
			НСтр("ru='Дата окончания действия резерва меньше даты начала'"),
			Неопределено);
	КонецЕсли;
	
	Для каждого Строка Из Объект.ИспользованиеРезерва Цикл
		Если Строка.АналитикаРасходовОбязательна И Не ЗначениеЗаполнено(Строка.АналитикаРасходов)
			И Строка.АналитикаРасходовУказана И Не Строка.АналитикаОбъектУчетаРезервов Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
						Ошибки,
						"Объект.ИспользованиеРезерва[%1].АналитикаРасходов",
						НСтр("ru='Не заполнена аналитика расходов'"),
						"ИспользованиеРезерва",
						Объект.ИспользованиеРезерва.Индекс(Строка),
						НСтр("ru='Не заполнена аналитика расходов в строке %1'"));
		КонецЕсли;
	КонецЦикла;
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатьяРасходовНачисленияПриИзменении(Элемент)
	
	СтатьяРасходовНачисленияПриИзмененииСервер();
	
КонецПроцедуры
	
&НаКлиенте
Процедура СтатьяДоходовСписанияПриИзменении(Элемент)
	
	СтатьяДоходовСписанияПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	// СтандартныеПодсистемы.Свойства	
	Если ЭтотОбъект.ПараметрыСвойств.Свойство(ТекущаяСтраница.Имя)
		И Не ЭтотОбъект.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация Тогда
		
		СвойстваВыполнитьОтложеннуюИнициализацию();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ИспользованиеРезерваСтатьяРасходовПриИзменении(Элемент)
	                                                                                    
	ЗаполнитьРеквизитыИспользованияРезерва(Элементы.ИспользованиеРезерва.ТекущаяСтрока, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	АналитикаДоходовСписанияОбязательна = ЗначениеЗаполнено(Объект.СтатьяДоходовСписания)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяДоходовСписания, "КонтролироватьЗаполнениеАналитики");
	АналитикаРасходовНачисленияОбязательна = ЗначениеЗаполнено(Объект.СтатьяРасходовНачисления)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяРасходовНачисления, "КонтролироватьЗаполнениеАналитики");
	
	Для каждого Строка Из Объект.ИспользованиеРезерва Цикл
		ЗаполнитьРеквизитыИспользованияРезерва(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
	ВариантыРаспределения = Новый Массив;
	ВариантыРаспределения.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	ВариантыРаспределения.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	ПараметрыВыбораВарианта = Новый ПараметрВыбора("Отбор.ВариантРаспределенияРасходовРегл", Новый ФиксированныйМассив(ВариантыРаспределения));
	ПараметрыВыбораВарианта = Новый ПараметрВыбора("Отбор.ВариантРаспределенияРасходов", Новый ФиксированныйМассив(ВариантыРаспределения));
	Элементы.ИспользованиеРезерваСтатьяРасходов.ПараметрыВыбора = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыВыбораВарианта));
	Элементы.СтатьяРасходовНачисления.ПараметрыВыбора = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыВыбораВарианта));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыИспользованияРезерва(ИдентификаторСтроки, ПриИзмененииСтатьи = Ложь)
	
	Строка = Объект.ИспользованиеРезерва.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	СтатьяРасходов = Строка.СтатьяРасходов;
	АналитикаОбъектУчетаРезервов = Ложь;
	АналитикаРасходовОбязательна = Ложь;
	АналитикаРасходовУказана = ?(ПриИзмененииСтатьи, Строка.АналитикаРасходовУказана, Не Строка.ЛюбаяАналитикаРасходов);	
	АналитикаРасходов = Строка.АналитикаРасходов;
	
	Если ЗначениеЗаполнено(СтатьяРасходов) Тогда
		РеквизитыСтатьиРасходов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтатьяРасходов, "ТипЗначения, КонтролироватьЗаполнениеАналитики, ЭтоГруппа");
	КонецЕсли;
	
	Если РеквизитыСтатьиРасходов.ЭтоГруппа Тогда
		СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
	КонецЕсли;
			
	Если ЗначениеЗаполнено(СтатьяРасходов) Тогда
		
		АналитикаРасходовОбязательна = РеквизитыСтатьиРасходов.КонтролироватьЗаполнениеАналитики;
		
		Если РеквизитыСтатьиРасходов.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ОбъектыУчетаРезервовПредстоящихРасходов")) Тогда
			АналитикаОбъектУчетаРезервов = Истина;
			АналитикаРасходовУказана = Истина;	
			АналитикаРасходов = ?(АналитикаРасходов = Объект.Ссылка, АналитикаРасходов, Неопределено);
		КонецЕсли;
		
		Если АналитикаРасходовУказана И Не АналитикаОбъектУчетаРезервов Тогда
			
			Если ЗначениеЗаполнено(АналитикаРасходов) Тогда
				ОчиститьАналитику = НЕ РеквизитыСтатьиРасходов.ТипЗначения.СодержитТип(ТипЗнч(АналитикаРасходов));
				Если ОчиститьАналитику Тогда
					АналитикаРасходов = Неопределено;
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(АналитикаРасходов) Тогда
				ДоходыИРасходыСервер.ОчиститьАналитикуПрочихРасходов(СтатьяРасходов, АналитикаРасходов);
			Иначе
				АналитикаРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьАналитикуРасходовПоУмолчанию(СтатьяРасходов, Объект);
			КонецЕсли;				
		КонецЕсли;
		
	Иначе
		АналитикаРасходовОбязательна = Ложь;
		АналитикаРасходов = Неопределено;
		АналитикаРасходовУказана = Ложь;
	КонецЕсли;
	
	Если ПриИзмененииСтатьи Тогда
		Строка.СтатьяРасходов = СтатьяРасходов;
		Строка.АналитикаРасходов = АналитикаРасходов;
	КонецЕсли;
	Строка.АналитикаОбъектУчетаРезервов = АналитикаОбъектУчетаРезервов;
	Строка.АналитикаРасходовОбязательна = АналитикаРасходовОбязательна;
	Строка.АналитикаРасходовУказана = АналитикаРасходовУказана;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ИспользованиеРезерваАналитикаРасходов.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаРасходовОбязательна", Истина);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаОбъектУчетаРезервов", Ложь);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаРасходовУказана", Истина);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаРасходов", Неопределено, ВидСравненияКомпоновкиДанных.НеЗаполнено);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ИспользованиеРезерваАналитикаРасходов.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаРасходовУказана", Ложь);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаОбъектУчетаРезервов", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<любая аналитика>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ИспользованиеРезерваАналитикаРасходов.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаОбъектУчетаРезервов", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<этот объект учета резервов>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(Элемент.Поля, Элементы.ИспользованиеРезерваАналитикаРасходовУказана.Имя);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Элемент.Отбор, "Объект.ИспользованиеРезерва.АналитикаОбъектУчетаРезервов", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ПланыВидовХарактеристик.СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление, "СтатьяРасходовНачисления, АналитикаРасходовНачисления");
	ПланыВидовХарактеристик.СтатьиДоходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление, "СтатьяДоходовСписания, АналитикаДоходовСписания");
	
КонецПроцедуры

&НаСервере
Процедура СтатьяРасходовНачисленияПриИзмененииСервер()
	
	ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(Объект, Объект.СтатьяРасходовНачисления, Объект.АналитикаРасходовНачисления);
	АналитикаРасходовНачисленияОбязательна = ЗначениеЗаполнено(Объект.СтатьяРасходовНачисления)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяРасходовНачисления, "КонтролироватьЗаполнениеАналитики");
	
КонецПроцедуры

&НаСервере
Процедура СтатьяДоходовСписанияПриИзмененииСервер()
	
	ДоходыИРасходыСервер.СтатьяДоходовПриИзменении(Объект, Объект.СтатьяДоходовСписания, Объект.ПодразделениеСписания, Объект.АналитикаДоходовСписания);
	АналитикаДоходовСписанияОбязательна = ЗначениеЗаполнено(Объект.СтатьяДоходовСписания)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяДоходовСписания, "КонтролироватьЗаполнениеАналитики");
	
КонецПроцедуры

#Область СтандартныеПодсистемыСвойства

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#КонецОбласти