
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоПараметрамФормы();

	ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	Если НЕ ИспользоватьРеглУчет Тогда
		Элементы.СостояниеУУ.Заголовок = НСтр("ru = 'Состояние'");
		Элементы.СостояниеБУ.Видимость = Ложь;
	КонецЕсли; 
	
	ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
		Элементы.ОтборСостояние.СписокВыбора,
		ИспользоватьРеглУчет,
		Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСостояниеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "Состояние", ОтборСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМОЛПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "МОЛ", ОтборМОЛ,,, ЗначениеЗаполнено(ОтборМОЛ));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборАмортизационнаяГруппаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "АмортизационнаяГруппа", ОтборАмортизационнаяГруппа,,, ЗначениеЗаполнено(ОтборАмортизационнаяГруппа));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборГруппаОСПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ГруппаОС", ОтборГруппаОС,,, ЗначениеЗаполнено(ОтборГруппаОС));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьЭлементы(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьЭлементы(Команда)
	
	ВыбранныеЭлементы = Новый Массив;
	
	ТекущаяГруппаОС = ОтборГруппаОС;
	ТекущаяАмортизационнаяГруппа = ОтборАмортизационнаяГруппа;
	
	Для каждого ИдентификаторСтроки Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДанныеСтроки.АмортизационнаяГруппа <> ТекущаяАмортизационнаяГруппа 
				И ЗначениеЗаполнено(ТекущаяАмортизационнаяГруппа)
				И ЗначениеЗаполнено(ДанныеСтроки.АмортизационнаяГруппа) 
				И ПроверятьАмортизационнуюГруппу
			ИЛИ ДанныеСтроки.ГруппаОС <> ТекущаяГруппаОС 
				И ЗначениеЗаполнено(ТекущаяГруппаОС)
				И ЗначениеЗаполнено(ДанныеСтроки.ГруппаОС)
				И ПроверятьГруппуОС Тогда
				
			ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать основные средства,
                                        |принадлежащие одной группе ОС и одной амортизационной группе'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.АмортизационнаяГруппа) Тогда
			ТекущаяАмортизационнаяГруппа = ДанныеСтроки.АмортизационнаяГруппа;
		КонецЕсли; 
		Если ЗначениеЗаполнено(ДанныеСтроки.ГруппаОС) Тогда
			ТекущаяГруппаОС = ДанныеСтроки.ГруппаОС;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) 
			И (НЕ ДанныеСтроки.ЭтоГруппа 
					ИЛИ Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы
					ИЛИ Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы)
			И НЕ ДанныеСтроки.ПометкаУдаления Тогда
			ВыбранныеЭлементы.Добавить(ДанныеСтроки.Ссылка);
		КонецЕсли; 
	КонецЦикла;
	
	Если ВыбранныеЭлементы.Количество() <> 0 Тогда
		Если Элементы.Список.МножественныйВыбор Тогда
			ОповеститьОВыборе(ВыбранныеЭлементы);
		Иначе
			ОповеститьОВыборе(ВыбранныеЭлементы[0]);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоПараметрамФормы()

	ПроверятьАмортизационнуюГруппу = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПроверятьАмортизационнуюГруппу", Ложь);
	ПроверятьГруппуОС = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПроверятьГруппуОС", Ложь);

	ЗаполнитьФиксированныеОтборы();
	УстановитьСвойстваДинамическогоСписка();
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьФиксированныеОтборы()
	
	ОтборСписка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Отбор", Новый Структура);

	ЗаполнитьБыстрыйОтбор("АмортизационнаяГруппа", ОтборСписка, "АмортизационнаяГруппа");
	ЗаполнитьБыстрыйОтбор("ГруппаОС", ОтборСписка, "ГруппаОС");
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.МестонахождениеОС) Тогда
		ЗаполнитьБыстрыйОтбор("Организация", ОтборСписка);
		ЗаполнитьБыстрыйОтбор("Подразделение", ОтборСписка, "Подразделение");
		ЗаполнитьБыстрыйОтбор("МОЛ", ОтборСписка);
	Иначе
		Элементы.ОтборОрганизация.Видимость = Ложь;
		Элементы.ОтборПодразделение.Видимость = Ложь;
		Элементы.ОтборМОЛ.Видимость = Ложь;
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли; 
	
	Если ВнеоборотныеАктивыСлужебный.ЕстьПраваНаЧтениеСостоянияОС() Тогда
		
		ЗаполнитьБыстрыйОтбор("Состояние", ОтборСписка);
		
		ОтборНеПринятыхКУчету = ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияОС.НеПринятоКУчету) <> Неопределено
								ИЛИ ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияОС.СнятоСУчета) <> Неопределено
								ИЛИ ОтборСостояние = Перечисления.СостоянияОС.НеПринятоКУчету
								ИЛИ ОтборСостояние = Перечисления.СостоянияОС.СнятоСУчета;

		Если ОтборНеПринятыхКУчету Тогда
			Элементы.ОтборОрганизация.ТолькоПросмотр = Истина;
			Элементы.ОтборПодразделение.ТолькоПросмотр = Истина;
			Элементы.ОтборМОЛ.ТолькоПросмотр = Истина;
			Элементы.Подразделение.Видимость = Ложь;
		КонецЕсли;
		
		Если Элементы.ОтборСостояние.Видимость Тогда
			Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		Элементы.ОтборСостояние.Видимость = Ложь;
		Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		Элементы.СостояниеБУ.Видимость = Ложь;
		Элементы.СостояниеУУ.Видимость = Ложь;
	КонецЕсли; 
	
	Если Элементы.ОтборГруппаОС.Видимость Тогда
		Элементы.ОтборГруппаОССписок.Видимость = Ложь;
	КонецЕсли;
	
	Если Элементы.ОтборАмортизационнаяГруппа.Видимость Тогда
		Элементы.ОтборАмортизационнаяГруппаСписок.Видимость = Ложь;
	КонецЕсли;
	
	Если ОтборСписка.Свойство("ЗарегистрированоВРеестреСистемыПлатон") Тогда
		Заголовок = НСтр("ru = 'Транспортные средства, зарегистрированные в системе ""Платон""'");
	ИначеЕсли Параметры.Свойство("ЗаголовокФормы") Тогда
		Заголовок = Параметры.ЗаголовокФормы;
	ИначеЕсли ОтборСписка.Свойство("ЗарегистрированоВРеестреСистемыПлатон") Тогда
		Заголовок = НСтр("ru = 'Транспортные средства, зарегистрированные в системе ""Платон""'");
	ИначеЕсли Параметры.Свойство("ЕстьРегистрацияТранспортныхСредств") Тогда
		Заголовок = НСтр("ru = 'Зарегистрированные транспортные средства'");
	ИначеЕсли Параметры.Свойство("ЕстьРегистрацияЗемельныхУчастков") Тогда
		Заголовок = НСтр("ru = 'Зарегистрированные земельные участки'");
	ИначеЕсли ОтборСписка.Свойство("ВидНалога") Тогда
		Заголовок = ВнеоборотныеАктивыЛокализация.ЗаголовокФормыВыбораОСПоВидуНалога(ОтборСписка.ВидНалога, Параметры.ДатаСведений);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваДинамическогоСписка()
	
	ОписаниеЗапросаДляВыбора = Справочники.ОбъектыЭксплуатации.ОписаниеЗапросаДляВыбора(Параметры);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = ОписаниеЗапросаДляВыбора.ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	Для каждого ОписаниеПараметра Из ОписаниеЗапросаДляВыбора.ПараметрыЗапроса Цикл
		Список.Параметры.УстановитьЗначениеПараметра(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБыстрыйОтбор(ИмяОтбора, ОтборСписка, ЭлементыСписка = Неопределено)

	// Заполняет быстрые отборы и скрывает колонки в списке
	
	ЗначениеОтбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОтборСписка, ИмяОтбора, Неопределено);
	
	Суффикс = "";
	Если ТипЗнч(ЗначениеОтбора) = Тип("ФиксированныйМассив") 
		ИЛИ ТипЗнч(ЗначениеОтбора) = Тип("Массив") Тогда
		
		Если ИмяОтбора = "Состояние"
			ИЛИ ИмяОтбора = "ГруппаОС"
			ИЛИ ИмяОтбора = "АмортизационнаяГруппа" Тогда
			
			Если ЗначениеОтбора.Количество() > 1 Тогда
				Суффикс = "Список";
				Элементы["Отбор" + ИмяОтбора].Видимость = Ложь;
				ЗначениеОтбора = ВнеоборотныеАктивыСлужебный.ФиксированныйМассивВСписок(ЗначениеОтбора);
			Иначе
				ЗначениеОтбора = ЗначениеОтбора.Получить(0);
				Элементы["Отбор" + ИмяОтбора + "Список"].Видимость = Ложь;
			КонецЕсли;
		Иначе
			// Для других полей отображение в виде списка не предусмотрено.
			Элементы["Отбор" + ИмяОтбора].Видимость = Ложь;
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	
	ЭтаФорма["Отбор" + ИмяОтбора + Суффикс] = ЗначениеОтбора;
	Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
		Элементы["Отбор" + ИмяОтбора + Суффикс].ТолькоПросмотр = Истина;
		Если ЭлементыСписка <> Неопределено Тогда
			Для каждого ИмяЭлементаСписка Из СтрРазделить(ЭлементыСписка, ",") Цикл
				Элементы[ИмяЭлементаСписка].Видимость = Ложь;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

