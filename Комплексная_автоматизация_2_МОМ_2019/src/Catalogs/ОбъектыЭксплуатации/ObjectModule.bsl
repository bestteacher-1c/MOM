
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ИнвентарныйНомер = "";
	
	ИнициализироватьСправочник();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьУправлениеРемонтами = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами");
	
	Если ИспользоватьУправлениеРемонтами Тогда
		
		// Стандартный механизм проверки заполнения применяется только для проверки стандартных реквизитов: "Наименование",
		// "Код", "Статус" и "ДатаСведений" Проверка реквизитов, доп. реквизитов и табличных частей инициируется из формы объекта.
		ПроверяемыеРеквизиты.Очистить();
		ПроверяемыеРеквизиты.Добавить("Наименование");
		ПроверяемыеРеквизиты.Добавить("Статус");
		ПроверяемыеРеквизиты.Добавить("ДатаСведений");
	Иначе
		
		НепроверяемыеРеквизиты = Новый Массив;
		
		НепроверяемыеРеквизиты.Добавить("ДрагоценныеМатериалы.Расположение");
		Справочники.ДрагоценныеМатериалы.ПроверитьЗаполнениеДрагоценныхМатериалов(ЭтотОбъект, ДрагоценныеМатериалы, Отказ);
		
		НепроверяемыеРеквизиты.Добавить("Класс");
		НепроверяемыеРеквизиты.Добавить("Подкласс");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.ПоказательНаработки");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.НазначенныйРесурс");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.Источник");
		
		Если Не ПолучитьФункциональнуюОпцию("УправлениеПредприятием") Тогда
			НепроверяемыеРеквизиты.Добавить("РабочиеЦентры.РабочийЦентр");
		КонецЕсли;
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		РеквизитНедвижимоеИмуществоОбновлен = Истина;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИнициализироватьДополнительныеСвойстваДляЗаписи();
	
	Если ДополнительныеСвойства.ОбъектПоставленНаРедактирование Тогда
		
		ДатаСведений = ТекущаяДатаСеанса();
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.ОбновитьНаименованиеПолное Тогда
		
		НаименованиеПолное = Наименование;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	
	Возврат; // Пустой обработчик в УТ и КА
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьСправочник()
	
	Статус = Перечисления.СтатусыОбъектовЭксплуатации.Редактируется;
	ДатаСведений = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваДляЗаписи()
	
	Если ДополнительныеСвойства.Свойство("ИнициализированыДляЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ИспользоватьУправлениеРемонтами", ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами"));
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("ОбъектПоставленНаРедактирование", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьПодчиненияУзлов", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьПринадлежностиУзлов", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьНаименованиеПолное", ПустаяСтрока(НаименованиеПолное));
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	
	ДополнительныеСвойства.Вставить("ИнициализированыДляЗаписи");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
