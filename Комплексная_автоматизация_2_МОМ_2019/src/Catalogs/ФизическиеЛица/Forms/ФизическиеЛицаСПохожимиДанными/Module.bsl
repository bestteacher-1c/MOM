
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Параметры.ЗаголовокФормы;
	ТекстИнформационнойНадписи = Параметры.ТекстИнформационнойНадписи;
	
	ПараметрыОткрытия = Новый Структура("Фамилия,Имя,Отчество,ВозможнаПроверкаПоИНН,ВозможнаПроверкаПоСНИЛС,ИзФормыСотрудника");
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, Параметры);
	ПараметрыПриОткрытии = Новый ФиксированнаяСтруктура(ПараметрыОткрытия);
	
	ПараметрыЭлементов = Неопределено;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АрхивФизическихЛиц") Тогда
		МодульАрхивФизическихЛиц = ОбщегоНазначения.ОбщийМодуль("АрхивФизическихЛицФормы");
		
		ПараметрыЭлементов = МодульАрхивФизическихЛиц.ОписаниеСтруктурыЭлементов();
		ПараметрыЭлементов.ИмяГруппы			= "ГруппаАрхивФизическихЛиц";
		ПараметрыЭлементов.ИмяГруппыКолонок		= "ГруппаАрхивФизическихЛицТаблица";
		ПараметрыЭлементов.ИмяГруппыОтборов		= "ГруппаПоляИдентификации";
		ПараметрыЭлементов.ИмяГруппыСотрудника	= "ГруппаФизическиеЛицаРабота";
		ПараметрыЭлементов.ИмяГруппыКандидата	= "ГруппаДанныеОКандидате";
		ПараметрыЭлементов.ИмяТаблицы			= "ДанныеФизическихЛиц";
		
		МодульАрхивФизическихЛиц.ФизическиеЛицаСПохожимиДаннымиПриСозданииНаСервере(ЭтотОбъект, ПараметрыЭлементов);
	КонецЕсли;
	
	ДанныеФизическихЛиц.Очистить();
	Для каждого ДанныеФизическогоЛица Из Параметры.ДанныеФизическихЛиц Цикл
		
		НоваяСтрокаДанных = ДанныеФизическихЛиц.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДанных, ДанныеФизическогоЛица);
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрокаДанных.ДатаРождения) Тогда
			НоваяСтрокаДанных.ДатаРождения = "<" + НСтр("ru='Не заполнена'") + ">";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрокаДанных.ИНН) Тогда
			НоваяСтрокаДанных.ИНН = "<" + НСтр("ru='Не заполнен'") + ">";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрокаДанных.СтраховойНомерПФР) Тогда
			НоваяСтрокаДанных.СтраховойНомерПФР = "<" + НСтр("ru='Не заполнен'") + ">";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрокаДанных.ДокументПредставление) Тогда
			НоваяСтрокаДанных.ДокументПредставление = "<" + НСтр("ru='Не заполнен'") + ">";
		КонецЕсли;
		
		ФИО = СокрЛП(НоваяСтрокаДанных.ФИОПолные);
		Пока СтрНайти(ФИО, "  ") > 0 Цикл
			ФИО = СтрЗаменить(ФИО, "  ", " ");
		КонецЦикла;
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы") Тогда
			МодульКадровыйУчетРасширенный = ОбщегоНазначения.ОбщийМодуль("КадровыйУчетРасширенный");
			НоваяСтрокаДанных.АдресФотографии = МодульКадровыйУчетРасширенный.АдресФотографииФизическогоЛица(ДанныеФизическогоЛица.ФизическоеЛицо);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НадписьОЛюдяхСНедоступнымиДанными",
		"Видимость",
		Не Параметры.ДанныеФизическихЛицДоступны);
	
	Если Не Параметры.ДанныеФизическихЛицДоступны Тогда
		
		ТекстНадписи = Новый ФорматированнаяСтрока(НСтр("ru='Найдены сведения о людях с похожими данными, которые недоступны для просмотра.'"));
		
		Если Параметры.ВозможнаПроверкаПоИНН Или Параметры.ВозможнаПроверкаПоСНИЛС Тогда
			
			Если Параметры.ВозможнаПроверкаПоИНН И Параметры.ВозможнаПроверкаПоСНИЛС Тогда
				ТекстНадписиДополнительнойПроверки = НСтр("ru='проверьте уникальность по ИНН или СНИЛС'");
			ИначеЕсли Параметры.ВозможнаПроверкаПоИНН Тогда
				ТекстНадписиДополнительнойПроверки = НСтр("ru='проверьте уникальность по ИНН'");
			ИначеЕсли Параметры.ВозможнаПроверкаПоСНИЛС Тогда
				ТекстНадписиДополнительнойПроверки = НСтр("ru='проверьте уникальность по СНИЛС'");
			КонецЕсли;
			
			ТекстНадписи = Новый ФорматированнаяСтрока(
				ТекстНадписи,
				Символы.ПС,
				Новый ФорматированнаяСтрока(
					НСтр("ru='Если среди доступных для просмотра данных нет нужного человека, '"),
					Новый ФорматированнаяСтрока(ТекстНадписиДополнительнойПроверки, , , , "НадписьОЛюдяхСНедоступнымиДаннымиНажатие"),
					". "),
				НСтр("ru='Или обратитесь к администратору информационной системы для устранения проблемы.'"));
				
		Иначе
			
			ТекстНадписи = Новый ФорматированнаяСтрока(
				ТекстНадписи,
				Символы.ПС,
				НСтр("ru='Если среди доступных для просмотра данных нет нужного человека, обратитесь к администратору информационной системы для устранения проблемы.'"));
				
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"НадписьОЛюдяхСНедоступнымиДанными",
			"Заголовок",
			ТекстНадписи);
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АрхивФизическихЛиц") Тогда
		МодульАрхивФизическихЛиц = ОбщегоНазначения.ОбщийМодуль("АрхивФизическихЛиц");
		МодульАрхивФизическихЛиц.ДанныеФизическихЛицПриЗаполненииНаСервере(ЭтотОбъект, ПараметрыЭлементов);
	КонецЕсли;
	
	Элементы.ДанныеФизическихЛиц.ТекущаяСтрока = ДанныеФизическихЛиц[0].ПолучитьИдентификатор();
	
	Если ДанныеФизическихЛиц.Количество() = 1 Тогда
		
		ДанныеФизическогоЛица = ДанныеФизическихЛиц[0];
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ДанныеФизическогоЛица);
		ФизическоеЛицоСсылка = ДанныеФизическогоЛица.ФизическоеЛицо;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОдногоЧеловека;
		
	Иначе
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНесколькихЧеловек;
		Элементы.ДаЭтоТотКтоМнеНужен.Заголовок = НСтр("ru='Отмеченный человек тот, кто мне нужен'");
		
	КонецЕсли;
	
	Если Параметры.СкрытьКомандуДругойЧеловек Тогда
		Элементы.НетЭтоДругойЧеловек.Видимость = Ложь;
	КонецЕсли;
	
	Параметры.Свойство("УчитыватьОтрицательныйВыбор", УчитыватьОтрицательныйВыбор);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ЭлементОтбораПриИзменении(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АрхивФизическихЛиц") Тогда
		МодульАрхивФизическихЛиц = ОбщегоНазначенияКлиент.ОбщийМодуль("АрхивФизическихЛицКлиент");
		МодульАрхивФизическихЛиц.ЭлементОтбораПриИзменении(ЭтотОбъект, Элемент, "ДанныеФизическихЛиц");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЭлементОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.АрхивФизическихЛиц") Тогда
		МодульАрхивФизическихЛиц = ОбщегоНазначенияКлиент.ОбщийМодуль("АрхивФизическихЛицКлиент");
		МодульАрхивФизическихЛиц.ЭлементОтбораНачалоВыбора(ЭтотОбъект, Элемент, "ДанныеФизическихЛиц");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура Подключаемый_ОткрытьФормуСотрудника(Команда)
	СотрудникиКлиент.ОткрытьФормуСотрудника(ЭтаФорма, Команда);
КонецПроцедуры

&НаКлиенте 
Процедура Подключаемый_ОткрытьФормуКандидата(Команда)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ПодборПерсонала") Тогда
		МодульКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодборПерсоналаКлиент");
		МодульКлиент.ОткрытьФормуКандидатаИзФормыСотрудника(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДругиеМестаРаботы(Команда)

	СотрудникиКлиент.ОткрытьФормуСпискаМестРаботыФизическогоЛица(ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ГиперСсылкаОткрытьЛичныеДанныеНажатие(Элемент)
	
	ОткрытьЛичныеДанные(ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОЛюдяхСНедоступнымиДаннымиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПроверитьОднофамильцевИННиСНИЛСЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ПроверкаУникальностиПоИННиСНИЛС", Новый Структура(ПараметрыПриОткрытии),
		ЭтотОбъект, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыДанныеФизическихЛиц

&НаКлиенте
Процедура ДанныеФизическихЛицПометкаПриИзменении(Элемент)
	
	ТекущиеДанныеСотрудника = Элементы.ДанныеФизическихЛиц.ТекущиеДанные;
	
	Если ТекущиеДанныеСотрудника.Пометка Тогда
		
		ПомеченныеСтроки = ДанныеФизическихЛиц.НайтиСтроки(Новый Структура("Пометка", Истина));
		Для Каждого СтрокаПомеченныеСтроки Из ПомеченныеСтроки Цикл
			
			Если СтрокаПомеченныеСтроки <> ТекущиеДанныеСотрудника Тогда
				СтрокаПомеченныеСтроки.Пометка = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеФизическихЛицВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ДанныеФизическихЛиц.ТекущиеДанные <> Неопределено Тогда
		
		ОткрытьЛичныеДанные(Элементы.ДанныеФизическихЛиц.ТекущиеДанные.ФизическоеЛицо);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьДанныеФизическогоЛица(Команда)
	
	Если Элементы.ДанныеФизическихЛиц.ТекущиеДанные <> Неопределено Тогда
		
		ОткрытьЛичныеДанные(Элементы.ДанныеФизическихЛиц.ТекущиеДанные.ФизическоеЛицо);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФизическоеЛицоКонтекстноеМеню(Команда)
	
	Если Элементы.ДанныеФизическихЛиц.ТекущиеДанные <> Неопределено Тогда
		
		Закрыть(Элементы.ДанныеФизическихЛиц.ТекущиеДанные.ФизическоеЛицо);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДаЭтоТотКтоМнеНужен(Команда)
	
	ВыбратьФизическоеЛицоИЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура НетЭтоДругойЧеловек(Команда)
	
	Если УчитыватьОтрицательныйВыбор Тогда
		Закрыть(Ложь);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьОднофамильцевИННиСНИЛСЗавершение(РезультатПроверки, ДополнительныеПараметры) Экспорт
	
	Если РезультатПроверки = Неопределено Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Проверка уникальности не пройдена.
			|Обратитесь к администратору информационной системы для устранения проблемы.'");
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
	Иначе
		ЗаполнитьЗначенияСвойств(ВладелецФормы.ФизическоеЛицо, РезультатПроверки);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЛичныеДанные(ФизическоеЛицоСсылка)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Ключ", ФизическоеЛицоСсылка);
	ПараметрыОткрытияФормы.Вставить("ТолькоПросмотр", Истина);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта", ПараметрыОткрытияФормы, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФизическоеЛицоИЗакрытьФорму()
	
	Если ДанныеФизическихЛиц.Количество() > 1 Тогда
		
		ПомеченныеСтроки = ДанныеФизическихЛиц.НайтиСтроки(Новый Структура("Пометка", Истина));
		Если ПомеченныеСтроки.Количество() > 0 Тогда
			Закрыть(ПомеченныеСтроки[0].ФизическоеЛицо);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо установить отметку напротив нужного человека'"));
		КонецЕсли;
		
	Иначе
		Закрыть(ДанныеФизическихЛиц[0].ФизическоеЛицо);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
