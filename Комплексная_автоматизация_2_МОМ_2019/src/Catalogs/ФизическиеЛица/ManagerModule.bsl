#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ЗащитаПерсональныхДанных.ДобавитьКомандуПечатиСогласияНаОбработкуПерсональныхДанных(КомандыПечати);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Т1
	|	ПО Т1.ФизическоеЛицо = Т.Ссылка
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЭтоГруппа
	|	ИЛИ ЗначениеРазрешено(Т.Ссылка)
	|	ИЛИ ЭтоАвторизованныйПользователь(Т1.Ссылка)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ВыборГруппИЭлементов")
		Или Не ЗначениеЗаполнено(Параметры.ВыборГруппИЭлементов) Тогда
		
		ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
		
	Иначе
		ВыборГруппИЭлементов = Параметры.ВыборГруппИЭлементов;
	КонецЕсли;
	
	Если ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы Тогда
		ФизическиеЛицаЗарплатаКадрыВнутренний.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	ФизическиеЛицаЗарплатаКадрыВнутренний.ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ШаблоныСообщений

Процедура ПриПодготовкеШаблонаСообщения(РеквизитыОбъектаНазначения, Вложения, ДополнительныеПараметры) Экспорт
	ИзменитьРеквизитыШаблонаСообщения(РеквизитыОбъектаНазначения);
КонецПроцедуры

Процедура ПриФормированииСообщения(Сообщение, Предмет, ПараметрыШаблона) Экспорт
	
КонецПроцедуры

Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

Процедура ПриЗаполненииПочтыПолучателейВСообщении(Получатели, Предмет) Экспорт
	
КонецПроцедуры

// Переопределяет список доступных полей в шаблоне.
//
// Параметры:
//  РеквизитыОбъектаНазначения	 - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Подсказка      - Строка - Расширенная информация о реквизите.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//
Процедура ИзменитьРеквизитыШаблонаСообщения(Знач РеквизитыОбъектаНазначения)
	
	РеквизитыОбъектаНазначения.Очистить();
	
	// Дата рождения.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.ДатаРождения";           // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Дата рождения'");
	НоваяСтрока.Тип = Тип("Дата");
	НоваяСтрока.Формат = "ДЛФ=D";
	
	// Пол.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Пол";                    // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Пол'");
	НоваяСтрока.Тип = Тип("ПеречислениеСсылка.ПолФизическогоЛица");
	
	// ИНН.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.ИНН";                    // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'ИНН'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// СНИЛС.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();  
	НоваяСтрока.Имя = "ФизическиеЛица.СтраховойНомерПФР";      // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'СНИЛС'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Место рождения.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();       
	НоваяСтрока.Имя = "ФизическиеЛица.МестоРождения";          // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Место рождения'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// ФИО.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.ФИО";                    // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'ФИО'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Фамилия.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Фамилия";                // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Фамилия'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Имя.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Имя";                    // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Имя'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Отчество.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Отчество";               // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Отчество'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Инициалы имени.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Инициалы";              // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Инициалы имени, отчества'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Наименование.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Наименование";           // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Наименование'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Внешняя ссылка на объект.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.ВнешняяСсылкаНаОбъект";  // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Ссылка на ""Физические лица""'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Email.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Email";                  // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Email'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Мобильный телефон.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Мобильный телефон";      // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Мобильный телефон'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Домашний телефон.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Домашний телефон";       // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Домашний телефон'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Рабочий телефон.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Рабочий телефон";        // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Рабочий телефон'");
	НоваяСтрока.Тип = Тип("Строка");
	
	// Адрес по прописке.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();       
	НоваяСтрока.Имя = "ФизическиеЛица.Адрес по прописке";      // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Адрес по прописке'");
	НоваяСтрока.Тип = Тип("Строка");

	// Адрес места проживания.
	НоваяСтрока = РеквизитыОбъектаНазначения.Добавить();
	НоваяСтрока.Имя = "ФизическиеЛица.Адрес места проживания"; // АПК:1297 Не локализуется, идентификатор реквизита
	НоваяСтрока.Представление = НСтр("ru = 'Адрес места проживания'");
	НоваяСтрока.Тип = Тип("Строка");
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьИнициалы(ПараметрыОбновления = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ФизическиеЛица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Инициалы = """"
		|	И ФизическиеЛица.Имя <> """"";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000","");
	КонецЕсли;
	
	// АПК:1328-выкл Блокировку выполнит ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных
	Выборка = Запрос.Выполнить().Выбрать();
	// АПК:1328-вкл
	
	Если Выборка.Количество() = 0 Тогда
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбработчик(ПараметрыОбновления);
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПродолжитьОбработчик(ПараметрыОбновления);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
			ПараметрыОбновления, "Справочник.ФизическиеЛица", "Ссылка", Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ФизическоеЛицоОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ФизическоеЛицоОбъект.Инициалы = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыПоИмениОтчеству(
			ФизическоеЛицоОбъект.Имя, ФизическоеЛицоОбъект.Отчество);
		
		// АПК:1327-выкл Блокировка выполнена ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ФизическоеЛицоОбъект);
		// АПК:1327-вкл
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

