
&НаСервере
Процедура bt_Patch4_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда
		
		Объект.ПеревозчикХозяйствующийСубъект = ПолучитьПеревозчикаЧеревкоГИПоИдентификатору();
		Объект.СпособХранения = Перечисления.СпособыХраненияПриТранспортировкеВЕТИС.Охлажденный;
		
		Если Объект.Маршрут.Количество() > 0 И ЗначениеЗаполнено(Объект.ДокументОснование) = Истина Тогда
			
			ПерваяСтрока = Объект.Маршрут.Получить(0);
			
			ПерваяСтрока.ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.Автомобиль;
			
			ИнформацияОТС = ПолучитьИнформациюОТС(Объект.ДокументОснование);
			
			ПерваяСтрока.ТранспортноеСредство =  ИнформацияОТС.СсылкаТС;
			ПерваяСтрока.НомерТранспортногоСредства =  ИнформацияОТС.ГосНомер;
			
			Если ЗначениеЗаполнено(ИнформацияОТС.СсылкаТС) = Истина Тогда
				
				Если Объект.Маршрут.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.Маршрут[0].ТипТранспорта) Тогда
					Цвет = ЦветТекстаПоля(Истина);
					НадписьТранспортноеСредство = НСтр("ru = '<не указано>'");
				Иначе
					Цвет = Неопределено;
					СтрокаТабЧасти = Объект.Маршрут[0];
					ПредставлениеДанныхТранспортногоСредства = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеДанныхТранспортногоСредства(
					СтрокаТабЧасти, Ложь);
					НадписьТранспортноеСредство = СтрШаблон(
					?(ПустаяСтрока(ПредставлениеДанныхТранспортногоСредства), "%1%2", "%1 (%2)"),
					СтрокаТабЧасти.ТипТранспорта,
					ПредставлениеДанныхТранспортногоСредства);
				КонецЕсли;
				
				ПредставлениеТранспортногоСредства = Новый ФорматированнаяСтрока(НадписьТранспортноеСредство,,Цвет,,"ОткрытьОбщуюФормуТранспортноеСредство");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПеревозчикаЧеревкоГИПоИдентификатору()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозяйствующиеСубъектыВЕТИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ХозяйствующиеСубъектыВЕТИС КАК ХозяйствующиеСубъектыВЕТИС
	|ГДЕ
	|	ХозяйствующиеСубъектыВЕТИС.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", "38c91f32-bba5-477b-a024-e37bd924f71a");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
КонецФункции // НайтиПеревозчикаЧеревкоГИПоИдентификатору()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьИнформациюОТС(Ссылка)
	
	ЧтоВернем = Новый Структура("СсылкаТС, ГосНомер", Справочники.ТранспортныеСредства.ПустаяСсылка(),"");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Значение.ПолноеНаименование КАК ЗначениеПолноеНаименование
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ДополнительныеРеквизиты КАК РеализацияТоваровУслугДополнительныеРеквизиты
	|ГДЕ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И РеализацияТоваровУслугДополнительныеРеквизиты.Свойство.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.УстановитьПараметр("Имя", "Автомобиль_dfd43a513a10446a890996fae350f1a3");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Попытка
			УИД = Новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.ЗначениеПолноеНаименование);
		Исключение
			Возврат ЧтоВернем;
		КонецПопытки;
		
		СсылкаТС = Справочники.ТранспортныеСредства.ПолучитьСсылку(УИД);
		
		Если СсылкаТС.ПолучитьОбъект() = Неопределено Тогда
			Возврат ЧтоВернем;
		КонецЕсли;
		
		ЧтоВернем.СсылкаТС = СсылкаТС;
		ЧтоВернем.ГосНомер =  СсылкаТС.Код;
		
	КонецЦикла;
	
	Возврат ЧтоВернем;
	
КонецФункции // НайтиТранспортноеСредствоИЕгоНомер()


&НаКлиенте
Процедура bt_Patch4_ГруппаЗакладкиПриСменеСтраницыПосле(Элемент, ТекущаяСтраница)
	
	bt_Patch4_ГруппаЗакладкиПриСменеСтраницыПослеНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура bt_Patch4_ГруппаЗакладкиПриСменеСтраницыПослеНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) = Истина Тогда
		
		Если ЗначениеЗаполнено(Объект.СпособХранения) = Ложь Тогда
			
			Объект.СпособХранения = Перечисления.СпособыХраненияПриТранспортировкеВЕТИС.Охлажденный;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ПеревозчикХозяйствующийСубъект) = Ложь Тогда
			
			Объект.ПеревозчикХозяйствующийСубъект = ПолучитьПеревозчикаЧеревкоГИПоИдентификатору();
			
		КонецЕсли;
		
		Если Объект.Маршрут.Количество() > 0 Тогда
			
			ПерваяСтрока = Объект.Маршрут.Получить(0);
			
			Если ЗначениеЗаполнено(ПерваяСтрока.ТипТранспорта) = Ложь Тогда
				
				ПерваяСтрока.ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.Автомобиль;
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПерваяСтрока.ТранспортноеСредство) = Ложь Тогда
				
				ИнформацияОТС = ПолучитьИнформациюОТС(Объект.ДокументОснование);
				
				ПерваяСтрока.ТранспортноеСредство =  ИнформацияОТС.СсылкаТС;
				ПерваяСтрока.НомерТранспортногоСредства =  ИнформацияОТС.ГосНомер;
				
				Если ЗначениеЗаполнено(ИнформацияОТС.СсылкаТС) = Истина Тогда
					
					Если Объект.Маршрут.Количество() = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.Маршрут[0].ТипТранспорта) Тогда
						Цвет = ЦветТекстаПоля(Истина);
						НадписьТранспортноеСредство = НСтр("ru = '<не указано>'");
					Иначе
						Цвет = Неопределено;
						СтрокаТабЧасти = Объект.Маршрут[0];
						ПредставлениеДанныхТранспортногоСредства = ИнтеграцияВЕТИСКлиентСервер.ПредставлениеДанныхТранспортногоСредства(
						СтрокаТабЧасти, Ложь);
						НадписьТранспортноеСредство = СтрШаблон(
						?(ПустаяСтрока(ПредставлениеДанныхТранспортногоСредства), "%1%2", "%1 (%2)"),
						СтрокаТабЧасти.ТипТранспорта,
						ПредставлениеДанныхТранспортногоСредства);
					КонецЕсли;
					
					ПредставлениеТранспортногоСредства = Новый ФорматированнаяСтрока(НадписьТранспортноеСредство,,Цвет,,"ОткрытьОбщуюФормуТранспортноеСредство");
					
				КонецЕсли;
				
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура bt_Patch4_ТоварыЭкспертизаРезультатПриИзмененииПослеНаСервере()
	
	Для каждого ТекСтрока Из Объект.Товары Цикл
		
		ТекСтрока.ЭкспертизаРезультат = Перечисления.РезультатыЛабораторныхИсследованийВЕТИС.ПодвергнутаВСЭВПолномОбъеме;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура bt_Patch4_ТоварыЭкспертизаРезультатПриИзмененииПосле(Элемент)
	bt_Patch4_ТоварыЭкспертизаРезультатПриИзмененииПослеНаСервере();
КонецПроцедуры

&НаСервере
Процедура bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПослеНаСервере()
	
	Объект.УпаковкиВЕТИС.Очистить();
	Объект.ШтрихкодыУпаковок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.НомерСтроки КАК НомерСтроки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.БлагополучиеМестности КАК БлагополучиеМестности,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ВетеринарноСопроводительныйДокумент КАК ВетеринарноСопроводительныйДокумент,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Количество КАК Количество,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.КоличествоВЕТИС КАК КоличествоВЕТИС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.КоличествоПериодовНахожденияЖивотныхНаТерриторииТС КАК КоличествоПериодовНахожденияЖивотныхНаТерриторииТС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.НизкокачественнаяПродукция КАК НизкокачественнаяПродукция,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Номенклатура КАК Номенклатура,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ОсобыеОтметки КАК ОсобыеОтметки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ПериодНахожденияЖивотныхНаТерриторииТС КАК ПериодНахожденияЖивотныхНаТерриторииТС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Продукция КАК Продукция,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.РезультатПроверкиПравилРегионализации КАК РезультатПроверкиПравилРегионализации,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Серия КАК Серия,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.УсловияРегионализацииВыполнены КАК УсловияРегионализацииВыполнены,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Характеристика КАК Характеристика,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Цель КАК Цель,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЭкспертизаРезультат КАК ЭкспертизаРезультат,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ТипПроисхождения КАК ТипПроисхождения
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&Товары КАК ИсходящаяТранспортнаяОперацияВЕТИСТовары
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.ИдентификаторСтроки КАК ИдентификаторСтрокиТовары,
	|	ВЫБОР
	|		КОГДА ВТТовары.Номенклатура.ВесИспользовать
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.УровниУпаковокВЕТИС.ТорговыйУровень)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.УровниУпаковокВЕТИС.ПотребительскийУровень)
	|	КОНЕЦ КАК УровеньУпаковки,
	|	ПродукцияВЕТИС.ФасовкаУпаковка КАК УпаковкаВЕТИС,
	|	ВЫБОР
	|		КОГДА ПродукцияВЕТИС.ФасовкаКоличествоУпаковок ЕСТЬ NULL
	|			ТОГДА ВТТовары.КоличествоВЕТИС
	|		ИНАЧЕ ВТТовары.КоличествоВЕТИС * ПродукцияВЕТИС.ФасовкаКоличествоУпаковок / ВЫБОР
	|				КОГДА ПродукцияВЕТИС.ФасовкаКоличествоЕдиницВУпаковке = 0
	|					ТОГДА 1
	|				ИНАЧЕ ПродукцияВЕТИС.ФасовкаКоличествоЕдиницВУпаковке
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоУпаковокВЕТИС,
	|	ВТТовары.Номенклатура.Производитель.Наименование КАК ШтрихКод,
	|	ВЫБОР
	|		КОГДА ВТТовары.Номенклатура.ВесИспользовать
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыМаркировкиУпаковокВЕТИС.Произвольная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыМаркировкиУпаковокВЕТИС.EAN13)
	|	КОНЕЦ КАК ТипМаркировки
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПродукцияВЕТИС КАК ПродукцияВЕТИС
	|		ПО (ВТТовары.Продукция = ПродукцияВЕТИС.Ссылка)";
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		НоваяСтрокаУП = Объект.УпаковкиВЕТИС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаУП, ВыборкаДетальныеЗаписи);
		НоваяСтрокаУП.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		НоваяСтрокаШК = Объект.ШтрихкодыУпаковок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаШК, ВыборкаДетальныеЗаписи);
		НоваяСтрокаШК.ИдентификаторСтроки = НоваяСтрокаУП.ИдентификаторСтроки;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПосле(Команда)
	
	Если Объект.УпаковкиВЕТИС.Количество() > 0 Или Объект.ШтрихкодыУпаковок.Количество() > 0 Тогда
	
		 ПоказатьВопрос(
		 Новый ОписаниеОповещения("bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПосле_Завершение", ЭтотОбъект)
		 ,"Вы хотите перезаполнить таблицу упаковок и штрих кодов?"
		 ,РежимДиалогаВопрос.ДаНет
		 ,30
		 ,КодВозвратаДиалога.Да
		 ,"Таблица упаковок и (или) штрихкодов уже заполнена!" 
		 ,КодВозвратаДиалога.Да);
		 
		 Возврат;
		 
	КонецЕсли;
	
	bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПослеНаСервере();
	Модифицированность = Истина;
	ПоказатьОповещениеПользователя("Упаковки и Штрихкоды заполнены!");
	
КонецПроцедуры

&НаКлиенте
Процедура bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПосле_Завершение(Ответ, ДопПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
	
		bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПослеНаСервере();
		Модифицированность = Истина;
		ПоказатьОповещениеПользователя("Упаковки и Штрихкоды заполнены!");
	
	КонецЕсли;

КонецПроцедуры // bt_Patch4_bt_ЗаполнитьУпаковкиИШтрихКодыПосле_Завершение()

&НаСервере
Процедура bt_Patch4_bt_ОсобыеОтметкиПослеНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.НомерСтроки КАК НомерСтроки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.БлагополучиеМестности КАК БлагополучиеМестности,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ВетеринарноСопроводительныйДокумент КАК ВетеринарноСопроводительныйДокумент,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Количество КАК Количество,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.КоличествоВЕТИС КАК КоличествоВЕТИС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.КоличествоПериодовНахожденияЖивотныхНаТерриторииТС КАК КоличествоПериодовНахожденияЖивотныхНаТерриторииТС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.НизкокачественнаяПродукция КАК НизкокачественнаяПродукция,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Номенклатура КАК Номенклатура,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ОсобыеОтметки КАК ОсобыеОтметки,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ПериодНахожденияЖивотныхНаТерриторииТС КАК ПериодНахожденияЖивотныхНаТерриторииТС,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Продукция КАК Продукция,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.РезультатПроверкиПравилРегионализации КАК РезультатПроверкиПравилРегионализации,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Серия КАК Серия,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.УсловияРегионализацииВыполнены КАК УсловияРегионализацииВыполнены,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Характеристика КАК Характеристика,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.Цель КАК Цель,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ЭкспертизаРезультат КАК ЭкспертизаРезультат,
	|	ИсходящаяТранспортнаяОперацияВЕТИСТовары.ТипПроисхождения КАК ТипПроисхождения
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&Товары КАК ИсходящаяТранспортнаяОперацияВЕТИСТовары
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.НомерСтроки КАК НомерСтроки,
	|	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|		ПО (ВТТовары.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Свойство.Имя = ""Сертификат_cea92d79-9fb1-4cb2-beeb-d4d6cb33c863""";
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		СтрокаТЧТовары = Объект.Товары.НайтиПоИдентификатору(ВыборкаДетальныеЗаписи.НомерСтроки - 1);
		СтрокаТЧТовары.ОсобыеОтметки = ВыборкаДетальныеЗаписи.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура bt_Patch4_bt_ОсобыеОтметкиПосле(Команда)
	
	bt_Patch4_bt_ОсобыеОтметкиПослеНаСервере();
	Модифицированность = Истина;
	ПоказатьОповещениеПользователя("Особенные отметки заполнены!");

КонецПроцедуры


