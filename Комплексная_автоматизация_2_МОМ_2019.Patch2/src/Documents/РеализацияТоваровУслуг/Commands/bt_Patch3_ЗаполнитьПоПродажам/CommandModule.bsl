
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ДанныеДокумента = ПолучитьДанныеДокументаПоСсылке(ПараметрКоманды);
	
	Если ДанныеДокумента.Проведен = Истина Тогда
		
		Сообщить("нельзя заполнять проведеннный документ! Снимите документ с проводки.");
		Возврат;
	
	КонецЕсли;

//	ПоказатьВводЗначения(
//	Новый ОписаниеОповещения("ВыбратьОрганизациюЗавершение", ЭтотОбъект, Новый Структура(
//"Товары", ПараметрыВыполненияКоманды.Источник.Объект.Товары))
//	,,"По какой организации анализируем продажи", Тип("СправочникСсылка.Организации"));

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрКоманды",ПараметрКоманды);
	ДополнительныеПараметры.Вставить("ПараметрыВыполненияКоманды",ПараметрыВыполненияКоманды);
	
	ПоказатьВводЗначения(
	Новый ОписаниеОповещения("ВыбратьОрганизациюЗавершение", ЭтотОбъект, ДополнительныеПараметры)
	,,"По какой организации анализируем продажи", Тип("СправочникСсылка.Организации"));
	
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
//Процедура ЗаполнитьРеализациюПоДаннымПоПродажамЗаПериод(Ссылка, Организация, Дата1, Дата2)
Процедура ЗаполнитьРеализациюПоДаннымПоПродажамЗаПериод(Ссылка, Организация, Дата1, Дата2)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Продажи.АналитикаУчетаНоменклатуры КАК АналитикаУчНоменклатуры,
	|	Продажи.КоличествоОборот КАК Количество,
	|	14 КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВТПродажи
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			,
	|			АналитикаУчетаПоПартнерам.Организация = &Организация
	|				И ВЫБОР
	|					КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Склад = &Склад
	|				КОНЕЦ) КАК Продажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ВТПродажи.Количество КАК Количество,
	|	ВТПродажи.Количество КАК КоличествоУпаковок,
	|	ВТПродажи.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ВТПродажи КАК ВТПродажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО (ВТПродажи.АналитикаУчНоменклатуры = АналитикаУчетаНоменклатуры.КлючАналитики)
	|ГДЕ
	|	АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета <> &ГруппаФинансовогоУчета";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Дата1",Дата1);
	Запрос.УстановитьПараметр("Дата2",КонецДня(Дата2));
	Запрос.УстановитьПараметр("Склад",Ссылка.Склад);
	
	Если Организация = Справочники.Организации.ПолучитьСсылку(
		Новый УникальныйИдентификатор("d24dcb00-901b-4b79-92bf-18000983ac86")) Тогда   //мом
		
		ГФУ_Ссылка = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПолучитьСсылку(
		Новый УникальныйИдентификатор("26520fd5-13fb-11e9-9593-9367f7e3dc6e"));  //Мом
		
		
	ИначеЕсли Организация = Справочники.Организации.ПолучитьСсылку(
		Новый УникальныйИдентификатор("109056ba-3f27-11e4-1785-9c8e997b6465")) Тогда   //ИП
		
		ГФУ_Ссылка = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПолучитьСсылку(
		Новый УникальныйИдентификатор("3d2f1032-0f45-11ea-a8af-c88f7804aed9"));  //ИП
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",ГФУ_Ссылка);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ДокОбъект = Ссылка.ПолучитьОбъект();
	
	ДокОбъект.Товары.Очистить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() = Истина Цикл
		
		НоваяСтрока = ДокОбъект.Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		
	КонецЦикла;
	
	ДокОбъект.Записать();
	
КонецПроцедуры // ПолучитьДанныеПоПродажамЗаПериод()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ВыбратьОрганизациюЗавершение(Значение, ДополнительныеПараметры) Экспорт

	Если Значение <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("Организация", Значение);
	
		ПоказатьВводДаты(
		Новый ОписаниеОповещения("ПолучитьДатуНачалаАнализаЗавершение",ЭтотОбъект, ДополнительныеПараметры)
		,,"Дата начала анализа продаж",);
	
	КонецЕсли;

КонецПроцедуры // ВыбратьОрганизациюЗавершение()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПолучитьДатуНачалаАнализаЗавершение(Дата,ДополнительныеПараметры) Экспорт

	Если Дата <> Неопределено Тогда
		
		ДополнительныеПараметры.Вставить("Дата1", Дата);
	
		ПоказатьВводДаты(
		Новый ОписаниеОповещения("ПолучитьДатуОкончанияАнализаЗавершение",ЭтотОбъект, ДополнительныеПараметры)
		,Дата,"Дата окончания анализа продаж",);
	
	КонецЕсли;

КонецПроцедуры // ПолучитьДатуНачалаАнализаЗавершение()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПолучитьДатуОкончанияАнализаЗавершение(Дата,ДополнительныеПараметры) Экспорт

	Если Дата <> Неопределено Тогда
	
	  ЗаполнитьРеализациюПоДаннымПоПродажамЗаПериод(
	    ДополнительныеПараметры.ПараметрКоманды,
	    ДополнительныеПараметры.Организация,
	    ДополнительныеПараметры.Дата1,
	    Дата);
		
		//ЗаполнитьРеализациюПоДаннымПоПродажамЗаПериод(
		//ДополнительныеПараметры.Товары,
		//ДополнительныеПараметры.Организация,
		//ДополнительныеПараметры.Дата1,
		//Дата);
		
		ДополнительныеПараметры.ПараметрыВыполненияКоманды.Источник.Прочитать();
	
	КонецЕсли;

КонецПроцедуры // ПолучитьДатуНачалаАнализаЗавершение()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьДанныеДокументаПоСсылке(Ссылка)

	Вернем = Новый Структура;
	
	Вернем.Вставить("Проведен", Ссылка.Проведен);
	
	Возврат Вернем;

КонецФункции // ПолучитьДанныеДокументаПоСсылке()



