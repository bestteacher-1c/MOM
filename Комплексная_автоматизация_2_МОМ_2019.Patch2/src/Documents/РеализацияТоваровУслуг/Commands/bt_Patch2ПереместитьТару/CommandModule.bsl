
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	НадоСоздаватьПеремещение = Ложь;
	
	Перемещение = ПолучитьСсылкуНаПеремещение(ПараметрКоманды, НадоСоздаватьПеремещение);
	
	Если НадоСоздаватьПеремещение = Истина Тогда
		
		ЗаполнитьПеремещениеНаОснованииРеализации(ПараметрКоманды, Перемещение);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента", 
	Новый Структура("Ключ", Перемещение));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуНаПеремещение(Реализация, НадоСоздаватьПеремещение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Значение,
	|	ДополнительныеСведения.Свойство КАК Свойство
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Объект
	|	И ДополнительныеСведения.Свойство.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Имя", "ПередачаТары_dc5fd57db8224c4ea78ed65694cc6b1e");
	Запрос.УстановитьПараметр("Объект", Реализация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		УИД = Новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.Значение);
		СсылкаНаПеремещение = Документы.ПеремещениеТоваров.ПолучитьСсылку(УИД);
		
		
		Если СсылкаНаПеремещение.ПолучитьОбъект() = Неопределено Тогда
			
			НадоСоздаватьПеремещение = Истина;
			
			СсылкаНаПеремещение = Документы.ПеремещениеТоваров.ПустаяСсылка();
			
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = Реализация;
			МенеджерЗаписи.Свойство = ПолучитьСсылкуНаСвойство("ПередачаТары_dc5fd57db8224c4ea78ed65694cc6b1e");
			МенеджерЗаписи.Значение = "";
			
			Попытка
				
				МенеджерЗаписи.Записать();
				
			Исключение
				
				Сообщить(ОписаниеОшибки());
				Сообщить("Удалите вручную строку из свойства ""Передача тары""");
				
			КонецПопытки;
			
		КонецЕсли;
		
	Иначе
		
		СсылкаНаПеремещение = Документы.ПеремещениеТоваров.ПустаяСсылка();
		НадоСоздаватьПеремещение = Истина;
		
	КонецЕсли;
	
	Возврат СсылкаНаПеремещение;
	
КонецФункции // ПолучитьСсылкуНаПриход()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ЗаполнитьПеремещениеНаОснованииРеализации(Реализация, Перемещение)
	
	ПеремещениеОбъект = Документы.ПеремещениеТоваров.СоздатьДокумент();
	
	
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("Реализация", Реализация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Склад КАК Склад,
	|	РеализацияТоваровУслуг.НалогообложениеНДС КАК НалогообложениеНДС,
	|	РеализацияТоваровУслуг.Подразделение КАК Подразделение,
	|	РеализацияТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	РеализацияТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	РеализацияТоваровУслуг.Сделка КАК Сделка,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	РеализацияТоваровУслуг.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВТШапкаРеализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	//ВТШапкаРеализации.Организация КАК Организация,
	|	//ВТШапкаРеализации.Организация КАК ОрганизацияПолучатель,
	|	ВТШапкаРеализации.Склад КАК СкладОтправитель,
	|	ЕСТЬNULL(Склады.Ссылка, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладПолучатель,
	|	ВТШапкаРеализации.Контрагент КАК Контрагент,
	|	ВТШапкаРеализации.Партнер КАК Партнер,
	|	ВТШапкаРеализации.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВТШапкаРеализации.Подразделение КАК Подразделение,
	|	ВТШапкаРеализации.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВТШапкаРеализации.Дата КАК Дата,
	|	//ВТШапкаРеализации.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ВТШапкаРеализации.Сделка КАК Сделка,
	|	//ВТШапкаРеализации.Руководитель КАК Руководитель,
	|	//ВТШапкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ВТШапкаРеализации.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|ИЗ
	|	ВТШапкаРеализации КАК ВТШапкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Склады.Поклажедержатель = ВТШапкаРеализации.Контрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК Количество,
	|	СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	РеализацияТоваровУслугТовары.Упаковка.НоменклатураМногооборотнаяТара КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Упаковка.ХарактеристикаМногооборотнаяТара КАК Характеристика
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Реализация
	|	И РеализацияТоваровУслугТовары.Упаковка.ПоставляетсяВМногооборотнойТаре = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Упаковка.НоменклатураМногооборотнаяТара,
	|	РеализацияТоваровУслугТовары.Упаковка.ХарактеристикаМногооборотнаяТара";
	
	
	
	МассивРЗ = Запрос.ВыполнитьПакет();
	
	РеквизитыРеализации = МассивРЗ.Получить(1).Выбрать();
	РеквизитыРеализации.Следующий();
	
	// Заполнение шапки.
	ЗаполнитьЗначенияСвойств(ПеремещениеОбъект, РеквизитыРеализации);
	
	ПеремещениеОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	ПеремещениеОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	
	ПеремещениеОбъект.СпособДоставки = Перечисления.СпособыДоставки.Самовывоз;
	//ПриходОбъект.ВалютаВзаиморасчетов = ПриходОбъект.Договор.ВалютаВзаиморасчетов;
	
	ПеремещениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ПеремещениеОбъект.Статус = Перечисления.СтатусыПеремещенийТоваров.Принято;
	
	ПеремещениеОбъект.ВариантПриемкиТоваров = Перечисления.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным;
	
	
	ТоварыРеализации = МассивРЗ.Получить(2).Выбрать();
	
	Пока ТоварыРеализации.Следующий() = Истина Цикл
		
		НоваяСтрока = ПеремещениеОбъект.Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТоварыРеализации);
		
	КонецЦикла;
	
	ПеремещениеОбъект.Организация = ПолучитьОрганизациюВнутренниеРасчеты();
	ПеремещениеОбъект.ОрганизацияПолучатель = ПеремещениеОбъект.Организация;
	
	Попытка
		
		ПеремещениеОбъект.Записать();
		
		
	Исключение
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;
	
	
	Перемещение = ПеремещениеОбъект.Ссылка;
	
	МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект = Реализация;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ПередачаТары_dc5fd57db8224c4ea78ed65694cc6b1e");
	МенеджерЗаписи.Значение = Перемещение.УникальныйИдентификатор();
	
	Попытка
		
		МенеджерЗаписи.Записать();
		
		
	Исключение
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;
	
	
КонецПроцедуры


// <Описание функции>
//
// Параметры:
//  Имя  - Строка - Имя дополнительного сведения
//                 для разработчиков
//  
// Возвращаемое значение:
//   ПланВидовХарактеристик.Ссылка   - Ссылка на дополнительное сведение
//
&НаСервере
Функция ПолучитьСсылкуНаСвойство(Имя)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Имя", Имя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	Возврат ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка();
	
КонецФункции // ПолучитьСсылкуНаСвойство()

//Реализация_00d2b5305aa14f3d93ccafabcca1a327
//Перемещение_403e8b7b7b2c47f1b5e1480375e5c030

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьОрганизациюВнутренниеРасчеты()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Значение = ИСТИНА
	|	И ДополнительныеСведения.Свойство.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Имя","Управленческая_b1a8f1af278c4839bfcb7c9176e45aab");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Возврат ВыборкаДетальныеЗаписи.Объект;
		
	КонецЕсли;
	
	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции // ПолучитьОрганизациюВнутренниеРасчеты()
