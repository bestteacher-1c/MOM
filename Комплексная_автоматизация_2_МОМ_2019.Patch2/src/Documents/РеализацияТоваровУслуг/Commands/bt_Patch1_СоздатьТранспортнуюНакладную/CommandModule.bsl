
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	НадоСоздаватьТТН = Ложь;
	
	ТТН = ПолучитьСсылкуНаТТН(ПараметрКоманды, НадоСоздаватьТТН);
	
	Если НадоСоздаватьТТН = Истина Тогда
		
		ЗаполнитьТТННаОснованииРеализации(ПараметрКоманды, ТТН);
		
	КонецЕсли;
	
	ОткрытьФорму("Документ.ТранспортнаяНакладная.Форма.ФормаДокумента", 
	Новый Структура("Ключ", ТТН));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуНаТТН(Реализация, НадоСоздаватьТТН)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеСведения.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Объект
	|	И ДополнительныеСведения.Свойство.Имя = &Имя";
	
	Запрос.УстановитьПараметр("Имя", "ТранспортнаяНакладная_d63bc68a52a74ff388a85968738fb092");
	Запрос.УстановитьПараметр("Объект", Реализация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		УИД = Новый УникальныйИдентификатор(ВыборкаДетальныеЗаписи.Значение);
		СсылкаНаТТН = Документы.ТранспортнаяНакладная.ПолучитьСсылку(УИД);
		
		
		Если СсылкаНаТТН.ПолучитьОбъект() = Неопределено Тогда
			
			НадоСоздаватьТТН = Истина;
			
			СсылкаНаТТН = Документы.ТранспортнаяНакладная.ПустаяСсылка();
			
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект = Реализация;
			МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ТранспортнаяНакладная_d63bc68a52a74ff388a85968738fb092");
			МенеджерЗаписи.Значение = "";
			
			Попытка
				
				МенеджерЗаписи.Записать();
				
			Исключение
				
				Сообщить(ОписаниеОшибки());
				Сообщить("Удалите вручную строку из свойства ""Приобретение""");
				
			КонецПопытки;
			
		КонецЕсли;
		
	Иначе
		
		СсылкаНаТТН = Документы.ТранспортнаяНакладная.ПустаяСсылка();
		НадоСоздаватьТТН = Истина;
		
	КонецЕсли;
	
	Возврат СсылкаНаТТН;
	
КонецФункции // ПолучитьСсылкуНаПриход()


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ЗаполнитьТТННаОснованииРеализации(Реализация, ТТН)
	
	ТТНОбъект = Документы.ТранспортнаяНакладная.СоздатьДокумент();
	
	
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("Ссылка", Реализация);
	Запрос.УстановитьПараметр("Водитель", "Водитель_632393bf55a84e30bdc572cc0511cb02");
	Запрос.УстановитьПараметр("Автомобиль", "Автомобиль_dfd43a513a10446a890996fae350f1a3");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ДополнительныеРеквизиты КАК РеализацияТоваровУслугДополнительныеРеквизиты
	|ГДЕ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И РеализацияТоваровУслугДополнительныеРеквизиты.Свойство.Имя = &Водитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Значение.ПолноеНаименование КАК Значение
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ДополнительныеРеквизиты КАК РеализацияТоваровУслугДополнительныеРеквизиты
	|ГДЕ
	|	РеализацияТоваровУслугДополнительныеРеквизиты.Ссылка = &Ссылка
	|	И РеализацияТоваровУслугДополнительныеРеквизиты.Свойство.Имя = &Автомобиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.Грузоотправитель КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель,
	|	РеализацияТоваровУслуг.ДатаРаспоряжения КАК ДатаРаспоряжения,
	|	РеализацияТоваровУслуг.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РеализацияТоваровУслуг.ДоверенностьДата КАК ДоверенностьДата,
	|	РеализацияТоваровУслуг.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	РеализацияТоваровУслуг.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Менеджер КАК Менеджер,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	РеализацияТоваровУслуг.Подразделение КАК Подразделение,
	|	РеализацияТоваровУслуг.Склад КАК Склад,
	|	РеализацияТоваровУслуг.Соглашение КАК Соглашение,
	|	РеализацияТоваровУслуг.Отпустил КАК Отпустил,
	|	РеализацияТоваровУслуг.ОтпустилДолжность КАК ОтпустилДолжность,
	|	РеализацияТоваровУслуг.ЗонаДоставки КАК ЗонаДоставки,
	|	РеализацияТоваровУслуг.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ГлавныйБухгалтер КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	
	
	
	МассивРЗ = Запрос.ВыполнитьПакет();
	
	ВыборкаСвойствоВодитель = МассивРЗ.Получить(0).Выбрать();
	
	Если ВыборкаСвойствоВодитель.Следующий() Тогда
	
		ТТНОбъект.Водитель = ВыборкаСвойствоВодитель.Значение;
	
	КонецЕсли; 
	
	ВыборкаСвойствоАвтомобиль = МассивРЗ.Получить(1).Выбрать();
	
	Если ВыборкаСвойствоАвтомобиль.Следующий() Тогда
	     
		
		УИД = Новый УникальныйИдентификатор(ВыборкаСвойствоАвтомобиль.Значение);
		СсылкаНаАвтомобиль = Справочники.ТранспортныеСредства.ПолучитьСсылку(УИД);
		
	
	КонецЕсли;
	;
	
	РеквизитыРеализации = МассивРЗ.Получить(2).Выбрать();
	РеквизитыРеализации.Следующий();
	
	// Заполнение шапки.
	ЗаполнитьЗначенияСвойств(ТТНОбъект, РеквизитыРеализации);
	
	Если ЗначениеЗаполнено(РеквизитыРеализации.Грузоотправитель) = Ложь Тогда
	
		ТТНОбъект.Грузоотправитель = РеквизитыРеализации.Организация;
		//ТТНОбъект.Плательщик = ТТНОбъект.Грузоотправитель;
	    ТТНОбъект.Плательщик = РеквизитыРеализации.Контрагент;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыРеализации.Грузополучатель) = Ложь Тогда
	
		ТТНОбъект.Грузополучатель = РеквизитыРеализации.Контрагент;
	
	КонецЕсли;
	
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаАвтомобиль);
	
	Запрос.Текст =  "ВЫБРАТЬ
	|	ТранспортныеСредства.Ссылка КАК Ссылка,
	|	ТранспортныеСредства.Код КАК Код,
	|	ТранспортныеСредства.ВидПеревозки КАК ВидПеревозки,
	|	ТранспортныеСредства.ГосударственныйНомерПрицепа КАК ГосударственныйНомерПрицепа,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаВид КАК ЛицензионнаяКарточкаВид,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаНомер КАК ЛицензионнаяКарточкаНомер,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаРегистрационныйНомер КАК ЛицензионнаяКарточкаРегистрационныйНомер,
	|	ТранспортныеСредства.ЛицензионнаяКарточкаСерия КАК ЛицензионнаяКарточкаСерия,
	|	ТранспортныеСредства.Марка КАК Марка,
	|	ТранспортныеСредства.Прицеп КАК Прицеп,
	|	ТранспортныеСредства.Тип КАК Тип,
	|	ТранспортныеСредства.ГрузоподъемностьВТоннах КАК ГрузоподъемностьВТоннах,
	|	ТранспортныеСредства.ВместимостьВКубическихМетрах КАК ВместимостьВКубическихМетрах,
	|	ТранспортныеСредства.ВместимостьПредставление КАК ВместимостьПредставление,
	|	ТранспортныеСредства.Предопределенный КАК Предопределенный,
	|	ТранспортныеСредства.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
	|	ТранспортныеСредства.Представление КАК Представление
	|ИЗ
	|	Справочник.ТранспортныеСредства КАК ТранспортныеСредства
	|ГДЕ
	|	ТранспортныеСредства.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() = Истина Тогда
		
		//ТТНОбъект.Водитель = ВыборкаСвойствоВодитель.Значение;
		ТТНОбъект.АвтомобильВместимостьВКубическихМетрах = Выборка.ВместимостьВКубическихМетрах ;
		ТТНОбъект.АвтомобильГосударственныйНомер = Выборка.Код ;
		ТТНОбъект.АвтомобильГрузоподъемностьВТоннах = Выборка.ГрузоподъемностьВТоннах ;
		ТТНОбъект.АвтомобильМарка = Выборка.Марка ;
		ТТНОбъект.АвтомобильТип = Выборка.Тип ;
		ТТНОбъект.ВыводДанныхОТоварномСоставе = Перечисления.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав;
		
		
	КонецЕсли;
	
	СтрокаДокументыОснования = ТТНОбъект.ДокументыОснования.Добавить();
	СтрокаДокументыОснования.ДокументОснование = Реализация;
	
	
	ЗаполнитьПеревозчикаЧеревко(ТТНОбъект);
	
	УстановитьБанковскийСчетПлательщика(ТТНОбъект);
	
	ЗаполнитьДанныеУдостоверенияВодителя(ТТНОбъект, ВыборкаСвойствоВодитель.Значение );
	
	Попытка
		
		ТТНОбъект.Записать();
		
		
	Исключение
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;
	
	ТТН = ТТНОбъект.Ссылка;
	
	ЗаписатьДополнительноеСвойствоТранспортнаяНакладная(Реализация, ТТН);
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДополнительноеСвойствоТранспортнаяНакладная(Знач Реализация, Знач ТТН)
	
	Перем МенеджерЗаписи;
	
	МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Объект = Реализация;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ТранспортнаяНакладная_d63bc68a52a74ff388a85968738fb092");
	МенеджерЗаписи.Значение = ТТН.УникальныйИдентификатор();
	
	Попытка
		
		МенеджерЗаписи.Записать();
		
		
	Исключение
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПеревозчикаЧеревко(ТТНОбъект)
	
	Перем Выборка;
	
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("Имя", "ЭтоПеревозчикЧеревкоГИ_c2b818392cd64adebdfc0fa7bd8f0e82");
	
	Запрос.Текст =  "ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект
	|ПОМЕСТИТЬ ВТПартнер
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Свойство.Имя = &Имя
	|	И ДополнительныеСведения.Значение = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПартнер КАК ВТПартнер
	|		ПО Контрагенты.Партнер = ВТПартнер.Объект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ТТНОбъект.Перевозчик = Выборка.Контрагент;

КонецПроцедуры

&НаСервере
Процедура УстановитьБанковскийСчетПлательщика(ТТНОбъект)
	
	Перем Объект, СтруктураПараметров;
	
	Если ЗначениеЗаполнено(ТТНОбъект.Плательщик) Тогда
		Если  ТипЗнч(ТТНОбъект.Плательщик) = Тип("СправочникСсылка.Контрагенты") Тогда
			ТТНОбъект.БанковскийСчетПлательщика = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(ТТНОбъект.Плательщик);
		Иначе
			СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
			СтруктураПараметров.Организация    		= ТТНОбъект.Плательщик;
			ТТНОбъект.БанковскийСчетПлательщика = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ЗаполнитьДанныеУдостоверенияВодителя(ТТНОбъект, Водитель)
	
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("Период", ТТНОбъект.Дата);
	Запрос.УстановитьПараметр("Водитель", Водитель);
	Запрос.УстановитьПараметр("ВодительскоеУдостоверение", Справочники.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Период КАК Период,
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	|	ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность КАК ЯвляетсяДокументомУдостоверяющимЛичность,
	|	ДокументыФизическихЛицСрезПоследних.Представление КАК Представление,
	|	ДокументыФизическихЛицСрезПоследних.УдалитьВидДокумента КАК УдалитьВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.ФамилияЛатиницей КАК ФамилияЛатиницей,
	|	ДокументыФизическихЛицСрезПоследних.ИмяЛатиницей КАК ИмяЛатиницей
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	|			&Период,
	|			Физлицо = &Водитель
	|				И ВидДокумента = &ВодительскоеУдостоверение) КАК ДокументыФизическихЛицСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	ТТНОбъект.УдостоверениеНомер = Выборка.Номер;
	ТТНОбъект.УдостоверениеСерия = Выборка.Серия;
	
КонецПроцедуры // ПолучитьДанныеУдостоверенияВодителя()


